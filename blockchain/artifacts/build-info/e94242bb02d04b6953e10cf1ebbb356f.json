{"id":"e94242bb02d04b6953e10cf1ebbb356f","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../extensions/IERC20PermitUpgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20PermitUpgradeable token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/AstroToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract AstroToken is \n    Initializable, \n    ERC20Upgradeable, \n    ERC20BurnableUpgradeable, \n    OwnableUpgradeable, \n    UUPSUpgradeable \n{\n    address public astrologer;\n    address public buyContract;\n    bool public isInitialized;\n    \n    event AstroTokenInitialized(\n        address indexed astrologer,\n        string name,\n        string symbol,\n        uint256 totalSupply\n    );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        string memory _name,\n        string memory _symbol,\n        uint256 _totalSupply,\n        address _astrologer,\n        address _buyContract\n    ) public initializer {\n        require(!isInitialized, \"Already initialized\");\n        \n        __ERC20_init(_name, _symbol);\n        __ERC20Burnable_init();\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n        \n        astrologer = _astrologer;\n        buyContract = _buyContract;\n        \n        // Mint total supply to astrologer\n        _mint(_astrologer, _totalSupply);\n        \n        isInitialized = true;\n        \n        emit AstroTokenInitialized(_astrologer, _name, _symbol, _totalSupply);\n    }\n\n    function mint(address to, uint256 amount) external {\n        require(msg.sender == owner() || msg.sender == buyContract, \"Not authorized to mint\");\n        _mint(to, amount);\n    }\n\n    function burnFrom(address account, uint256 amount) public override {\n        require(msg.sender == owner() || msg.sender == buyContract, \"Not authorized to burn\");\n        _burn(account, amount);\n    }\n\n    function setBuyContract(address _buyContract) external onlyOwner {\n        buyContract = _buyContract;\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n} "},"contracts/AstroTokenFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./AstroToken.sol\";\nimport \"./BuyTokenContract.sol\";\n\ncontract AstroTokenFactory is Ownable {\n    address public astroTokenImplementation;\n    address public buyTokenContractImplementation;\n    address public astrologerManager;\n    address public reputationScorer;\n    \n    event TokenDeployed(address indexed tokenContract, address indexed buyContract, address indexed astrologer);\n    \n    constructor(\n        address _astroTokenImplementation,\n        address _buyTokenContractImplementation,\n        address _astrologerManager\n    ) {\n        astroTokenImplementation = _astroTokenImplementation;\n        buyTokenContractImplementation = _buyTokenContractImplementation;\n        astrologerManager = _astrologerManager;\n        reputationScorer = address(0); // Will be set later via setter\n    }\n    \n    function deployTokenPair(\n        string memory _name,\n        string memory _symbol,\n        uint256 _totalSupply,\n        uint256 _initialPrice,\n        address _astrologer\n    ) external returns (address tokenContract, address buyContract) {\n        // Deploy token contract\n        tokenContract = Clones.clone(astroTokenImplementation);\n        AstroToken(tokenContract).initialize(_name, _symbol, _totalSupply, _astrologer, address(0));\n        \n        // Deploy buy contract\n        buyContract = Clones.clone(buyTokenContractImplementation);\n        BuyTokenContract(buyContract).initialize(astrologerManager, address(0), 100);\n        \n        // Set ReputationScorer if available\n        if (reputationScorer != address(0)) {\n            BuyTokenContract(buyContract).setReputationScorer(reputationScorer);\n        }\n        \n        // Register token in buy contract\n        BuyTokenContract(buyContract).registerToken(tokenContract, _astrologer, _totalSupply, _initialPrice);\n        \n        // Set buy contract in token\n        AstroToken(tokenContract).setBuyContract(buyContract);\n        \n        emit TokenDeployed(tokenContract, buyContract, _astrologer);\n    }\n    \n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\n        astrologerManager = _astrologerManager;\n    }\n    \n    function setReputationScorer(address _reputationScorer) external onlyOwner {\n        reputationScorer = _reputationScorer;\n    }\n    \n    function setImplementations(\n        address _astroTokenImplementation,\n        address _buyTokenContractImplementation\n    ) external onlyOwner {\n        astroTokenImplementation = _astroTokenImplementation;\n        buyTokenContractImplementation = _buyTokenContractImplementation;\n    }\n} "},"contracts/AstroTokenLauncher.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\nimport \"./BuyTokenContract.sol\";\nimport \"./AstroToken.sol\";\nimport \"./AstroTokenFactory.sol\";\nimport \"./interfaces/IAstrologerManager.sol\";\n\ncontract AstroTokenLauncher is \n    Initializable, \n    OwnableUpgradeable, \n    UUPSUpgradeable \n{\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    CountersUpgradeable.Counter private _tokenIds;\n    \n    struct TokenInfo {\n        uint256 id;\n        address astrologer;\n        address tokenContract;\n        address buyContract;\n        string name;\n        string symbol;\n        uint256 totalSupply;\n        uint256 initialPrice;\n        bool isActive;\n        uint256 createdAt;\n    }\n\n    mapping(uint256 => TokenInfo) public tokens;\n    mapping(address => uint256) public astrologerToTokenId;\n    mapping(address => uint256) public tokenContractToId;\n    \n    address public astrologerManager;\n    address public tokenFactory;\n    \n    uint256 public launchFee;\n    \n    event TokenLaunched(\n        uint256 indexed tokenId,\n        address indexed astrologer,\n        address tokenContract,\n        address buyContract,\n        string name,\n        string symbol\n    );\n\n    event TokenDeactivated(\n        uint256 indexed tokenId,\n        address indexed astrologer\n    );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _astrologerManager,\n        address _tokenFactory,\n        uint256 _launchFee\n    ) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n        \n        astrologerManager = _astrologerManager;\n        tokenFactory = _tokenFactory;\n        launchFee = _launchFee;\n    }\n\n    function launchToken(\n        string memory _name,\n        string memory _symbol,\n        uint256 _totalSupply,\n        uint256 _initialPrice,\n        string memory _description\n    ) external payable returns (uint256) {\n        require(msg.value >= launchFee, \"Insufficient launch fee\");\n        require(bytes(_name).length > 0, \"Name cannot be empty\");\n        require(bytes(_symbol).length > 0, \"Symbol cannot be empty\");\n        require(_totalSupply > 0, \"Total supply must be greater than 0\");\n        require(_initialPrice > 0, \"Initial price must be greater than 0\");\n        require(astrologerToTokenId[msg.sender] == 0, \"Astrologer already has a token\");\n\n        // Verify astrologer is registered and verified\n        if (astrologerManager != address(0)) {\n            require(IAstrologerManager(astrologerManager).isAstrologerVerified(msg.sender), \"Astrologer not verified\");\n        }\n\n        _tokenIds.increment();\n        uint256 tokenId = _tokenIds.current();\n\n        // Deploy token and buy contract pair using factory\n        (address tokenContract, address buyContract) = AstroTokenFactory(tokenFactory).deployTokenPair(\n            _name,\n            _symbol,\n            _totalSupply,\n            _initialPrice,\n            msg.sender\n        );\n\n        tokens[tokenId] = TokenInfo({\n            id: tokenId,\n            astrologer: msg.sender,\n            tokenContract: tokenContract,\n            buyContract: buyContract,\n            name: _name,\n            symbol: _symbol,\n            totalSupply: _totalSupply,\n            initialPrice: _initialPrice,\n            isActive: true,\n            createdAt: block.timestamp\n        });\n\n        astrologerToTokenId[msg.sender] = tokenId;\n        tokenContractToId[tokenContract] = tokenId;\n\n        // Update astrologer manager with token contract\n        if (astrologerManager != address(0)) {\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(msg.sender);\n            IAstrologerManager(astrologerManager).setTokenContract(astrologerId, tokenId);\n        }\n\n        emit TokenLaunched(tokenId, msg.sender, tokenContract, buyContract, _name, _symbol);\n        return tokenId;\n    }\n\n\n\n    function deactivateToken(uint256 tokenId) external {\n        require(tokenId > 0 && tokenId <= _tokenIds.current(), \"Invalid token ID\");\n        require(tokens[tokenId].astrologer == msg.sender, \"Not token owner\");\n        require(tokens[tokenId].isActive, \"Token already deactivated\");\n\n        tokens[tokenId].isActive = false;\n        emit TokenDeactivated(tokenId, msg.sender);\n    }\n\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory) {\n        require(tokenId > 0 && tokenId <= _tokenIds.current(), \"Invalid token ID\");\n        return tokens[tokenId];\n    }\n\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory) {\n        uint256 tokenId = astrologerToTokenId[astrologer];\n        require(tokenId > 0, \"Token not found\");\n        return tokens[tokenId];\n    }\n\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory) {\n        uint256 tokenId = tokenContractToId[tokenContract];\n        require(tokenId > 0, \"Token not found\");\n        return tokens[tokenId];\n    }\n\n    function getAllActiveTokens() external view returns (uint256[] memory) {\n        uint256[] memory activeIds = new uint256[](_tokenIds.current());\n        uint256 count = 0;\n        \n        for (uint256 i = 1; i <= _tokenIds.current(); i++) {\n            if (tokens[i].isActive) {\n                activeIds[count] = i;\n                count++;\n            }\n        }\n        \n        // Resize array to actual count\n        uint256[] memory result = new uint256[](count);\n        for (uint256 i = 0; i < count; i++) {\n            result[i] = activeIds[i];\n        }\n        \n        return result;\n    }\n\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\n        astrologerManager = _astrologerManager;\n    }\n\n    function setTokenFactory(address _tokenFactory) external onlyOwner {\n        tokenFactory = _tokenFactory;\n    }\n\n    function setLaunchFee(uint256 _launchFee) external onlyOwner {\n        launchFee = _launchFee;\n    }\n\n    function withdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n} "},"contracts/BuyTokenContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"./AstroToken.sol\";\n\ncontract BuyTokenContract is \n    Initializable, \n    OwnableUpgradeable, \n    UUPSUpgradeable \n{\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n\n    struct TokenInfo {\n        address tokenContract;\n        address astrologer;\n        uint256 totalSupply;\n        uint256 circulatingSupply;\n        uint256 basePrice;\n        uint256 credibilityMultiplier;\n        bool isActive;\n    }\n\n    struct BondingCurve {\n        uint256 k; // Bonding curve constant (very low for minimal supply impact)\n        uint256 reserveRatio; // Reserve ratio (0-1000, where 1000 = 100%)\n        uint256 slippageTolerance; // Slippage tolerance in basis points\n        uint256 maxReputationMultiplier; // Maximum reputation multiplier (e.g., 5000 = 5.0x)\n    }\n\n    mapping(address => TokenInfo) public tokenInfos;\n    mapping(address => uint256) public userBalances;\n    mapping(address => uint256) public userContributions;\n    \n    address public astrologerManager;\n    address public predictionCredibilityManager;\n    \n    BondingCurve public bondingCurve;\n    uint256 public platformFee; // Platform fee in basis points (100 = 1%)\n    uint256 public totalVolume;\n    \n    // New variables must be added at the end for upgradeable contracts\n    address public reputationScorer;\n    \n    event TokenBought(\n        address indexed tokenContract,\n        address indexed buyer,\n        uint256 ethAmount,\n        uint256 tokenAmount,\n        uint256 price\n    );\n\n    event TokenSold(\n        address indexed tokenContract,\n        address indexed seller,\n        uint256 tokenAmount,\n        uint256 ethAmount,\n        uint256 price\n    );\n\n    event CredibilityUpdated(\n        address indexed tokenContract,\n        uint256 oldMultiplier,\n        uint256 newMultiplier\n    );\n\n    event BondingCurveUpdated(\n        uint256 k,\n        uint256 reserveRatio,\n        uint256 slippageTolerance,\n        uint256 maxReputationMultiplier\n    );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _astrologerManager,\n        address _predictionCredibilityManager,\n        uint256 _platformFee\n    ) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n        \n        astrologerManager = _astrologerManager;\n        predictionCredibilityManager = _predictionCredibilityManager;\n        platformFee = _platformFee;\n        \n        // Initialize bonding curve parameters\n        bondingCurve = BondingCurve({\n            k: 1000, // Very low constant for minimal supply impact (was 1M)\n            reserveRatio: 500, // 50% reserve ratio\n            slippageTolerance: 100, // 1% slippage tolerance\n            maxReputationMultiplier: 5000 // 5.0x maximum reputation multiplier\n        });\n    }\n\n    function registerToken(\n        address _tokenContract,\n        address _astrologer,\n        uint256 _totalSupply,\n        uint256 _basePrice\n    ) external {\n        require(msg.sender == owner(), \"Only owner can register tokens\");\n        require(_tokenContract != address(0), \"Invalid token contract\");\n        require(_astrologer != address(0), \"Invalid astrologer address\");\n        require(_totalSupply > 0, \"Total supply must be greater than 0\");\n        require(_basePrice > 0, \"Base price must be greater than 0\");\n\n        tokenInfos[_tokenContract] = TokenInfo({\n            tokenContract: _tokenContract,\n            astrologer: _astrologer,\n            totalSupply: _totalSupply,\n            circulatingSupply: 0,\n            basePrice: _basePrice,\n            credibilityMultiplier: 1000, // 1.0x multiplier\n            isActive: true\n        });\n    }\n\n    function buyTokens(address _tokenContract) external payable returns (uint256) {\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\n        require(tokenInfo.isActive, \"Token not active\");\n        require(msg.value > 0, \"Must send ETH to buy tokens\");\n\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\n        uint256 tokenAmount = calculateBuyAmount(_tokenContract, msg.value);\n        \n        require(tokenAmount > 0, \"Insufficient ETH for minimum token amount\");\n        require(\n            tokenInfo.circulatingSupply + tokenAmount <= tokenInfo.totalSupply,\n            \"Would exceed total supply\"\n        );\n\n        // Calculate fees\n        uint256 platformFeeAmount = (msg.value * platformFee) / 10000;\n        uint256 astrologerAmount = msg.value - platformFeeAmount;\n\n        // Update state\n        tokenInfo.circulatingSupply += tokenAmount;\n        userBalances[_tokenContract] += tokenAmount;\n        userContributions[msg.sender] += msg.value;\n        totalVolume += msg.value;\n\n        // Mint tokens to buyer\n        AstroToken(_tokenContract).mint(msg.sender, tokenAmount);\n\n        // Transfer ETH to astrologer\n        if (astrologerAmount > 0) {\n            payable(tokenInfo.astrologer).transfer(astrologerAmount);\n        }\n\n        emit TokenBought(_tokenContract, msg.sender, msg.value, tokenAmount, currentPrice);\n        return tokenAmount;\n    }\n\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external returns (uint256) {\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\n        require(tokenInfo.isActive, \"Token not active\");\n        require(_tokenAmount > 0, \"Must sell positive amount\");\n        require(userBalances[_tokenContract] >= _tokenAmount, \"Insufficient token balance\");\n\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\n        uint256 ethAmount = calculateSellAmount(_tokenContract, _tokenAmount);\n        \n        require(ethAmount > 0, \"Insufficient tokens for minimum ETH amount\");\n\n        // Calculate fees\n        uint256 platformFeeAmount = (ethAmount * platformFee) / 10000;\n        uint256 sellerAmount = ethAmount - platformFeeAmount;\n\n        // Update state\n        tokenInfo.circulatingSupply -= _tokenAmount;\n        userBalances[_tokenContract] -= _tokenAmount;\n        totalVolume += ethAmount;\n\n        // Burn tokens from seller\n        AstroToken(_tokenContract).burnFrom(msg.sender, _tokenAmount);\n\n        // Transfer ETH to seller\n        if (sellerAmount > 0) {\n            payable(msg.sender).transfer(sellerAmount);\n        }\n\n        emit TokenSold(_tokenContract, msg.sender, _tokenAmount, ethAmount, currentPrice);\n        return ethAmount;\n    }\n\n    function updateCredibility(address _tokenContract, uint256 _newMultiplier) external {\n        require(_tokenContract != address(0), \"Invalid token contract\");\n\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\n        require(tokenInfo.isActive, \"Token not active\");\n\n        uint256 oldMultiplier = tokenInfo.credibilityMultiplier;\n        tokenInfo.credibilityMultiplier = _newMultiplier;\n\n        emit CredibilityUpdated(_tokenContract, oldMultiplier, _newMultiplier);\n    }\n\n    function getCurrentPrice(address _tokenContract) public view returns (uint256) {\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\n        if (!tokenInfo.isActive) return 0;\n\n        // Very minimal supply impact: price = basePrice * (1 + tiny_supply_effect) * reputationMultiplier\n        uint256 supplyRatio = (tokenInfo.circulatingSupply * 1e18) / tokenInfo.totalSupply;\n        \n        // Very small supply multiplier (k reduced from 1M to 1K for minimal impact)\n        uint256 supplyMultiplier = 1e18 + (supplyRatio * bondingCurve.k) / 1000000; // Much smaller impact\n        \n        // Reputation is the main driver: credibilityMultiplier is in basis points (1000 = 1.0x)\n        uint256 reputationMultiplier = tokenInfo.credibilityMultiplier;\n        \n        return (tokenInfo.basePrice * supplyMultiplier * reputationMultiplier) / (1e18 * 1000);\n    }\n\n    function calculateBuyAmount(address _tokenContract, uint256 _ethAmount) public view returns (uint256) {\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\n        if (!tokenInfo.isActive) return 0;\n\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\n        uint256 tokenAmount = (_ethAmount * 1e18) / currentPrice;\n        \n        // Apply slippage tolerance\n        uint256 slippage = (tokenAmount * bondingCurve.slippageTolerance) / 10000;\n        return tokenAmount - slippage;\n    }\n\n    function calculateSellAmount(address _tokenContract, uint256 _tokenAmount) public view returns (uint256) {\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\n        if (!tokenInfo.isActive) return 0;\n\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\n        uint256 ethAmount = (_tokenAmount * currentPrice) / 1e18;\n        \n        // Apply slippage tolerance\n        uint256 slippage = (ethAmount * bondingCurve.slippageTolerance) / 10000;\n        return ethAmount - slippage;\n    }\n\n    function getTokenInfo(address _tokenContract) external view returns (TokenInfo memory) {\n        return tokenInfos[_tokenContract];\n    }\n\n    function getUserBalance(address _tokenContract) external view returns (uint256) {\n        return userBalances[_tokenContract];\n    }\n\n    function getUserContribution(address _user) external view returns (uint256) {\n        return userContributions[_user];\n    }\n\n    function setBondingCurve(\n        uint256 _k,\n        uint256 _reserveRatio,\n        uint256 _slippageTolerance,\n        uint256 _maxReputationMultiplier\n    ) external onlyOwner {\n        bondingCurve = BondingCurve({\n            k: _k,\n            reserveRatio: _reserveRatio,\n            slippageTolerance: _slippageTolerance,\n            maxReputationMultiplier: _maxReputationMultiplier\n        });\n\n        emit BondingCurveUpdated(_k, _reserveRatio, _slippageTolerance, _maxReputationMultiplier);\n    }\n\n    function setPlatformFee(uint256 _platformFee) external onlyOwner {\n        platformFee = _platformFee;\n    }\n\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\n        astrologerManager = _astrologerManager;\n    }\n\n    function setPredictionCredibilityManager(address _predictionCredibilityManager) external onlyOwner {\n        predictionCredibilityManager = _predictionCredibilityManager;\n    }\n\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\n        reputationScorer = _reputationScorer;\n    }\n\n    function toggleTokenActive(address _tokenContract) external onlyOwner {\n        require(_tokenContract != address(0), \"Invalid token contract\");\n        tokenInfos[_tokenContract].isActive = !tokenInfos[_tokenContract].isActive;\n    }\n\n    function withdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n} "},"contracts/interfaces/IAstrologerManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IAstrologerManager {\n    struct Astrologer {\n        uint256 id;\n        address wallet;\n        string name;\n        string description;\n        string specialty;\n        uint256 experience;\n        uint256 reputation;\n        uint256 totalPredictions;\n        uint256 accuratePredictions;\n        uint256 tokenContract;\n        bool isVerified;\n        bool isActive;\n        uint256 registeredAt;\n        uint256 lastActive;\n    }\n\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\n    function isAstrologerVerified(address wallet) external view returns (bool);\n    function getAstrologerId(address wallet) external view returns (uint256);\n} "},"contracts/interfaces/IAstroTokenLauncher.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IAstroTokenLauncher {\n    struct TokenInfo {\n        uint256 id;\n        address astrologer;\n        address tokenContract;\n        address buyContract;\n        string name;\n        string symbol;\n        uint256 totalSupply;\n        uint256 initialPrice;\n        bool isActive;\n        uint256 createdAt;\n    }\n\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory);\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory);\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory);\n    function astrologerToTokenId(address astrologer) external view returns (uint256);\n    function tokenContractToId(address tokenContract) external view returns (uint256);\n} "},"contracts/interfaces/IBuyTokenContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IBuyTokenContract {\n    function registerToken(\n        address _tokenContract,\n        address _astrologer,\n        uint256 _totalSupply,\n        uint256 _basePrice\n    ) external;\n    \n    function updateCredibility(address _tokenContract, uint256 _credibilityMultiplier) external;\n    function getCurrentPrice(address _tokenContract) external view returns (uint256);\n    function buyTokens(address _tokenContract) external payable;\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external;\n} "},"contracts/PredictionCredibilityManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"./interfaces/IAstrologerManager.sol\";\nimport \"./interfaces/IBuyTokenContract.sol\";\nimport \"./interfaces/IAstroTokenLauncher.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\n\ncontract PredictionCredibilityManager is \n    Initializable, \n    OwnableUpgradeable, \n    UUPSUpgradeable \n{\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    CountersUpgradeable.Counter private _predictionIds;\n    \n    struct Prediction {\n        uint256 id;\n        address astrologer;\n        uint256 astrologerId;\n        string description;\n        uint256 predictionType; // 0: Market, 1: Daily, 2: OneToOne\n        uint256 deadline;\n        bool outcome;\n        bool isResolved;\n        bool wasAccurate;\n        uint256 stakeAmount;\n        uint256 totalStaked;\n        uint256 createdAt;\n    }\n\n    struct CredibilityScore {\n        uint256 totalPredictions;\n        uint256 accuratePredictions;\n        uint256 accuracyPercentage;\n        uint256 reputationMultiplier;\n        uint256 lastUpdated;\n    }\n\n    mapping(uint256 => Prediction) public predictions;\n    mapping(address => CredibilityScore) public credibilityScores;\n    mapping(address => uint256[]) public astrologerPredictions;\n    \n    address public astrologerManager;\n    address public buyTokenContract;\n    address public reputationScorer;\n    address public astroTokenLauncher;\n    \n    uint256 public minStakeAmount;\n    uint256 public maxStakeAmount;\n    uint256 public credibilityUpdateDelay;\n    \n    event PredictionCreated(\n        uint256 indexed predictionId,\n        address indexed astrologer,\n        string description,\n        uint256 predictionType,\n        uint256 deadline\n    );\n\n    event PredictionResolved(\n        uint256 indexed predictionId,\n        bool outcome,\n        bool wasAccurate\n    );\n\n    event CredibilityUpdated(\n        address indexed astrologer,\n        uint256 oldAccuracy,\n        uint256 newAccuracy,\n        uint256 newMultiplier\n    );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _astrologerManager,\n        address _buyTokenContract,\n        address _reputationScorer,\n        address _astroTokenLauncher,\n        uint256 _minStakeAmount,\n        uint256 _maxStakeAmount\n    ) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n        \n        astrologerManager = _astrologerManager;\n        buyTokenContract = _buyTokenContract;\n        reputationScorer = _reputationScorer;\n        astroTokenLauncher = _astroTokenLauncher;\n        minStakeAmount = _minStakeAmount;\n        maxStakeAmount = _maxStakeAmount;\n        credibilityUpdateDelay = 1 days;\n    }\n\n    function createPrediction(\n        string memory _description,\n        uint256 _predictionType,\n        uint256 _deadline,\n        uint256 _stakeAmount\n    ) external payable returns (uint256) {\n        require(msg.value >= minStakeAmount, \"Stake amount too low\");\n        require(msg.value <= maxStakeAmount, \"Stake amount too high\");\n        require(_deadline > block.timestamp, \"Deadline must be in the future\");\n        require(bytes(_description).length > 0, \"Description cannot be empty\");\n        require(_predictionType <= 2, \"Invalid prediction type\");\n\n        _predictionIds.increment();\n        uint256 predictionId = _predictionIds.current();\n\n        predictions[predictionId] = Prediction({\n            id: predictionId,\n            astrologer: msg.sender,\n            astrologerId: 0, // Will be set by astrologer manager\n            description: _description,\n            predictionType: _predictionType,\n            deadline: _deadline,\n            outcome: false,\n            isResolved: false,\n            wasAccurate: false,\n            stakeAmount: msg.value,\n            totalStaked: msg.value,\n            createdAt: block.timestamp\n        });\n\n        astrologerPredictions[msg.sender].push(predictionId);\n\n        emit PredictionCreated(predictionId, msg.sender, _description, _predictionType, _deadline);\n        return predictionId;\n    }\n\n    function resolvePrediction(uint256 _predictionId, bool _outcome) external {\n        require(msg.sender == owner() || msg.sender == reputationScorer, \"Unauthorized\");\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \"Invalid prediction ID\");\n        \n        Prediction storage prediction = predictions[_predictionId];\n        require(!prediction.isResolved, \"Prediction already resolved\");\n        require(block.timestamp >= prediction.deadline, \"Deadline not reached\");\n\n        prediction.outcome = _outcome;\n        prediction.isResolved = true;\n\n        // Determine if prediction was accurate\n        // This logic would depend on the specific prediction type and outcome\n        prediction.wasAccurate = _outcome; // Simplified logic\n\n        // Update credibility score\n        updateAstrologerCredibility(prediction.astrologer, prediction.wasAccurate);\n\n        // Record result in astrologer manager\n        if (astrologerManager != address(0)) {\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(prediction.astrologer);\n            if (astrologerId > 0) {\n                IAstrologerManager(astrologerManager).recordPredictionResult(astrologerId, prediction.wasAccurate);\n            }\n        }\n\n        emit PredictionResolved(_predictionId, _outcome, prediction.wasAccurate);\n    }\n\n    function updateAstrologerCredibility(address _astrologer, bool _wasAccurate) internal {\n        CredibilityScore storage score = credibilityScores[_astrologer];\n        \n        score.totalPredictions++;\n        if (_wasAccurate) {\n            score.accuratePredictions++;\n        }\n        \n        score.accuracyPercentage = (score.accuratePredictions * 100) / score.totalPredictions;\n        \n        // Calculate reputation multiplier based on accuracy\n        if (score.accuracyPercentage >= 90) {\n            score.reputationMultiplier = 1500; // 1.5x\n        } else if (score.accuracyPercentage >= 80) {\n            score.reputationMultiplier = 1200; // 1.2x\n        } else if (score.accuracyPercentage >= 70) {\n            score.reputationMultiplier = 1000; // 1.0x\n        } else if (score.accuracyPercentage >= 60) {\n            score.reputationMultiplier = 800; // 0.8x\n        } else {\n            score.reputationMultiplier = 500; // 0.5x\n        }\n        \n        score.lastUpdated = block.timestamp;\n\n        // Update buy token contract credibility multiplier\n        if (astroTokenLauncher != address(0)) {\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.buyContract != address(0) && tokenInfo.isActive) {\n                    // Update the credibility multiplier in the token's specific BuyTokenContract instance\n                    IBuyTokenContract(tokenInfo.buyContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\n                }\n            } catch {\n                // Token not found or error occurred, skip update\n            }\n        }\n\n        emit CredibilityUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\n    }\n\n    function getPrediction(uint256 _predictionId) external view returns (Prediction memory) {\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \"Invalid prediction ID\");\n        return predictions[_predictionId];\n    }\n\n    function getAstrologerPredictions(address _astrologer) external view returns (uint256[] memory) {\n        return astrologerPredictions[_astrologer];\n    }\n\n    function getCredibilityScore(address _astrologer) external view returns (CredibilityScore memory) {\n        return credibilityScores[_astrologer];\n    }\n\n    function getAstrologerAccuracy(address _astrologer) external view returns (uint256) {\n        return credibilityScores[_astrologer].accuracyPercentage;\n    }\n\n    function getReputationMultiplier(address _astrologer) external view returns (uint256) {\n        return credibilityScores[_astrologer].reputationMultiplier;\n    }\n\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\n        astrologerManager = _astrologerManager;\n    }\n\n    function setBuyTokenContract(address _buyTokenContract) external onlyOwner {\n        buyTokenContract = _buyTokenContract;\n    }\n\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\n        reputationScorer = _reputationScorer;\n    }\n\n    function setAstroTokenLauncher(address _astroTokenLauncher) external onlyOwner {\n        astroTokenLauncher = _astroTokenLauncher;\n    }\n\n    function setStakeLimits(uint256 _minStakeAmount, uint256 _maxStakeAmount) external onlyOwner {\n        minStakeAmount = _minStakeAmount;\n        maxStakeAmount = _maxStakeAmount;\n    }\n\n    function setCredibilityUpdateDelay(uint256 _delay) external onlyOwner {\n        credibilityUpdateDelay = _delay;\n    }\n\n    function withdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n} "},"contracts/ReputationScorer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"./interfaces/IAstrologerManager.sol\";\nimport \"./interfaces/IBuyTokenContract.sol\";\nimport \"./interfaces/IAstroTokenLauncher.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\n\ncontract ReputationScorer is \n    Initializable, \n    OwnableUpgradeable, \n    UUPSUpgradeable \n{\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    CountersUpgradeable.Counter private _scoreIds;\n    \n    struct ReputationScore {\n        uint256 id;\n        address astrologer;\n        uint256 totalPredictions;\n        uint256 accuratePredictions;\n        uint256 accuracyPercentage;\n        uint256 reputationMultiplier;\n        uint256 marketPredictions;\n        uint256 dailyPredictions;\n        uint256 oneToOnePredictions;\n        uint256 lastUpdated;\n        bool isActive;\n    }\n\n    struct ScoreBreakdown {\n        uint256 marketAccuracy;\n        uint256 dailyAccuracy;\n        uint256 oneToOneAccuracy;\n        uint256 weightedScore;\n        uint256 reputationTier;\n    }\n\n    struct PredictionModule {\n        address contractAddress;\n        bool isActive;\n        uint256 weight;\n        uint256 lastUpdate;\n    }\n\n    mapping(address => ReputationScore) public reputationScores;\n    mapping(address => ScoreBreakdown) public scoreBreakdowns;\n    mapping(uint256 => PredictionModule) public predictionModules;\n    \n    address public astrologerManager;\n    address public buyTokenContract;\n    address public zodiacDAO;\n    address public astroTokenLauncher;\n    address public worldPredictionMarket;\n    \n    uint256 public totalModules;\n    uint256 public minPredictionsForScore;\n    uint256 public scoreUpdateDelay;\n    uint256 public reputationDecayRate;\n    uint256 public maxReputationMultiplier; // Maximum reputation multiplier (e.g., 5000 = 5.0x)\n    uint256 public minReputationMultiplier; // Minimum reputation multiplier (e.g., 200 = 0.2x)\n    \n    event ReputationScoreUpdated(\n        address indexed astrologer,\n        uint256 oldAccuracy,\n        uint256 newAccuracy,\n        uint256 newMultiplier\n    );\n\n    event PredictionModuleAdded(\n        uint256 indexed moduleId,\n        address contractAddress,\n        uint256 weight\n    );\n\n    event ScoreBreakdownUpdated(\n        address indexed astrologer,\n        uint256 marketAccuracy,\n        uint256 dailyAccuracy,\n        uint256 oneToOneAccuracy,\n        uint256 weightedScore\n    );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _astrologerManager,\n        address _buyTokenContract,\n        address _zodiacDAO,\n        uint256 _minPredictionsForScore,\n        uint256 _scoreUpdateDelay\n    ) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n        \n        astrologerManager = _astrologerManager;\n        buyTokenContract = _buyTokenContract;\n        zodiacDAO = _zodiacDAO;\n        astroTokenLauncher = address(0); // Will be set separately\n        worldPredictionMarket = address(0); // Will be set separately\n        minPredictionsForScore = _minPredictionsForScore;\n        scoreUpdateDelay = _scoreUpdateDelay;\n        reputationDecayRate = 5; // 5% decay per month\n        maxReputationMultiplier = 5000; // 5.0x maximum multiplier\n        minReputationMultiplier = 200; // 0.2x minimum multiplier\n    }\n\n    function addPredictionModule(\n        address _contractAddress,\n        uint256 _weight\n    ) external onlyOwner returns (uint256) {\n        require(_contractAddress != address(0), \"Invalid contract address\");\n        require(_weight > 0, \"Weight must be greater than 0\");\n\n        totalModules++;\n        uint256 moduleId = totalModules;\n\n        predictionModules[moduleId] = PredictionModule({\n            contractAddress: _contractAddress,\n            isActive: true,\n            weight: _weight,\n            lastUpdate: block.timestamp\n        });\n\n        emit PredictionModuleAdded(moduleId, _contractAddress, _weight);\n        return moduleId;\n    }\n\n    function updateReputationFromWorldPrediction(\n        address _astrologer,\n        bool _wasCorrect\n    ) external {\n        require(msg.sender == worldPredictionMarket || msg.sender == owner(), \"Unauthorized\");\n        require(_astrologer != address(0), \"Invalid astrologer address\");\n\n        ReputationScore storage score = reputationScores[_astrologer];\n        \n        // Update world prediction counts\n        score.marketPredictions++; // World predictions count as market predictions\n        score.totalPredictions++;\n        \n        if (_wasCorrect) {\n            score.accuratePredictions++;\n        }\n        \n        // Recalculate accuracy percentage\n        score.accuracyPercentage = (score.accuratePredictions * 100) / score.totalPredictions;\n        \n        // Update reputation multiplier\n        score.reputationMultiplier = calculateReputationMultiplier(score.accuracyPercentage);\n        score.lastUpdated = block.timestamp;\n        score.isActive = true;\n\n        // Update astrologer manager\n        if (astrologerManager != address(0)) {\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(_astrologer);\n            if (astrologerId > 0) {\n                IAstrologerManager(astrologerManager).updateReputation(astrologerId, score.reputationMultiplier);\n            }\n        }\n\n        // Update buy token contract\n        if (astroTokenLauncher != address(0)) {\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.buyContract != address(0) && tokenInfo.isActive) {\n                    // Use the token's specific BuyTokenContract instance, not the main one\n                    IBuyTokenContract(tokenInfo.buyContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\n                }\n            } catch {\n                // Token not found or error occurred, skip update\n            }\n        }\n\n        emit ReputationScoreUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\n    }\n\n    function updateReputationScore(\n        address _astrologer,\n        uint256 _marketPredictions,\n        uint256 _marketAccurate,\n        uint256 _dailyPredictions,\n        uint256 _dailyAccurate,\n        uint256 _oneToOnePredictions,\n        uint256 _oneToOneAccurate\n    ) external {\n        require(msg.sender == owner() || isPredictionModule(msg.sender), \"Unauthorized\");\n        require(_astrologer != address(0), \"Invalid astrologer address\");\n\n        ReputationScore storage score = reputationScores[_astrologer];\n        ScoreBreakdown storage breakdown = scoreBreakdowns[_astrologer];\n\n        // Update prediction counts\n        score.marketPredictions = _marketPredictions;\n        score.dailyPredictions = _dailyPredictions;\n        score.oneToOnePredictions = _oneToOnePredictions;\n        score.totalPredictions = _marketPredictions + _dailyPredictions + _oneToOnePredictions;\n\n        // Calculate accuracies\n        breakdown.marketAccuracy = _marketPredictions > 0 ? (_marketAccurate * 100) / _marketPredictions : 0;\n        breakdown.dailyAccuracy = _dailyPredictions > 0 ? (_dailyAccurate * 100) / _dailyPredictions : 0;\n        breakdown.oneToOneAccuracy = _oneToOnePredictions > 0 ? (_oneToOneAccurate * 100) / _oneToOnePredictions : 0;\n\n        // Calculate weighted score\n        uint256 totalWeight = 0;\n        uint256 weightedSum = 0;\n\n        if (_marketPredictions > 0) {\n            weightedSum += breakdown.marketAccuracy * 3; // Market predictions weight: 3\n            totalWeight += 3;\n        }\n        if (_dailyPredictions > 0) {\n            weightedSum += breakdown.dailyAccuracy * 2; // Daily predictions weight: 2\n            totalWeight += 2;\n        }\n        if (_oneToOnePredictions > 0) {\n            weightedSum += breakdown.oneToOneAccuracy * 4; // One-to-one predictions weight: 4\n            totalWeight += 4;\n        }\n\n        breakdown.weightedScore = totalWeight > 0 ? weightedSum / totalWeight : 0;\n        score.accuracyPercentage = breakdown.weightedScore;\n\n        // Calculate reputation multiplier based on accuracy\n        score.reputationMultiplier = calculateReputationMultiplier(breakdown.weightedScore);\n\n        // Determine reputation tier\n        breakdown.reputationTier = calculateReputationTier(breakdown.weightedScore);\n\n        score.lastUpdated = block.timestamp;\n        score.isActive = true;\n\n        // Update astrologer manager\n        if (astrologerManager != address(0)) {\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(_astrologer);\n            if (astrologerId > 0) {\n                IAstrologerManager(astrologerManager).updateReputation(astrologerId, score.reputationMultiplier);\n            }\n        }\n\n        // Update buy token contract\n        if (astroTokenLauncher != address(0)) {\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.buyContract != address(0) && tokenInfo.isActive) {\n                    // Update the credibility multiplier in the token's specific BuyTokenContract instance\n                    IBuyTokenContract(tokenInfo.buyContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\n                }\n            } catch {\n                // Token not found or error occurred, skip update\n            }\n        }\n\n        emit ReputationScoreUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\n        emit ScoreBreakdownUpdated(_astrologer, breakdown.marketAccuracy, breakdown.dailyAccuracy, breakdown.oneToOneAccuracy, breakdown.weightedScore);\n    }\n\n    function calculateReputationMultiplier(uint256 _accuracy) internal view returns (uint256) {\n        // Dynamic multiplier based on accuracy percentage\n        // Formula: minMultiplier + (accuracy * (maxMultiplier - minMultiplier)) / 100\n        \n        if (_accuracy >= 100) {\n            return maxReputationMultiplier; // Cap at maximum\n        }\n        \n        if (_accuracy <= 0) {\n            return minReputationMultiplier; // Floor at minimum\n        }\n        \n        // Linear interpolation between min and max based on accuracy\n        uint256 multiplierRange = maxReputationMultiplier - minReputationMultiplier;\n        uint256 accuracyContribution = (_accuracy * multiplierRange) / 100;\n        \n        return minReputationMultiplier + accuracyContribution;\n    }\n\n    function calculateReputationTier(uint256 _accuracy) internal pure returns (uint256) {\n        if (_accuracy >= 95) return 5; // Master Astrologer\n        if (_accuracy >= 90) return 4; // Expert Astrologer\n        if (_accuracy >= 85) return 3; // Advanced Astrologer\n        if (_accuracy >= 80) return 2; // Intermediate Astrologer\n        if (_accuracy >= 75) return 1; // Beginner Astrologer\n        return 0; // Novice\n    }\n\n    function getReputationScore(address _astrologer) external view returns (ReputationScore memory) {\n        return reputationScores[_astrologer];\n    }\n\n    function getScoreBreakdown(address _astrologer) external view returns (ScoreBreakdown memory) {\n        return scoreBreakdowns[_astrologer];\n    }\n\n    function getReputationMultiplier(address _astrologer) external view returns (uint256) {\n        return reputationScores[_astrologer].reputationMultiplier;\n    }\n\n    function getReputationTier(address _astrologer) external view returns (uint256) {\n        return scoreBreakdowns[_astrologer].reputationTier;\n    }\n\n    function getTopAstrologers(uint256 _limit) external view returns (address[] memory) {\n        address[] memory topAstrologers = new address[](_limit);\n        uint256 count = 0;\n        \n        // This is a simplified implementation\n        \n        return topAstrologers;\n    }\n\n    function isPredictionModule(address _module) internal view returns (bool) {\n        for (uint256 i = 1; i <= totalModules; i++) {\n            if (predictionModules[i].contractAddress == _module && predictionModules[i].isActive) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\n        astrologerManager = _astrologerManager;\n    }\n\n    function setBuyTokenContract(address _buyTokenContract) external onlyOwner {\n        buyTokenContract = _buyTokenContract;\n    }\n\n    function setAstroTokenLauncher(address _astroTokenLauncher) external onlyOwner {\n        astroTokenLauncher = _astroTokenLauncher;\n    }\n\n    function setZodiacDAO(address _zodiacDAO) external onlyOwner {\n        zodiacDAO = _zodiacDAO;\n    }\n\n    function setWorldPredictionMarket(address _worldPredictionMarket) external onlyOwner {\n        worldPredictionMarket = _worldPredictionMarket;\n    }\n\n    function setMinPredictionsForScore(uint256 _minPredictions) external onlyOwner {\n        minPredictionsForScore = _minPredictions;\n    }\n\n    function setScoreUpdateDelay(uint256 _delay) external onlyOwner {\n        scoreUpdateDelay = _delay;\n    }\n\n    function setReputationDecayRate(uint256 _decayRate) external onlyOwner {\n        reputationDecayRate = _decayRate;\n    }\n\n    function togglePredictionModule(uint256 _moduleId) external onlyOwner {\n        require(_moduleId > 0 && _moduleId <= totalModules, \"Invalid module ID\");\n        predictionModules[_moduleId].isActive = !predictionModules[_moduleId].isActive;\n    }\n\n    function updateModuleWeight(uint256 _moduleId, uint256 _newWeight) external onlyOwner {\n        require(_moduleId > 0 && _moduleId <= totalModules, \"Invalid module ID\");\n        require(_newWeight > 0, \"Weight must be greater than 0\");\n        predictionModules[_moduleId].weight = _newWeight;\n    }\n\n    function setReputationMultipliers(uint256 _maxMultiplier, uint256 _minMultiplier) external onlyOwner {\n        require(_maxMultiplier > _minMultiplier, \"Max must be greater than min\");\n        require(_minMultiplier >= 100, \"Min multiplier must be at least 0.1x\");\n        require(_maxMultiplier <= 10000, \"Max multiplier must be at most 10.0x\");\n        \n        maxReputationMultiplier = _maxMultiplier;\n        minReputationMultiplier = _minMultiplier;\n    }\n\n    function getReputationMultiplierRange() external view returns (uint256 max, uint256 min) {\n        return (maxReputationMultiplier, minReputationMultiplier);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/AstroTokenLauncher.sol:81:9:\n   |\n81 |         string memory _description\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2240,"file":"contracts/AstroTokenLauncher.sol","start":2214},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/PredictionCredibilityManager.sol:107:9:\n    |\n107 |         uint256 _stakeAmount\n    |         ^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3201,"file":"contracts/PredictionCredibilityManager.sol","start":3181},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/ReputationScorer.sol:309:9:\n    |\n309 |         uint256 count = 0;\n    |         ^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":12294,"file":"contracts/ReputationScorer.sol","start":12281},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/ReputationScorer.sol:307:5:\n    |\n307 |     function getTopAstrologers(uint256 _limit) external view returns (address[] memory) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":12401,"file":"contracts/ReputationScorer.sol","start":12122},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2322],"ContextUpgradeable":[2364],"Initializable":[665],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":2365,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":666,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nameLocations":["748:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nameLocations":["763:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,2364,665],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nameLocations":["1038:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nameLocations":["1149:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2118:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2128:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2128:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nameLocations":["2108:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2108:9:0"},"nodeType":"ModifierInvocation","src":"2108:9:0"}],"name":"renounceOwnership","nameLocation":"2073:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2090:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2118:0:0"},"scope":131,"src":"2064:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2384:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2402:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2394:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2496:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2477:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2477:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2171:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2374:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2374:9:0"},"nodeType":"ModifierInvocation","src":"2374:9:0"}],"name":"transferOwnership","nameLocation":"2323:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2341:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2384:0:0"},"scope":131,"src":"2314:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2729:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2739:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2758:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2774:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2783:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2774:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2827:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2837:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2806:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2801:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2518:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2694:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2729:0:0"},"scope":131,"src":"2666:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2859:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3118:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2438:0","usedErrors":[]}],"src":"102:3045:0"},"id":0},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[152]},"id":153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"132:133:1","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":152,"linearizedBaseContracts":[152],"name":"IERC1967Upgradeable","nameLocation":"276:19:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"302:68:1","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":139,"name":"Upgraded","nameLocation":"381:8:1","nodeType":"EventDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:1","nodeType":"VariableDeclaration","scope":139,"src":"390:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:1"},"src":"375:47:1"},{"anonymous":false,"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"428:67:1","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":146,"name":"AdminChanged","nameLocation":"506:12:1","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:1","nodeType":"VariableDeclaration","scope":146,"src":"519:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:1","nodeType":"VariableDeclaration","scope":146,"src":"542:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:1"},"src":"500:60:1"},{"anonymous":false,"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"566:59:1","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":151,"name":"BeaconUpgraded","nameLocation":"636:14:1","nodeType":"EventDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:1","nodeType":"VariableDeclaration","scope":151,"src":"651:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:1"},"src":"630:45:1"}],"scope":153,"src":"266:411:1","usedErrors":[]}],"src":"107:571:1"},"id":1},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[162]},"id":163,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":154,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"138:203:2","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":162,"linearizedBaseContracts":[162],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"387:438:2","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:2","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"852:2:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":161,"src":"878:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:2"},"scope":162,"src":"830:57:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":163,"src":"342:547:2","usedErrors":[]}],"src":"113:777:2"},"id":2},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2322],"ERC1967UpgradeUpgradeable":[486],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"StorageSlotUpgradeable":[2548]},"id":487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":164,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":497,"src":"141:42:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":153,"src":"184:50:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":163,"src":"235:56:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":2323,"src":"292:44:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":2549,"src":"337:48:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":666,"src":"386:36:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":172,"name":"Initializable","nameLocations":["656:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"656:13:3"},"id":173,"nodeType":"InheritanceSpecifier","src":"656:13:3"},{"baseName":{"id":174,"name":"IERC1967Upgradeable","nameLocations":["671:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":152,"src":"671:19:3"},"id":175,"nodeType":"InheritanceSpecifier","src":"671:19:3"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"424:184:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":486,"linearizedBaseContracts":[486,152,665],"name":"ERC1967UpgradeUpgradeable","nameLocation":"627:25:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":180,"nodeType":"Block","src":"756:7:3","statements":[]},"id":181,"implemented":true,"kind":"function","modifiers":[{"id":178,"kind":"modifierInvocation","modifierName":{"id":177,"name":"onlyInitializing","nameLocations":["739:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"739:16:3"},"nodeType":"ModifierInvocation","src":"739:16:3"}],"name":"__ERC1967Upgrade_init","nameLocation":"706:21:3","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"727:2:3"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"756:0:3"},"scope":486,"src":"697:66:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"838:7:3","statements":[]},"id":187,"implemented":true,"kind":"function","modifiers":[{"id":184,"kind":"modifierInvocation","modifierName":{"id":183,"name":"onlyInitializing","nameLocations":["821:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"821:16:3"},"nodeType":"ModifierInvocation","src":"821:16:3"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"778:31:3","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"809:2:3"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"838:0:3"},"scope":486,"src":"769:76:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":190,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"954:14:3","nodeType":"VariableDeclaration","scope":486,"src":"929:108:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"929:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:66:3","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"1044:214:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":194,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1289:20:3","nodeType":"VariableDeclaration","scope":486,"src":"1263:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":206,"nodeType":"Block","src":"1519:89:3","statements":[{"expression":{"expression":{"arguments":[{"id":202,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1574:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":200,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"1536:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2548_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2470,"src":"1536:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2444_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2444_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1596:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"1536:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":199,"id":205,"nodeType":"Return","src":"1529:72:3"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1385:67:3","text":" @dev Returns the current implementation address."},"id":207,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1466:18:3","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"1484:2:3"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1510:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:9:3"},"scope":486,"src":"1457:151:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":230,"nodeType":"Block","src":"1762:218:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":216,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1810:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":214,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"1780:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2322_$","typeString":"type(library AddressUpgradeable)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"1780:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1830:47:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:106:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"1772:106:3"},{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":224,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1926:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":221,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"1888:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2548_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2470,"src":"1888:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2444_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2444_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1948:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"1888:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":227,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1956:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:85:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":229,"nodeType":"ExpressionStatement","src":"1888:85:3"}]},"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"1614:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":231,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1708:18:3","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"newImplementation","nameLocation":"1735:17:3","nodeType":"VariableDeclaration","scope":231,"src":"1727:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:27:3"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"1762:0:3"},"scope":486,"src":"1699:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":245,"nodeType":"Block","src":"2142:96:3","statements":[{"expression":{"arguments":[{"id":238,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2171:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":237,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2152:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"2152:37:3"},{"eventCall":{"arguments":[{"id":242,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2213:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"2204:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"EmitStatement","src":"2199:32:3"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"1986:95:3","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":246,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2095:10:3","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"newImplementation","nameLocation":"2114:17:3","nodeType":"VariableDeclaration","scope":246,"src":"2106:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:27:3"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"2142:0:3"},"scope":486,"src":"2086:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"2470:178:3","statements":[{"expression":{"arguments":[{"id":257,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2491:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":256,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2480:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"2480:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2523:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:3","memberName":"length","nodeType":"MemberAccess","src":"2523:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":264,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2542:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2523:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"IfStatement","src":"2519:123:3","trueBody":{"id":273,"nodeType":"Block","src":"2553:89:3","statements":[{"expression":{"arguments":[{"id":269,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2607:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2626:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":266,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2567:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2322_$","typeString":"type(library AddressUpgradeable)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"2567:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":272,"nodeType":"ExpressionStatement","src":"2567:64:3"}]}}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2244:123:3","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2381:17:3","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"newImplementation","nameLocation":"2407:17:3","nodeType":"VariableDeclaration","scope":276,"src":"2399:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"data","nameLocation":"2439:4:3","nodeType":"VariableDeclaration","scope":276,"src":"2426:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":250,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"forceCall","nameLocation":"2450:9:3","nodeType":"VariableDeclaration","scope":276,"src":"2445:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":252,"name":"bool","nodeType":"ElementaryTypeName","src":"2445:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:62:3"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"2470:0:3"},"scope":486,"src":"2372:276:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"2922:842:3","statements":[{"condition":{"expression":{"arguments":[{"id":288,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3274:14:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":286,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"3236:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2548_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:14:3","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":2481,"src":"3236:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2447_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2447_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3290:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"3236:59:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":326,"nodeType":"Block","src":"3365:393:3","statements":[{"clauses":[{"block":{"id":311,"nodeType":"Block","src":"3470:115:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3496:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":306,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"3504:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3496:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3526:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"3488:82:3"}]},"errorName":"","id":312,"nodeType":"TryCatchClause","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"slot","nameLocation":"3464:4:3","nodeType":"VariableDeclaration","scope":312,"src":"3456:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:14:3"},"src":"3447:138:3"},{"block":{"id":317,"nodeType":"Block","src":"3592:89:3","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":313,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3610:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"3610:56:3"}]},"errorName":"","id":318,"nodeType":"TryCatchClause","src":"3586:95:3"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":297,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3412:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3383:28:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$162_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$162","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:13:3","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":161,"src":"3383:61:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:63:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":319,"nodeType":"TryStatement","src":"3379:302:3"},{"expression":{"arguments":[{"id":321,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3712:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3731:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":323,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3737:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":320,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3694:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":325,"nodeType":"ExpressionStatement","src":"3694:53:3"}]},"id":327,"nodeType":"IfStatement","src":"3232:526:3","trueBody":{"id":295,"nodeType":"Block","src":"3297:62:3","statements":[{"expression":{"arguments":[{"id":292,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3330:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3311:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"3311:37:3"}]}}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"2654:161:3","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2829:21:3","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"newImplementation","nameLocation":"2859:17:3","nodeType":"VariableDeclaration","scope":329,"src":"2851:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"data","nameLocation":"2891:4:3","nodeType":"VariableDeclaration","scope":329,"src":"2878:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":280,"name":"bytes","nodeType":"ElementaryTypeName","src":"2878:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"forceCall","nameLocation":"2902:9:3","nodeType":"VariableDeclaration","scope":329,"src":"2897:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":282,"name":"bool","nodeType":"ElementaryTypeName","src":"2897:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2850:62:3"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"2922:0:3"},"scope":486,"src":"2820:944:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3770:189:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":333,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3990:11:3","nodeType":"VariableDeclaration","scope":486,"src":"3964:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3964:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":345,"nodeType":"Block","src":"4185:80:3","statements":[{"expression":{"expression":{"arguments":[{"id":341,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4240:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":339,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"4202:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2548_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2470,"src":"4202:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2444_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2444_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4253:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"4202:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":338,"id":344,"nodeType":"Return","src":"4195:63:3"}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"4077:50:3","text":" @dev Returns the current admin."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4141:9:3","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"4150:2:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"4176:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:9:3"},"scope":486,"src":"4132:133:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":371,"nodeType":"Block","src":"4392:167:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":353,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4410:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:3","typeDescriptions":{}}},"id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4410:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4434:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4402:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":361,"nodeType":"ExpressionStatement","src":"4402:73:3"},{"expression":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":365,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4523:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":362,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"4485:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2548_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2470,"src":"4485:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2444_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2444_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4536:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"4485:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":368,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4544:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4485:67:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":370,"nodeType":"ExpressionStatement","src":"4485:67:3"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"4271:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":372,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4356:9:3","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"newAdmin","nameLocation":"4374:8:3","nodeType":"VariableDeclaration","scope":372,"src":"4366:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:18:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"4392:0:3"},"scope":486,"src":"4347:212:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":388,"nodeType":"Block","src":"4719:86:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":379,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"4747:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":381,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4760:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":378,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4734:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"EmitStatement","src":"4729:40:3"},{"expression":{"arguments":[{"id":385,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4789:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":384,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4779:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"4779:19:3"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"4565:100:3","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4679:12:3","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"newAdmin","nameLocation":"4700:8:3","nodeType":"VariableDeclaration","scope":389,"src":"4692:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:3"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"4719:0:3"},"scope":486,"src":"4670:135:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"4811:232:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":393,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5074:12:3","nodeType":"VariableDeclaration","scope":486,"src":"5048:107:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"5272:81:3","statements":[{"expression":{"expression":{"arguments":[{"id":401,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5327:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":399,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"5289:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2548_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2470,"src":"5289:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2444_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2444_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5341:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"5289:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":398,"id":404,"nodeType":"Return","src":"5282:64:3"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"5162:51:3","text":" @dev Returns the current beacon."},"id":406,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5227:10:3","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"5237:2:3"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"5263:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5262:9:3"},"scope":486,"src":"5218:135:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"5482:368:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":415,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5530:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":413,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"5500:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2322_$","typeString":"type(library AddressUpgradeable)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5519:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"5500:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"5492:90:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":424,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5662:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":423,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5643:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$496_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$496","typeString":"contract IBeaconUpgradeable"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":495,"src":"5643:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":421,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"5613:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2322_$","typeString":"type(library AddressUpgradeable)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"5613:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:50:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5592:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:172:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"5592:172:3"},{"expression":{"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":435,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5812:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":432,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"5774:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2548_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2470,"src":"5774:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2444_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2444_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2443,"src":"5774:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":438,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5834:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:69:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":440,"nodeType":"ExpressionStatement","src":"5774:69:3"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"5359:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5444:10:3","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"newBeacon","nameLocation":"5463:9:3","nodeType":"VariableDeclaration","scope":442,"src":"5455:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5454:19:3"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"5482:0:3"},"scope":486,"src":"5435:415:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":479,"nodeType":"Block","src":"6249:239:3","statements":[{"expression":{"arguments":[{"id":453,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6270:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":452,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6259:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"6259:21:3"},{"eventCall":{"arguments":[{"id":457,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6310:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"6295:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"EmitStatement","src":"6290:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":460,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6334:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:3","memberName":"length","nodeType":"MemberAccess","src":"6334:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6334:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":464,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6353:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6334:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":478,"nodeType":"IfStatement","src":"6330:152:3","trueBody":{"id":477,"nodeType":"Block","src":"6364:118:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":470,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6437:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"6418:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$496_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$496","typeString":"contract IBeaconUpgradeable"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":495,"src":"6418:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":474,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6466:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":466,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"6378:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2322_$","typeString":"type(library AddressUpgradeable)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2209,"src":"6378:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:93:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":476,"nodeType":"ExpressionStatement","src":"6378:93:3"}]}}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"5856:292:3","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":480,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6162:23:3","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"newBeacon","nameLocation":"6194:9:3","nodeType":"VariableDeclaration","scope":480,"src":"6186:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"data","nameLocation":"6218:4:3","nodeType":"VariableDeclaration","scope":480,"src":"6205:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":446,"name":"bytes","nodeType":"ElementaryTypeName","src":"6205:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"forceCall","nameLocation":"6229:9:3","nodeType":"VariableDeclaration","scope":480,"src":"6224:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":448,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6185:54:3"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"6249:0:3"},"scope":486,"src":"6153:335:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"6494:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":485,"mutability":"mutable","name":"__gap","nameLocation":"6773:5:3","nodeType":"VariableDeclaration","scope":486,"src":"6753:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"6753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":484,"length":{"hexValue":"3530","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6761:2:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6753:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":487,"src":"609:6172:3","usedErrors":[]}],"src":"116:6666:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[496]},"id":497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":488,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"118:79:4","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":496,"linearizedBaseContracts":[496],"name":"IBeaconUpgradeable","nameLocation":"208:18:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"233:162:4","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":495,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:4","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"423:2:4"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":495,"src":"449:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:4"},"scope":496,"src":"400:58:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":497,"src":"198:262:4","usedErrors":[]}],"src":"93:368:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2322],"Initializable":[665]},"id":666,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":498,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":666,"sourceUnit":2323,"src":"138:44:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"184:2209:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":665,"linearizedBaseContracts":[665],"name":"Initializable","nameLocation":"2412:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2432:109:5","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":503,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:5","nodeType":"VariableDeclaration","scope":665,"src":"2546:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":502,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"2579:91:5","text":" @dev Indicates that the contract is in the process of being initialized."},"id":506,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:5","nodeType":"VariableDeclaration","scope":665,"src":"2675:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2708:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":511,"name":"Initialized","nameLocation":"2809:11:5","nodeType":"EventDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:5","nodeType":"VariableDeclaration","scope":511,"src":"2821:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":508,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:5"},"src":"2803:33:5"},{"body":{"id":566,"nodeType":"Block","src":"3269:483:5","statements":[{"assignments":[515],"declarations":[{"constant":false,"id":515,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:5","nodeType":"VariableDeclaration","scope":566,"src":"3279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":514,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":518,"initialValue":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:5","subExpression":{"id":516,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3302:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":520,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3347:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":521,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3365:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:5","subExpression":{"arguments":[{"arguments":[{"id":530,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$665","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$665","typeString":"contract Initializable"}],"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:5","typeDescriptions":{}}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":526,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"3388:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2322_$","typeString":"type(library AddressUpgradeable)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"3388:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3436:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"3325:201:5"},{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":543,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3536:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":546,"nodeType":"ExpressionStatement","src":"3536:16:5"},{"condition":{"id":547,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3566:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":553,"nodeType":"IfStatement","src":"3562:65:5","trueBody":{"id":552,"nodeType":"Block","src":"3582:45:5","statements":[{"expression":{"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":548,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3596:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"ExpressionStatement","src":"3596:20:5"}]}},{"id":554,"nodeType":"PlaceholderStatement","src":"3636:1:5"},{"condition":{"id":555,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3651:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":565,"nodeType":"IfStatement","src":"3647:99:5","trueBody":{"id":564,"nodeType":"Block","src":"3667:79:5","statements":[{"expression":{"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":556,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3681:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":559,"nodeType":"ExpressionStatement","src":"3681:21:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":560,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3721:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"EmitStatement","src":"3716:19:5"}]}}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"2842:399:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":567,"name":"initializer","nameLocation":"3255:11:5","nodeType":"ModifierDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"3266:2:5"},"src":"3246:506:5","virtual":false,"visibility":"internal"},{"body":{"id":599,"nodeType":"Block","src":"4863:255:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:5","subExpression":{"id":573,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4882:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4899:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":576,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4914:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"4873:99:5"},{"expression":{"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":582,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4982:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":583,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4997:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":585,"nodeType":"ExpressionStatement","src":"4982:22:5"},{"expression":{"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":586,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5014:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"ExpressionStatement","src":"5014:20:5"},{"id":590,"nodeType":"PlaceholderStatement","src":"5044:1:5"},{"expression":{"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":591,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5055:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":594,"nodeType":"ExpressionStatement","src":"5055:21:5"},{"eventCall":{"arguments":[{"id":596,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"5103:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":595,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"5091:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"5086:25:5"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"3758:1062:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":600,"name":"reinitializer","nameLocation":"4834:13:5","nodeType":"ModifierDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"version","nameLocation":"4854:7:5","nodeType":"VariableDeclaration","scope":600,"src":"4848:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":569,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:5"},"src":"4825:293:5","virtual":false,"visibility":"internal"},{"body":{"id":609,"nodeType":"Block","src":"5356:97:5","statements":[{"expression":{"arguments":[{"id":604,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5374:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"5366:69:5"},{"id":608,"nodeType":"PlaceholderStatement","src":"5445:1:5"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"5124:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":610,"name":"onlyInitializing","nameLocation":"5337:16:5","nodeType":"ModifierDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"5353:2:5"},"src":"5328:125:5","virtual":false,"visibility":"internal"},{"body":{"id":645,"nodeType":"Block","src":"5988:231:5","statements":[{"expression":{"arguments":[{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:5","subExpression":{"id":615,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6007:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"5998:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6078:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":622,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":621,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:5","memberName":"max","nodeType":"MemberAccess","src":"6094:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"IfStatement","src":"6074:139:5","trueBody":{"id":643,"nodeType":"Block","src":"6111:102:5","statements":[{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":627,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6125:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":629,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:5","memberName":"max","nodeType":"MemberAccess","src":"6140:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":634,"nodeType":"ExpressionStatement","src":"6125:30:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":637,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:5","memberName":"max","nodeType":"MemberAccess","src":"6186:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":635,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6174:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"EmitStatement","src":"6169:33:5"}]}}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"5459:475:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:5","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"5968:2:5"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"5988:0:5"},"scope":665,"src":"5939:280:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":654,"nodeType":"Block","src":"6393:36:5","statements":[{"expression":{"id":652,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6410:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":651,"id":653,"nodeType":"Return","src":"6403:19:5"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"6225:99:5","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:5","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"6360:2:5"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"6386:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":649,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:5"},"scope":665,"src":"6329:100:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"6601:37:5","statements":[{"expression":{"id":661,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6618:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":660,"id":662,"nodeType":"Return","src":"6611:20:5"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"6435:105:5","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:5","nodeType":"FunctionDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[],"src":"6569:2:5"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":664,"src":"6595:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":658,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:5"},"scope":665,"src":"6545:93:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":666,"src":"2394:4246:5","usedErrors":[]}],"src":"113:6528:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2322],"ERC1967UpgradeUpgradeable":[486],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"StorageSlotUpgradeable":[2548],"UUPSUpgradeable":[801]},"id":802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":667,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":163,"src":"140:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":487,"src":"197:50:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":666,"src":"248:29:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":672,"name":"Initializable","nameLocations":["965:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"965:13:6"},"id":673,"nodeType":"InheritanceSpecifier","src":"965:13:6"},{"baseName":{"id":674,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:6"],"nodeType":"IdentifierPath","referencedDeclaration":162,"src":"980:28:6"},"id":675,"nodeType":"InheritanceSpecifier","src":"980:28:6"},{"baseName":{"id":676,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:6"],"nodeType":"IdentifierPath","referencedDeclaration":486,"src":"1010:25:6"},"id":677,"nodeType":"InheritanceSpecifier","src":"1010:25:6"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"279:648:6","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":801,"linearizedBaseContracts":[801,486,152,162,665],"name":"UUPSUpgradeable","nameLocation":"946:15:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":682,"nodeType":"Block","src":"1102:7:6","statements":[]},"id":683,"implemented":true,"kind":"function","modifiers":[{"id":680,"kind":"modifierInvocation","modifierName":{"id":679,"name":"onlyInitializing","nameLocations":["1085:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1085:16:6"},"nodeType":"ModifierInvocation","src":"1085:16:6"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:6","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"1073:2:6"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"1102:0:6"},"scope":801,"src":"1042:67:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"1185:7:6","statements":[]},"id":689,"implemented":true,"kind":"function","modifiers":[{"id":686,"kind":"modifierInvocation","modifierName":{"id":685,"name":"onlyInitializing","nameLocations":["1168:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1168:16:6"},"nodeType":"ModifierInvocation","src":"1168:16:6"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:6","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"1156:2:6"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"1185:0:6"},"scope":801,"src":"1115:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"1197:87:6","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":696,"mutability":"immutable","name":"__self","nameLocation":"1315:6:6","nodeType":"VariableDeclaration","scope":801,"src":"1289:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":694,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:6","typeDescriptions":{}}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":718,"nodeType":"Block","src":"1863:205:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":702,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:6","typeDescriptions":{}}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":704,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1898:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"1873:80:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1971:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":712,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1995:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"1963:87:6"},{"id":717,"nodeType":"PlaceholderStatement","src":"2060:1:6"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1344:493:6","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":719,"name":"onlyProxy","nameLocation":"1851:9:6","nodeType":"ModifierDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"1860:2:6"},"src":"1842:226:6","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"2298:120:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":725,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:6","typeDescriptions":{}}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":727,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2333:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":731,"nodeType":"ExpressionStatement","src":"2308:92:6"},{"id":732,"nodeType":"PlaceholderStatement","src":"2410:1:6"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"2074:195:6","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":734,"name":"notDelegated","nameLocation":"2283:12:6","nodeType":"ModifierDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"2295:2:6"},"src":"2274:144:6","virtual":false,"visibility":"internal"},{"baseFunctions":[161],"body":{"id":745,"nodeType":"Block","src":"3093:44:6","statements":[{"expression":{"id":743,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"3110:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":742,"id":744,"nodeType":"Return","src":"3103:27:6"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2424:577:6","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":746,"implemented":true,"kind":"function","modifiers":[{"id":739,"kind":"modifierInvocation","modifierName":{"id":738,"name":"notDelegated","nameLocations":["3062:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":734,"src":"3062:12:6"},"nodeType":"ModifierInvocation","src":"3062:12:6"}],"name":"proxiableUUID","nameLocation":"3015:13:6","nodeType":"FunctionDefinition","overrides":{"id":737,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:6"},"parameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"3028:2:6"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"3084:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:6"},"scope":801,"src":"3006:131:6","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":767,"nodeType":"Block","src":"3458:124:6","statements":[{"expression":{"arguments":[{"id":755,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3486:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":754,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3468:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"ExpressionStatement","src":"3468:36:6"},{"expression":{"arguments":[{"id":759,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3536:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3555:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":760,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3569:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":758,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3514:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"3514:61:6"}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"3143:239:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":768,"implemented":true,"kind":"function","modifiers":[{"id":752,"kind":"modifierInvocation","modifierName":{"id":751,"name":"onlyProxy","nameLocations":["3448:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"3448:9:6"},"nodeType":"ModifierInvocation","src":"3448:9:6"}],"name":"upgradeTo","nameLocation":"3396:9:6","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"newImplementation","nameLocation":"3414:17:6","nodeType":"VariableDeclaration","scope":768,"src":"3406:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3405:27:6"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[],"src":"3458:0:6"},"scope":801,"src":"3387:195:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":788,"nodeType":"Block","src":"4006:115:6","statements":[{"expression":{"arguments":[{"id":779,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4034:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"4016:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"4016:36:6"},{"expression":{"arguments":[{"id":783,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4084:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":784,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"4103:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4109:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":782,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"4062:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"ExpressionStatement","src":"4062:52:6"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"3588:308:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":789,"implemented":true,"kind":"function","modifiers":[{"id":776,"kind":"modifierInvocation","modifierName":{"id":775,"name":"onlyProxy","nameLocations":["3996:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"3996:9:6"},"nodeType":"ModifierInvocation","src":"3996:9:6"}],"name":"upgradeToAndCall","nameLocation":"3910:16:6","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"newImplementation","nameLocation":"3935:17:6","nodeType":"VariableDeclaration","scope":789,"src":"3927:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"data","nameLocation":"3967:4:6","nodeType":"VariableDeclaration","scope":789,"src":"3954:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3926:46:6"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"4006:0:6"},"scope":801,"src":"3901:220:6","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"4127:397:6","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":795,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4538:17:6","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"newImplementation","nameLocation":"4564:17:6","nodeType":"VariableDeclaration","scope":795,"src":"4556:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4555:27:6"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"4599:0:6"},"scope":801,"src":"4529:71:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"4606:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":800,"mutability":"mutable","name":"__gap","nameLocation":"4885:5:6","nodeType":"VariableDeclaration","scope":801,"src":"4865:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"length":{"hexValue":"3530","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4865:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":802,"src":"928:3965:6","usedErrors":[]}],"src":"115:4779:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2322],"ContextUpgradeable":[2364],"ERC20Upgradeable":[1413],"IERC20MetadataUpgradeable":[1580],"IERC20Upgradeable":[1491],"Initializable":[665]},"id":1414,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":803,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":1492,"src":"130:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":1581,"src":"164:52:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":2365,"src":"217:44:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1414,"sourceUnit":666,"src":"262:45:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":809,"name":"Initializable","nameLocations":["1640:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"1640:13:7"},"id":810,"nodeType":"InheritanceSpecifier","src":"1640:13:7"},{"baseName":{"id":811,"name":"ContextUpgradeable","nameLocations":["1655:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"1655:18:7"},"id":812,"nodeType":"InheritanceSpecifier","src":"1655:18:7"},{"baseName":{"id":813,"name":"IERC20Upgradeable","nameLocations":["1675:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"1675:17:7"},"id":814,"nodeType":"InheritanceSpecifier","src":"1675:17:7"},{"baseName":{"id":815,"name":"IERC20MetadataUpgradeable","nameLocations":["1694:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":1580,"src":"1694:25:7"},"id":816,"nodeType":"InheritanceSpecifier","src":"1694:25:7"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"309:1301:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1413,"linearizedBaseContracts":[1413,1580,1491,2364,665],"name":"ERC20Upgradeable","nameLocation":"1620:16:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":820,"mutability":"mutable","name":"_balances","nameLocation":"1762:9:7","nodeType":"VariableDeclaration","scope":1413,"src":"1726:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":819,"keyType":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"1734:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1726:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1745:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":826,"mutability":"mutable","name":"_allowances","nameLocation":"1834:11:7","nodeType":"VariableDeclaration","scope":1413,"src":"1778:67:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":825,"keyType":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"1786:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1778:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":824,"keyType":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"1805:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1797:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":828,"mutability":"mutable","name":"_totalSupply","nameLocation":"1868:12:7","nodeType":"VariableDeclaration","scope":1413,"src":"1852:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"1852:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":830,"mutability":"mutable","name":"_name","nameLocation":"1902:5:7","nodeType":"VariableDeclaration","scope":1413,"src":"1887:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":829,"name":"string","nodeType":"ElementaryTypeName","src":"1887:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":832,"mutability":"mutable","name":"_symbol","nameLocation":"1928:7:7","nodeType":"VariableDeclaration","scope":1413,"src":"1913:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":831,"name":"string","nodeType":"ElementaryTypeName","src":"1913:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":847,"nodeType":"Block","src":"2210:55:7","statements":[{"expression":{"arguments":[{"id":843,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"2243:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":844,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2250:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":842,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2220:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2220:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"2220:38:7"}]},"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"1942:171:7","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":848,"implemented":true,"kind":"function","modifiers":[{"id":840,"kind":"modifierInvocation","modifierName":{"id":839,"name":"onlyInitializing","nameLocations":["2193:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"2193:16:7"},"nodeType":"ModifierInvocation","src":"2193:16:7"}],"name":"__ERC20_init","nameLocation":"2127:12:7","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"name_","nameLocation":"2154:5:7","nodeType":"VariableDeclaration","scope":848,"src":"2140:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":834,"name":"string","nodeType":"ElementaryTypeName","src":"2140:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"symbol_","nameLocation":"2175:7:7","nodeType":"VariableDeclaration","scope":848,"src":"2161:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":836,"name":"string","nodeType":"ElementaryTypeName","src":"2161:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2139:44:7"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"2210:0:7"},"scope":1413,"src":"2118:147:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":865,"nodeType":"Block","src":"2373:57:7","statements":[{"expression":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":857,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2383:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":858,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2391:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2383:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":860,"nodeType":"ExpressionStatement","src":"2383:13:7"},{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":861,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2406:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":862,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"2416:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2406:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":864,"nodeType":"ExpressionStatement","src":"2406:17:7"}]},"id":866,"implemented":true,"kind":"function","modifiers":[{"id":855,"kind":"modifierInvocation","modifierName":{"id":854,"name":"onlyInitializing","nameLocations":["2356:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"2356:16:7"},"nodeType":"ModifierInvocation","src":"2356:16:7"}],"name":"__ERC20_init_unchained","nameLocation":"2280:22:7","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"name_","nameLocation":"2317:5:7","nodeType":"VariableDeclaration","scope":866,"src":"2303:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":849,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"symbol_","nameLocation":"2338:7:7","nodeType":"VariableDeclaration","scope":866,"src":"2324:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":851,"name":"string","nodeType":"ElementaryTypeName","src":"2324:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:44:7"},"returnParameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"2373:0:7"},"scope":1413,"src":"2271:159:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1567],"body":{"id":875,"nodeType":"Block","src":"2564:29:7","statements":[{"expression":{"id":873,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2581:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":872,"id":874,"nodeType":"Return","src":"2574:12:7"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"2436:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":876,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2504:4:7","nodeType":"FunctionDefinition","overrides":{"id":869,"nodeType":"OverrideSpecifier","overrides":[],"src":"2531:8:7"},"parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"2508:2:7"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2549:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":870,"name":"string","nodeType":"ElementaryTypeName","src":"2549:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2548:15:7"},"scope":1413,"src":"2495:98:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1573],"body":{"id":885,"nodeType":"Block","src":"2777:31:7","statements":[{"expression":{"id":883,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"2794:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":882,"id":884,"nodeType":"Return","src":"2787:14:7"}]},"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"2599:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":886,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2715:6:7","nodeType":"FunctionDefinition","overrides":{"id":879,"nodeType":"OverrideSpecifier","overrides":[],"src":"2744:8:7"},"parameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"2721:2:7"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"2762:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":880,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:15:7"},"scope":1413,"src":"2706:102:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1579],"body":{"id":895,"nodeType":"Block","src":"3506:26:7","statements":[{"expression":{"hexValue":"3138","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3523:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":892,"id":894,"nodeType":"Return","src":"3516:9:7"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"2814:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":896,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3450:8:7","nodeType":"FunctionDefinition","overrides":{"id":889,"nodeType":"OverrideSpecifier","overrides":[],"src":"3481:8:7"},"parameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"3458:2:7"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"3499:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":890,"name":"uint8","nodeType":"ElementaryTypeName","src":"3499:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3498:7:7"},"scope":1413,"src":"3441:91:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1440],"body":{"id":905,"nodeType":"Block","src":"3662:36:7","statements":[{"expression":{"id":903,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"3679:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":902,"id":904,"nodeType":"Return","src":"3672:19:7"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"3538:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":906,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3601:11:7","nodeType":"FunctionDefinition","overrides":{"id":899,"nodeType":"OverrideSpecifier","overrides":[],"src":"3635:8:7"},"parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"3612:2:7"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"3653:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3652:9:7"},"scope":1413,"src":"3592:106:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1448],"body":{"id":919,"nodeType":"Block","src":"3839:42:7","statements":[{"expression":{"baseExpression":{"id":915,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3856:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":917,"indexExpression":{"id":916,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"3866:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3856:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":914,"id":918,"nodeType":"Return","src":"3849:25:7"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"3704:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":920,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3765:9:7","nodeType":"FunctionDefinition","overrides":{"id":911,"nodeType":"OverrideSpecifier","overrides":[],"src":"3812:8:7"},"parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"account","nameLocation":"3783:7:7","nodeType":"VariableDeclaration","scope":920,"src":"3775:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"3775:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3774:17:7"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"3830:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3829:9:7"},"scope":1413,"src":"3756:125:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1458],"body":{"id":944,"nodeType":"Block","src":"4162:104:7","statements":[{"assignments":[932],"declarations":[{"constant":false,"id":932,"mutability":"mutable","name":"owner","nameLocation":"4180:5:7","nodeType":"VariableDeclaration","scope":944,"src":"4172:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"4172:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":935,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":933,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"4188:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4172:28:7"},{"expression":{"arguments":[{"id":937,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"4220:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4227:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4231:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":936,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"4210:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4210:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"4210:28:7"},{"expression":{"hexValue":"74727565","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4255:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":930,"id":943,"nodeType":"Return","src":"4248:11:7"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"3887:185:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":945,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4086:8:7","nodeType":"FunctionDefinition","overrides":{"id":927,"nodeType":"OverrideSpecifier","overrides":[],"src":"4138:8:7"},"parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"to","nameLocation":"4103:2:7","nodeType":"VariableDeclaration","scope":945,"src":"4095:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"4095:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"amount","nameLocation":"4115:6:7","nodeType":"VariableDeclaration","scope":945,"src":"4107:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4107:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4094:28:7"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":945,"src":"4156:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":928,"name":"bool","nodeType":"ElementaryTypeName","src":"4156:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4155:6:7"},"scope":1413,"src":"4077:189:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1468],"body":{"id":962,"nodeType":"Block","src":"4422:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":956,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"4439:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":958,"indexExpression":{"id":957,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4451:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4439:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":960,"indexExpression":{"id":959,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4458:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4439:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":955,"id":961,"nodeType":"Return","src":"4432:34:7"}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"4272:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":963,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4333:9:7","nodeType":"FunctionDefinition","overrides":{"id":952,"nodeType":"OverrideSpecifier","overrides":[],"src":"4395:8:7"},"parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"owner","nameLocation":"4351:5:7","nodeType":"VariableDeclaration","scope":963,"src":"4343:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"4343:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"spender","nameLocation":"4366:7:7","nodeType":"VariableDeclaration","scope":963,"src":"4358:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"4358:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4342:32:7"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":963,"src":"4413:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"4413:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4412:9:7"},"scope":1413,"src":"4324:149:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1478],"body":{"id":987,"nodeType":"Block","src":"4870:108:7","statements":[{"assignments":[975],"declarations":[{"constant":false,"id":975,"mutability":"mutable","name":"owner","nameLocation":"4888:5:7","nodeType":"VariableDeclaration","scope":987,"src":"4880:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"4880:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":978,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":976,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"4896:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4896:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4880:28:7"},{"expression":{"arguments":[{"id":980,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"4927:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":981,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4934:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"4943:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":979,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"4918:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4918:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":984,"nodeType":"ExpressionStatement","src":"4918:32:7"},{"expression":{"hexValue":"74727565","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4967:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":973,"id":986,"nodeType":"Return","src":"4960:11:7"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"4479:297:7","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":988,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4790:7:7","nodeType":"FunctionDefinition","overrides":{"id":970,"nodeType":"OverrideSpecifier","overrides":[],"src":"4846:8:7"},"parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"spender","nameLocation":"4806:7:7","nodeType":"VariableDeclaration","scope":988,"src":"4798:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"amount","nameLocation":"4823:6:7","nodeType":"VariableDeclaration","scope":988,"src":"4815:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:33:7"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"4864:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":971,"name":"bool","nodeType":"ElementaryTypeName","src":"4864:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4863:6:7"},"scope":1413,"src":"4781:197:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1490],"body":{"id":1020,"nodeType":"Block","src":"5643:153:7","statements":[{"assignments":[1002],"declarations":[{"constant":false,"id":1002,"mutability":"mutable","name":"spender","nameLocation":"5661:7:7","nodeType":"VariableDeclaration","scope":1020,"src":"5653:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"5653:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1005,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1003,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"5671:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5653:30:7"},{"expression":{"arguments":[{"id":1007,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5709:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5715:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1009,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5724:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1006,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"5693:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5693:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"5693:38:7"},{"expression":{"arguments":[{"id":1013,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5751:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"5757:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1015,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5761:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1012,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"5741:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"ExpressionStatement","src":"5741:27:7"},{"expression":{"hexValue":"74727565","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5785:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1000,"id":1019,"nodeType":"Return","src":"5778:11:7"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"4984:551:7","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1021,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5549:12:7","nodeType":"FunctionDefinition","overrides":{"id":997,"nodeType":"OverrideSpecifier","overrides":[],"src":"5619:8:7"},"parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"from","nameLocation":"5570:4:7","nodeType":"VariableDeclaration","scope":1021,"src":"5562:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"5562:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"to","nameLocation":"5584:2:7","nodeType":"VariableDeclaration","scope":1021,"src":"5576:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"5576:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"amount","nameLocation":"5596:6:7","nodeType":"VariableDeclaration","scope":1021,"src":"5588:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"5588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5561:42:7"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1021,"src":"5637:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":998,"name":"bool","nodeType":"ElementaryTypeName","src":"5637:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5636:6:7"},"scope":1413,"src":"5540:256:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1049,"nodeType":"Block","src":"6285:140:7","statements":[{"assignments":[1032],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"owner","nameLocation":"6303:5:7","nodeType":"VariableDeclaration","scope":1049,"src":"6295:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"6295:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1035,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1033,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"6311:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6311:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6295:28:7"},{"expression":{"arguments":[{"id":1037,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6342:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"6349:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1040,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6368:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"6375:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1039,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"6358:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1043,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6386:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6358:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1036,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"6333:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1046,"nodeType":"ExpressionStatement","src":"6333:64:7"},{"expression":{"hexValue":"74727565","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6414:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1030,"id":1048,"nodeType":"Return","src":"6407:11:7"}]},"documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"5802:384:7","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6200:17:7","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"spender","nameLocation":"6226:7:7","nodeType":"VariableDeclaration","scope":1050,"src":"6218:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"6218:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"addedValue","nameLocation":"6243:10:7","nodeType":"VariableDeclaration","scope":1050,"src":"6235:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"6235:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6217:37:7"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"6279:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1028,"name":"bool","nodeType":"ElementaryTypeName","src":"6279:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6278:6:7"},"scope":1413,"src":"6191:234:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1090,"nodeType":"Block","src":"7011:328:7","statements":[{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"owner","nameLocation":"7029:5:7","nodeType":"VariableDeclaration","scope":1090,"src":"7021:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"7021:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1064,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1062,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"7037:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7037:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7021:28:7"},{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"currentAllowance","nameLocation":"7067:16:7","nodeType":"VariableDeclaration","scope":1090,"src":"7059:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"7059:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1071,"initialValue":{"arguments":[{"id":1068,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7096:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"7103:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1067,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"7086:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7059:52:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"7129:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1074,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"7149:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7129:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7166:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7121:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7121:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"7121:85:7"},{"id":1087,"nodeType":"UncheckedBlock","src":"7216:95:7","statements":[{"expression":{"arguments":[{"id":1080,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7249:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1081,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"7256:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"7265:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1083,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"7284:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7265:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1079,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"7240:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7240:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"ExpressionStatement","src":"7240:60:7"}]},{"expression":{"hexValue":"74727565","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7328:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1059,"id":1089,"nodeType":"Return","src":"7321:11:7"}]},"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"6431:476:7","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6921:17:7","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"spender","nameLocation":"6947:7:7","nodeType":"VariableDeclaration","scope":1091,"src":"6939:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"6939:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"subtractedValue","nameLocation":"6964:15:7","nodeType":"VariableDeclaration","scope":1091,"src":"6956:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"6956:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6938:42:7"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"7005:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1057,"name":"bool","nodeType":"ElementaryTypeName","src":"7005:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7004:6:7"},"scope":1413,"src":"6912:427:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1167,"nodeType":"Block","src":"7871:710:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"7889:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7905:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7897:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:7","typeDescriptions":{}}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7897:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7889:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7909:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7881:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"7881:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"7967:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7981:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7973:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"7973:7:7","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7973:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7967:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7985:37:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7959:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"7959:64:7"},{"expression":{"arguments":[{"id":1122,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8055:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8061:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8065:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1121,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"8034:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8034:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"8034:38:7"},{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"fromBalance","nameLocation":"8091:11:7","nodeType":"VariableDeclaration","scope":1167,"src":"8083:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"8083:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1132,"initialValue":{"baseExpression":{"id":1129,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8105:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1131,"indexExpression":{"id":1130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8115:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8105:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8083:37:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8138:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1135,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8153:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8138:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8161:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8130:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8130:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"8130:72:7"},{"id":1154,"nodeType":"UncheckedBlock","src":"8212:273:7","statements":[{"expression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1140,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8236:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1142,"indexExpression":{"id":1141,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8246:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8236:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"8254:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1144,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8268:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8254:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8236:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1147,"nodeType":"ExpressionStatement","src":"8236:38:7"},{"expression":{"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1148,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"8451:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1150,"indexExpression":{"id":1149,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8461:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8451:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1151,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8468:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8451:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ExpressionStatement","src":"8451:23:7"}]},{"eventCall":{"arguments":[{"id":1156,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8509:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8515:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8519:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1155,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"8500:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8500:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"EmitStatement","src":"8495:31:7"},{"expression":{"arguments":[{"id":1162,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8557:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1163,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8563:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8567:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1161,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"8537:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8537:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"ExpressionStatement","src":"8537:37:7"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"7345:443:7","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1168,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7802:9:7","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"from","nameLocation":"7820:4:7","nodeType":"VariableDeclaration","scope":1168,"src":"7812:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"7812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"to","nameLocation":"7834:2:7","nodeType":"VariableDeclaration","scope":1168,"src":"7826:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"7826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"amount","nameLocation":"7846:6:7","nodeType":"VariableDeclaration","scope":1168,"src":"7838:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"7838:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7811:42:7"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"7871:0:7"},"scope":1413,"src":"7793:788:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1224,"nodeType":"Block","src":"8922:470:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"8940:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8959:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8951:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"8951:7:7","typeDescriptions":{}}},"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8951:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8940:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8963:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8932:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8932:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"ExpressionStatement","src":"8932:65:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9029:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"9029:7:7","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"9041:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9050:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1186,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9008:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"ExpressionStatement","src":"9008:49:7"},{"expression":{"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1195,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"9068:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1196,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9084:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9068:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1198,"nodeType":"ExpressionStatement","src":"9068:22:7"},{"id":1205,"nodeType":"UncheckedBlock","src":"9100:175:7","statements":[{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1199,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9236:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1201,"indexExpression":{"id":1200,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"9246:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9236:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1202,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9258:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9236:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ExpressionStatement","src":"9236:28:7"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9306:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9298:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"9298:7:7","typeDescriptions":{}}},"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9298:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1211,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"9310:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9319:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1206,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"9289:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9289:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1214,"nodeType":"EmitStatement","src":"9284:42:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9365:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"9357:7:7","typeDescriptions":{}}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9357:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"9369:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1221,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"9378:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1215,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"9337:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9337:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"9337:48:7"}]},"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"8587:265:7","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8866:5:7","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"account","nameLocation":"8880:7:7","nodeType":"VariableDeclaration","scope":1225,"src":"8872:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"amount","nameLocation":"8897:6:7","nodeType":"VariableDeclaration","scope":1225,"src":"8889:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"8889:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8871:33:7"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[],"src":"8922:0:7"},"scope":1413,"src":"8857:535:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1296,"nodeType":"Block","src":"9777:594:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"9795:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9814:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9806:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"9806:7:7","typeDescriptions":{}}},"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9806:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9795:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9818:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9787:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9787:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1242,"nodeType":"ExpressionStatement","src":"9787:67:7"},{"expression":{"arguments":[{"id":1244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"9886:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9903:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9895:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"9895:7:7","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9895:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9907:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"9865:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9865:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1251,"nodeType":"ExpressionStatement","src":"9865:49:7"},{"assignments":[1253],"declarations":[{"constant":false,"id":1253,"mutability":"mutable","name":"accountBalance","nameLocation":"9933:14:7","nodeType":"VariableDeclaration","scope":1296,"src":"9925:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"9925:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1257,"initialValue":{"baseExpression":{"id":1254,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9950:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1256,"indexExpression":{"id":1255,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"9960:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9950:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9925:43:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"9986:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1260,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"10004:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10012:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9978:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"9978:71:7"},{"id":1277,"nodeType":"UncheckedBlock","src":"10059:194:7","statements":[{"expression":{"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1265,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10083:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1267,"indexExpression":{"id":1266,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"10093:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10083:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"10104:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1269,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"10121:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10104:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10083:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ExpressionStatement","src":"10083:44:7"},{"expression":{"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1273,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"10220:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1274,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"10236:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10220:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1276,"nodeType":"ExpressionStatement","src":"10220:22:7"}]},{"eventCall":{"arguments":[{"id":1279,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"10277:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10294:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"10286:7:7","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"10298:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1278,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"10268:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10268:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"EmitStatement","src":"10263:42:7"},{"expression":{"arguments":[{"id":1288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"10336:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10353:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10345:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"10345:7:7","typeDescriptions":{}}},"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10345:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"10357:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1287,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"10316:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10316:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"10316:48:7"}]},"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"9398:309:7","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9721:5:7","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"account","nameLocation":"9735:7:7","nodeType":"VariableDeclaration","scope":1297,"src":"9727:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"9727:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"amount","nameLocation":"9752:6:7","nodeType":"VariableDeclaration","scope":1297,"src":"9744:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"9744:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9726:33:7"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[],"src":"9777:0:7"},"scope":1413,"src":"9712:659:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1341,"nodeType":"Block","src":"10877:257:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"10895:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10912:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10904:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"10904:7:7","typeDescriptions":{}}},"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10904:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10895:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10916:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10887:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10887:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1316,"nodeType":"ExpressionStatement","src":"10887:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1318,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"10973:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10992:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10984:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"10984:7:7","typeDescriptions":{}}},"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10984:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10973:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10996:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10965:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10965:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1326,"nodeType":"ExpressionStatement","src":"10965:68:7"},{"expression":{"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1327,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"11044:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1330,"indexExpression":{"id":1328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"11056:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11044:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1331,"indexExpression":{"id":1329,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"11063:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11044:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1332,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"11074:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11044:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1334,"nodeType":"ExpressionStatement","src":"11044:36:7"},{"eventCall":{"arguments":[{"id":1336,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"11104:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1337,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"11111:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1338,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"11120:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1335,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"11095:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11095:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"EmitStatement","src":"11090:37:7"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"10377:412:7","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1342,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10803:8:7","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"owner","nameLocation":"10820:5:7","nodeType":"VariableDeclaration","scope":1342,"src":"10812:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"10812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"spender","nameLocation":"10835:7:7","nodeType":"VariableDeclaration","scope":1342,"src":"10827:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"10827:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"amount","nameLocation":"10852:6:7","nodeType":"VariableDeclaration","scope":1342,"src":"10844:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"10844:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10811:48:7"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"10877:0:7"},"scope":1413,"src":"10794:340:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1384,"nodeType":"Block","src":"11505:321:7","statements":[{"assignments":[1353],"declarations":[{"constant":false,"id":1353,"mutability":"mutable","name":"currentAllowance","nameLocation":"11523:16:7","nodeType":"VariableDeclaration","scope":1384,"src":"11515:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"11515:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1358,"initialValue":{"arguments":[{"id":1355,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"11552:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"11559:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1354,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"11542:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11542:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11515:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11581:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11606:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"11606:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1360,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11601:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11601:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11615:3:7","memberName":"max","nodeType":"MemberAccess","src":"11601:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11581:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1383,"nodeType":"IfStatement","src":"11577:243:7","trueBody":{"id":1382,"nodeType":"Block","src":"11620:200:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11642:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"11662:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11642:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11670:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1366,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11634:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11634:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"ExpressionStatement","src":"11634:68:7"},{"id":1381,"nodeType":"UncheckedBlock","src":"11716:94:7","statements":[{"expression":{"arguments":[{"id":1374,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"11753:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"11760:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1376,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11769:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1377,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"11788:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11769:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1373,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"11744:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11744:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"11744:51:7"}]}]}}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"11140:270:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11424:15:7","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"owner","nameLocation":"11448:5:7","nodeType":"VariableDeclaration","scope":1385,"src":"11440:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"11440:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"spender","nameLocation":"11463:7:7","nodeType":"VariableDeclaration","scope":1385,"src":"11455:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"11455:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"amount","nameLocation":"11480:6:7","nodeType":"VariableDeclaration","scope":1385,"src":"11472:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"11472:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11439:48:7"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[],"src":"11505:0:7"},"scope":1413,"src":"11415:411:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1395,"nodeType":"Block","src":"12499:2:7","statements":[]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"11832:573:7","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12419:20:7","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"from","nameLocation":"12448:4:7","nodeType":"VariableDeclaration","scope":1396,"src":"12440:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"12440:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"to","nameLocation":"12462:2:7","nodeType":"VariableDeclaration","scope":1396,"src":"12454:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"12454:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"amount","nameLocation":"12474:6:7","nodeType":"VariableDeclaration","scope":1396,"src":"12466:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"12466:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12439:42:7"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"12499:0:7"},"scope":1413,"src":"12410:91:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1406,"nodeType":"Block","src":"13177:2:7","statements":[]},"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"12507:577:7","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13098:19:7","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"from","nameLocation":"13126:4:7","nodeType":"VariableDeclaration","scope":1407,"src":"13118:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"13118:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"to","nameLocation":"13140:2:7","nodeType":"VariableDeclaration","scope":1407,"src":"13132:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"13132:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"amount","nameLocation":"13152:6:7","nodeType":"VariableDeclaration","scope":1407,"src":"13144:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"13144:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13117:42:7"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"13177:0:7"},"scope":1413,"src":"13089:90:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"13185:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1412,"mutability":"mutable","name":"__gap","nameLocation":"13464:5:7","nodeType":"VariableDeclaration","scope":1413,"src":"13444:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"13444:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1411,"length":{"hexValue":"3435","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13444:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":1414,"src":"1611:11861:7","usedErrors":[]}],"src":"105:13368:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[1491]},"id":1492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1415,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1491,"linearizedBaseContracts":[1491],"name":"IERC20Upgradeable","nameLocation":"212:17:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"236:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1425,"name":"Transfer","nameLocation":"405:8:8","nodeType":"EventDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:8","nodeType":"VariableDeclaration","scope":1425,"src":"414:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1421,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:8","nodeType":"VariableDeclaration","scope":1425,"src":"436:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1423,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:8","nodeType":"VariableDeclaration","scope":1425,"src":"456:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:8"},"src":"399:72:8"},{"anonymous":false,"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"477:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1434,"name":"Approval","nameLocation":"636:8:8","nodeType":"EventDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:8","nodeType":"VariableDeclaration","scope":1434,"src":"645:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1430,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:8","nodeType":"VariableDeclaration","scope":1434,"src":"668:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1432,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:8","nodeType":"VariableDeclaration","scope":1434,"src":"693:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:8"},"src":"630:78:8"},{"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"714:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1440,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:8","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"805:2:8"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1440,"src":"831:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:8"},"scope":1491,"src":"785:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"846:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1448,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:8","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"account","nameLocation":"950:7:8","nodeType":"VariableDeclaration","scope":1448,"src":"942:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:8"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1448,"src":"982:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:8"},"scope":1491,"src":"923:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"997:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1458,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:8","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"to","nameLocation":"1230:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"1222:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"amount","nameLocation":"1242:6:8","nodeType":"VariableDeclaration","scope":1458,"src":"1234:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:8"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"1268:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1455,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:8"},"scope":1491,"src":"1204:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"1280:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1468,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"owner","nameLocation":"1576:5:8","nodeType":"VariableDeclaration","scope":1468,"src":"1568:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"spender","nameLocation":"1591:7:8","nodeType":"VariableDeclaration","scope":1468,"src":"1583:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:8"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"1623:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:8"},"scope":1491,"src":"1549:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"1638:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1478,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:8","nodeType":"FunctionDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"spender","nameLocation":"2310:7:8","nodeType":"VariableDeclaration","scope":1478,"src":"2302:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"amount","nameLocation":"2327:6:8","nodeType":"VariableDeclaration","scope":1478,"src":"2319:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:8"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"2353:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1475,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:8"},"scope":1491,"src":"2285:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"2365:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1490,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:8","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"from","nameLocation":"2687:4:8","nodeType":"VariableDeclaration","scope":1490,"src":"2679:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"to","nameLocation":"2701:2:8","nodeType":"VariableDeclaration","scope":1490,"src":"2693:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"amount","nameLocation":"2713:6:8","nodeType":"VariableDeclaration","scope":1490,"src":"2705:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:42:8"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"2739:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1487,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:8"},"scope":1491,"src":"2657:88:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1492,"src":"202:2545:8","usedErrors":[]}],"src":"106:2642:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2322],"ContextUpgradeable":[2364],"ERC20BurnableUpgradeable":[1555],"ERC20Upgradeable":[1413],"IERC20MetadataUpgradeable":[1580],"IERC20Upgradeable":[1491],"Initializable":[665]},"id":1556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1493,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1556,"sourceUnit":1414,"src":"149:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":1495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1556,"sourceUnit":2365,"src":"183:47:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1556,"sourceUnit":666,"src":"231:48:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1498,"name":"Initializable","nameLocations":["536:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"536:13:9"},"id":1499,"nodeType":"InheritanceSpecifier","src":"536:13:9"},{"baseName":{"id":1500,"name":"ContextUpgradeable","nameLocations":["551:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"551:18:9"},"id":1501,"nodeType":"InheritanceSpecifier","src":"551:18:9"},{"baseName":{"id":1502,"name":"ERC20Upgradeable","nameLocations":["571:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"571:16:9"},"id":1503,"nodeType":"InheritanceSpecifier","src":"571:16:9"}],"canonicalName":"ERC20BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"281:208:9","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1555,"linearizedBaseContracts":[1555,1413,1580,1491,2364,665],"name":"ERC20BurnableUpgradeable","nameLocation":"508:24:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1508,"nodeType":"Block","src":"652:7:9","statements":[]},"id":1509,"implemented":true,"kind":"function","modifiers":[{"id":1506,"kind":"modifierInvocation","modifierName":{"id":1505,"name":"onlyInitializing","nameLocations":["635:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"635:16:9"},"nodeType":"ModifierInvocation","src":"635:16:9"}],"name":"__ERC20Burnable_init","nameLocation":"603:20:9","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"623:2:9"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"652:0:9"},"scope":1555,"src":"594:65:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1514,"nodeType":"Block","src":"733:7:9","statements":[]},"id":1515,"implemented":true,"kind":"function","modifiers":[{"id":1512,"kind":"modifierInvocation","modifierName":{"id":1511,"name":"onlyInitializing","nameLocations":["716:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"716:16:9"},"nodeType":"ModifierInvocation","src":"716:16:9"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"674:30:9","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"704:2:9"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"733:0:9"},"scope":1555,"src":"665:75:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1527,"nodeType":"Block","src":"893:44:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1522,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"909:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1524,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"923:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1521,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"903:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1526,"nodeType":"ExpressionStatement","src":"903:27:9"}]},"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"745:98:9","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"857:4:9","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"amount","nameLocation":"870:6:9","nodeType":"VariableDeclaration","scope":1528,"src":"862:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"861:16:9"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"893:0:9"},"scope":1555,"src":"848:89:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1548,"nodeType":"Block","src":"1309:95:9","statements":[{"expression":{"arguments":[{"id":1537,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"1335:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1538,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1344:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1344:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1358:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"1319:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1319:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"ExpressionStatement","src":"1319:46:9"},{"expression":{"arguments":[{"id":1544,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"1381:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1390:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1543,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"1375:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1547,"nodeType":"ExpressionStatement","src":"1375:22:9"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"943:295:9","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1252:8:9","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"account","nameLocation":"1269:7:9","nodeType":"VariableDeclaration","scope":1549,"src":"1261:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"amount","nameLocation":"1286:6:9","nodeType":"VariableDeclaration","scope":1549,"src":"1278:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1260:33:9"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[],"src":"1309:0:9"},"scope":1555,"src":"1243:161:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"1410:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1554,"mutability":"mutable","name":"__gap","nameLocation":"1689:5:9","nodeType":"VariableDeclaration","scope":1555,"src":"1669:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1669:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"length":{"hexValue":"3530","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1669:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1556,"src":"490:1207:9","usedErrors":[]}],"src":"124:1574:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[1580],"IERC20Upgradeable":[1491]},"id":1581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1557,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":1558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":1492,"src":"135:34:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1560,"name":"IERC20Upgradeable","nameLocations":["327:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"327:17:10"},"id":1561,"nodeType":"InheritanceSpecifier","src":"327:17:10"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"171:116:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1580,"linearizedBaseContracts":[1580,1491],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"351:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1567,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:10","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[],"src":"423:2:10"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"449:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1564,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:10"},"scope":1580,"src":"410:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"470:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1573,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:10","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[],"src":"546:2:10"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1573,"src":"572:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:10"},"scope":1580,"src":"531:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"593:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1579,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:10","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"680:2:10"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"706:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1576,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:10"},"scope":1580,"src":"663:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1581,"src":"288:427:10","usedErrors":[]}],"src":"110:606:10"},"id":10},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[1616]},"id":1617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1582,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"148:480:11","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1616,"linearizedBaseContracts":[1616],"name":"IERC20PermitUpgradeable","nameLocation":"639:23:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"669:792:11","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1601,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1475:6:11","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"owner","nameLocation":"1499:5:11","nodeType":"VariableDeclaration","scope":1601,"src":"1491:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"spender","nameLocation":"1522:7:11","nodeType":"VariableDeclaration","scope":1601,"src":"1514:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"1514:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"value","nameLocation":"1547:5:11","nodeType":"VariableDeclaration","scope":1601,"src":"1539:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"deadline","nameLocation":"1570:8:11","nodeType":"VariableDeclaration","scope":1601,"src":"1562:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1562:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"v","nameLocation":"1594:1:11","nodeType":"VariableDeclaration","scope":1601,"src":"1588:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1593,"name":"uint8","nodeType":"ElementaryTypeName","src":"1588:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"r","nameLocation":"1613:1:11","nodeType":"VariableDeclaration","scope":1601,"src":"1605:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1605:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"s","nameLocation":"1632:1:11","nodeType":"VariableDeclaration","scope":1601,"src":"1624:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1624:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1481:158:11"},"returnParameters":{"id":1600,"nodeType":"ParameterList","parameters":[],"src":"1648:0:11"},"scope":1616,"src":"1466:183:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"1655:294:11","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1609,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1963:6:11","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"owner","nameLocation":"1978:5:11","nodeType":"VariableDeclaration","scope":1609,"src":"1970:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1969:15:11"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1609,"src":"2008:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:9:11"},"scope":1616,"src":"1954:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"2023:128:11","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1615,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2218:16:11","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"2234:2:11"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"2260:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2260:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2259:9:11"},"scope":1616,"src":"2209:60:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1617,"src":"629:1642:11","usedErrors":[]}],"src":"123:2149:11"},"id":11},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2322],"IERC20PermitUpgradeable":[1616],"IERC20Upgradeable":[1491],"SafeERC20Upgradeable":[1992]},"id":1993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1618,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":1619,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1993,"sourceUnit":1492,"src":"140:34:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","file":"../extensions/IERC20PermitUpgradeable.sol","id":1620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1993,"sourceUnit":1617,"src":"175:51:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../../utils/AddressUpgradeable.sol","id":1621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1993,"sourceUnit":2323,"src":"227:47:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20Upgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"276:457:12","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1992,"linearizedBaseContracts":[1992],"name":"SafeERC20Upgradeable","nameLocation":"742:20:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1625,"libraryName":{"id":1623,"name":"AddressUpgradeable","nameLocations":["775:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":2322,"src":"775:18:12"},"nodeType":"UsingForDirective","src":"769:37:12","typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1648,"nodeType":"Block","src":"1079:103:12","statements":[{"expression":{"arguments":[{"id":1637,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1109:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1640,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1139:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1145:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1458,"src":"1139:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1154:8:12","memberName":"selector","nodeType":"MemberAccess","src":"1139:23:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"1164:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"1168:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1638,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1116:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1120:18:12","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1116:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1636,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1089:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1491_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1089:86:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1647,"nodeType":"ExpressionStatement","src":"1089:86:12"}]},"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"812:179:12","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1649,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1005:12:12","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"token","nameLocation":"1036:5:12","nodeType":"VariableDeclaration","scope":1649,"src":"1018:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1628,"nodeType":"UserDefinedTypeName","pathNode":{"id":1627,"name":"IERC20Upgradeable","nameLocations":["1018:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"1018:17:12"},"referencedDeclaration":1491,"src":"1018:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"to","nameLocation":"1051:2:12","nodeType":"VariableDeclaration","scope":1649,"src":"1043:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"value","nameLocation":"1063:5:12","nodeType":"VariableDeclaration","scope":1649,"src":"1055:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:52:12"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"1079:0:12"},"scope":1992,"src":"996:186:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1675,"nodeType":"Block","src":"1522:113:12","statements":[{"expression":{"arguments":[{"id":1663,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"1552:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1666,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"1582:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1588:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1490,"src":"1582:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1601:8:12","memberName":"selector","nodeType":"MemberAccess","src":"1582:27:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1669,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"1611:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1670,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"1617:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"1621:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1664,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1559:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1563:18:12","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1559:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1559:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1662,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1532:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1491_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"ExpressionStatement","src":"1532:96:12"}]},"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"1188:228:12","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1430:16:12","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"token","nameLocation":"1465:5:12","nodeType":"VariableDeclaration","scope":1676,"src":"1447:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1652,"nodeType":"UserDefinedTypeName","pathNode":{"id":1651,"name":"IERC20Upgradeable","nameLocations":["1447:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"1447:17:12"},"referencedDeclaration":1491,"src":"1447:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"from","nameLocation":"1480:4:12","nodeType":"VariableDeclaration","scope":1676,"src":"1472:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"to","nameLocation":"1494:2:12","nodeType":"VariableDeclaration","scope":1676,"src":"1486:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"value","nameLocation":"1506:5:12","nodeType":"VariableDeclaration","scope":1676,"src":"1498:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1446:66:12"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"1522:0:12"},"scope":1992,"src":"1421:214:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1719,"nodeType":"Block","src":"1982:497:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2231:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2240:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2231:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2230:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1696,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2271:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1992","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1992","typeString":"library SafeERC20Upgradeable"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2263:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"2263:7:12","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"2278:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1692,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2247:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2253:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1468,"src":"2247:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2290:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2247:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2246:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2230:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2306:56:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":1687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2209:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:163:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1706,"nodeType":"ExpressionStatement","src":"2209:163:12"},{"expression":{"arguments":[{"id":1708,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2402:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1711,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2432:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2438:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"2432:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2446:8:12","memberName":"selector","nodeType":"MemberAccess","src":"2432:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1714,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"2456:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2465:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1709,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2409:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2413:18:12","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2409:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2409:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1707,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2382:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1491_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:90:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1718,"nodeType":"ExpressionStatement","src":"2382:90:12"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"1641:249:12","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1904:11:12","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"token","nameLocation":"1934:5:12","nodeType":"VariableDeclaration","scope":1720,"src":"1916:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1679,"nodeType":"UserDefinedTypeName","pathNode":{"id":1678,"name":"IERC20Upgradeable","nameLocations":["1916:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"1916:17:12"},"referencedDeclaration":1491,"src":"1916:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"spender","nameLocation":"1949:7:12","nodeType":"VariableDeclaration","scope":1720,"src":"1941:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"1941:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"value","nameLocation":"1966:5:12","nodeType":"VariableDeclaration","scope":1720,"src":"1958:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1958:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1915:57:12"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[],"src":"1982:0:12"},"scope":1992,"src":"1895:584:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1756,"nodeType":"Block","src":"2767:194:12","statements":[{"assignments":[1732],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"oldAllowance","nameLocation":"2785:12:12","nodeType":"VariableDeclaration","scope":1756,"src":"2777:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2777:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[{"arguments":[{"id":1737,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2824:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1992","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1992","typeString":"library SafeERC20Upgradeable"}],"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2816:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"2816:7:12","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2816:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1739,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2831:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1733,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2800:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1468,"src":"2800:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2800:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2777:62:12"},{"expression":{"arguments":[{"id":1743,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2869:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1746,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2899:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2905:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"2899:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2913:8:12","memberName":"selector","nodeType":"MemberAccess","src":"2899:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1749,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2923:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1750,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2932:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2947:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1744,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2876:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2880:18:12","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2876:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2876:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1742,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2849:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1491_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:105:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1755,"nodeType":"ExpressionStatement","src":"2849:105:12"}]},"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"2485:180:12","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2679:21:12","nodeType":"FunctionDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"token","nameLocation":"2719:5:12","nodeType":"VariableDeclaration","scope":1757,"src":"2701:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1723,"nodeType":"UserDefinedTypeName","pathNode":{"id":1722,"name":"IERC20Upgradeable","nameLocations":["2701:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"2701:17:12"},"referencedDeclaration":1491,"src":"2701:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"spender","nameLocation":"2734:7:12","nodeType":"VariableDeclaration","scope":1757,"src":"2726:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"value","nameLocation":"2751:5:12","nodeType":"VariableDeclaration","scope":1757,"src":"2743:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2700:57:12"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[],"src":"2767:0:12"},"scope":1992,"src":"2670:291:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"3249:321:12","statements":[{"id":1800,"nodeType":"UncheckedBlock","src":"3259:305:12","statements":[{"assignments":[1769],"declarations":[{"constant":false,"id":1769,"mutability":"mutable","name":"oldAllowance","nameLocation":"3291:12:12","nodeType":"VariableDeclaration","scope":1800,"src":"3283:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"3283:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1778,"initialValue":{"arguments":[{"arguments":[{"id":1774,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3330:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1992","typeString":"library SafeERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20Upgradeable_$1992","typeString":"library SafeERC20Upgradeable"}],"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3322:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"3322:7:12","typeDescriptions":{}}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1776,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3337:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1770,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"3306:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3312:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1468,"src":"3306:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3306:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3283:62:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1780,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3367:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3383:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3367:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3390:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":1779,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3359:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1785,"nodeType":"ExpressionStatement","src":"3359:75:12"},{"expression":{"arguments":[{"id":1787,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"3468:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1790,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"3498:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3504:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"3498:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3512:8:12","memberName":"selector","nodeType":"MemberAccess","src":"3498:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1793,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3522:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1794,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3531:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3546:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3531:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3475:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3479:18:12","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3475:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3475:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1786,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"3448:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1491_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3448:105:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1799,"nodeType":"ExpressionStatement","src":"3448:105:12"}]}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"2967:180:12","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3161:21:12","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"token","nameLocation":"3201:5:12","nodeType":"VariableDeclaration","scope":1802,"src":"3183:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1760,"nodeType":"UserDefinedTypeName","pathNode":{"id":1759,"name":"IERC20Upgradeable","nameLocations":["3183:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"3183:17:12"},"referencedDeclaration":1491,"src":"3183:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"spender","nameLocation":"3216:7:12","nodeType":"VariableDeclaration","scope":1802,"src":"3208:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"3208:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"value","nameLocation":"3233:5:12","nodeType":"VariableDeclaration","scope":1802,"src":"3225:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:57:12"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"3249:0:12"},"scope":1992,"src":"3152:418:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"3977:333:12","statements":[{"assignments":[1814],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"approvalCall","nameLocation":"4000:12:12","nodeType":"VariableDeclaration","scope":1848,"src":"3987:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1813,"name":"bytes","nodeType":"ElementaryTypeName","src":"3987:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1823,"initialValue":{"arguments":[{"expression":{"expression":{"id":1817,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"4038:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4044:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"4038:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4052:8:12","memberName":"selector","nodeType":"MemberAccess","src":"4038:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1820,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"4062:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"4071:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1815,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4015:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4019:18:12","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4015:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4015:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3987:90:12"},{"condition":{"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4092:45:12","subExpression":{"arguments":[{"id":1825,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"4117:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},{"id":1826,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"4124:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1824,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4093:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1491_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20Upgradeable,bytes memory) returns (bool)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1847,"nodeType":"IfStatement","src":"4088:216:12","trueBody":{"id":1846,"nodeType":"Block","src":"4139:165:12","statements":[{"expression":{"arguments":[{"id":1830,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"4173:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},{"arguments":[{"expression":{"expression":{"id":1833,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"4203:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4209:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1478,"src":"4203:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4217:8:12","memberName":"selector","nodeType":"MemberAccess","src":"4203:22:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1836,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"4227:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4236:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1831,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4180:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4184:18:12","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4180:22:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4180:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1829,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"4153:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1491_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:86:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1840,"nodeType":"ExpressionStatement","src":"4153:86:12"},{"expression":{"arguments":[{"id":1842,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"4273:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},{"id":1843,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"4280:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1841,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"4253:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$1491_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20Upgradeable,bytes memory)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"ExpressionStatement","src":"4253:40:12"}]}}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"3576:308:12","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3898:12:12","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"token","nameLocation":"3929:5:12","nodeType":"VariableDeclaration","scope":1849,"src":"3911:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1805,"nodeType":"UserDefinedTypeName","pathNode":{"id":1804,"name":"IERC20Upgradeable","nameLocations":["3911:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"3911:17:12"},"referencedDeclaration":1491,"src":"3911:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"spender","nameLocation":"3944:7:12","nodeType":"VariableDeclaration","scope":1849,"src":"3936:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"value","nameLocation":"3961:5:12","nodeType":"VariableDeclaration","scope":1849,"src":"3953:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"3953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3910:57:12"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"3977:0:12"},"scope":1992,"src":"3889:421:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1905,"nodeType":"Block","src":"4688:257:12","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"mutability":"mutable","name":"nonceBefore","nameLocation":"4706:11:12","nodeType":"VariableDeclaration","scope":1905,"src":"4698:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4698:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1876,"initialValue":{"arguments":[{"id":1874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4733:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1872,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"4720:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$1616","typeString":"contract IERC20PermitUpgradeable"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4726:6:12","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1609,"src":"4720:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4698:41:12"},{"expression":{"arguments":[{"id":1880,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4762:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1881,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"4769:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"4778:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1883,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"4785:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1884,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"4795:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1885,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4798:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1886,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"4801:1:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1877,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"4749:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$1616","typeString":"contract IERC20PermitUpgradeable"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4755:6:12","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1601,"src":"4749:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1888,"nodeType":"ExpressionStatement","src":"4749:54:12"},{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"nonceAfter","nameLocation":"4821:10:12","nodeType":"VariableDeclaration","scope":1905,"src":"4813:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1895,"initialValue":{"arguments":[{"id":1893,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4847:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1891,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"4834:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$1616","typeString":"contract IERC20PermitUpgradeable"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4840:6:12","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1609,"src":"4834:12:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4813:40:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"4871:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"4885:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4885:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4871:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4902:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":1896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4863:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4863:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"ExpressionStatement","src":"4863:75:12"}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"4316:141:12","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4471:10:12","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"token","nameLocation":"4515:5:12","nodeType":"VariableDeclaration","scope":1906,"src":"4491:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$1616","typeString":"contract IERC20PermitUpgradeable"},"typeName":{"id":1852,"nodeType":"UserDefinedTypeName","pathNode":{"id":1851,"name":"IERC20PermitUpgradeable","nameLocations":["4491:23:12"],"nodeType":"IdentifierPath","referencedDeclaration":1616,"src":"4491:23:12"},"referencedDeclaration":1616,"src":"4491:23:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20PermitUpgradeable_$1616","typeString":"contract IERC20PermitUpgradeable"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"owner","nameLocation":"4538:5:12","nodeType":"VariableDeclaration","scope":1906,"src":"4530:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"spender","nameLocation":"4561:7:12","nodeType":"VariableDeclaration","scope":1906,"src":"4553:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"4553:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"value","nameLocation":"4586:5:12","nodeType":"VariableDeclaration","scope":1906,"src":"4578:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4578:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1861,"mutability":"mutable","name":"deadline","nameLocation":"4609:8:12","nodeType":"VariableDeclaration","scope":1906,"src":"4601:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"4601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"v","nameLocation":"4633:1:12","nodeType":"VariableDeclaration","scope":1906,"src":"4627:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1862,"name":"uint8","nodeType":"ElementaryTypeName","src":"4627:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"r","nameLocation":"4652:1:12","nodeType":"VariableDeclaration","scope":1906,"src":"4644:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"s","nameLocation":"4671:1:12","nodeType":"VariableDeclaration","scope":1906,"src":"4663:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4663:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4481:197:12"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[],"src":"4688:0:12"},"scope":1992,"src":"4462:483:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1942,"nodeType":"Block","src":"5409:572:12","statements":[{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"returndata","nameLocation":"5771:10:12","nodeType":"VariableDeclaration","scope":1942,"src":"5758:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1915,"name":"bytes","nodeType":"ElementaryTypeName","src":"5758:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1925,"initialValue":{"arguments":[{"id":1922,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5812:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5818:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":1919,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"5792:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}],"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5784:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"5784:7:12","typeDescriptions":{}}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5799:12:12","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2082,"src":"5784:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5758:95:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1927,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5871:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5882:6:12","memberName":"length","nodeType":"MemberAccess","src":"5871:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5892:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5871:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1933,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5908:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5921:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1934,"name":"bool","nodeType":"ElementaryTypeName","src":"5921:4:12","typeDescriptions":{}}}],"id":1936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5920:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1931,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5897:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5901:6:12","memberName":"decode","nodeType":"MemberAccess","src":"5897:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5897:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5871:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5929:44:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":1926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5863:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5863:111:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1941,"nodeType":"ExpressionStatement","src":"5863:111:12"}]},"documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"4951:372:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5337:19:12","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"token","nameLocation":"5375:5:12","nodeType":"VariableDeclaration","scope":1943,"src":"5357:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1909,"nodeType":"UserDefinedTypeName","pathNode":{"id":1908,"name":"IERC20Upgradeable","nameLocations":["5357:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"5357:17:12"},"referencedDeclaration":1491,"src":"5357:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"data","nameLocation":"5395:4:12","nodeType":"VariableDeclaration","scope":1943,"src":"5382:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"5382:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5356:44:12"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"5409:0:12"},"scope":1992,"src":"5328:653:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1990,"nodeType":"Block","src":"6582:516:12","statements":[{"assignments":[1955,1957],"declarations":[{"constant":false,"id":1955,"mutability":"mutable","name":"success","nameLocation":"6883:7:12","nodeType":"VariableDeclaration","scope":1990,"src":"6878:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1954,"name":"bool","nodeType":"ElementaryTypeName","src":"6878:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"returndata","nameLocation":"6905:10:12","nodeType":"VariableDeclaration","scope":1990,"src":"6892:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1956,"name":"bytes","nodeType":"ElementaryTypeName","src":"6892:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1965,"initialValue":{"arguments":[{"id":1963,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"6939:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1960,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"6927:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6919:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"6919:7:12","typeDescriptions":{}}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6919:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6934:4:12","memberName":"call","nodeType":"MemberAccess","src":"6919:19:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6919:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6877:67:12"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"6973:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1967,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"6985:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6996:6:12","memberName":"length","nodeType":"MemberAccess","src":"6985:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7006:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1973,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"7022:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7035:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1974,"name":"bool","nodeType":"ElementaryTypeName","src":"7035:4:12","typeDescriptions":{}}}],"id":1976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7034:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1971,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7011:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7015:6:12","memberName":"decode","nodeType":"MemberAccess","src":"7011:10:12","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6985:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6984:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6973:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":1985,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"7084:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}],"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7076:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"7076:7:12","typeDescriptions":{}}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7076:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1981,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"7046:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2322_$","typeString":"type(library AddressUpgradeable)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7065:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2010,"src":"7046:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7046:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6973:118:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1953,"id":1989,"nodeType":"Return","src":"6954:137:12"}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"5987:490:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1991,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6491:23:12","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"token","nameLocation":"6533:5:12","nodeType":"VariableDeclaration","scope":1991,"src":"6515:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1946,"nodeType":"UserDefinedTypeName","pathNode":{"id":1945,"name":"IERC20Upgradeable","nameLocations":["6515:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"6515:17:12"},"referencedDeclaration":1491,"src":"6515:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"data","nameLocation":"6553:4:12","nodeType":"VariableDeclaration","scope":1991,"src":"6540:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"6540:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6514:44:12"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1991,"src":"6576:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1951,"name":"bool","nodeType":"ElementaryTypeName","src":"6576:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6575:6:12"},"scope":1992,"src":"6482:616:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1993,"src":"734:6366:12","usedErrors":[]}],"src":"115:6986:12"},"id":12},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2322]},"id":2323,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1994,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"126:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2322,"linearizedBaseContracts":[2322],"name":"AddressUpgradeable","nameLocation":"202:18:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2009,"nodeType":"Block","src":"1489:254:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2003,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"1713:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:13","memberName":"code","nodeType":"MemberAccess","src":"1713:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:13","memberName":"length","nodeType":"MemberAccess","src":"1713:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2002,"id":2008,"nodeType":"Return","src":"1706:30:13"}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"227:1191:13","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:13","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"account","nameLocation":"1451:7:13","nodeType":"VariableDeclaration","scope":2010,"src":"1443:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:13"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"1483:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2000,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:13"},"scope":2322,"src":"1423:320:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2043,"nodeType":"Block","src":"2729:241:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2021,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2322","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2322","typeString":"library AddressUpgradeable"}],"id":2020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2019,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:13","typeDescriptions":{}}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:13","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2024,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"2772:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2018,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"2739:73:13"},{"assignments":[2030,null],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"success","nameLocation":"2829:7:13","nodeType":"VariableDeclaration","scope":2043,"src":"2824:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2029,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2037,"initialValue":{"arguments":[{"hexValue":"","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2031,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"2842:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:13","memberName":"call","nodeType":"MemberAccess","src":"2842:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2033,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"2864:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:13"},{"expression":{"arguments":[{"id":2039,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"2893:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2038,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2042,"nodeType":"ExpressionStatement","src":"2885:78:13"}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"1749:904:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2044,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:13","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:13","nodeType":"VariableDeclaration","scope":2044,"src":"2677:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"amount","nameLocation":"2712:6:13","nodeType":"VariableDeclaration","scope":2044,"src":"2704:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:13"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[],"src":"2729:0:13"},"scope":2322,"src":"2658:312:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2061,"nodeType":"Block","src":"3801:96:13","statements":[{"expression":{"arguments":[{"id":2055,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3840:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2056,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3848:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2054,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2102,2146],"referencedDeclaration":2146,"src":"3818:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2053,"id":2060,"nodeType":"Return","src":"3811:79:13"}]},"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"2976:731:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:13","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"target","nameLocation":"3742:6:13","nodeType":"VariableDeclaration","scope":2062,"src":"3734:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"data","nameLocation":"3763:4:13","nodeType":"VariableDeclaration","scope":2062,"src":"3750:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2048,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:13"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"3787:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2051,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:13"},"scope":2322,"src":"3712:185:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"4266:76:13","statements":[{"expression":{"arguments":[{"id":2075,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"4305:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2076,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"4313:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2078,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"4322:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2074,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2102,2146],"referencedDeclaration":2146,"src":"4283:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2073,"id":2080,"nodeType":"Return","src":"4276:59:13"}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"3903:211:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:13","nodeType":"FunctionDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"target","nameLocation":"4158:6:13","nodeType":"VariableDeclaration","scope":2082,"src":"4150:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"data","nameLocation":"4187:4:13","nodeType":"VariableDeclaration","scope":2082,"src":"4174:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2066,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:13","nodeType":"VariableDeclaration","scope":2082,"src":"4201:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2068,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"4252:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2071,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:13"},"scope":2322,"src":"4119:223:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2101,"nodeType":"Block","src":"4817:111:13","statements":[{"expression":{"arguments":[{"id":2095,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"4856:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"4864:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"4870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2094,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2102,2146],"referencedDeclaration":2146,"src":"4834:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2093,"id":2100,"nodeType":"Return","src":"4827:94:13"}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"4348:351:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:13","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"target","nameLocation":"4743:6:13","nodeType":"VariableDeclaration","scope":2102,"src":"4735:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"data","nameLocation":"4764:4:13","nodeType":"VariableDeclaration","scope":2102,"src":"4751:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2086,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"value","nameLocation":"4778:5:13","nodeType":"VariableDeclaration","scope":2102,"src":"4770:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:13"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2102,"src":"4803:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2091,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:13"},"scope":2322,"src":"4704:224:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2145,"nodeType":"Block","src":"5355:267:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2119,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2322","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2322","typeString":"library AddressUpgradeable"}],"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:13","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:13","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5398:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2126,"nodeType":"ExpressionStatement","src":"5365:81:13"},{"assignments":[2128,2130],"declarations":[{"constant":false,"id":2128,"mutability":"mutable","name":"success","nameLocation":"5462:7:13","nodeType":"VariableDeclaration","scope":2145,"src":"5457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2127,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:13","nodeType":"VariableDeclaration","scope":2145,"src":"5471:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2129,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2137,"initialValue":{"arguments":[{"id":2135,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5524:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2131,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5498:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:13","memberName":"call","nodeType":"MemberAccess","src":"5498:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5517:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:13"},{"expression":{"arguments":[{"id":2139,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"5573:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2140,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"5581:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2141,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"5590:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2142,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"5602:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2138,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5546:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2115,"id":2144,"nodeType":"Return","src":"5539:76:13"}]},"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"4934:237:13","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:13","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"target","nameLocation":"5224:6:13","nodeType":"VariableDeclaration","scope":2146,"src":"5216:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2104,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"data","nameLocation":"5253:4:13","nodeType":"VariableDeclaration","scope":2146,"src":"5240:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2106,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"value","nameLocation":"5275:5:13","nodeType":"VariableDeclaration","scope":2146,"src":"5267:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:13","nodeType":"VariableDeclaration","scope":2146,"src":"5290:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2110,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:13"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2146,"src":"5341:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2113,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:13"},"scope":2322,"src":"5176:446:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2162,"nodeType":"Block","src":"5899:97:13","statements":[{"expression":{"arguments":[{"id":2157,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5935:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2158,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"5943:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2156,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2163,2192],"referencedDeclaration":2192,"src":"5916:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2155,"id":2161,"nodeType":"Return","src":"5909:80:13"}]},"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"5628:166:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2163,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:13","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"target","nameLocation":"5835:6:13","nodeType":"VariableDeclaration","scope":2163,"src":"5827:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"data","nameLocation":"5856:4:13","nodeType":"VariableDeclaration","scope":2163,"src":"5843:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2150,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:13"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2163,"src":"5885:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2153,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:13"},"scope":2322,"src":"5799:197:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"6338:168:13","statements":[{"assignments":[2176,2178],"declarations":[{"constant":false,"id":2176,"mutability":"mutable","name":"success","nameLocation":"6354:7:13","nodeType":"VariableDeclaration","scope":2191,"src":"6349:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2175,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:13","nodeType":"VariableDeclaration","scope":2191,"src":"6363:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2177,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2183,"initialValue":{"arguments":[{"id":2181,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6408:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2179,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"6390:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:13"},{"expression":{"arguments":[{"id":2185,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"6457:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2186,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"6465:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2187,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"6474:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2188,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6486:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2184,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"6430:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2174,"id":2190,"nodeType":"Return","src":"6423:76:13"}]},"documentation":{"id":2164,"nodeType":"StructuredDocumentation","src":"6002:173:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:13","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"target","nameLocation":"6225:6:13","nodeType":"VariableDeclaration","scope":2192,"src":"6217:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"data","nameLocation":"6254:4:13","nodeType":"VariableDeclaration","scope":2192,"src":"6241:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2167,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:13","nodeType":"VariableDeclaration","scope":2192,"src":"6268:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2169,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:13"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"6324:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2172,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:13"},"scope":2322,"src":"6180:326:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2208,"nodeType":"Block","src":"6782:101:13","statements":[{"expression":{"arguments":[{"id":2203,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"6820:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2204,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"6828:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2202,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2209,2238],"referencedDeclaration":2238,"src":"6799:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2201,"id":2207,"nodeType":"Return","src":"6792:84:13"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"6512:168:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2209,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:13","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"target","nameLocation":"6723:6:13","nodeType":"VariableDeclaration","scope":2209,"src":"6715:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2194,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"data","nameLocation":"6744:4:13","nodeType":"VariableDeclaration","scope":2209,"src":"6731:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2196,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:13"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2209,"src":"6768:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:13"},"scope":2322,"src":"6685:198:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"7224:170:13","statements":[{"assignments":[2222,2224],"declarations":[{"constant":false,"id":2222,"mutability":"mutable","name":"success","nameLocation":"7240:7:13","nodeType":"VariableDeclaration","scope":2237,"src":"7235:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2221,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:13","nodeType":"VariableDeclaration","scope":2237,"src":"7249:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2223,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2229,"initialValue":{"arguments":[{"id":2227,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7296:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2225,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7276:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:13","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:13"},{"expression":{"arguments":[{"id":2231,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7345:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"7353:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2233,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"7362:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2234,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"7374:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2230,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"7318:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2220,"id":2236,"nodeType":"Return","src":"7311:76:13"}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"6889:175:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:13","nodeType":"FunctionDefinition","parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"target","nameLocation":"7116:6:13","nodeType":"VariableDeclaration","scope":2238,"src":"7108:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"data","nameLocation":"7145:4:13","nodeType":"VariableDeclaration","scope":2238,"src":"7132:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2213,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2216,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:13","nodeType":"VariableDeclaration","scope":2238,"src":"7159:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2215,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:13"},"returnParameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"7210:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:13"},"scope":2322,"src":"7069:325:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2276,"nodeType":"Block","src":"7876:434:13","statements":[{"condition":{"id":2252,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"7890:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2274,"nodeType":"Block","src":"8246:58:13","statements":[{"expression":{"arguments":[{"id":2270,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"8268:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2271,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"8280:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2269,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"8260:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"ExpressionStatement","src":"8260:33:13"}]},"id":2275,"nodeType":"IfStatement","src":"7886:418:13","trueBody":{"id":2268,"nodeType":"Block","src":"7899:341:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2253,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"7917:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:13","memberName":"length","nodeType":"MemberAccess","src":"7917:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2265,"nodeType":"IfStatement","src":"7913:286:13","trueBody":{"id":2264,"nodeType":"Block","src":"7941:258:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2259,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"8143:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2258,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"8132:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2263,"nodeType":"ExpressionStatement","src":"8124:60:13"}]}},{"expression":{"id":2266,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"8219:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2251,"id":2267,"nodeType":"Return","src":"8212:17:13"}]}}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"7400:277:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2277,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:13","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"target","nameLocation":"7735:6:13","nodeType":"VariableDeclaration","scope":2277,"src":"7727:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"success","nameLocation":"7756:7:13","nodeType":"VariableDeclaration","scope":2277,"src":"7751:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2242,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:13","nodeType":"VariableDeclaration","scope":2277,"src":"7773:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2244,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:13","nodeType":"VariableDeclaration","scope":2277,"src":"7806:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2246,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:13"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2277,"src":"7862:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2249,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:13"},"scope":2322,"src":"7682:628:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"8691:135:13","statements":[{"condition":{"id":2289,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"8705:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2298,"nodeType":"Block","src":"8762:58:13","statements":[{"expression":{"arguments":[{"id":2294,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"8784:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2295,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"8796:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2293,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"8776:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2297,"nodeType":"ExpressionStatement","src":"8776:33:13"}]},"id":2299,"nodeType":"IfStatement","src":"8701:119:13","trueBody":{"id":2292,"nodeType":"Block","src":"8714:42:13","statements":[{"expression":{"id":2290,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"8735:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2288,"id":2291,"nodeType":"Return","src":"8728:17:13"}]}}]},"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"8316:210:13","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:13","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"success","nameLocation":"8571:7:13","nodeType":"VariableDeclaration","scope":2301,"src":"8566:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2279,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:13","nodeType":"VariableDeclaration","scope":2301,"src":"8588:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2281,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:13","nodeType":"VariableDeclaration","scope":2301,"src":"8621:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2283,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:13"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"8677:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:13"},"scope":2322,"src":"8531:295:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2320,"nodeType":"Block","src":"8915:457:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2308,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"8991:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:13","memberName":"length","nodeType":"MemberAccess","src":"8991:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2318,"nodeType":"Block","src":"9321:45:13","statements":[{"expression":{"arguments":[{"id":2315,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"9342:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2314,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"9335:20:13"}]},"id":2319,"nodeType":"IfStatement","src":"8987:379:13","trueBody":{"id":2313,"nodeType":"Block","src":"9014:301:13","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:13","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:13","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:13"},"nodeType":"YulFunctionCall","src":"9213:17:13"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:13","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:13"},"nodeType":"YulFunctionCall","src":"9254:19:13"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:13"},"nodeType":"YulFunctionCall","src":"9247:44:13"},"nodeType":"YulExpressionStatement","src":"9247:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2303,"isOffset":false,"isSlot":false,"src":"9219:10:13","valueSize":1},{"declaration":2303,"isOffset":false,"isSlot":false,"src":"9262:10:13","valueSize":1}],"id":2312,"nodeType":"InlineAssembly","src":"9163:142:13"}]}}]},"id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:13","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:13","nodeType":"VariableDeclaration","scope":2321,"src":"8849:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2302,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:13","nodeType":"VariableDeclaration","scope":2321,"src":"8874:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2304,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:13"},"returnParameters":{"id":2307,"nodeType":"ParameterList","parameters":[],"src":"8915:0:13"},"scope":2322,"src":"8832:540:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2323,"src":"194:9180:13","usedErrors":[]}],"src":"101:9274:13"},"id":13},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2322],"ContextUpgradeable":[2364],"Initializable":[665]},"id":2365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2324,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:14"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2325,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2365,"sourceUnit":666,"src":"110:42:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2327,"name":"Initializable","nameLocations":["691:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"691:13:14"},"id":2328,"nodeType":"InheritanceSpecifier","src":"691:13:14"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"154:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2364,"linearizedBaseContracts":[2364,665],"name":"ContextUpgradeable","nameLocation":"669:18:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2333,"nodeType":"Block","src":"763:7:14","statements":[]},"id":2334,"implemented":true,"kind":"function","modifiers":[{"id":2331,"kind":"modifierInvocation","modifierName":{"id":2330,"name":"onlyInitializing","nameLocations":["746:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"746:16:14"},"nodeType":"ModifierInvocation","src":"746:16:14"}],"name":"__Context_init","nameLocation":"720:14:14","nodeType":"FunctionDefinition","parameters":{"id":2329,"nodeType":"ParameterList","parameters":[],"src":"734:2:14"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[],"src":"763:0:14"},"scope":2364,"src":"711:59:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"838:7:14","statements":[]},"id":2340,"implemented":true,"kind":"function","modifiers":[{"id":2337,"kind":"modifierInvocation","modifierName":{"id":2336,"name":"onlyInitializing","nameLocations":["821:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"821:16:14"},"nodeType":"ModifierInvocation","src":"821:16:14"}],"name":"__Context_init_unchained","nameLocation":"785:24:14","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[],"src":"809:2:14"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[],"src":"838:0:14"},"scope":2364,"src":"776:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2348,"nodeType":"Block","src":"912:34:14","statements":[{"expression":{"expression":{"id":2345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:14","memberName":"sender","nodeType":"MemberAccess","src":"929:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2344,"id":2347,"nodeType":"Return","src":"922:17:14"}]},"id":2349,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:14","nodeType":"FunctionDefinition","parameters":{"id":2341,"nodeType":"ParameterList","parameters":[],"src":"869:2:14"},"returnParameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:14"},"scope":2364,"src":"850:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2357,"nodeType":"Block","src":"1019:32:14","statements":[{"expression":{"expression":{"id":2354,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:14","memberName":"data","nodeType":"MemberAccess","src":"1036:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2353,"id":2356,"nodeType":"Return","src":"1029:15:14"}]},"id":2358,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:14","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[],"src":"969:2:14"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"1003:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2351,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:14"},"scope":2364,"src":"952:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"1057:254:14","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2363,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:14","nodeType":"VariableDeclaration","scope":2364,"src":"1316:25:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"length":{"hexValue":"3530","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2365,"src":"651:693:14","usedErrors":[]}],"src":"86:1259:14"},"id":14},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[2438]},"id":2439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2366,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"112:311:15","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2438,"linearizedBaseContracts":[2438],"name":"CountersUpgradeable","nameLocation":"432:19:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":2370,"members":[{"constant":false,"id":2369,"mutability":"mutable","name":"_value","nameLocation":"805:6:15","nodeType":"VariableDeclaration","scope":2370,"src":"797:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:15","nodeType":"StructDefinition","scope":2438,"src":"458:374:15","visibility":"public"},{"body":{"id":2381,"nodeType":"Block","src":"912:38:15","statements":[{"expression":{"expression":{"id":2378,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"929:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"937:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"929:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2377,"id":2380,"nodeType":"Return","src":"922:21:15"}]},"id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:15","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"counter","nameLocation":"871:7:15","nodeType":"VariableDeclaration","scope":2382,"src":"855:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2372,"nodeType":"UserDefinedTypeName","pathNode":{"id":2371,"name":"Counter","nameLocations":["855:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"855:7:15"},"referencedDeclaration":2370,"src":"855:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:15"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2382,"src":"903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:15"},"scope":2438,"src":"838:112:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"1009:70:15","statements":[{"id":2394,"nodeType":"UncheckedBlock","src":"1019:54:15","statements":[{"expression":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2388,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1043:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1051:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"1043:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2393,"nodeType":"ExpressionStatement","src":"1043:19:15"}]}]},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:15","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"counter","nameLocation":"991:7:15","nodeType":"VariableDeclaration","scope":2396,"src":"975:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2384,"nodeType":"UserDefinedTypeName","pathNode":{"id":2383,"name":"Counter","nameLocations":["975:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"975:7:15"},"referencedDeclaration":2370,"src":"975:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:15"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"1009:0:15"},"scope":2438,"src":"956:123:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2423,"nodeType":"Block","src":"1138:176:15","statements":[{"assignments":[2403],"declarations":[{"constant":false,"id":2403,"mutability":"mutable","name":"value","nameLocation":"1156:5:15","nodeType":"VariableDeclaration","scope":2423,"src":"1148:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2406,"initialValue":{"expression":{"id":2404,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"1164:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1172:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"1164:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"1196:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1188:49:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2413,"nodeType":"ExpressionStatement","src":"1188:49:15"},{"id":2422,"nodeType":"UncheckedBlock","src":"1247:61:15","statements":[{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2414,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1279:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"1271:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"1288:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"1271:26:15"}]}]},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:15","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"counter","nameLocation":"1120:7:15","nodeType":"VariableDeclaration","scope":2424,"src":"1104:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2398,"nodeType":"UserDefinedTypeName","pathNode":{"id":2397,"name":"Counter","nameLocations":["1104:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"1104:7:15"},"referencedDeclaration":2370,"src":"1104:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:15"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[],"src":"1138:0:15"},"scope":2438,"src":"1085:229:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2436,"nodeType":"Block","src":"1369:35:15","statements":[{"expression":{"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2430,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1379:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":2432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1387:6:15","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"1379:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2435,"nodeType":"ExpressionStatement","src":"1379:18:15"}]},"id":2437,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:15","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"counter","nameLocation":"1351:7:15","nodeType":"VariableDeclaration","scope":2437,"src":"1335:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2426,"nodeType":"UserDefinedTypeName","pathNode":{"id":2425,"name":"Counter","nameLocations":["1335:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"1335:7:15"},"referencedDeclaration":2370,"src":"1335:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:15"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[],"src":"1369:0:15"},"scope":2438,"src":"1320:84:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2439,"src":"424:982:15","usedErrors":[]}],"src":"87:1320:15"},"id":15},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[2548]},"id":2549,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2440,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2441,"nodeType":"StructuredDocumentation","src":"218:1201:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2548,"linearizedBaseContracts":[2548],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":2444,"members":[{"constant":false,"id":2443,"mutability":"mutable","name":"value","nameLocation":"1494:5:16","nodeType":"VariableDeclaration","scope":2444,"src":"1486:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:16","nodeType":"StructDefinition","scope":2548,"src":"1457:49:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":2447,"members":[{"constant":false,"id":2446,"mutability":"mutable","name":"value","nameLocation":"1546:5:16","nodeType":"VariableDeclaration","scope":2447,"src":"1541:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2445,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:16","nodeType":"StructDefinition","scope":2548,"src":"1512:46:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":2450,"members":[{"constant":false,"id":2449,"mutability":"mutable","name":"value","nameLocation":"1601:5:16","nodeType":"VariableDeclaration","scope":2450,"src":"1593:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:16","nodeType":"StructDefinition","scope":2548,"src":"1564:49:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":2453,"members":[{"constant":false,"id":2452,"mutability":"mutable","name":"value","nameLocation":"1656:5:16","nodeType":"VariableDeclaration","scope":2453,"src":"1648:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:16","nodeType":"StructDefinition","scope":2548,"src":"1619:49:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":2456,"members":[{"constant":false,"id":2455,"mutability":"mutable","name":"value","nameLocation":"1709:5:16","nodeType":"VariableDeclaration","scope":2456,"src":"1702:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2454,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:16","nodeType":"StructDefinition","scope":2548,"src":"1674:47:16","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":2459,"members":[{"constant":false,"id":2458,"mutability":"mutable","name":"value","nameLocation":"1760:5:16","nodeType":"VariableDeclaration","scope":2459,"src":"1754:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2457,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:16","nodeType":"StructDefinition","scope":2548,"src":"1727:45:16","visibility":"public"},{"body":{"id":2469,"nodeType":"Block","src":"1954:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2016:38:16","statements":[{"nodeType":"YulAssignment","src":"2030:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2040:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2030:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2466,"isOffset":false,"isSlot":true,"src":"2030:6:16","suffix":"slot","valueSize":1},{"declaration":2462,"isOffset":false,"isSlot":false,"src":"2040:4:16","valueSize":1}],"id":2468,"nodeType":"InlineAssembly","src":"2007:47:16"}]},"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"1778:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2470,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:16","nodeType":"FunctionDefinition","parameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"slot","nameLocation":"1902:4:16","nodeType":"VariableDeclaration","scope":2470,"src":"1894:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:16"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"r","nameLocation":"1951:1:16","nodeType":"VariableDeclaration","scope":2470,"src":"1931:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2444_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":2465,"nodeType":"UserDefinedTypeName","pathNode":{"id":2464,"name":"AddressSlot","nameLocations":["1931:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2444,"src":"1931:11:16"},"referencedDeclaration":2444,"src":"1931:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2444_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:16"},"scope":2548,"src":"1870:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2480,"nodeType":"Block","src":"2242:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2304:38:16","statements":[{"nodeType":"YulAssignment","src":"2318:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2328:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2318:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2477,"isOffset":false,"isSlot":true,"src":"2318:6:16","suffix":"slot","valueSize":1},{"declaration":2473,"isOffset":false,"isSlot":false,"src":"2328:4:16","valueSize":1}],"id":2479,"nodeType":"InlineAssembly","src":"2295:47:16"}]},"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"2066:87:16","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2481,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:16","nodeType":"FunctionDefinition","parameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"slot","nameLocation":"2190:4:16","nodeType":"VariableDeclaration","scope":2481,"src":"2182:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:16"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"r","nameLocation":"2239:1:16","nodeType":"VariableDeclaration","scope":2481,"src":"2219:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2447_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":2476,"nodeType":"UserDefinedTypeName","pathNode":{"id":2475,"name":"BooleanSlot","nameLocations":["2219:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2447,"src":"2219:11:16"},"referencedDeclaration":2447,"src":"2219:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2447_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:16"},"scope":2548,"src":"2158:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2491,"nodeType":"Block","src":"2530:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2592:38:16","statements":[{"nodeType":"YulAssignment","src":"2606:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2616:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2606:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2488,"isOffset":false,"isSlot":true,"src":"2606:6:16","suffix":"slot","valueSize":1},{"declaration":2484,"isOffset":false,"isSlot":false,"src":"2616:4:16","valueSize":1}],"id":2490,"nodeType":"InlineAssembly","src":"2583:47:16"}]},"documentation":{"id":2482,"nodeType":"StructuredDocumentation","src":"2354:87:16","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2492,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:16","nodeType":"FunctionDefinition","parameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"slot","nameLocation":"2478:4:16","nodeType":"VariableDeclaration","scope":2492,"src":"2470:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:16"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"r","nameLocation":"2527:1:16","nodeType":"VariableDeclaration","scope":2492,"src":"2507:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2450_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":2487,"nodeType":"UserDefinedTypeName","pathNode":{"id":2486,"name":"Bytes32Slot","nameLocations":["2507:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2450,"src":"2507:11:16"},"referencedDeclaration":2450,"src":"2507:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2450_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:16"},"scope":2548,"src":"2446:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2502,"nodeType":"Block","src":"2818:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2880:38:16","statements":[{"nodeType":"YulAssignment","src":"2894:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2904:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2894:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2499,"isOffset":false,"isSlot":true,"src":"2894:6:16","suffix":"slot","valueSize":1},{"declaration":2495,"isOffset":false,"isSlot":false,"src":"2904:4:16","valueSize":1}],"id":2501,"nodeType":"InlineAssembly","src":"2871:47:16"}]},"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"2642:87:16","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2503,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:16","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"slot","nameLocation":"2766:4:16","nodeType":"VariableDeclaration","scope":2503,"src":"2758:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:16"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"r","nameLocation":"2815:1:16","nodeType":"VariableDeclaration","scope":2503,"src":"2795:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2453_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":2498,"nodeType":"UserDefinedTypeName","pathNode":{"id":2497,"name":"Uint256Slot","nameLocations":["2795:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2453,"src":"2795:11:16"},"referencedDeclaration":2453,"src":"2795:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2453_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:16"},"scope":2548,"src":"2734:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2513,"nodeType":"Block","src":"3103:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3165:38:16","statements":[{"nodeType":"YulAssignment","src":"3179:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3189:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3179:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2510,"isOffset":false,"isSlot":true,"src":"3179:6:16","suffix":"slot","valueSize":1},{"declaration":2506,"isOffset":false,"isSlot":false,"src":"3189:4:16","valueSize":1}],"id":2512,"nodeType":"InlineAssembly","src":"3156:47:16"}]},"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"2930:86:16","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:16","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"slot","nameLocation":"3052:4:16","nodeType":"VariableDeclaration","scope":2514,"src":"3044:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:16"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"r","nameLocation":"3100:1:16","nodeType":"VariableDeclaration","scope":2514,"src":"3081:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2456_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":2509,"nodeType":"UserDefinedTypeName","pathNode":{"id":2508,"name":"StringSlot","nameLocations":["3081:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2456,"src":"3081:10:16"},"referencedDeclaration":2456,"src":"3081:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2456_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:16"},"scope":2548,"src":"3021:188:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2524,"nodeType":"Block","src":"3411:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3473:44:16","statements":[{"nodeType":"YulAssignment","src":"3487:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3497:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3487:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2521,"isOffset":false,"isSlot":true,"src":"3487:6:16","suffix":"slot","valueSize":1},{"declaration":2517,"isOffset":false,"isSlot":true,"src":"3497:10:16","suffix":"slot","valueSize":1}],"id":2523,"nodeType":"InlineAssembly","src":"3464:53:16"}]},"documentation":{"id":2515,"nodeType":"StructuredDocumentation","src":"3215:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2525,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:16","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"store","nameLocation":"3359:5:16","nodeType":"VariableDeclaration","scope":2525,"src":"3344:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2516,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:16"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"r","nameLocation":"3408:1:16","nodeType":"VariableDeclaration","scope":2525,"src":"3389:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2456_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":2520,"nodeType":"UserDefinedTypeName","pathNode":{"id":2519,"name":"StringSlot","nameLocations":["3389:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2456,"src":"3389:10:16"},"referencedDeclaration":2456,"src":"3389:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2456_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:16"},"scope":2548,"src":"3321:202:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2535,"nodeType":"Block","src":"3699:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3761:38:16","statements":[{"nodeType":"YulAssignment","src":"3775:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3785:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3775:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2532,"isOffset":false,"isSlot":true,"src":"3775:6:16","suffix":"slot","valueSize":1},{"declaration":2528,"isOffset":false,"isSlot":false,"src":"3785:4:16","valueSize":1}],"id":2534,"nodeType":"InlineAssembly","src":"3752:47:16"}]},"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"3529:85:16","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2536,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:16","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"slot","nameLocation":"3649:4:16","nodeType":"VariableDeclaration","scope":2536,"src":"3641:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:16"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"r","nameLocation":"3696:1:16","nodeType":"VariableDeclaration","scope":2536,"src":"3678:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2459_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":2531,"nodeType":"UserDefinedTypeName","pathNode":{"id":2530,"name":"BytesSlot","nameLocations":["3678:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"3678:9:16"},"referencedDeclaration":2459,"src":"3678:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2459_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:16"},"scope":2548,"src":"3619:186:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2546,"nodeType":"Block","src":"4002:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4064:44:16","statements":[{"nodeType":"YulAssignment","src":"4078:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4088:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4078:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2543,"isOffset":false,"isSlot":true,"src":"4078:6:16","suffix":"slot","valueSize":1},{"declaration":2539,"isOffset":false,"isSlot":true,"src":"4088:10:16","suffix":"slot","valueSize":1}],"id":2545,"nodeType":"InlineAssembly","src":"4055:53:16"}]},"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"3811:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2547,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:16","nodeType":"FunctionDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"store","nameLocation":"3951:5:16","nodeType":"VariableDeclaration","scope":2547,"src":"3937:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2538,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:16"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"r","nameLocation":"3999:1:16","nodeType":"VariableDeclaration","scope":2547,"src":"3981:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2459_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":2542,"nodeType":"UserDefinedTypeName","pathNode":{"id":2541,"name":"BytesSlot","nameLocations":["3981:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2459,"src":"3981:9:16"},"referencedDeclaration":2459,"src":"3981:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2459_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:16"},"scope":2548,"src":"3915:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2549,"src":"1420:2696:16","usedErrors":[]}],"src":"193:3924:16"},"id":16},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2763],"Ownable":[2661]},"id":2662,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2550,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2662,"sourceUnit":2764,"src":"127:30:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2553,"name":"Context","nameLocations":["683:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":2763,"src":"683:7:17"},"id":2554,"nodeType":"InheritanceSpecifier","src":"683:7:17"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"159:494:17","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2661,"linearizedBaseContracts":[2661,2763],"name":"Ownable","nameLocation":"672:7:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2556,"mutability":"mutable","name":"_owner","nameLocation":"713:6:17","nodeType":"VariableDeclaration","scope":2661,"src":"697:22:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2555,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2562,"name":"OwnershipTransferred","nameLocation":"732:20:17","nodeType":"EventDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:17","nodeType":"VariableDeclaration","scope":2562,"src":"753:29:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2560,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:17","nodeType":"VariableDeclaration","scope":2562,"src":"784:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:17"},"src":"726:84:17"},{"body":{"id":2571,"nodeType":"Block","src":"926:49:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2567,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"955:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2566,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"936:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2570,"nodeType":"ExpressionStatement","src":"936:32:17"}]},"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"816:91:17","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":2572,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[],"src":"923:2:17"},"returnParameters":{"id":2565,"nodeType":"ParameterList","parameters":[],"src":"926:0:17"},"scope":2661,"src":"912:63:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2579,"nodeType":"Block","src":"1084:41:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2575,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"1094:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2577,"nodeType":"ExpressionStatement","src":"1094:13:17"},{"id":2578,"nodeType":"PlaceholderStatement","src":"1117:1:17"}]},"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"981:77:17","text":" @dev Throws if called by any account other than the owner."},"id":2580,"name":"onlyOwner","nameLocation":"1072:9:17","nodeType":"ModifierDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[],"src":"1081:2:17"},"src":"1063:62:17","virtual":false,"visibility":"internal"},{"body":{"id":2588,"nodeType":"Block","src":"1256:30:17","statements":[{"expression":{"id":2586,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"1273:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2585,"id":2587,"nodeType":"Return","src":"1266:13:17"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"1131:65:17","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:17","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"1215:2:17"},"returnParameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2589,"src":"1247:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:17"},"scope":2661,"src":"1201:85:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2602,"nodeType":"Block","src":"1404:85:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1422:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2596,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"1433:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2593,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2601,"nodeType":"ExpressionStatement","src":"1414:68:17"}]},"documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"1292:62:17","text":" @dev Throws if the sender is not the owner."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:17","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[],"src":"1379:2:17"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[],"src":"1404:0:17"},"scope":2661,"src":"1359:130:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2616,"nodeType":"Block","src":"1878:47:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:17","typeDescriptions":{}}},"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2609,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"1888:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2615,"nodeType":"ExpressionStatement","src":"1888:30:17"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"1495:324:17","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2617,"implemented":true,"kind":"function","modifiers":[{"id":2607,"kind":"modifierInvocation","modifierName":{"id":2606,"name":"onlyOwner","nameLocations":["1868:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2580,"src":"1868:9:17"},"nodeType":"ModifierInvocation","src":"1868:9:17"}],"name":"renounceOwnership","nameLocation":"1833:17:17","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[],"src":"1850:2:17"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[],"src":"1878:0:17"},"scope":2661,"src":"1824:101:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2639,"nodeType":"Block","src":"2144:128:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2162:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:17","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":2625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2634,"nodeType":"ExpressionStatement","src":"2154:73:17"},{"expression":{"arguments":[{"id":2636,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"2256:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2635,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"2237:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2638,"nodeType":"ExpressionStatement","src":"2237:28:17"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"1931:138:17","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2640,"implemented":true,"kind":"function","modifiers":[{"id":2623,"kind":"modifierInvocation","modifierName":{"id":2622,"name":"onlyOwner","nameLocations":["2134:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2580,"src":"2134:9:17"},"nodeType":"ModifierInvocation","src":"2134:9:17"}],"name":"transferOwnership","nameLocation":"2083:17:17","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:17","nodeType":"VariableDeclaration","scope":2640,"src":"2101:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:17"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[],"src":"2144:0:17"},"scope":2661,"src":"2074:198:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2659,"nodeType":"Block","src":"2489:124:17","statements":[{"assignments":[2647],"declarations":[{"constant":false,"id":2647,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:17","nodeType":"VariableDeclaration","scope":2659,"src":"2499:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2649,"initialValue":{"id":2648,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2518:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:17"},{"expression":{"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2650,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"2534:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2651,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"2543:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2653,"nodeType":"ExpressionStatement","src":"2534:17:17"},{"eventCall":{"arguments":[{"id":2655,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"2587:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2656,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"2597:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2654,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"2566:20:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"EmitStatement","src":"2561:45:17"}]},"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"2278:143:17","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2660,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:17","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:17","nodeType":"VariableDeclaration","scope":2660,"src":"2454:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:17"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[],"src":"2489:0:17"},"scope":2661,"src":"2426:187:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2662,"src":"654:1961:17","usedErrors":[]}],"src":"102:2514:17"},"id":17},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[2741]},"id":2742,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2663,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"125:629:18","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"},"fullyImplemented":true,"id":2741,"linearizedBaseContracts":[2741],"name":"Clones","nameLocation":"763:6:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2683,"nodeType":"Block","src":"1048:684:18","statements":[{"AST":{"nodeType":"YulBlock","src":"1110:549:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1315:4:18","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:4:18","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1338:4:18","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1344:14:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1334:3:18"},"nodeType":"YulFunctionCall","src":"1334:25:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1324:3:18"},"nodeType":"YulFunctionCall","src":"1324:36:18"},{"kind":"number","nodeType":"YulLiteral","src":"1362:48:18","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1321:2:18"},"nodeType":"YulFunctionCall","src":"1321:90:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1308:6:18"},"nodeType":"YulFunctionCall","src":"1308:104:18"},"nodeType":"YulExpressionStatement","src":"1308:104:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1533:4:18","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1546:4:18","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"1552:14:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1542:3:18"},"nodeType":"YulFunctionCall","src":"1542:25:18"},{"kind":"number","nodeType":"YulLiteral","src":"1569:32:18","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1539:2:18"},"nodeType":"YulFunctionCall","src":"1539:63:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1526:6:18"},"nodeType":"YulFunctionCall","src":"1526:77:18"},"nodeType":"YulExpressionStatement","src":"1526:77:18"},{"nodeType":"YulAssignment","src":"1616:33:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1635:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1638:4:18","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"1644:4:18","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1628:6:18"},"nodeType":"YulFunctionCall","src":"1628:21:18"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1616:8:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2667,"isOffset":false,"isSlot":false,"src":"1344:14:18","valueSize":1},{"declaration":2667,"isOffset":false,"isSlot":false,"src":"1552:14:18","valueSize":1},{"declaration":2670,"isOffset":false,"isSlot":false,"src":"1616:8:18","valueSize":1}],"id":2672,"nodeType":"InlineAssembly","src":"1101:558:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"1676:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1696:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1688:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"1688:7:18","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1688:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1676:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a20637265617465206661696c6564","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1700:24:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""},"value":"ERC1167: create failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""}],"id":2673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1668:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1668:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"ExpressionStatement","src":"1668:57:18"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"776:192:18","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":2684,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"982:5:18","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"implementation","nameLocation":"996:14:18","nodeType":"VariableDeclaration","scope":2684,"src":"988:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"987:24:18"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"instance","nameLocation":"1038:8:18","nodeType":"VariableDeclaration","scope":2684,"src":"1030:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"1030:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1029:18:18"},"scope":2741,"src":"973:759:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2705,"nodeType":"Block","src":"2209:692:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2271:556:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2476:4:18","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2489:4:18","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2499:4:18","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2505:14:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2495:3:18"},"nodeType":"YulFunctionCall","src":"2495:25:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2485:3:18"},"nodeType":"YulFunctionCall","src":"2485:36:18"},{"kind":"number","nodeType":"YulLiteral","src":"2523:48:18","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2482:2:18"},"nodeType":"YulFunctionCall","src":"2482:90:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2469:6:18"},"nodeType":"YulFunctionCall","src":"2469:104:18"},"nodeType":"YulExpressionStatement","src":"2469:104:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2694:4:18","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2707:4:18","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"2713:14:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2703:3:18"},"nodeType":"YulFunctionCall","src":"2703:25:18"},{"kind":"number","nodeType":"YulLiteral","src":"2730:32:18","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2700:2:18"},"nodeType":"YulFunctionCall","src":"2700:63:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2687:6:18"},"nodeType":"YulFunctionCall","src":"2687:77:18"},"nodeType":"YulExpressionStatement","src":"2687:77:18"},{"nodeType":"YulAssignment","src":"2777:40:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2797:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2800:4:18","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"2806:4:18","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2812:4:18"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2789:7:18"},"nodeType":"YulFunctionCall","src":"2789:28:18"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2777:8:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2687,"isOffset":false,"isSlot":false,"src":"2505:14:18","valueSize":1},{"declaration":2687,"isOffset":false,"isSlot":false,"src":"2713:14:18","valueSize":1},{"declaration":2692,"isOffset":false,"isSlot":false,"src":"2777:8:18","valueSize":1},{"declaration":2689,"isOffset":false,"isSlot":false,"src":"2812:4:18","valueSize":1}],"id":2694,"nodeType":"InlineAssembly","src":"2262:565:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"2844:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2864:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2856:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2697,"name":"address","nodeType":"ElementaryTypeName","src":"2856:7:18","typeDescriptions":{}}},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2856:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2844:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a2063726561746532206661696c6564","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2868:25:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""},"value":"ERC1167: create2 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""}],"id":2695,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2836:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2836:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2704,"nodeType":"ExpressionStatement","src":"2836:58:18"}]},"documentation":{"id":2685,"nodeType":"StructuredDocumentation","src":"1738:364:18","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"2116:18:18","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"implementation","nameLocation":"2143:14:18","nodeType":"VariableDeclaration","scope":2706,"src":"2135:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"2135:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"salt","nameLocation":"2167:4:18","nodeType":"VariableDeclaration","scope":2706,"src":"2159:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2134:38:18"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"instance","nameLocation":"2199:8:18","nodeType":"VariableDeclaration","scope":2706,"src":"2191:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"2191:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2190:18:18"},"scope":2741,"src":"2107:794:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2719,"nodeType":"Block","src":"3176:515:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3238:447:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3252:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3263:5:18"},"nodeType":"YulFunctionCall","src":"3263:11:18"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3256:3:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3298:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3303:4:18","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3294:3:18"},"nodeType":"YulFunctionCall","src":"3294:14:18"},{"name":"deployer","nodeType":"YulIdentifier","src":"3310:8:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3287:6:18"},"nodeType":"YulFunctionCall","src":"3287:32:18"},"nodeType":"YulExpressionStatement","src":"3287:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3343:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3348:4:18","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3339:3:18"},"nodeType":"YulFunctionCall","src":"3339:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"3355:34:18","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3332:6:18"},"nodeType":"YulFunctionCall","src":"3332:58:18"},"nodeType":"YulExpressionStatement","src":"3332:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3414:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3419:4:18","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3410:3:18"},"nodeType":"YulFunctionCall","src":"3410:14:18"},{"name":"implementation","nodeType":"YulIdentifier","src":"3426:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3403:6:18"},"nodeType":"YulFunctionCall","src":"3403:38:18"},"nodeType":"YulExpressionStatement","src":"3403:38:18"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3461:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3466:42:18","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3454:6:18"},"nodeType":"YulFunctionCall","src":"3454:55:18"},"nodeType":"YulExpressionStatement","src":"3454:55:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3533:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3538:4:18","type":"","value":"0x58"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:18"},"nodeType":"YulFunctionCall","src":"3529:14:18"},{"name":"salt","nodeType":"YulIdentifier","src":"3545:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3522:6:18"},"nodeType":"YulFunctionCall","src":"3522:28:18"},"nodeType":"YulExpressionStatement","src":"3522:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3574:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3579:4:18","type":"","value":"0x78"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3570:3:18"},"nodeType":"YulFunctionCall","src":"3570:14:18"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3600:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3605:4:18","type":"","value":"0x0c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3596:3:18"},"nodeType":"YulFunctionCall","src":"3596:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"3612:4:18","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3586:9:18"},"nodeType":"YulFunctionCall","src":"3586:31:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3563:6:18"},"nodeType":"YulFunctionCall","src":"3563:55:18"},"nodeType":"YulExpressionStatement","src":"3563:55:18"},{"nodeType":"YulAssignment","src":"3631:44:18","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3658:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3663:4:18","type":"","value":"0x43"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3654:3:18"},"nodeType":"YulFunctionCall","src":"3654:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"3670:4:18","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3644:9:18"},"nodeType":"YulFunctionCall","src":"3644:31:18"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3631:9:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2713,"isOffset":false,"isSlot":false,"src":"3310:8:18","valueSize":1},{"declaration":2709,"isOffset":false,"isSlot":false,"src":"3426:14:18","valueSize":1},{"declaration":2716,"isOffset":false,"isSlot":false,"src":"3631:9:18","valueSize":1},{"declaration":2711,"isOffset":false,"isSlot":false,"src":"3545:4:18","valueSize":1}],"id":2718,"nodeType":"InlineAssembly","src":"3229:456:18"}]},"documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"2907:99:18","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":2720,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3020:27:18","nodeType":"FunctionDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"implementation","nameLocation":"3065:14:18","nodeType":"VariableDeclaration","scope":2720,"src":"3057:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"3057:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"salt","nameLocation":"3097:4:18","nodeType":"VariableDeclaration","scope":2720,"src":"3089:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3089:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"deployer","nameLocation":"3119:8:18","nodeType":"VariableDeclaration","scope":2720,"src":"3111:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"3111:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3047:86:18"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"predicted","nameLocation":"3165:9:18","nodeType":"VariableDeclaration","scope":2720,"src":"3157:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"3157:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3156:19:18"},"scope":2741,"src":"3011:680:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2739,"nodeType":"Block","src":"3940:88:18","statements":[{"expression":{"arguments":[{"id":2731,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"3985:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2732,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"4001:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2735,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4015:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$2741","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$2741","typeString":"library Clones"}],"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:18","typeDescriptions":{}}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2730,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[2720,2740],"referencedDeclaration":2720,"src":"3957:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3957:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2729,"id":2738,"nodeType":"Return","src":"3950:71:18"}]},"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"3697:99:18","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3810:27:18","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"implementation","nameLocation":"3855:14:18","nodeType":"VariableDeclaration","scope":2740,"src":"3847:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"3847:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"salt","nameLocation":"3887:4:18","nodeType":"VariableDeclaration","scope":2740,"src":"3879:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3879:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3837:60:18"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"predicted","nameLocation":"3929:9:18","nodeType":"VariableDeclaration","scope":2740,"src":"3921:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3920:19:18"},"scope":2741,"src":"3801:227:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2742,"src":"755:3275:18","usedErrors":[]}],"src":"100:3931:18"},"id":18},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2763]},"id":2764,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2743,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:19"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"111:496:19","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2763,"linearizedBaseContracts":[2763],"name":"Context","nameLocation":"626:7:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":2752,"nodeType":"Block","src":"702:34:19","statements":[{"expression":{"expression":{"id":2749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:19","memberName":"sender","nodeType":"MemberAccess","src":"719:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2748,"id":2751,"nodeType":"Return","src":"712:17:19"}]},"id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:19","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[],"src":"659:2:19"},"returnParameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2753,"src":"693:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:19"},"scope":2763,"src":"640:96:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2761,"nodeType":"Block","src":"809:32:19","statements":[{"expression":{"expression":{"id":2758,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:19","memberName":"data","nodeType":"MemberAccess","src":"826:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2757,"id":2760,"nodeType":"Return","src":"819:15:19"}]},"id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:19","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[],"src":"759:2:19"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"793:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2755,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:19"},"scope":2763,"src":"742:99:19","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2764,"src":"608:235:19","usedErrors":[]}],"src":"86:758:19"},"id":19},"contracts/AstroToken.sol":{"ast":{"absolutePath":"contracts/AstroToken.sol","exportedSymbols":{"AddressUpgradeable":[2322],"AstroToken":[2941],"ContextUpgradeable":[2364],"ERC1967UpgradeUpgradeable":[486],"ERC20BurnableUpgradeable":[1555],"ERC20Upgradeable":[1413],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"IERC20MetadataUpgradeable":[1580],"IERC20Upgradeable":[1491],"Initializable":[665],"OwnableUpgradeable":[131],"StorageSlotUpgradeable":[2548],"UUPSUpgradeable":[801]},"id":2942,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2765,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":2766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2942,"sourceUnit":1414,"src":"57:78:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","id":2767,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2942,"sourceUnit":1556,"src":"136:97:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2768,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2942,"sourceUnit":132,"src":"234:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2769,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2942,"sourceUnit":666,"src":"310:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2770,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2942,"sourceUnit":802,"src":"386:77:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2771,"name":"Initializable","nameLocations":["493:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"493:13:20"},"id":2772,"nodeType":"InheritanceSpecifier","src":"493:13:20"},{"baseName":{"id":2773,"name":"ERC20Upgradeable","nameLocations":["513:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"513:16:20"},"id":2774,"nodeType":"InheritanceSpecifier","src":"513:16:20"},{"baseName":{"id":2775,"name":"ERC20BurnableUpgradeable","nameLocations":["536:24:20"],"nodeType":"IdentifierPath","referencedDeclaration":1555,"src":"536:24:20"},"id":2776,"nodeType":"InheritanceSpecifier","src":"536:24:20"},{"baseName":{"id":2777,"name":"OwnableUpgradeable","nameLocations":["567:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"567:18:20"},"id":2778,"nodeType":"InheritanceSpecifier","src":"567:18:20"},{"baseName":{"id":2779,"name":"UUPSUpgradeable","nameLocations":["592:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":801,"src":"592:15:20"},"id":2780,"nodeType":"InheritanceSpecifier","src":"592:15:20"}],"canonicalName":"AstroToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2941,"linearizedBaseContracts":[2941,801,486,152,162,131,1555,1413,1580,1491,2364,665],"name":"AstroToken","nameLocation":"474:10:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"9b7e3070","id":2782,"mutability":"mutable","name":"astrologer","nameLocation":"630:10:20","nodeType":"VariableDeclaration","scope":2941,"src":"615:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"de866db1","id":2784,"mutability":"mutable","name":"buyContract","nameLocation":"661:11:20","nodeType":"VariableDeclaration","scope":2941,"src":"646:26:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"646:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"392e53cd","id":2786,"mutability":"mutable","name":"isInitialized","nameLocation":"690:13:20","nodeType":"VariableDeclaration","scope":2941,"src":"678:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2785,"name":"bool","nodeType":"ElementaryTypeName","src":"678:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"anonymous":false,"eventSelector":"66ade9796bf49316a9f90919f336baf2ab35f33f927c08e14e934bccdbddef7c","id":2796,"name":"AstroTokenInitialized","nameLocation":"720:21:20","nodeType":"EventDefinition","parameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"767:10:20","nodeType":"VariableDeclaration","scope":2796,"src":"751:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2787,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2790,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"794:4:20","nodeType":"VariableDeclaration","scope":2796,"src":"787:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2789,"name":"string","nodeType":"ElementaryTypeName","src":"787:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2792,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"815:6:20","nodeType":"VariableDeclaration","scope":2796,"src":"808:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2791,"name":"string","nodeType":"ElementaryTypeName","src":"808:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2794,"indexed":false,"mutability":"mutable","name":"totalSupply","nameLocation":"839:11:20","nodeType":"VariableDeclaration","scope":2796,"src":"831:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"741:115:20"},"src":"714:143:20"},{"body":{"id":2803,"nodeType":"Block","src":"930:39:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2800,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"940:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"940:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"ExpressionStatement","src":"940:22:20"}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"863:48:20","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":2804,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[],"src":"927:2:20"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"930:0:20"},"scope":2941,"src":"916:53:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2863,"nodeType":"Block","src":"1169:502:20","statements":[{"expression":{"arguments":[{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1187:14:20","subExpression":{"id":2820,"name":"isInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"1188:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920696e697469616c697a6564","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1203:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0","typeString":"literal_string \"Already initialized\""},"value":"Already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0","typeString":"literal_string \"Already initialized\""}],"id":2819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1179:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1179:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2824,"nodeType":"ExpressionStatement","src":"1179:46:20"},{"expression":{"arguments":[{"id":2826,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"1257:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2827,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"1264:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2825,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"1244:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1244:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2829,"nodeType":"ExpressionStatement","src":"1244:28:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2830,"name":"__ERC20Burnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"1282:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1282:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2832,"nodeType":"ExpressionStatement","src":"1282:22:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2833,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1314:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1314:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2835,"nodeType":"ExpressionStatement","src":"1314:16:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2836,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"1340:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1340:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2838,"nodeType":"ExpressionStatement","src":"1340:24:20"},{"expression":{"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2839,"name":"astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"1383:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2840,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"1396:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1383:24:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2842,"nodeType":"ExpressionStatement","src":"1383:24:20"},{"expression":{"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2843,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"1417:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2844,"name":"_buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"1431:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1417:26:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2846,"nodeType":"ExpressionStatement","src":"1417:26:20"},{"expression":{"arguments":[{"id":2848,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"1511:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2849,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"1524:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2847,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1505:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1505:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2851,"nodeType":"ExpressionStatement","src":"1505:32:20"},{"expression":{"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2852,"name":"isInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"1556:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1572:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1556:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2855,"nodeType":"ExpressionStatement","src":"1556:20:20"},{"eventCall":{"arguments":[{"id":2857,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"1622:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2858,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"1635:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2859,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"1642:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2860,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"1651:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2856,"name":"AstroTokenInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"1600:21:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,string memory,string memory,uint256)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1600:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2862,"nodeType":"EmitStatement","src":"1595:69:20"}]},"functionSelector":"7e77c503","id":2864,"implemented":true,"kind":"function","modifiers":[{"id":2817,"kind":"modifierInvocation","modifierName":{"id":2816,"name":"initializer","nameLocations":["1157:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"1157:11:20"},"nodeType":"ModifierInvocation","src":"1157:11:20"}],"name":"initialize","nameLocation":"984:10:20","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"_name","nameLocation":"1018:5:20","nodeType":"VariableDeclaration","scope":2864,"src":"1004:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2805,"name":"string","nodeType":"ElementaryTypeName","src":"1004:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"_symbol","nameLocation":"1047:7:20","nodeType":"VariableDeclaration","scope":2864,"src":"1033:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2807,"name":"string","nodeType":"ElementaryTypeName","src":"1033:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"_totalSupply","nameLocation":"1072:12:20","nodeType":"VariableDeclaration","scope":2864,"src":"1064:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"_astrologer","nameLocation":"1102:11:20","nodeType":"VariableDeclaration","scope":2864,"src":"1094:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"_buyContract","nameLocation":"1131:12:20","nodeType":"VariableDeclaration","scope":2864,"src":"1123:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"994:155:20"},"returnParameters":{"id":2818,"nodeType":"ParameterList","parameters":[],"src":"1169:0:20"},"scope":2941,"src":"975:696:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2890,"nodeType":"Block","src":"1728:129:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1746:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1750:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1746:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1760:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1760:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1746:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2877,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1771:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1775:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1771:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2879,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"1785:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1771:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1746:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206d696e74","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1798:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""},"value":"Not authorized to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""}],"id":2871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1738:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1738:85:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2884,"nodeType":"ExpressionStatement","src":"1738:85:20"},{"expression":{"arguments":[{"id":2886,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"1839:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2887,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"1843:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2885,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1833:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1833:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"ExpressionStatement","src":"1833:17:20"}]},"functionSelector":"40c10f19","id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1686:4:20","nodeType":"FunctionDefinition","parameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"to","nameLocation":"1699:2:20","nodeType":"VariableDeclaration","scope":2891,"src":"1691:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"1691:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2868,"mutability":"mutable","name":"amount","nameLocation":"1711:6:20","nodeType":"VariableDeclaration","scope":2891,"src":"1703:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1703:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1690:28:20"},"returnParameters":{"id":2870,"nodeType":"ParameterList","parameters":[],"src":"1728:0:20"},"scope":2941,"src":"1677:180:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1549],"body":{"id":2918,"nodeType":"Block","src":"1930:134:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1948:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1952:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1948:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2902,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1962:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1948:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1973:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1977:6:20","memberName":"sender","nodeType":"MemberAccess","src":"1973:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2907,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"1987:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1973:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1948:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206275726e","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2000:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816","typeString":"literal_string \"Not authorized to burn\""},"value":"Not authorized to burn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816","typeString":"literal_string \"Not authorized to burn\""}],"id":2899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1940:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:85:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2912,"nodeType":"ExpressionStatement","src":"1940:85:20"},{"expression":{"arguments":[{"id":2914,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2041:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"2050:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2913,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"2035:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"ExpressionStatement","src":"2035:22:20"}]},"functionSelector":"79cc6790","id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1872:8:20","nodeType":"FunctionDefinition","overrides":{"id":2897,"nodeType":"OverrideSpecifier","overrides":[],"src":"1921:8:20"},"parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"account","nameLocation":"1889:7:20","nodeType":"VariableDeclaration","scope":2919,"src":"1881:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"amount","nameLocation":"1906:6:20","nodeType":"VariableDeclaration","scope":2919,"src":"1898:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1898:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1880:33:20"},"returnParameters":{"id":2898,"nodeType":"ParameterList","parameters":[],"src":"1930:0:20"},"scope":2941,"src":"1863:201:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2930,"nodeType":"Block","src":"2135:43:20","statements":[{"expression":{"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2926,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"2145:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2927,"name":"_buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"2159:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2145:26:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2929,"nodeType":"ExpressionStatement","src":"2145:26:20"}]},"functionSelector":"7103ef0d","id":2931,"implemented":true,"kind":"function","modifiers":[{"id":2924,"kind":"modifierInvocation","modifierName":{"id":2923,"name":"onlyOwner","nameLocations":["2125:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2125:9:20"},"nodeType":"ModifierInvocation","src":"2125:9:20"}],"name":"setBuyContract","nameLocation":"2079:14:20","nodeType":"FunctionDefinition","parameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"_buyContract","nameLocation":"2102:12:20","nodeType":"VariableDeclaration","scope":2931,"src":"2094:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2920,"name":"address","nodeType":"ElementaryTypeName","src":"2094:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2093:22:20"},"returnParameters":{"id":2925,"nodeType":"ParameterList","parameters":[],"src":"2135:0:20"},"scope":2941,"src":"2070:108:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[795],"body":{"id":2939,"nodeType":"Block","src":"2266:2:20","statements":[]},"id":2940,"implemented":true,"kind":"function","modifiers":[{"id":2937,"kind":"modifierInvocation","modifierName":{"id":2936,"name":"onlyOwner","nameLocations":["2256:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2256:9:20"},"nodeType":"ModifierInvocation","src":"2256:9:20"}],"name":"_authorizeUpgrade","nameLocation":"2193:17:20","nodeType":"FunctionDefinition","overrides":{"id":2935,"nodeType":"OverrideSpecifier","overrides":[],"src":"2247:8:20"},"parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"newImplementation","nameLocation":"2219:17:20","nodeType":"VariableDeclaration","scope":2940,"src":"2211:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2210:27:20"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[],"src":"2266:0:20"},"scope":2941,"src":"2184:84:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2942,"src":"465:1805:20","usedErrors":[]}],"src":"32:2239:20"},"id":20},"contracts/AstroTokenFactory.sol":{"ast":{"absolutePath":"contracts/AstroTokenFactory.sol","exportedSymbols":{"AddressUpgradeable":[2322],"AstroToken":[2941],"AstroTokenFactory":[3133],"BuyTokenContract":[4595],"Clones":[2741],"Context":[2763],"ContextUpgradeable":[2364],"ERC1967UpgradeUpgradeable":[486],"ERC20BurnableUpgradeable":[1555],"ERC20Upgradeable":[1413],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"IERC20MetadataUpgradeable":[1580],"IERC20PermitUpgradeable":[1616],"IERC20Upgradeable":[1491],"Initializable":[665],"Ownable":[2661],"OwnableUpgradeable":[131],"SafeERC20Upgradeable":[1992],"StorageSlotUpgradeable":[2548],"UUPSUpgradeable":[801]},"id":3134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2943,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":2944,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3134,"sourceUnit":2742,"src":"57:50:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3134,"sourceUnit":2662,"src":"108:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AstroToken.sol","file":"./AstroToken.sol","id":2946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3134,"sourceUnit":2942,"src":"161:26:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/BuyTokenContract.sol","file":"./BuyTokenContract.sol","id":2947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3134,"sourceUnit":4596,"src":"188:32:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2948,"name":"Ownable","nameLocations":["252:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":2661,"src":"252:7:21"},"id":2949,"nodeType":"InheritanceSpecifier","src":"252:7:21"}],"canonicalName":"AstroTokenFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3133,"linearizedBaseContracts":[3133,2661,2763],"name":"AstroTokenFactory","nameLocation":"231:17:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"34416f63","id":2951,"mutability":"mutable","name":"astroTokenImplementation","nameLocation":"281:24:21","nodeType":"VariableDeclaration","scope":3133,"src":"266:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"266:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"07d4efe3","id":2953,"mutability":"mutable","name":"buyTokenContractImplementation","nameLocation":"326:30:21","nodeType":"VariableDeclaration","scope":3133,"src":"311:45:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2952,"name":"address","nodeType":"ElementaryTypeName","src":"311:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"6fd31a41","id":2955,"mutability":"mutable","name":"astrologerManager","nameLocation":"377:17:21","nodeType":"VariableDeclaration","scope":3133,"src":"362:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"73c84d21","id":2957,"mutability":"mutable","name":"reputationScorer","nameLocation":"415:16:21","nodeType":"VariableDeclaration","scope":3133,"src":"400:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"d7b4770d872cf541c7302a5671e3ceb80df26b15aacab2ba0f395c3056b9ad5f","id":2965,"name":"TokenDeployed","nameLocation":"448:13:21","nodeType":"EventDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"indexed":true,"mutability":"mutable","name":"tokenContract","nameLocation":"478:13:21","nodeType":"VariableDeclaration","scope":2965,"src":"462:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2958,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2961,"indexed":true,"mutability":"mutable","name":"buyContract","nameLocation":"509:11:21","nodeType":"VariableDeclaration","scope":2965,"src":"493:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2963,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"538:10:21","nodeType":"VariableDeclaration","scope":2965,"src":"522:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"522:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"461:88:21"},"src":"442:108:21"},{"body":{"id":2993,"nodeType":"Block","src":"706:262:21","statements":[{"expression":{"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2974,"name":"astroTokenImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"716:24:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2975,"name":"_astroTokenImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"743:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"716:52:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2977,"nodeType":"ExpressionStatement","src":"716:52:21"},{"expression":{"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2978,"name":"buyTokenContractImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"778:30:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2979,"name":"_buyTokenContractImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"811:31:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"778:64:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2981,"nodeType":"ExpressionStatement","src":"778:64:21"},{"expression":{"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2982,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"852:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2983,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"872:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"852:38:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2985,"nodeType":"ExpressionStatement","src":"852:38:21"},{"expression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"900:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"927:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"919:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2987,"name":"address","nodeType":"ElementaryTypeName","src":"919:7:21","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"919:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"900:29:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2992,"nodeType":"ExpressionStatement","src":"900:29:21"}]},"id":2994,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"_astroTokenImplementation","nameLocation":"589:25:21","nodeType":"VariableDeclaration","scope":2994,"src":"581:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"_buyTokenContractImplementation","nameLocation":"632:31:21","nodeType":"VariableDeclaration","scope":2994,"src":"624:39:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"_astrologerManager","nameLocation":"681:18:21","nodeType":"VariableDeclaration","scope":2994,"src":"673:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2970,"name":"address","nodeType":"ElementaryTypeName","src":"673:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"571:134:21"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[],"src":"706:0:21"},"scope":3133,"src":"560:408:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3089,"nodeType":"Block","src":"1221:938:21","statements":[{"expression":{"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3011,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"1264:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3014,"name":"astroTokenImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"1293:24:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3012,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$2741_$","typeString":"type(library Clones)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1287:5:21","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":2684,"src":"1280:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1280:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1264:54:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3017,"nodeType":"ExpressionStatement","src":"1264:54:21"},{"expression":{"arguments":[{"id":3022,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"1365:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3023,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"1372:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3024,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"1381:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3025,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1395:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1416:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1408:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3026,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:21","typeDescriptions":{}}},"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1408:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3019,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"1339:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3018,"name":"AstroToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"1328:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AstroToken_$2941_$","typeString":"type(contract AstroToken)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AstroToken_$2941","typeString":"contract AstroToken"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1354:10:21","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":2864,"src":"1328:36:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,string memory,uint256,address,address) external"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:91:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3031,"nodeType":"ExpressionStatement","src":"1328:91:21"},{"expression":{"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3032,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"1469:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3035,"name":"buyTokenContractImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"1496:30:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3033,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"1483:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$2741_$","typeString":"type(library Clones)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1490:5:21","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":2684,"src":"1483:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1483:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1469:58:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3038,"nodeType":"ExpressionStatement","src":"1469:58:21"},{"expression":{"arguments":[{"id":3043,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"1578:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1605:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1597:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"1597:7:21","typeDescriptions":{}}},"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"313030","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1609:3:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"expression":{"arguments":[{"id":3040,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"1554:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3039,"name":"BuyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"1537:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BuyTokenContract_$4595_$","typeString":"type(contract BuyTokenContract)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1537:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BuyTokenContract_$4595","typeString":"contract BuyTokenContract"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:10:21","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"1537:40:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1537:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3050,"nodeType":"ExpressionStatement","src":"1537:76:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3051,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"1681:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1709:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1701:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3052,"name":"address","nodeType":"ElementaryTypeName","src":"1701:7:21","typeDescriptions":{}}},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1701:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1681:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3065,"nodeType":"IfStatement","src":"1677:128:21","trueBody":{"id":3064,"nodeType":"Block","src":"1713:92:21","statements":[{"expression":{"arguments":[{"id":3061,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"1777:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3058,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"1744:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3057,"name":"BuyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"1727:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BuyTokenContract_$4595_$","typeString":"type(contract BuyTokenContract)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BuyTokenContract_$4595","typeString":"contract BuyTokenContract"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1757:19:21","memberName":"setReputationScorer","nodeType":"MemberAccess","referencedDeclaration":4537,"src":"1727:49:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3063,"nodeType":"ExpressionStatement","src":"1727:67:21"}]}},{"expression":{"arguments":[{"id":3070,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"1909:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3071,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1924:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3072,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"1937:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3073,"name":"_initialPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"1951:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3067,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"1882:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3066,"name":"BuyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"1865:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BuyTokenContract_$4595_$","typeString":"type(contract BuyTokenContract)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1865:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BuyTokenContract_$4595","typeString":"contract BuyTokenContract"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1895:13:21","memberName":"registerToken","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"1865:43:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256) external"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1865:100:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3075,"nodeType":"ExpressionStatement","src":"1865:100:21"},{"expression":{"arguments":[{"id":3080,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"2062:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3077,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"2032:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3076,"name":"AstroToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"2021:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AstroToken_$2941_$","typeString":"type(contract AstroToken)"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AstroToken_$2941","typeString":"contract AstroToken"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:21","memberName":"setBuyContract","nodeType":"MemberAccess","referencedDeclaration":2931,"src":"2021:40:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3082,"nodeType":"ExpressionStatement","src":"2021:53:21"},{"eventCall":{"arguments":[{"id":3084,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"2112:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3085,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"2127:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3086,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"2140:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3083,"name":"TokenDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"2098:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3088,"nodeType":"EmitStatement","src":"2093:59:21"}]},"functionSelector":"32e1d0ec","id":3090,"implemented":true,"kind":"function","modifiers":[],"name":"deployTokenPair","nameLocation":"987:15:21","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"_name","nameLocation":"1026:5:21","nodeType":"VariableDeclaration","scope":3090,"src":"1012:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"1012:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"_symbol","nameLocation":"1055:7:21","nodeType":"VariableDeclaration","scope":3090,"src":"1041:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2997,"name":"string","nodeType":"ElementaryTypeName","src":"1041:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"_totalSupply","nameLocation":"1080:12:21","nodeType":"VariableDeclaration","scope":3090,"src":"1072:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"_initialPrice","nameLocation":"1110:13:21","nodeType":"VariableDeclaration","scope":3090,"src":"1102:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"_astrologer","nameLocation":"1141:11:21","nodeType":"VariableDeclaration","scope":3090,"src":"1133:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1002:156:21"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"tokenContract","nameLocation":"1185:13:21","nodeType":"VariableDeclaration","scope":3090,"src":"1177:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"buyContract","nameLocation":"1208:11:21","nodeType":"VariableDeclaration","scope":3090,"src":"1200:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1176:44:21"},"scope":3133,"src":"978:1181:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3101,"nodeType":"Block","src":"2246:55:21","statements":[{"expression":{"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3097,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"2256:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3098,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"2276:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2256:38:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3100,"nodeType":"ExpressionStatement","src":"2256:38:21"}]},"functionSelector":"44cda485","id":3102,"implemented":true,"kind":"function","modifiers":[{"id":3095,"kind":"modifierInvocation","modifierName":{"id":3094,"name":"onlyOwner","nameLocations":["2236:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2580,"src":"2236:9:21"},"nodeType":"ModifierInvocation","src":"2236:9:21"}],"name":"setAstrologerManager","nameLocation":"2178:20:21","nodeType":"FunctionDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"_astrologerManager","nameLocation":"2207:18:21","nodeType":"VariableDeclaration","scope":3102,"src":"2199:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"2199:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2198:28:21"},"returnParameters":{"id":3096,"nodeType":"ParameterList","parameters":[],"src":"2246:0:21"},"scope":3133,"src":"2169:132:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3113,"nodeType":"Block","src":"2386:53:21","statements":[{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"2396:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3110,"name":"_reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"2415:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2396:36:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3112,"nodeType":"ExpressionStatement","src":"2396:36:21"}]},"functionSelector":"e9725c21","id":3114,"implemented":true,"kind":"function","modifiers":[{"id":3107,"kind":"modifierInvocation","modifierName":{"id":3106,"name":"onlyOwner","nameLocations":["2376:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2580,"src":"2376:9:21"},"nodeType":"ModifierInvocation","src":"2376:9:21"}],"name":"setReputationScorer","nameLocation":"2320:19:21","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"_reputationScorer","nameLocation":"2348:17:21","nodeType":"VariableDeclaration","scope":3114,"src":"2340:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3103,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2339:27:21"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[],"src":"2386:0:21"},"scope":3133,"src":"2311:128:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3131,"nodeType":"Block","src":"2594:143:21","statements":[{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3123,"name":"astroTokenImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"2604:24:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3124,"name":"_astroTokenImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"2631:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2604:52:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3126,"nodeType":"ExpressionStatement","src":"2604:52:21"},{"expression":{"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3127,"name":"buyTokenContractImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"2666:30:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3128,"name":"_buyTokenContractImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"2699:31:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2666:64:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3130,"nodeType":"ExpressionStatement","src":"2666:64:21"}]},"functionSelector":"85bff341","id":3132,"implemented":true,"kind":"function","modifiers":[{"id":3121,"kind":"modifierInvocation","modifierName":{"id":3120,"name":"onlyOwner","nameLocations":["2584:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2580,"src":"2584:9:21"},"nodeType":"ModifierInvocation","src":"2584:9:21"}],"name":"setImplementations","nameLocation":"2458:18:21","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"_astroTokenImplementation","nameLocation":"2494:25:21","nodeType":"VariableDeclaration","scope":3132,"src":"2486:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"2486:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"_buyTokenContractImplementation","nameLocation":"2537:31:21","nodeType":"VariableDeclaration","scope":3132,"src":"2529:39:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2476:98:21"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[],"src":"2594:0:21"},"scope":3133,"src":"2449:288:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3134,"src":"222:2517:21","usedErrors":[]}],"src":"32:2708:21"},"id":21},"contracts/AstroTokenLauncher.sol":{"ast":{"absolutePath":"contracts/AstroTokenLauncher.sol","exportedSymbols":{"AddressUpgradeable":[2322],"AstroToken":[2941],"AstroTokenFactory":[3133],"AstroTokenLauncher":[3720],"BuyTokenContract":[4595],"Clones":[2741],"Context":[2763],"ContextUpgradeable":[2364],"CountersUpgradeable":[2438],"ERC1967UpgradeUpgradeable":[486],"ERC20BurnableUpgradeable":[1555],"ERC20Upgradeable":[1413],"IAstrologerManager":[6715],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"IERC20MetadataUpgradeable":[1580],"IERC20PermitUpgradeable":[1616],"IERC20Upgradeable":[1491],"Initializable":[665],"Ownable":[2661],"OwnableUpgradeable":[131],"SafeERC20Upgradeable":[1992],"StorageSlotUpgradeable":[2548],"UUPSUpgradeable":[801]},"id":3721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3135,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:22"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3136,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":132,"src":"57:75:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":666,"src":"133:75:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":3138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":802,"src":"209:77:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","id":3139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":2439,"src":"287:75:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/BuyTokenContract.sol","file":"./BuyTokenContract.sol","id":3140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":4596,"src":"363:32:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AstroToken.sol","file":"./AstroToken.sol","id":3141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":2942,"src":"396:26:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AstroTokenFactory.sol","file":"./AstroTokenFactory.sol","id":3142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":3134,"src":"423:33:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAstrologerManager.sol","file":"./interfaces/IAstrologerManager.sol","id":3143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3721,"sourceUnit":6716,"src":"457:45:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3144,"name":"Initializable","nameLocations":["540:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"540:13:22"},"id":3145,"nodeType":"InheritanceSpecifier","src":"540:13:22"},{"baseName":{"id":3146,"name":"OwnableUpgradeable","nameLocations":["560:18:22"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"560:18:22"},"id":3147,"nodeType":"InheritanceSpecifier","src":"560:18:22"},{"baseName":{"id":3148,"name":"UUPSUpgradeable","nameLocations":["585:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":801,"src":"585:15:22"},"id":3149,"nodeType":"InheritanceSpecifier","src":"585:15:22"}],"canonicalName":"AstroTokenLauncher","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3720,"linearizedBaseContracts":[3720,801,486,152,162,131,2364,665],"name":"AstroTokenLauncher","nameLocation":"513:18:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3153,"libraryName":{"id":3150,"name":"CountersUpgradeable","nameLocations":["614:19:22"],"nodeType":"IdentifierPath","referencedDeclaration":2438,"src":"614:19:22"},"nodeType":"UsingForDirective","src":"608:58:22","typeName":{"id":3152,"nodeType":"UserDefinedTypeName","pathNode":{"id":3151,"name":"CountersUpgradeable.Counter","nameLocations":["638:19:22","658:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"638:27:22"},"referencedDeclaration":2370,"src":"638:27:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":3156,"mutability":"mutable","name":"_tokenIds","nameLocation":"708:9:22","nodeType":"VariableDeclaration","scope":3720,"src":"672:45:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":3155,"nodeType":"UserDefinedTypeName","pathNode":{"id":3154,"name":"CountersUpgradeable.Counter","nameLocations":["672:19:22","692:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"672:27:22"},"referencedDeclaration":2370,"src":"672:27:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"canonicalName":"AstroTokenLauncher.TokenInfo","id":3177,"members":[{"constant":false,"id":3158,"mutability":"mutable","name":"id","nameLocation":"763:2:22","nodeType":"VariableDeclaration","scope":3177,"src":"755:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"755:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"astrologer","nameLocation":"783:10:22","nodeType":"VariableDeclaration","scope":3177,"src":"775:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"tokenContract","nameLocation":"811:13:22","nodeType":"VariableDeclaration","scope":3177,"src":"803:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3161,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"buyContract","nameLocation":"842:11:22","nodeType":"VariableDeclaration","scope":3177,"src":"834:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3163,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"name","nameLocation":"870:4:22","nodeType":"VariableDeclaration","scope":3177,"src":"863:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3165,"name":"string","nodeType":"ElementaryTypeName","src":"863:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"symbol","nameLocation":"891:6:22","nodeType":"VariableDeclaration","scope":3177,"src":"884:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3167,"name":"string","nodeType":"ElementaryTypeName","src":"884:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"totalSupply","nameLocation":"915:11:22","nodeType":"VariableDeclaration","scope":3177,"src":"907:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"initialPrice","nameLocation":"944:12:22","nodeType":"VariableDeclaration","scope":3177,"src":"936:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"isActive","nameLocation":"971:8:22","nodeType":"VariableDeclaration","scope":3177,"src":"966:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3173,"name":"bool","nodeType":"ElementaryTypeName","src":"966:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"createdAt","nameLocation":"997:9:22","nodeType":"VariableDeclaration","scope":3177,"src":"989:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"735:9:22","nodeType":"StructDefinition","scope":3720,"src":"728:285:22","visibility":"public"},{"constant":false,"functionSelector":"4f64b2be","id":3182,"mutability":"mutable","name":"tokens","nameLocation":"1056:6:22","nodeType":"VariableDeclaration","scope":3720,"src":"1019:43:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo)"},"typeName":{"id":3181,"keyType":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1019:29:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo)"},"valueType":{"id":3180,"nodeType":"UserDefinedTypeName","pathNode":{"id":3179,"name":"TokenInfo","nameLocations":["1038:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"1038:9:22"},"referencedDeclaration":3177,"src":"1038:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage_ptr","typeString":"struct AstroTokenLauncher.TokenInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"21dd6760","id":3186,"mutability":"mutable","name":"astrologerToTokenId","nameLocation":"1103:19:22","nodeType":"VariableDeclaration","scope":3720,"src":"1068:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3185,"keyType":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1068:27:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1087:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"36203131","id":3190,"mutability":"mutable","name":"tokenContractToId","nameLocation":"1163:17:22","nodeType":"VariableDeclaration","scope":3720,"src":"1128:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3189,"keyType":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1128:27:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"6fd31a41","id":3192,"mutability":"mutable","name":"astrologerManager","nameLocation":"1206:17:22","nodeType":"VariableDeclaration","scope":3720,"src":"1191:32:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e77772fe","id":3194,"mutability":"mutable","name":"tokenFactory","nameLocation":"1244:12:22","nodeType":"VariableDeclaration","scope":3720,"src":"1229:27:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"1229:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cf3cf573","id":3196,"mutability":"mutable","name":"launchFee","nameLocation":"1282:9:22","nodeType":"VariableDeclaration","scope":3720,"src":"1267:24:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5a43e6dd8ff6dde13675567b53b8d147e61f48ec2bc7d6dadaf8e96904e348fe","id":3210,"name":"TokenLaunched","nameLocation":"1308:13:22","nodeType":"EventDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1347:7:22","nodeType":"VariableDeclaration","scope":3210,"src":"1331:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3200,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"1380:10:22","nodeType":"VariableDeclaration","scope":3210,"src":"1364:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3199,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3202,"indexed":false,"mutability":"mutable","name":"tokenContract","nameLocation":"1408:13:22","nodeType":"VariableDeclaration","scope":3210,"src":"1400:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"1400:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3204,"indexed":false,"mutability":"mutable","name":"buyContract","nameLocation":"1439:11:22","nodeType":"VariableDeclaration","scope":3210,"src":"1431:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"1431:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"1467:4:22","nodeType":"VariableDeclaration","scope":3210,"src":"1460:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3205,"name":"string","nodeType":"ElementaryTypeName","src":"1460:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3208,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"1488:6:22","nodeType":"VariableDeclaration","scope":3210,"src":"1481:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3207,"name":"string","nodeType":"ElementaryTypeName","src":"1481:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1321:179:22"},"src":"1302:199:22"},{"anonymous":false,"eventSelector":"c5bc70dcbaa7453c88acb052849608a31643ca7b9865b086176cfc8fa995720b","id":3216,"name":"TokenDeactivated","nameLocation":"1513:16:22","nodeType":"EventDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1555:7:22","nodeType":"VariableDeclaration","scope":3216,"src":"1539:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3214,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"1588:10:22","nodeType":"VariableDeclaration","scope":3216,"src":"1572:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1529:75:22"},"src":"1507:98:22"},{"body":{"id":3223,"nodeType":"Block","src":"1678:39:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3220,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"1688:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1688:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3222,"nodeType":"ExpressionStatement","src":"1688:22:22"}]},"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"1611:48:22","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":3224,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3218,"nodeType":"ParameterList","parameters":[],"src":"1675:2:22"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[],"src":"1678:0:22"},"scope":3720,"src":"1664:53:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3253,"nodeType":"Block","src":"1863:194:22","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3235,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1873:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3237,"nodeType":"ExpressionStatement","src":"1873:16:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3238,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"1899:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3240,"nodeType":"ExpressionStatement","src":"1899:24:22"},{"expression":{"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3241,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"1942:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3242,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"1962:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1942:38:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3244,"nodeType":"ExpressionStatement","src":"1942:38:22"},{"expression":{"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3245,"name":"tokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"1990:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3246,"name":"_tokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"2005:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1990:28:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3248,"nodeType":"ExpressionStatement","src":"1990:28:22"},{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3249,"name":"launchFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2028:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3250,"name":"_launchFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"2040:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2028:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3252,"nodeType":"ExpressionStatement","src":"2028:22:22"}]},"functionSelector":"1794bb3c","id":3254,"implemented":true,"kind":"function","modifiers":[{"id":3233,"kind":"modifierInvocation","modifierName":{"id":3232,"name":"initializer","nameLocations":["1851:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"1851:11:22"},"nodeType":"ModifierInvocation","src":"1851:11:22"}],"name":"initialize","nameLocation":"1732:10:22","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"_astrologerManager","nameLocation":"1760:18:22","nodeType":"VariableDeclaration","scope":3254,"src":"1752:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"_tokenFactory","nameLocation":"1796:13:22","nodeType":"VariableDeclaration","scope":3254,"src":"1788:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"_launchFee","nameLocation":"1827:10:22","nodeType":"VariableDeclaration","scope":3254,"src":"1819:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1819:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1742:101:22"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[],"src":"1863:0:22"},"scope":3720,"src":"1723:334:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3439,"nodeType":"Block","src":"2282:1978:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3270,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2300:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2304:5:22","memberName":"value","nodeType":"MemberAccess","src":"2300:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3272,"name":"launchFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2313:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2300:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c61756e636820666565","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2324:25:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1bff99c80ca974501488abd1154ef117bc4d736454de1c827943632d339c6a9","typeString":"literal_string \"Insufficient launch fee\""},"value":"Insufficient launch fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1bff99c80ca974501488abd1154ef117bc4d736454de1c827943632d339c6a9","typeString":"literal_string \"Insufficient launch fee\""}],"id":3269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2292:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3276,"nodeType":"ExpressionStatement","src":"2292:58:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3280,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"2374:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2368:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3278,"name":"bytes","nodeType":"ElementaryTypeName","src":"2368:5:22","typeDescriptions":{}}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2368:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2381:6:22","memberName":"length","nodeType":"MemberAccess","src":"2368:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2390:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2368:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e616d652063616e6e6f7420626520656d707479","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2393:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a","typeString":"literal_string \"Name cannot be empty\""},"value":"Name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a","typeString":"literal_string \"Name cannot be empty\""}],"id":3277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2360:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2360:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3287,"nodeType":"ExpressionStatement","src":"2360:56:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3291,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"2440:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2434:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3289,"name":"bytes","nodeType":"ElementaryTypeName","src":"2434:5:22","typeDescriptions":{}}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2449:6:22","memberName":"length","nodeType":"MemberAccess","src":"2434:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2458:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2434:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53796d626f6c2063616e6e6f7420626520656d707479","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2461:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02","typeString":"literal_string \"Symbol cannot be empty\""},"value":"Symbol cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20cee37dc7fe26f517097d60d14df81d928f0c3809e13566d58f93f7e1ac6c02","typeString":"literal_string \"Symbol cannot be empty\""}],"id":3288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2426:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2426:60:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3298,"nodeType":"ExpressionStatement","src":"2426:60:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"2504:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2519:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2504:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c79206d7573742062652067726561746572207468616e2030","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2522:37:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388","typeString":"literal_string \"Total supply must be greater than 0\""},"value":"Total supply must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388","typeString":"literal_string \"Total supply must be greater than 0\""}],"id":3299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2496:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3305,"nodeType":"ExpressionStatement","src":"2496:64:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3307,"name":"_initialPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2578:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2594:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2578:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c207072696365206d7573742062652067726561746572207468616e2030","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2597:38:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9bcf0f75e1db2985da3d72d981ce6dc02d790cba7088a049168aeeee46b1e7d","typeString":"literal_string \"Initial price must be greater than 0\""},"value":"Initial price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e9bcf0f75e1db2985da3d72d981ce6dc02d790cba7088a049168aeeee46b1e7d","typeString":"literal_string \"Initial price must be greater than 0\""}],"id":3306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2570:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2570:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3312,"nodeType":"ExpressionStatement","src":"2570:66:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3314,"name":"astrologerToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"2654:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3317,"indexExpression":{"expression":{"id":3315,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2674:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2678:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2674:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2654:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2689:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2654:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417374726f6c6f67657220616c726561647920686173206120746f6b656e","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2692:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e92872b8c195f321dbaccd0d2f7deb10963d675dc528a00bc1ac3919e0717b0","typeString":"literal_string \"Astrologer already has a token\""},"value":"Astrologer already has a token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e92872b8c195f321dbaccd0d2f7deb10963d675dc528a00bc1ac3919e0717b0","typeString":"literal_string \"Astrologer already has a token\""}],"id":3313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2646:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2646:79:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3322,"nodeType":"ExpressionStatement","src":"2646:79:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3323,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"2796:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2825:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2817:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"2817:7:22","typeDescriptions":{}}},"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2796:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3341,"nodeType":"IfStatement","src":"2792:168:22","trueBody":{"id":3340,"nodeType":"Block","src":"2829:131:22","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2910:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2914:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2910:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3331,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"2870:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3330,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"2851:18:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2851:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2889:20:22","memberName":"isAstrologerVerified","nodeType":"MemberAccess","referencedDeclaration":6707,"src":"2851:58:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2851:70:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417374726f6c6f676572206e6f74207665726966696564","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2923:25:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2b69f472c51edd3f3560c488068a1e68bb0c0d7f90c4cbf6f3b1e1e8d03c902","typeString":"literal_string \"Astrologer not verified\""},"value":"Astrologer not verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2b69f472c51edd3f3560c488068a1e68bb0c0d7f90c4cbf6f3b1e1e8d03c902","typeString":"literal_string \"Astrologer not verified\""}],"id":3329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2843:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2843:106:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3339,"nodeType":"ExpressionStatement","src":"2843:106:22"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3342,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"2970:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2980:9:22","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"2970:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2370_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3346,"nodeType":"ExpressionStatement","src":"2970:21:22"},{"assignments":[3348],"declarations":[{"constant":false,"id":3348,"mutability":"mutable","name":"tokenId","nameLocation":"3009:7:22","nodeType":"VariableDeclaration","scope":3439,"src":"3001:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"3001:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3352,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3349,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"3019:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3029:7:22","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"3019:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3001:37:22"},{"assignments":[3354,3356],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"tokenContract","nameLocation":"3118:13:22","nodeType":"VariableDeclaration","scope":3439,"src":"3110:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3353,"name":"address","nodeType":"ElementaryTypeName","src":"3110:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"buyContract","nameLocation":"3141:11:22","nodeType":"VariableDeclaration","scope":3439,"src":"3133:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3355,"name":"address","nodeType":"ElementaryTypeName","src":"3133:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3368,"initialValue":{"arguments":[{"id":3361,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"3217:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3362,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"3236:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3363,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"3257:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3364,"name":"_initialPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3283:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3365,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3310:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3314:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3310:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3358,"name":"tokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"3174:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3357,"name":"AstroTokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"3156:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AstroTokenFactory_$3133_$","typeString":"type(contract AstroTokenFactory)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AstroTokenFactory_$3133","typeString":"contract AstroTokenFactory"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3188:15:22","memberName":"deployTokenPair","nodeType":"MemberAccess","referencedDeclaration":3090,"src":"3156:47:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_address_$_t_address_$","typeString":"function (string memory,string memory,uint256,uint256,address) external returns (address,address)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:174:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"3109:221:22"},{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3369,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3341:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo storage ref)"}},"id":3371,"indexExpression":{"id":3370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"3348:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3341:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3373,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"3387:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3420:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3420:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3376,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"3459:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3377,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"3499:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3378,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"3530:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3379,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"3557:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3380,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"3591:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3381,"name":"_initialPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3631:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3668:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":3383,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3697:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3703:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"3697:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3372,"name":"TokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3359:9:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenInfo_$3177_storage_ptr_$","typeString":"type(struct AstroTokenLauncher.TokenInfo storage pointer)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3383:2:22","3408:10:22","3444:13:22","3486:11:22","3524:4:22","3549:6:22","3578:11:22","3617:12:22","3658:8:22","3686:9:22"],"names":["id","astrologer","tokenContract","buyContract","name","symbol","totalSupply","initialPrice","isActive","createdAt"],"nodeType":"FunctionCall","src":"3359:364:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_memory_ptr","typeString":"struct AstroTokenLauncher.TokenInfo memory"}},"src":"3341:382:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"id":3387,"nodeType":"ExpressionStatement","src":"3341:382:22"},{"expression":{"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3388,"name":"astrologerToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3734:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3391,"indexExpression":{"expression":{"id":3389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3754:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3758:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3754:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3734:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3392,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"3768:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3734:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3394,"nodeType":"ExpressionStatement","src":"3734:41:22"},{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3395,"name":"tokenContractToId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3785:17:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3397,"indexExpression":{"id":3396,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"3803:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3785:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3398,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"3820:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3785:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ExpressionStatement","src":"3785:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3899:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3928:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3920:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3402,"name":"address","nodeType":"ElementaryTypeName","src":"3920:7:22","typeDescriptions":{}}},"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3920:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3899:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3426,"nodeType":"IfStatement","src":"3895:241:22","trueBody":{"id":3425,"nodeType":"Block","src":"3932:204:22","statements":[{"assignments":[3408],"declarations":[{"constant":false,"id":3408,"mutability":"mutable","name":"astrologerId","nameLocation":"3954:12:22","nodeType":"VariableDeclaration","scope":3425,"src":"3946:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3407,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3416,"initialValue":{"arguments":[{"expression":{"id":3413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4023:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4027:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4023:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3410,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3988:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3409,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"3969:18:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3969:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4007:15:22","memberName":"getAstrologerId","nodeType":"MemberAccess","referencedDeclaration":6714,"src":"3969:53:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3969:65:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3946:88:22"},{"expression":{"arguments":[{"id":3421,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"4103:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"4117:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3418,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4067:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3417,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"4048:18:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4086:16:22","memberName":"setTokenContract","nodeType":"MemberAccess","referencedDeclaration":6700,"src":"4048:54:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:77:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3424,"nodeType":"ExpressionStatement","src":"4048:77:22"}]}},{"eventCall":{"arguments":[{"id":3428,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"4165:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4174:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4178:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4174:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3431,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"4186:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3432,"name":"buyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"4201:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3433,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"4214:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3434,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"4221:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3427,"name":"TokenLaunched","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"4151:13:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,address,address,string memory,string memory)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4151:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3436,"nodeType":"EmitStatement","src":"4146:83:22"},{"expression":{"id":3437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"4246:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3268,"id":3438,"nodeType":"Return","src":"4239:14:22"}]},"functionSelector":"ad19748b","id":3440,"implemented":true,"kind":"function","modifiers":[],"name":"launchToken","nameLocation":"2072:11:22","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"_name","nameLocation":"2107:5:22","nodeType":"VariableDeclaration","scope":3440,"src":"2093:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3255,"name":"string","nodeType":"ElementaryTypeName","src":"2093:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"_symbol","nameLocation":"2136:7:22","nodeType":"VariableDeclaration","scope":3440,"src":"2122:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3257,"name":"string","nodeType":"ElementaryTypeName","src":"2122:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3260,"mutability":"mutable","name":"_totalSupply","nameLocation":"2161:12:22","nodeType":"VariableDeclaration","scope":3440,"src":"2153:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2153:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"_initialPrice","nameLocation":"2191:13:22","nodeType":"VariableDeclaration","scope":3440,"src":"2183:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"_description","nameLocation":"2228:12:22","nodeType":"VariableDeclaration","scope":3440,"src":"2214:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3263,"name":"string","nodeType":"ElementaryTypeName","src":"2214:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2083:163:22"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3440,"src":"2273:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2272:9:22"},"scope":3720,"src":"2063:2197:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3490,"nodeType":"Block","src":"4319:336:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4337:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4347:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4337:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4352:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3450,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4363:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4373:7:22","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"4363:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4352:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4337:45:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e204944","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4384:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48","typeString":"literal_string \"Invalid token ID\""},"value":"Invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48","typeString":"literal_string \"Invalid token ID\""}],"id":3445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4329:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4329:74:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3457,"nodeType":"ExpressionStatement","src":"4329:74:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3459,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4421:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo storage ref)"}},"id":3461,"indexExpression":{"id":3460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4428:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4421:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"id":3462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4437:10:22","memberName":"astrologer","nodeType":"MemberAccess","referencedDeclaration":3160,"src":"4421:26:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4451:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4455:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4451:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4421:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746f6b656e206f776e6572","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4463:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""},"value":"Not token owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d58db187d6deadaa7dbc96faf8140765b1136bc840a29b45b0b313938ad871a9","typeString":"literal_string \"Not token owner\""}],"id":3458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4413:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4413:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3468,"nodeType":"ExpressionStatement","src":"4413:68:22"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":3470,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4499:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo storage ref)"}},"id":3472,"indexExpression":{"id":3471,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4506:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4499:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"id":3473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4515:8:22","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"4499:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479206465616374697661746564","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4525:27:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_43890814a55a417b5552a42c49d564be94d757cdbcf5a94813fbae82b733b1ba","typeString":"literal_string \"Token already deactivated\""},"value":"Token already deactivated"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43890814a55a417b5552a42c49d564be94d757cdbcf5a94813fbae82b733b1ba","typeString":"literal_string \"Token already deactivated\""}],"id":3469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4491:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4491:62:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3476,"nodeType":"ExpressionStatement","src":"4491:62:22"},{"expression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3477,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4564:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo storage ref)"}},"id":3479,"indexExpression":{"id":3478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4571:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4564:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"id":3480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4580:8:22","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"4564:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4591:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4564:32:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3483,"nodeType":"ExpressionStatement","src":"4564:32:22"},{"eventCall":{"arguments":[{"id":3485,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4628:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4637:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4641:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4637:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3484,"name":"TokenDeactivated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"4611:16:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4611:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3489,"nodeType":"EmitStatement","src":"4606:42:22"}]},"functionSelector":"ec991da9","id":3491,"implemented":true,"kind":"function","modifiers":[],"name":"deactivateToken","nameLocation":"4277:15:22","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"tokenId","nameLocation":"4301:7:22","nodeType":"VariableDeclaration","scope":3491,"src":"4293:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"4293:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4292:17:22"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[],"src":"4319:0:22"},"scope":3720,"src":"4268:387:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3516,"nodeType":"Block","src":"4741:123:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"4759:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4769:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4759:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"4774:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3504,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"4785:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4795:7:22","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"4785:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4785:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4774:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4759:45:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e204944","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4806:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48","typeString":"literal_string \"Invalid token ID\""},"value":"Invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b44e5a2e76d616f71f124d91f8560c46215c55a45ba6a1b6e492edf2295dcc48","typeString":"literal_string \"Invalid token ID\""}],"id":3499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4751:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:74:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3511,"nodeType":"ExpressionStatement","src":"4751:74:22"},{"expression":{"baseExpression":{"id":3512,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4842:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo storage ref)"}},"id":3514,"indexExpression":{"id":3513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"4849:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4842:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"functionReturnParameters":3498,"id":3515,"nodeType":"Return","src":"4835:22:22"}]},"functionSelector":"8c7a63ae","id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"4670:12:22","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"tokenId","nameLocation":"4691:7:22","nodeType":"VariableDeclaration","scope":3517,"src":"4683:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"4683:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4682:17:22"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3517,"src":"4723:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_memory_ptr","typeString":"struct AstroTokenLauncher.TokenInfo"},"typeName":{"id":3496,"nodeType":"UserDefinedTypeName","pathNode":{"id":3495,"name":"TokenInfo","nameLocations":["4723:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"4723:9:22"},"referencedDeclaration":3177,"src":"4723:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage_ptr","typeString":"struct AstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"4722:18:22"},"scope":3720,"src":"4661:203:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3542,"nodeType":"Block","src":"4961:147:22","statements":[{"assignments":[3526],"declarations":[{"constant":false,"id":3526,"mutability":"mutable","name":"tokenId","nameLocation":"4979:7:22","nodeType":"VariableDeclaration","scope":3542,"src":"4971:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"4971:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3530,"initialValue":{"baseExpression":{"id":3527,"name":"astrologerToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"4989:19:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3529,"indexExpression":{"id":3528,"name":"astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"5009:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4989:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4971:49:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5038:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5048:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5038:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420666f756e64","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5051:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2","typeString":"literal_string \"Token not found\""},"value":"Token not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2","typeString":"literal_string \"Token not found\""}],"id":3531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5030:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5030:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3537,"nodeType":"ExpressionStatement","src":"5030:39:22"},{"expression":{"baseExpression":{"id":3538,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"5086:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo storage ref)"}},"id":3540,"indexExpression":{"id":3539,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5093:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5086:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"functionReturnParameters":3524,"id":3541,"nodeType":"Return","src":"5079:22:22"}]},"functionSelector":"922edb34","id":3543,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenByAstrologer","nameLocation":"4879:20:22","nodeType":"FunctionDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"astrologer","nameLocation":"4908:10:22","nodeType":"VariableDeclaration","scope":3543,"src":"4900:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"4900:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4899:20:22"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3543,"src":"4943:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_memory_ptr","typeString":"struct AstroTokenLauncher.TokenInfo"},"typeName":{"id":3522,"nodeType":"UserDefinedTypeName","pathNode":{"id":3521,"name":"TokenInfo","nameLocations":["4943:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"4943:9:22"},"referencedDeclaration":3177,"src":"4943:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage_ptr","typeString":"struct AstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"4942:18:22"},"scope":3720,"src":"4870:238:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3568,"nodeType":"Block","src":"5206:148:22","statements":[{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"tokenId","nameLocation":"5224:7:22","nodeType":"VariableDeclaration","scope":3568,"src":"5216:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5216:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3556,"initialValue":{"baseExpression":{"id":3553,"name":"tokenContractToId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"5234:17:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3555,"indexExpression":{"id":3554,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"5252:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5234:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5216:50:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"5284:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5294:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5284:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420666f756e64","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5297:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2","typeString":"literal_string \"Token not found\""},"value":"Token not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2","typeString":"literal_string \"Token not found\""}],"id":3557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5276:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3563,"nodeType":"ExpressionStatement","src":"5276:39:22"},{"expression":{"baseExpression":{"id":3564,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"5332:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo storage ref)"}},"id":3566,"indexExpression":{"id":3565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"5339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5332:15:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"functionReturnParameters":3550,"id":3567,"nodeType":"Return","src":"5325:22:22"}]},"functionSelector":"8d84289e","id":3569,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenByContract","nameLocation":"5123:18:22","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"tokenContract","nameLocation":"5150:13:22","nodeType":"VariableDeclaration","scope":3569,"src":"5142:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3544,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5141:23:22"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3569,"src":"5188:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_memory_ptr","typeString":"struct AstroTokenLauncher.TokenInfo"},"typeName":{"id":3548,"nodeType":"UserDefinedTypeName","pathNode":{"id":3547,"name":"TokenInfo","nameLocations":["5188:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"5188:9:22"},"referencedDeclaration":3177,"src":"5188:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage_ptr","typeString":"struct AstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"5187:18:22"},"scope":3720,"src":"5114:240:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3654,"nodeType":"Block","src":"5431:533:22","statements":[{"assignments":[3579],"declarations":[{"constant":false,"id":3579,"mutability":"mutable","name":"activeIds","nameLocation":"5458:9:22","nodeType":"VariableDeclaration","scope":3654,"src":"5441:26:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"5441:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3578,"nodeType":"ArrayTypeName","src":"5441:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3587,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3583,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5484:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5494:7:22","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"5484:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5470:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"5474:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3581,"nodeType":"ArrayTypeName","src":"5474:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5441:63:22"},{"assignments":[3589],"declarations":[{"constant":false,"id":3589,"mutability":"mutable","name":"count","nameLocation":"5522:5:22","nodeType":"VariableDeclaration","scope":3654,"src":"5514:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3591,"initialValue":{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5530:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5514:17:22"},{"body":{"id":3619,"nodeType":"Block","src":"5601:126:22","statements":[{"condition":{"expression":{"baseExpression":{"id":3604,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"5619:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenInfo_$3177_storage_$","typeString":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo storage ref)"}},"id":3606,"indexExpression":{"id":3605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5626:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5619:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3177_storage","typeString":"struct AstroTokenLauncher.TokenInfo storage ref"}},"id":3607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5629:8:22","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"5619:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3618,"nodeType":"IfStatement","src":"5615:102:22","trueBody":{"id":3617,"nodeType":"Block","src":"5639:78:22","statements":[{"expression":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3608,"name":"activeIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"5657:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3610,"indexExpression":{"id":3609,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"5667:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5657:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5676:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5657:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3613,"nodeType":"ExpressionStatement","src":"5657:20:22"},{"expression":{"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5695:7:22","subExpression":{"id":3614,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"5695:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3616,"nodeType":"ExpressionStatement","src":"5695:7:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5570:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3597,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"5575:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5585:7:22","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"5575:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5575:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5570:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3620,"initializationExpression":{"assignments":[3593],"declarations":[{"constant":false,"id":3593,"mutability":"mutable","name":"i","nameLocation":"5563:1:22","nodeType":"VariableDeclaration","scope":3620,"src":"5555:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3595,"initialValue":{"hexValue":"31","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5567:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"5555:13:22"},"loopExpression":{"expression":{"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5596:3:22","subExpression":{"id":3601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"5596:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3603,"nodeType":"ExpressionStatement","src":"5596:3:22"},"nodeType":"ForStatement","src":"5550:177:22"},{"assignments":[3625],"declarations":[{"constant":false,"id":3625,"mutability":"mutable","name":"result","nameLocation":"5802:6:22","nodeType":"VariableDeclaration","scope":3654,"src":"5785:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"5785:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3624,"nodeType":"ArrayTypeName","src":"5785:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3631,"initialValue":{"arguments":[{"id":3629,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"5825:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5811:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"5815:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3627,"nodeType":"ArrayTypeName","src":"5815:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5811:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5785:46:22"},{"body":{"id":3650,"nodeType":"Block","src":"5877:49:22","statements":[{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"5891:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3644,"indexExpression":{"id":3643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"5898:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5891:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3645,"name":"activeIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"5903:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3647,"indexExpression":{"id":3646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"5913:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5903:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5891:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ExpressionStatement","src":"5891:24:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"5861:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3637,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"5865:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5861:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"initializationExpression":{"assignments":[3633],"declarations":[{"constant":false,"id":3633,"mutability":"mutable","name":"i","nameLocation":"5854:1:22","nodeType":"VariableDeclaration","scope":3651,"src":"5846:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"5846:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3635,"initialValue":{"hexValue":"30","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5858:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5846:13:22"},"loopExpression":{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5872:3:22","subExpression":{"id":3639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"5872:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3641,"nodeType":"ExpressionStatement","src":"5872:3:22"},"nodeType":"ForStatement","src":"5841:85:22"},{"expression":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"5951:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3574,"id":3653,"nodeType":"Return","src":"5944:13:22"}]},"functionSelector":"42fbbf4f","id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"getAllActiveTokens","nameLocation":"5369:18:22","nodeType":"FunctionDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[],"src":"5387:2:22"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"5413:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ArrayTypeName","src":"5413:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5412:18:22"},"scope":3720,"src":"5360:604:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3666,"nodeType":"Block","src":"6047:55:22","statements":[{"expression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3662,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"6057:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3663,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"6077:18:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6057:38:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3665,"nodeType":"ExpressionStatement","src":"6057:38:22"}]},"functionSelector":"44cda485","id":3667,"implemented":true,"kind":"function","modifiers":[{"id":3660,"kind":"modifierInvocation","modifierName":{"id":3659,"name":"onlyOwner","nameLocations":["6037:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6037:9:22"},"nodeType":"ModifierInvocation","src":"6037:9:22"}],"name":"setAstrologerManager","nameLocation":"5979:20:22","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"_astrologerManager","nameLocation":"6008:18:22","nodeType":"VariableDeclaration","scope":3667,"src":"6000:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3656,"name":"address","nodeType":"ElementaryTypeName","src":"6000:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5999:28:22"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[],"src":"6047:0:22"},"scope":3720,"src":"5970:132:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3678,"nodeType":"Block","src":"6175:45:22","statements":[{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3674,"name":"tokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"6185:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3675,"name":"_tokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"6200:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:28:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3677,"nodeType":"ExpressionStatement","src":"6185:28:22"}]},"functionSelector":"2f73a9f8","id":3679,"implemented":true,"kind":"function","modifiers":[{"id":3672,"kind":"modifierInvocation","modifierName":{"id":3671,"name":"onlyOwner","nameLocations":["6165:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6165:9:22"},"nodeType":"ModifierInvocation","src":"6165:9:22"}],"name":"setTokenFactory","nameLocation":"6117:15:22","nodeType":"FunctionDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"_tokenFactory","nameLocation":"6141:13:22","nodeType":"VariableDeclaration","scope":3679,"src":"6133:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"6133:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6132:23:22"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[],"src":"6175:0:22"},"scope":3720,"src":"6108:112:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3690,"nodeType":"Block","src":"6287:39:22","statements":[{"expression":{"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3686,"name":"launchFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6297:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3687,"name":"_launchFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"6309:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6297:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3689,"nodeType":"ExpressionStatement","src":"6297:22:22"}]},"functionSelector":"5313be2c","id":3691,"implemented":true,"kind":"function","modifiers":[{"id":3684,"kind":"modifierInvocation","modifierName":{"id":3683,"name":"onlyOwner","nameLocations":["6277:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6277:9:22"},"nodeType":"ModifierInvocation","src":"6277:9:22"}],"name":"setLaunchFee","nameLocation":"6235:12:22","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"_launchFee","nameLocation":"6256:10:22","nodeType":"VariableDeclaration","scope":3691,"src":"6248:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"6248:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6247:20:22"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[],"src":"6287:0:22"},"scope":3720,"src":"6226:100:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3709,"nodeType":"Block","src":"6371:65:22","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":3704,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6415:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_AstroTokenLauncher_$3720","typeString":"contract AstroTokenLauncher"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AstroTokenLauncher_$3720","typeString":"contract AstroTokenLauncher"}],"id":3703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3702,"name":"address","nodeType":"ElementaryTypeName","src":"6407:7:22","typeDescriptions":{}}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6421:7:22","memberName":"balance","nodeType":"MemberAccess","src":"6407:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3698,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"6389:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6389:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6381:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3696,"name":"address","nodeType":"ElementaryTypeName","src":"6381:8:22","stateMutability":"payable","typeDescriptions":{}}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6381:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6398:8:22","memberName":"transfer","nodeType":"MemberAccess","src":"6381:25:22","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6381:48:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3708,"nodeType":"ExpressionStatement","src":"6381:48:22"}]},"functionSelector":"3ccfd60b","id":3710,"implemented":true,"kind":"function","modifiers":[{"id":3694,"kind":"modifierInvocation","modifierName":{"id":3693,"name":"onlyOwner","nameLocations":["6361:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6361:9:22"},"nodeType":"ModifierInvocation","src":"6361:9:22"}],"name":"withdraw","nameLocation":"6341:8:22","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[],"src":"6349:2:22"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[],"src":"6371:0:22"},"scope":3720,"src":"6332:104:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[795],"body":{"id":3718,"nodeType":"Block","src":"6524:2:22","statements":[]},"id":3719,"implemented":true,"kind":"function","modifiers":[{"id":3716,"kind":"modifierInvocation","modifierName":{"id":3715,"name":"onlyOwner","nameLocations":["6514:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"6514:9:22"},"nodeType":"ModifierInvocation","src":"6514:9:22"}],"name":"_authorizeUpgrade","nameLocation":"6451:17:22","nodeType":"FunctionDefinition","overrides":{"id":3714,"nodeType":"OverrideSpecifier","overrides":[],"src":"6505:8:22"},"parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"newImplementation","nameLocation":"6477:17:22","nodeType":"VariableDeclaration","scope":3719,"src":"6469:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3711,"name":"address","nodeType":"ElementaryTypeName","src":"6469:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6468:27:22"},"returnParameters":{"id":3717,"nodeType":"ParameterList","parameters":[],"src":"6524:0:22"},"scope":3720,"src":"6442:84:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3721,"src":"504:6024:22","usedErrors":[]}],"src":"32:6497:22"},"id":22},"contracts/BuyTokenContract.sol":{"ast":{"absolutePath":"contracts/BuyTokenContract.sol","exportedSymbols":{"AddressUpgradeable":[2322],"AstroToken":[2941],"BuyTokenContract":[4595],"ContextUpgradeable":[2364],"ERC1967UpgradeUpgradeable":[486],"ERC20BurnableUpgradeable":[1555],"ERC20Upgradeable":[1413],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"IERC20MetadataUpgradeable":[1580],"IERC20PermitUpgradeable":[1616],"IERC20Upgradeable":[1491],"Initializable":[665],"OwnableUpgradeable":[131],"SafeERC20Upgradeable":[1992],"StorageSlotUpgradeable":[2548],"UUPSUpgradeable":[801]},"id":4596,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3722,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:23"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3723,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4596,"sourceUnit":132,"src":"57:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4596,"sourceUnit":666,"src":"133:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":3725,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4596,"sourceUnit":802,"src":"209:77:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","id":3726,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4596,"sourceUnit":1492,"src":"287:79:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol","id":3727,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4596,"sourceUnit":1993,"src":"367:88:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AstroToken.sol","file":"./AstroToken.sol","id":3728,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4596,"sourceUnit":2942,"src":"456:26:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3729,"name":"Initializable","nameLocations":["518:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"518:13:23"},"id":3730,"nodeType":"InheritanceSpecifier","src":"518:13:23"},{"baseName":{"id":3731,"name":"OwnableUpgradeable","nameLocations":["538:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"538:18:23"},"id":3732,"nodeType":"InheritanceSpecifier","src":"538:18:23"},{"baseName":{"id":3733,"name":"UUPSUpgradeable","nameLocations":["563:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":801,"src":"563:15:23"},"id":3734,"nodeType":"InheritanceSpecifier","src":"563:15:23"}],"canonicalName":"BuyTokenContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4595,"linearizedBaseContracts":[4595,801,486,152,162,131,2364,665],"name":"BuyTokenContract","nameLocation":"493:16:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3738,"libraryName":{"id":3735,"name":"SafeERC20Upgradeable","nameLocations":["592:20:23"],"nodeType":"IdentifierPath","referencedDeclaration":1992,"src":"592:20:23"},"nodeType":"UsingForDirective","src":"586:49:23","typeName":{"id":3737,"nodeType":"UserDefinedTypeName","pathNode":{"id":3736,"name":"IERC20Upgradeable","nameLocations":["617:17:23"],"nodeType":"IdentifierPath","referencedDeclaration":1491,"src":"617:17:23"},"referencedDeclaration":1491,"src":"617:17:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$1491","typeString":"contract IERC20Upgradeable"}}},{"canonicalName":"BuyTokenContract.TokenInfo","id":3753,"members":[{"constant":false,"id":3740,"mutability":"mutable","name":"tokenContract","nameLocation":"676:13:23","nodeType":"VariableDeclaration","scope":3753,"src":"668:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3739,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"astrologer","nameLocation":"707:10:23","nodeType":"VariableDeclaration","scope":3753,"src":"699:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3741,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3744,"mutability":"mutable","name":"totalSupply","nameLocation":"735:11:23","nodeType":"VariableDeclaration","scope":3753,"src":"727:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"727:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3746,"mutability":"mutable","name":"circulatingSupply","nameLocation":"764:17:23","nodeType":"VariableDeclaration","scope":3753,"src":"756:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"756:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"basePrice","nameLocation":"799:9:23","nodeType":"VariableDeclaration","scope":3753,"src":"791:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"791:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3750,"mutability":"mutable","name":"credibilityMultiplier","nameLocation":"826:21:23","nodeType":"VariableDeclaration","scope":3753,"src":"818:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"isActive","nameLocation":"862:8:23","nodeType":"VariableDeclaration","scope":3753,"src":"857:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3751,"name":"bool","nodeType":"ElementaryTypeName","src":"857:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"648:9:23","nodeType":"StructDefinition","scope":4595,"src":"641:236:23","visibility":"public"},{"canonicalName":"BuyTokenContract.BondingCurve","id":3762,"members":[{"constant":false,"id":3755,"mutability":"mutable","name":"k","nameLocation":"921:1:23","nodeType":"VariableDeclaration","scope":3762,"src":"913:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3757,"mutability":"mutable","name":"reserveRatio","nameLocation":"1003:12:23","nodeType":"VariableDeclaration","scope":3762,"src":"995:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"995:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"slippageTolerance","nameLocation":"1078:17:23","nodeType":"VariableDeclaration","scope":3762,"src":"1070:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"maxReputationMultiplier","nameLocation":"1151:23:23","nodeType":"VariableDeclaration","scope":3762,"src":"1143:31:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BondingCurve","nameLocation":"890:12:23","nodeType":"StructDefinition","scope":4595,"src":"883:351:23","visibility":"public"},{"constant":false,"functionSelector":"ba46ae72","id":3767,"mutability":"mutable","name":"tokenInfos","nameLocation":"1277:10:23","nodeType":"VariableDeclaration","scope":4595,"src":"1240:47:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo)"},"typeName":{"id":3766,"keyType":{"id":3763,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1240:29:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo)"},"valueType":{"id":3765,"nodeType":"UserDefinedTypeName","pathNode":{"id":3764,"name":"TokenInfo","nameLocations":["1259:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"1259:9:23"},"referencedDeclaration":3753,"src":"1259:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"26224c64","id":3771,"mutability":"mutable","name":"userBalances","nameLocation":"1328:12:23","nodeType":"VariableDeclaration","scope":4595,"src":"1293:47:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3770,"keyType":{"id":3768,"name":"address","nodeType":"ElementaryTypeName","src":"1301:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1293:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"0f6ca1a8","id":3775,"mutability":"mutable","name":"userContributions","nameLocation":"1381:17:23","nodeType":"VariableDeclaration","scope":4595,"src":"1346:52:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3774,"keyType":{"id":3772,"name":"address","nodeType":"ElementaryTypeName","src":"1354:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1346:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"6fd31a41","id":3777,"mutability":"mutable","name":"astrologerManager","nameLocation":"1424:17:23","nodeType":"VariableDeclaration","scope":4595,"src":"1409:32:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3776,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b76d03b2","id":3779,"mutability":"mutable","name":"predictionCredibilityManager","nameLocation":"1462:28:23","nodeType":"VariableDeclaration","scope":4595,"src":"1447:43:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3778,"name":"address","nodeType":"ElementaryTypeName","src":"1447:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"eff1d50e","id":3782,"mutability":"mutable","name":"bondingCurve","nameLocation":"1521:12:23","nodeType":"VariableDeclaration","scope":4595,"src":"1501:32:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage","typeString":"struct BuyTokenContract.BondingCurve"},"typeName":{"id":3781,"nodeType":"UserDefinedTypeName","pathNode":{"id":3780,"name":"BondingCurve","nameLocations":["1501:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3762,"src":"1501:12:23"},"referencedDeclaration":3762,"src":"1501:12:23","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage_ptr","typeString":"struct BuyTokenContract.BondingCurve"}},"visibility":"public"},{"constant":false,"functionSelector":"26232a2e","id":3784,"mutability":"mutable","name":"platformFee","nameLocation":"1554:11:23","nodeType":"VariableDeclaration","scope":4595,"src":"1539:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"1539:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5f81a57c","id":3786,"mutability":"mutable","name":"totalVolume","nameLocation":"1629:11:23","nodeType":"VariableDeclaration","scope":4595,"src":"1614:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"73c84d21","id":3788,"mutability":"mutable","name":"reputationScorer","nameLocation":"1738:16:23","nodeType":"VariableDeclaration","scope":4595,"src":"1723:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3787,"name":"address","nodeType":"ElementaryTypeName","src":"1723:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"8692cf5ba66abd64f88cdc1ffa0ee9d9c21ee2d999322a20445ae32393394e3e","id":3800,"name":"TokenBought","nameLocation":"1771:11:23","nodeType":"EventDefinition","parameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"indexed":true,"mutability":"mutable","name":"tokenContract","nameLocation":"1808:13:23","nodeType":"VariableDeclaration","scope":3800,"src":"1792:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"1792:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3792,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"1847:5:23","nodeType":"VariableDeclaration","scope":3800,"src":"1831:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3794,"indexed":false,"mutability":"mutable","name":"ethAmount","nameLocation":"1870:9:23","nodeType":"VariableDeclaration","scope":3800,"src":"1862:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1862:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3796,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"1897:11:23","nodeType":"VariableDeclaration","scope":3800,"src":"1889:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1889:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3798,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1926:5:23","nodeType":"VariableDeclaration","scope":3800,"src":"1918:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1782:155:23"},"src":"1765:173:23"},{"anonymous":false,"eventSelector":"9387a595ac4be9038bbb9751abad8baa3dcf219dd9e19abb81552bd521fe3546","id":3812,"name":"TokenSold","nameLocation":"1950:9:23","nodeType":"EventDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"indexed":true,"mutability":"mutable","name":"tokenContract","nameLocation":"1985:13:23","nodeType":"VariableDeclaration","scope":3812,"src":"1969:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3801,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3804,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"2024:6:23","nodeType":"VariableDeclaration","scope":3812,"src":"2008:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3803,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3806,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"2048:11:23","nodeType":"VariableDeclaration","scope":3812,"src":"2040:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2040:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3808,"indexed":false,"mutability":"mutable","name":"ethAmount","nameLocation":"2077:9:23","nodeType":"VariableDeclaration","scope":3812,"src":"2069:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"2069:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3810,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2104:5:23","nodeType":"VariableDeclaration","scope":3812,"src":"2096:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:156:23"},"src":"1944:172:23"},{"anonymous":false,"eventSelector":"35a172ee9b7bba49ce50c0ba9b35893a8948f2d53ca31ce2890a07a54e1f548a","id":3820,"name":"CredibilityUpdated","nameLocation":"2128:18:23","nodeType":"EventDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"indexed":true,"mutability":"mutable","name":"tokenContract","nameLocation":"2172:13:23","nodeType":"VariableDeclaration","scope":3820,"src":"2156:29:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3816,"indexed":false,"mutability":"mutable","name":"oldMultiplier","nameLocation":"2203:13:23","nodeType":"VariableDeclaration","scope":3820,"src":"2195:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2195:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3818,"indexed":false,"mutability":"mutable","name":"newMultiplier","nameLocation":"2234:13:23","nodeType":"VariableDeclaration","scope":3820,"src":"2226:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2226:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2146:107:23"},"src":"2122:132:23"},{"anonymous":false,"eventSelector":"642a2328272d9e8f7996714d21dad1230999171aabf9dc477fb696136713eef8","id":3830,"name":"BondingCurveUpdated","nameLocation":"2266:19:23","nodeType":"EventDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"indexed":false,"mutability":"mutable","name":"k","nameLocation":"2303:1:23","nodeType":"VariableDeclaration","scope":3830,"src":"2295:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"2295:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3824,"indexed":false,"mutability":"mutable","name":"reserveRatio","nameLocation":"2322:12:23","nodeType":"VariableDeclaration","scope":3830,"src":"2314:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3826,"indexed":false,"mutability":"mutable","name":"slippageTolerance","nameLocation":"2352:17:23","nodeType":"VariableDeclaration","scope":3830,"src":"2344:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3828,"indexed":false,"mutability":"mutable","name":"maxReputationMultiplier","nameLocation":"2387:23:23","nodeType":"VariableDeclaration","scope":3830,"src":"2379:31:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2379:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2285:131:23"},"src":"2260:157:23"},{"body":{"id":3837,"nodeType":"Block","src":"2490:39:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3834,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"2500:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3836,"nodeType":"ExpressionStatement","src":"2500:22:23"}]},"documentation":{"id":3831,"nodeType":"StructuredDocumentation","src":"2423:48:23","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":3838,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[],"src":"2487:2:23"},"returnParameters":{"id":3833,"nodeType":"ParameterList","parameters":[],"src":"2490:0:23"},"scope":4595,"src":"2476:53:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3876,"nodeType":"Block","src":"2693:606:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3849,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2703:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2703:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3851,"nodeType":"ExpressionStatement","src":"2703:16:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3852,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2729:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3854,"nodeType":"ExpressionStatement","src":"2729:24:23"},{"expression":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3855,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"2772:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3856,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"2792:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2772:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3858,"nodeType":"ExpressionStatement","src":"2772:38:23"},{"expression":{"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3859,"name":"predictionCredibilityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"2820:28:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3860,"name":"_predictionCredibilityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"2851:29:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2820:60:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3862,"nodeType":"ExpressionStatement","src":"2820:60:23"},{"expression":{"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3863,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"2890:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3864,"name":"_platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"2904:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2890:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3866,"nodeType":"ExpressionStatement","src":"2890:26:23"},{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3867,"name":"bondingCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"2982:12:23","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage","typeString":"struct BuyTokenContract.BondingCurve storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31303030","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3027:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},{"hexValue":"353030","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3115:3:23","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},{"hexValue":"313030","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3172:3:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"35303030","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3239:4:23","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"}],"id":3868,"name":"BondingCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"2997:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BondingCurve_$3762_storage_ptr_$","typeString":"type(struct BuyTokenContract.BondingCurve storage pointer)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3024:1:23","3101:12:23","3153:17:23","3214:23:23"],"names":["k","reserveRatio","slippageTolerance","maxReputationMultiplier"],"nodeType":"FunctionCall","src":"2997:295:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_memory_ptr","typeString":"struct BuyTokenContract.BondingCurve memory"}},"src":"2982:310:23","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage","typeString":"struct BuyTokenContract.BondingCurve storage ref"}},"id":3875,"nodeType":"ExpressionStatement","src":"2982:310:23"}]},"functionSelector":"1794bb3c","id":3877,"implemented":true,"kind":"function","modifiers":[{"id":3847,"kind":"modifierInvocation","modifierName":{"id":3846,"name":"initializer","nameLocations":["2681:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"2681:11:23"},"nodeType":"ModifierInvocation","src":"2681:11:23"}],"name":"initialize","nameLocation":"2544:10:23","nodeType":"FunctionDefinition","parameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3840,"mutability":"mutable","name":"_astrologerManager","nameLocation":"2572:18:23","nodeType":"VariableDeclaration","scope":3877,"src":"2564:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3842,"mutability":"mutable","name":"_predictionCredibilityManager","nameLocation":"2608:29:23","nodeType":"VariableDeclaration","scope":3877,"src":"2600:37:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"2600:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"_platformFee","nameLocation":"2655:12:23","nodeType":"VariableDeclaration","scope":3877,"src":"2647:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2647:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2554:119:23"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[],"src":"2693:0:23"},"scope":4595,"src":"2535:764:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3945,"nodeType":"Block","src":"3462:709:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3480:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:6:23","memberName":"sender","nodeType":"MemberAccess","src":"3480:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3891,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3494:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3494:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3480:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e20726567697374657220746f6b656e73","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3503:32:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_efc1a339d343739d20024909e5f53411f7d934d569d5c2f84d5809d40870ec51","typeString":"literal_string \"Only owner can register tokens\""},"value":"Only owner can register tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efc1a339d343739d20024909e5f53411f7d934d569d5c2f84d5809d40870ec51","typeString":"literal_string \"Only owner can register tokens\""}],"id":3888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3472:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3896,"nodeType":"ExpressionStatement","src":"3472:64:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3898,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"3554:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3580:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3572:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3899,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:23","typeDescriptions":{}}},"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3554:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20636f6e7472616374","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3584:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263","typeString":"literal_string \"Invalid token contract\""},"value":"Invalid token contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263","typeString":"literal_string \"Invalid token contract\""}],"id":3897,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3546:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3546:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3906,"nodeType":"ExpressionStatement","src":"3546:63:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3908,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"3627:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3650:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3642:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3909,"name":"address","nodeType":"ElementaryTypeName","src":"3642:7:23","typeDescriptions":{}}},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3627:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617374726f6c6f6765722061646472657373","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3654:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""},"value":"Invalid astrologer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""}],"id":3907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3619:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3916,"nodeType":"ExpressionStatement","src":"3619:64:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"3701:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3716:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3701:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20737570706c79206d7573742062652067726561746572207468616e2030","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3719:37:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388","typeString":"literal_string \"Total supply must be greater than 0\""},"value":"Total supply must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dffa1347d001d284b3ea77e5eb12d6d85d59db5d7ea756b52bbab3975171388","typeString":"literal_string \"Total supply must be greater than 0\""}],"id":3917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3693:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3693:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3923,"nodeType":"ExpressionStatement","src":"3693:64:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"_basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"3775:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3788:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3775:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42617365207072696365206d7573742062652067726561746572207468616e2030","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3791:35:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2ae0a86482faad2c7a0aeeee9b2699e9192b195532412ee1d2bb918518f8d8f","typeString":"literal_string \"Base price must be greater than 0\""},"value":"Base price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2ae0a86482faad2c7a0aeeee9b2699e9192b195532412ee1d2bb918518f8d8f","typeString":"literal_string \"Base price must be greater than 0\""}],"id":3924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3767:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3767:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3930,"nodeType":"ExpressionStatement","src":"3767:60:23"},{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3931,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"3838:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":3933,"indexExpression":{"id":3932,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"3849:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3838:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3935,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"3906:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3936,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"3946:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3937,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"3984:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4029:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3939,"name":"_basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"4055:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31303030","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4102:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},{"hexValue":"74727565","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4149:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3934,"name":"TokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"3867:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenInfo_$3753_storage_ptr_$","typeString":"type(struct BuyTokenContract.TokenInfo storage pointer)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3891:13:23","3934:10:23","3971:11:23","4010:17:23","4044:9:23","4079:21:23","4139:8:23"],"names":["tokenContract","astrologer","totalSupply","circulatingSupply","basePrice","credibilityMultiplier","isActive"],"nodeType":"FunctionCall","src":"3867:297:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_memory_ptr","typeString":"struct BuyTokenContract.TokenInfo memory"}},"src":"3838:326:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"id":3944,"nodeType":"ExpressionStatement","src":"3838:326:23"}]},"functionSelector":"cea9f4b5","id":3946,"implemented":true,"kind":"function","modifiers":[],"name":"registerToken","nameLocation":"3314:13:23","nodeType":"FunctionDefinition","parameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"_tokenContract","nameLocation":"3345:14:23","nodeType":"VariableDeclaration","scope":3946,"src":"3337:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"3337:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3881,"mutability":"mutable","name":"_astrologer","nameLocation":"3377:11:23","nodeType":"VariableDeclaration","scope":3946,"src":"3369:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3880,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"_totalSupply","nameLocation":"3406:12:23","nodeType":"VariableDeclaration","scope":3946,"src":"3398:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"_basePrice","nameLocation":"3436:10:23","nodeType":"VariableDeclaration","scope":3946,"src":"3428:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3428:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3327:125:23"},"returnParameters":{"id":3887,"nodeType":"ParameterList","parameters":[],"src":"3462:0:23"},"scope":4595,"src":"3305:866:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4083,"nodeType":"Block","src":"4255:1326:23","statements":[{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"tokenInfo","nameLocation":"4283:9:23","nodeType":"VariableDeclaration","scope":4083,"src":"4265:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"},"typeName":{"id":3954,"nodeType":"UserDefinedTypeName","pathNode":{"id":3953,"name":"TokenInfo","nameLocations":["4265:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"4265:9:23"},"referencedDeclaration":3753,"src":"4265:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"}},"visibility":"internal"}],"id":3959,"initialValue":{"baseExpression":{"id":3956,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4295:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":3958,"indexExpression":{"id":3957,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"4306:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4295:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4265:56:23"},{"expression":{"arguments":[{"expression":{"id":3961,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4339:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":3962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4349:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"4339:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616374697665","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4359:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1215f4fc5ebfbc91c1c3a476c347a90dbb9a060cd5a09746515965212ffd5e1a","typeString":"literal_string \"Token not active\""},"value":"Token not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1215f4fc5ebfbc91c1c3a476c347a90dbb9a060cd5a09746515965212ffd5e1a","typeString":"literal_string \"Token not active\""}],"id":3960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4331:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4331:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3965,"nodeType":"ExpressionStatement","src":"4331:47:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3967,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4396:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4400:5:23","memberName":"value","nodeType":"MemberAccess","src":"4396:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4396:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742073656e642045544820746f2062757920746f6b656e73","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4411:29:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de","typeString":"literal_string \"Must send ETH to buy tokens\""},"value":"Must send ETH to buy tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de","typeString":"literal_string \"Must send ETH to buy tokens\""}],"id":3966,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4388:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4388:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3973,"nodeType":"ExpressionStatement","src":"4388:53:23"},{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"currentPrice","nameLocation":"4460:12:23","nodeType":"VariableDeclaration","scope":4083,"src":"4452:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"4452:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3979,"initialValue":{"arguments":[{"id":3977,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"4491:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3976,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"4475:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4452:54:23"},{"assignments":[3981],"declarations":[{"constant":false,"id":3981,"mutability":"mutable","name":"tokenAmount","nameLocation":"4524:11:23","nodeType":"VariableDeclaration","scope":4083,"src":"4516:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3987,"initialValue":{"arguments":[{"id":3983,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"4557:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4573:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4577:5:23","memberName":"value","nodeType":"MemberAccess","src":"4573:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3982,"name":"calculateBuyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"4538:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4538:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4516:67:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"4610:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4610:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742045544820666f72206d696e696d756d20746f6b656e20616d6f756e74","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4627:43:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9109858f22c559b521994fb74df03f5fe77c6d6794e711a08915a920f3e261c","typeString":"literal_string \"Insufficient ETH for minimum token amount\""},"value":"Insufficient ETH for minimum token amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c9109858f22c559b521994fb74df03f5fe77c6d6794e711a08915a920f3e261c","typeString":"literal_string \"Insufficient ETH for minimum token amount\""}],"id":3988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4602:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3994,"nodeType":"ExpressionStatement","src":"4602:69:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3996,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4702:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":3997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4712:17:23","memberName":"circulatingSupply","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"4702:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3998,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"4732:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4702:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4000,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"4747:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4757:11:23","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":3744,"src":"4747:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4702:66:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576f756c642065786365656420746f74616c20737570706c79","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4782:27:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c860e5b3b132f96a2fd8a8a252f41ab8993729abdb1cd8b77df0de7d0a694bcb","typeString":"literal_string \"Would exceed total supply\""},"value":"Would exceed total supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c860e5b3b132f96a2fd8a8a252f41ab8993729abdb1cd8b77df0de7d0a694bcb","typeString":"literal_string \"Would exceed total supply\""}],"id":3995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4681:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4681:138:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4005,"nodeType":"ExpressionStatement","src":"4681:138:23"},{"assignments":[4007],"declarations":[{"constant":false,"id":4007,"mutability":"mutable","name":"platformFeeAmount","nameLocation":"4864:17:23","nodeType":"VariableDeclaration","scope":4083,"src":"4856:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"4856:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4015,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4008,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4885:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4889:5:23","memberName":"value","nodeType":"MemberAccess","src":"4885:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4010,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"4897:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4885:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4884:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4912:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4884:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4856:61:23"},{"assignments":[4017],"declarations":[{"constant":false,"id":4017,"mutability":"mutable","name":"astrologerAmount","nameLocation":"4935:16:23","nodeType":"VariableDeclaration","scope":4083,"src":"4927:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"4927:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4022,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4954:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4958:5:23","memberName":"value","nodeType":"MemberAccess","src":"4954:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4020,"name":"platformFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"4966:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4954:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4927:56:23"},{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4023,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"5018:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5028:17:23","memberName":"circulatingSupply","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"5018:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4026,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"5049:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"nodeType":"ExpressionStatement","src":"5018:42:23"},{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4029,"name":"userBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"5070:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4031,"indexExpression":{"id":4030,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"5083:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5070:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4032,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"5102:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5070:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4034,"nodeType":"ExpressionStatement","src":"5070:43:23"},{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4035,"name":"userContributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"5123:17:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4038,"indexExpression":{"expression":{"id":4036,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5141:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5145:6:23","memberName":"sender","nodeType":"MemberAccess","src":"5141:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5123:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4039,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5156:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5160:5:23","memberName":"value","nodeType":"MemberAccess","src":"5156:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5123:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4042,"nodeType":"ExpressionStatement","src":"5123:42:23"},{"expression":{"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"totalVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"5175:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5190:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5194:5:23","memberName":"value","nodeType":"MemberAccess","src":"5190:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5175:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4047,"nodeType":"ExpressionStatement","src":"5175:24:23"},{"expression":{"arguments":[{"expression":{"id":4052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5274:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5278:6:23","memberName":"sender","nodeType":"MemberAccess","src":"5274:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4054,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"5286:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4049,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"5253:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4048,"name":"AstroToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"5242:10:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AstroToken_$2941_$","typeString":"type(contract AstroToken)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5242:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AstroToken_$2941","typeString":"contract AstroToken"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5269:4:23","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"5242:31:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5242:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4056,"nodeType":"ExpressionStatement","src":"5242:56:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"astrologerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"5351:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5370:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5351:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"5347:107:23","trueBody":{"id":4069,"nodeType":"Block","src":"5373:81:23","statements":[{"expression":{"arguments":[{"id":4066,"name":"astrologerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"5426:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":4062,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"5395:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5405:10:23","memberName":"astrologer","nodeType":"MemberAccess","referencedDeclaration":3742,"src":"5395:20:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5387:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4060,"name":"address","nodeType":"ElementaryTypeName","src":"5387:8:23","stateMutability":"payable","typeDescriptions":{}}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5387:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5417:8:23","memberName":"transfer","nodeType":"MemberAccess","src":"5387:38:23","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5387:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"ExpressionStatement","src":"5387:56:23"}]}},{"eventCall":{"arguments":[{"id":4072,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"5481:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5497:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5501:6:23","memberName":"sender","nodeType":"MemberAccess","src":"5497:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5509:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5513:5:23","memberName":"value","nodeType":"MemberAccess","src":"5509:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4077,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"5520:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4078,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"5533:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4071,"name":"TokenBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"5469:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5469:77:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4080,"nodeType":"EmitStatement","src":"5464:82:23"},{"expression":{"id":4081,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"5563:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3952,"id":4082,"nodeType":"Return","src":"5556:18:23"}]},"functionSelector":"ec8ac4d8","id":4084,"implemented":true,"kind":"function","modifiers":[],"name":"buyTokens","nameLocation":"4186:9:23","nodeType":"FunctionDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"_tokenContract","nameLocation":"4204:14:23","nodeType":"VariableDeclaration","scope":4084,"src":"4196:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3947,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4195:24:23"},"returnParameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4084,"src":"4246:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"4246:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4245:9:23"},"scope":4595,"src":"4177:1404:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4207,"nodeType":"Block","src":"5680:1202:23","statements":[{"assignments":[4095],"declarations":[{"constant":false,"id":4095,"mutability":"mutable","name":"tokenInfo","nameLocation":"5708:9:23","nodeType":"VariableDeclaration","scope":4207,"src":"5690:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"},"typeName":{"id":4094,"nodeType":"UserDefinedTypeName","pathNode":{"id":4093,"name":"TokenInfo","nameLocations":["5690:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"5690:9:23"},"referencedDeclaration":3753,"src":"5690:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"}},"visibility":"internal"}],"id":4099,"initialValue":{"baseExpression":{"id":4096,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"5720:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":4098,"indexExpression":{"id":4097,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"5731:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5720:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5690:56:23"},{"expression":{"arguments":[{"expression":{"id":4101,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"5764:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5774:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"5764:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616374697665","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5784:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1215f4fc5ebfbc91c1c3a476c347a90dbb9a060cd5a09746515965212ffd5e1a","typeString":"literal_string \"Token not active\""},"value":"Token not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1215f4fc5ebfbc91c1c3a476c347a90dbb9a060cd5a09746515965212ffd5e1a","typeString":"literal_string \"Token not active\""}],"id":4100,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5756:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5756:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4105,"nodeType":"ExpressionStatement","src":"5756:47:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"5821:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5836:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5821:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742073656c6c20706f73697469766520616d6f756e74","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5839:27:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_463ccaab01f9a2e08a583204641479cece8cd738b358fdd21b0366cc63118832","typeString":"literal_string \"Must sell positive amount\""},"value":"Must sell positive amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_463ccaab01f9a2e08a583204641479cece8cd738b358fdd21b0366cc63118832","typeString":"literal_string \"Must sell positive amount\""}],"id":4106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5813:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5813:54:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4112,"nodeType":"ExpressionStatement","src":"5813:54:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4114,"name":"userBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"5885:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4116,"indexExpression":{"id":4115,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"5898:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5885:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4117,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"5917:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5885:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e2062616c616e6365","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5931:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192","typeString":"literal_string \"Insufficient token balance\""},"value":"Insufficient token balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192","typeString":"literal_string \"Insufficient token balance\""}],"id":4113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5877:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5877:83:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4121,"nodeType":"ExpressionStatement","src":"5877:83:23"},{"assignments":[4123],"declarations":[{"constant":false,"id":4123,"mutability":"mutable","name":"currentPrice","nameLocation":"5979:12:23","nodeType":"VariableDeclaration","scope":4207,"src":"5971:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"5971:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4127,"initialValue":{"arguments":[{"id":4125,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"6010:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4124,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"5994:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5971:54:23"},{"assignments":[4129],"declarations":[{"constant":false,"id":4129,"mutability":"mutable","name":"ethAmount","nameLocation":"6043:9:23","nodeType":"VariableDeclaration","scope":4207,"src":"6035:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4128,"name":"uint256","nodeType":"ElementaryTypeName","src":"6035:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4134,"initialValue":{"arguments":[{"id":4131,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"6075:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4132,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"6091:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4130,"name":"calculateSellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"6055:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6035:69:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6131:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6143:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6131:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e7320666f72206d696e696d756d2045544820616d6f756e74","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6146:44:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c4142ba8f5a1839692686ccf98084fc933ff73f2583be4395e6a05c6859b620","typeString":"literal_string \"Insufficient tokens for minimum ETH amount\""},"value":"Insufficient tokens for minimum ETH amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c4142ba8f5a1839692686ccf98084fc933ff73f2583be4395e6a05c6859b620","typeString":"literal_string \"Insufficient tokens for minimum ETH amount\""}],"id":4135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6123:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6123:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4141,"nodeType":"ExpressionStatement","src":"6123:68:23"},{"assignments":[4143],"declarations":[{"constant":false,"id":4143,"mutability":"mutable","name":"platformFeeAmount","nameLocation":"6236:17:23","nodeType":"VariableDeclaration","scope":4207,"src":"6228:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"6228:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4150,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6257:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4145,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"6269:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6257:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6256:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6284:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6256:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6228:61:23"},{"assignments":[4152],"declarations":[{"constant":false,"id":4152,"mutability":"mutable","name":"sellerAmount","nameLocation":"6307:12:23","nodeType":"VariableDeclaration","scope":4207,"src":"6299:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4156,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6322:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4154,"name":"platformFeeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"6334:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6322:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6299:52:23"},{"expression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4157,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"6386:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6396:17:23","memberName":"circulatingSupply","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"6386:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4160,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"6417:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6386:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4162,"nodeType":"ExpressionStatement","src":"6386:43:23"},{"expression":{"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4163,"name":"userBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"6439:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4165,"indexExpression":{"id":4164,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"6452:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6439:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4166,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"6471:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6439:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4168,"nodeType":"ExpressionStatement","src":"6439:44:23"},{"expression":{"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4169,"name":"totalVolume","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"6493:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4170,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6508:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4172,"nodeType":"ExpressionStatement","src":"6493:24:23"},{"expression":{"arguments":[{"expression":{"id":4177,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6599:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6603:6:23","memberName":"sender","nodeType":"MemberAccess","src":"6599:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4179,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"6611:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4174,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"6574:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4173,"name":"AstroToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"6563:10:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AstroToken_$2941_$","typeString":"type(contract AstroToken)"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6563:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AstroToken_$2941","typeString":"contract AstroToken"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6590:8:23","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":2919,"src":"6563:35:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6563:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4181,"nodeType":"ExpressionStatement","src":"6563:61:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"sellerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"6673:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6688:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6673:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4195,"nodeType":"IfStatement","src":"6669:89:23","trueBody":{"id":4194,"nodeType":"Block","src":"6691:67:23","statements":[{"expression":{"arguments":[{"id":4191,"name":"sellerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4152,"src":"6734:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":4187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6713:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6717:6:23","memberName":"sender","nodeType":"MemberAccess","src":"6713:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6705:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4185,"name":"address","nodeType":"ElementaryTypeName","src":"6705:8:23","stateMutability":"payable","typeDescriptions":{}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6705:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6725:8:23","memberName":"transfer","nodeType":"MemberAccess","src":"6705:28:23","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6705:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4193,"nodeType":"ExpressionStatement","src":"6705:42:23"}]}},{"eventCall":{"arguments":[{"id":4197,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"6783:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6799:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6803:6:23","memberName":"sender","nodeType":"MemberAccess","src":"6799:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4200,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"6811:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4201,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6825:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4202,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"6836:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4196,"name":"TokenSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"6773:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6773:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4204,"nodeType":"EmitStatement","src":"6768:81:23"},{"expression":{"id":4205,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6866:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4092,"id":4206,"nodeType":"Return","src":"6859:16:23"}]},"functionSelector":"c464fe65","id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"sellTokens","nameLocation":"5596:10:23","nodeType":"FunctionDefinition","parameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"_tokenContract","nameLocation":"5615:14:23","nodeType":"VariableDeclaration","scope":4208,"src":"5607:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4085,"name":"address","nodeType":"ElementaryTypeName","src":"5607:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4088,"mutability":"mutable","name":"_tokenAmount","nameLocation":"5639:12:23","nodeType":"VariableDeclaration","scope":4208,"src":"5631:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5606:46:23"},"returnParameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4208,"src":"5671:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"5671:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5670:9:23"},"scope":4595,"src":"5587:1295:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4255,"nodeType":"Block","src":"6972:409:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"6990:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7016:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7008:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4217,"name":"address","nodeType":"ElementaryTypeName","src":"7008:7:23","typeDescriptions":{}}},"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7008:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6990:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20636f6e7472616374","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7020:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263","typeString":"literal_string \"Invalid token contract\""},"value":"Invalid token contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263","typeString":"literal_string \"Invalid token contract\""}],"id":4215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6982:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6982:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4224,"nodeType":"ExpressionStatement","src":"6982:63:23"},{"assignments":[4227],"declarations":[{"constant":false,"id":4227,"mutability":"mutable","name":"tokenInfo","nameLocation":"7074:9:23","nodeType":"VariableDeclaration","scope":4255,"src":"7056:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"},"typeName":{"id":4226,"nodeType":"UserDefinedTypeName","pathNode":{"id":4225,"name":"TokenInfo","nameLocations":["7056:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"7056:9:23"},"referencedDeclaration":3753,"src":"7056:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"}},"visibility":"internal"}],"id":4231,"initialValue":{"baseExpression":{"id":4228,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"7086:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":4230,"indexExpression":{"id":4229,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"7097:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7086:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7056:56:23"},{"expression":{"arguments":[{"expression":{"id":4233,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"7130:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7140:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"7130:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616374697665","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7150:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1215f4fc5ebfbc91c1c3a476c347a90dbb9a060cd5a09746515965212ffd5e1a","typeString":"literal_string \"Token not active\""},"value":"Token not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1215f4fc5ebfbc91c1c3a476c347a90dbb9a060cd5a09746515965212ffd5e1a","typeString":"literal_string \"Token not active\""}],"id":4232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7122:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7122:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4237,"nodeType":"ExpressionStatement","src":"7122:47:23"},{"assignments":[4239],"declarations":[{"constant":false,"id":4239,"mutability":"mutable","name":"oldMultiplier","nameLocation":"7188:13:23","nodeType":"VariableDeclaration","scope":4255,"src":"7180:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"7180:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4242,"initialValue":{"expression":{"id":4240,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"7204:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7214:21:23","memberName":"credibilityMultiplier","nodeType":"MemberAccess","referencedDeclaration":3750,"src":"7204:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7180:55:23"},{"expression":{"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4243,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"7245:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7255:21:23","memberName":"credibilityMultiplier","nodeType":"MemberAccess","referencedDeclaration":3750,"src":"7245:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4246,"name":"_newMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"7279:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7245:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4248,"nodeType":"ExpressionStatement","src":"7245:48:23"},{"eventCall":{"arguments":[{"id":4250,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"7328:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4251,"name":"oldMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"7344:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4252,"name":"_newMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"7359:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4249,"name":"CredibilityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"7309:18:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7309:65:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4254,"nodeType":"EmitStatement","src":"7304:70:23"}]},"functionSelector":"f6322a5f","id":4256,"implemented":true,"kind":"function","modifiers":[],"name":"updateCredibility","nameLocation":"6897:17:23","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"_tokenContract","nameLocation":"6923:14:23","nodeType":"VariableDeclaration","scope":4256,"src":"6915:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4209,"name":"address","nodeType":"ElementaryTypeName","src":"6915:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4212,"mutability":"mutable","name":"_newMultiplier","nameLocation":"6947:14:23","nodeType":"VariableDeclaration","scope":4256,"src":"6939:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"6939:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6914:48:23"},"returnParameters":{"id":4214,"nodeType":"ParameterList","parameters":[],"src":"6972:0:23"},"scope":4595,"src":"6888:493:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4317,"nodeType":"Block","src":"7466:800:23","statements":[{"assignments":[4265],"declarations":[{"constant":false,"id":4265,"mutability":"mutable","name":"tokenInfo","nameLocation":"7494:9:23","nodeType":"VariableDeclaration","scope":4317,"src":"7476:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"},"typeName":{"id":4264,"nodeType":"UserDefinedTypeName","pathNode":{"id":4263,"name":"TokenInfo","nameLocations":["7476:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"7476:9:23"},"referencedDeclaration":3753,"src":"7476:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"}},"visibility":"internal"}],"id":4269,"initialValue":{"baseExpression":{"id":4266,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"7506:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":4268,"indexExpression":{"id":4267,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"7517:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7506:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7476:56:23"},{"condition":{"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7546:19:23","subExpression":{"expression":{"id":4270,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"7547:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7557:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"7547:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4275,"nodeType":"IfStatement","src":"7542:33:23","trueBody":{"expression":{"hexValue":"30","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7574:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4262,"id":4274,"nodeType":"Return","src":"7567:8:23"}},{"assignments":[4277],"declarations":[{"constant":false,"id":4277,"mutability":"mutable","name":"supplyRatio","nameLocation":"7701:11:23","nodeType":"VariableDeclaration","scope":4317,"src":"7693:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"7693:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4286,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4278,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"7716:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7726:17:23","memberName":"circulatingSupply","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"7716:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7746:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7716:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7715:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":4283,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"7754:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7764:11:23","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":3744,"src":"7754:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7715:60:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7693:82:23"},{"assignments":[4288],"declarations":[{"constant":false,"id":4288,"mutability":"mutable","name":"supplyMultiplier","nameLocation":"7887:16:23","nodeType":"VariableDeclaration","scope":4317,"src":"7879:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4287,"name":"uint256","nodeType":"ElementaryTypeName","src":"7879:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4298,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7906:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"supplyRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"7914:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4291,"name":"bondingCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"7928:12:23","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage","typeString":"struct BuyTokenContract.BondingCurve storage ref"}},"id":4292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7941:1:23","memberName":"k","nodeType":"MemberAccess","referencedDeclaration":3755,"src":"7928:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7914:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7913:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030303030","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7946:7:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"src":"7913:40:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7906:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7879:74:23"},{"assignments":[4300],"declarations":[{"constant":false,"id":4300,"mutability":"mutable","name":"reputationMultiplier","nameLocation":"8100:20:23","nodeType":"VariableDeclaration","scope":4317,"src":"8092:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"8092:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4303,"initialValue":{"expression":{"id":4301,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"8123:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8133:21:23","memberName":"credibilityMultiplier","nodeType":"MemberAccess","referencedDeclaration":3750,"src":"8123:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8092:62:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4304,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"8181:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8191:9:23","memberName":"basePrice","nodeType":"MemberAccess","referencedDeclaration":3748,"src":"8181:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4306,"name":"supplyMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"8203:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8181:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4308,"name":"reputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"8222:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8181:61:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8180:63:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8247:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8254:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"8247:11:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}}],"id":4314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8246:13:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}},"src":"8180:79:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4262,"id":4316,"nodeType":"Return","src":"8173:86:23"}]},"functionSelector":"84cc315b","id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentPrice","nameLocation":"7396:15:23","nodeType":"FunctionDefinition","parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"_tokenContract","nameLocation":"7420:14:23","nodeType":"VariableDeclaration","scope":4318,"src":"7412:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4257,"name":"address","nodeType":"ElementaryTypeName","src":"7412:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7411:24:23"},"returnParameters":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4318,"src":"7457:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4260,"name":"uint256","nodeType":"ElementaryTypeName","src":"7457:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7456:9:23"},"scope":4595,"src":"7387:879:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4369,"nodeType":"Block","src":"8374:414:23","statements":[{"assignments":[4329],"declarations":[{"constant":false,"id":4329,"mutability":"mutable","name":"tokenInfo","nameLocation":"8402:9:23","nodeType":"VariableDeclaration","scope":4369,"src":"8384:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"},"typeName":{"id":4328,"nodeType":"UserDefinedTypeName","pathNode":{"id":4327,"name":"TokenInfo","nameLocations":["8384:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"8384:9:23"},"referencedDeclaration":3753,"src":"8384:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"}},"visibility":"internal"}],"id":4333,"initialValue":{"baseExpression":{"id":4330,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8414:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":4332,"indexExpression":{"id":4331,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"8425:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8414:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8384:56:23"},{"condition":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8454:19:23","subExpression":{"expression":{"id":4334,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"8455:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8465:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"8455:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4339,"nodeType":"IfStatement","src":"8450:33:23","trueBody":{"expression":{"hexValue":"30","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8482:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4326,"id":4338,"nodeType":"Return","src":"8475:8:23"}},{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"currentPrice","nameLocation":"8502:12:23","nodeType":"VariableDeclaration","scope":4369,"src":"8494:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4345,"initialValue":{"arguments":[{"id":4343,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"8533:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4342,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"8517:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8517:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8494:54:23"},{"assignments":[4347],"declarations":[{"constant":false,"id":4347,"mutability":"mutable","name":"tokenAmount","nameLocation":"8566:11:23","nodeType":"VariableDeclaration","scope":4369,"src":"8558:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"8558:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4354,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"_ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"8581:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8594:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"8581:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8580:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4352,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"8602:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8580:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8558:56:23"},{"assignments":[4356],"declarations":[{"constant":false,"id":4356,"mutability":"mutable","name":"slippage","nameLocation":"8677:8:23","nodeType":"VariableDeclaration","scope":4369,"src":"8669:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"8669:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4364,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"8689:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4358,"name":"bondingCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"8703:12:23","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage","typeString":"struct BuyTokenContract.BondingCurve storage ref"}},"id":4359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8716:17:23","memberName":"slippageTolerance","nodeType":"MemberAccess","referencedDeclaration":3759,"src":"8703:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8689:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8688:46:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8737:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8688:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8669:73:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"8759:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4366,"name":"slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"8773:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8759:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4326,"id":4368,"nodeType":"Return","src":"8752:29:23"}]},"functionSelector":"f2f2c5c4","id":4370,"implemented":true,"kind":"function","modifiers":[],"name":"calculateBuyAmount","nameLocation":"8281:18:23","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"_tokenContract","nameLocation":"8308:14:23","nodeType":"VariableDeclaration","scope":4370,"src":"8300:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4319,"name":"address","nodeType":"ElementaryTypeName","src":"8300:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"_ethAmount","nameLocation":"8332:10:23","nodeType":"VariableDeclaration","scope":4370,"src":"8324:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"8324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8299:44:23"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4370,"src":"8365:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"8365:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8364:9:23"},"scope":4595,"src":"8272:516:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4421,"nodeType":"Block","src":"8899:410:23","statements":[{"assignments":[4381],"declarations":[{"constant":false,"id":4381,"mutability":"mutable","name":"tokenInfo","nameLocation":"8927:9:23","nodeType":"VariableDeclaration","scope":4421,"src":"8909:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"},"typeName":{"id":4380,"nodeType":"UserDefinedTypeName","pathNode":{"id":4379,"name":"TokenInfo","nameLocations":["8909:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"8909:9:23"},"referencedDeclaration":3753,"src":"8909:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"}},"visibility":"internal"}],"id":4385,"initialValue":{"baseExpression":{"id":4382,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8939:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":4384,"indexExpression":{"id":4383,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"8950:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8939:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8909:56:23"},{"condition":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8979:19:23","subExpression":{"expression":{"id":4386,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"8980:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo storage pointer"}},"id":4387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8990:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"8980:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4391,"nodeType":"IfStatement","src":"8975:33:23","trueBody":{"expression":{"hexValue":"30","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9007:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4378,"id":4390,"nodeType":"Return","src":"9000:8:23"}},{"assignments":[4393],"declarations":[{"constant":false,"id":4393,"mutability":"mutable","name":"currentPrice","nameLocation":"9027:12:23","nodeType":"VariableDeclaration","scope":4421,"src":"9019:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"9019:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4397,"initialValue":{"arguments":[{"id":4395,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"9058:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4394,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"9042:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9042:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9019:54:23"},{"assignments":[4399],"declarations":[{"constant":false,"id":4399,"mutability":"mutable","name":"ethAmount","nameLocation":"9091:9:23","nodeType":"VariableDeclaration","scope":4421,"src":"9083:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4406,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"_tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"9104:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4401,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"9119:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9104:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9103:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"9103:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9083:56:23"},{"assignments":[4408],"declarations":[{"constant":false,"id":4408,"mutability":"mutable","name":"slippage","nameLocation":"9202:8:23","nodeType":"VariableDeclaration","scope":4421,"src":"9194:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"9194:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4416,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4409,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"9214:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4410,"name":"bondingCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"9226:12:23","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage","typeString":"struct BuyTokenContract.BondingCurve storage ref"}},"id":4411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9239:17:23","memberName":"slippageTolerance","nodeType":"MemberAccess","referencedDeclaration":3759,"src":"9226:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9214:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9213:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9260:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"9213:52:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9194:71:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"9282:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4418,"name":"slippage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"9294:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9282:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4378,"id":4420,"nodeType":"Return","src":"9275:27:23"}]},"functionSelector":"573a5b6b","id":4422,"implemented":true,"kind":"function","modifiers":[],"name":"calculateSellAmount","nameLocation":"8803:19:23","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"_tokenContract","nameLocation":"8831:14:23","nodeType":"VariableDeclaration","scope":4422,"src":"8823:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4371,"name":"address","nodeType":"ElementaryTypeName","src":"8823:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4374,"mutability":"mutable","name":"_tokenAmount","nameLocation":"8855:12:23","nodeType":"VariableDeclaration","scope":4422,"src":"8847:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"8847:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8822:46:23"},"returnParameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4422,"src":"8890:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8889:9:23"},"scope":4595,"src":"8794:515:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4434,"nodeType":"Block","src":"9402:50:23","statements":[{"expression":{"baseExpression":{"id":4430,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"9419:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":4432,"indexExpression":{"id":4431,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"9430:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9419:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"functionReturnParameters":4429,"id":4433,"nodeType":"Return","src":"9412:33:23"}]},"functionSelector":"1f69565f","id":4435,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"9324:12:23","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"_tokenContract","nameLocation":"9345:14:23","nodeType":"VariableDeclaration","scope":4435,"src":"9337:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4423,"name":"address","nodeType":"ElementaryTypeName","src":"9337:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9336:24:23"},"returnParameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4435,"src":"9384:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_memory_ptr","typeString":"struct BuyTokenContract.TokenInfo"},"typeName":{"id":4427,"nodeType":"UserDefinedTypeName","pathNode":{"id":4426,"name":"TokenInfo","nameLocations":["9384:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3753,"src":"9384:9:23"},"referencedDeclaration":3753,"src":"9384:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage_ptr","typeString":"struct BuyTokenContract.TokenInfo"}},"visibility":"internal"}],"src":"9383:18:23"},"scope":4595,"src":"9315:137:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4446,"nodeType":"Block","src":"9538:52:23","statements":[{"expression":{"baseExpression":{"id":4442,"name":"userBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9555:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4444,"indexExpression":{"id":4443,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"9568:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9555:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4441,"id":4445,"nodeType":"Return","src":"9548:35:23"}]},"functionSelector":"47734892","id":4447,"implemented":true,"kind":"function","modifiers":[],"name":"getUserBalance","nameLocation":"9467:14:23","nodeType":"FunctionDefinition","parameters":{"id":4438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"_tokenContract","nameLocation":"9490:14:23","nodeType":"VariableDeclaration","scope":4447,"src":"9482:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4436,"name":"address","nodeType":"ElementaryTypeName","src":"9482:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9481:24:23"},"returnParameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4447,"src":"9529:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4439,"name":"uint256","nodeType":"ElementaryTypeName","src":"9529:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9528:9:23"},"scope":4595,"src":"9458:132:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4458,"nodeType":"Block","src":"9672:48:23","statements":[{"expression":{"baseExpression":{"id":4454,"name":"userContributions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"9689:17:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4456,"indexExpression":{"id":4455,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"9707:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9689:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4453,"id":4457,"nodeType":"Return","src":"9682:31:23"}]},"functionSelector":"bb8b2b47","id":4459,"implemented":true,"kind":"function","modifiers":[],"name":"getUserContribution","nameLocation":"9605:19:23","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"_user","nameLocation":"9633:5:23","nodeType":"VariableDeclaration","scope":4459,"src":"9625:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4448,"name":"address","nodeType":"ElementaryTypeName","src":"9625:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9624:15:23"},"returnParameters":{"id":4453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4459,"src":"9663:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"9663:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9662:9:23"},"scope":4595,"src":"9596:124:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4488,"nodeType":"Block","src":"9905:330:23","statements":[{"expression":{"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4472,"name":"bondingCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"9915:12:23","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage","typeString":"struct BuyTokenContract.BondingCurve storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4474,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"9960:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4475,"name":"_reserveRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"9990:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4476,"name":"_slippageTolerance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"10036:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4477,"name":"_maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"10093:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4473,"name":"BondingCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"9930:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BondingCurve_$3762_storage_ptr_$","typeString":"type(struct BuyTokenContract.BondingCurve storage pointer)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9957:1:23","9976:12:23","10017:17:23","10068:23:23"],"names":["k","reserveRatio","slippageTolerance","maxReputationMultiplier"],"nodeType":"FunctionCall","src":"9930:198:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_memory_ptr","typeString":"struct BuyTokenContract.BondingCurve memory"}},"src":"9915:213:23","typeDescriptions":{"typeIdentifier":"t_struct$_BondingCurve_$3762_storage","typeString":"struct BuyTokenContract.BondingCurve storage ref"}},"id":4480,"nodeType":"ExpressionStatement","src":"9915:213:23"},{"eventCall":{"arguments":[{"id":4482,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"10164:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4483,"name":"_reserveRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"10168:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4484,"name":"_slippageTolerance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"10183:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4485,"name":"_maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"10203:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4481,"name":"BondingCurveUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"10144:19:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4487,"nodeType":"EmitStatement","src":"10139:89:23"}]},"functionSelector":"078bfd9b","id":4489,"implemented":true,"kind":"function","modifiers":[{"id":4470,"kind":"modifierInvocation","modifierName":{"id":4469,"name":"onlyOwner","nameLocations":["9895:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"9895:9:23"},"nodeType":"ModifierInvocation","src":"9895:9:23"}],"name":"setBondingCurve","nameLocation":"9735:15:23","nodeType":"FunctionDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4461,"mutability":"mutable","name":"_k","nameLocation":"9768:2:23","nodeType":"VariableDeclaration","scope":4489,"src":"9760:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"9760:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4463,"mutability":"mutable","name":"_reserveRatio","nameLocation":"9788:13:23","nodeType":"VariableDeclaration","scope":4489,"src":"9780:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"9780:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"_slippageTolerance","nameLocation":"9819:18:23","nodeType":"VariableDeclaration","scope":4489,"src":"9811:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"9811:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"_maxReputationMultiplier","nameLocation":"9855:24:23","nodeType":"VariableDeclaration","scope":4489,"src":"9847:32:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"9847:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9750:135:23"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[],"src":"9905:0:23"},"scope":4595,"src":"9726:509:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4500,"nodeType":"Block","src":"10306:43:23","statements":[{"expression":{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"10316:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4497,"name":"_platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"10330:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10316:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4499,"nodeType":"ExpressionStatement","src":"10316:26:23"}]},"functionSelector":"12e8e2c3","id":4501,"implemented":true,"kind":"function","modifiers":[{"id":4494,"kind":"modifierInvocation","modifierName":{"id":4493,"name":"onlyOwner","nameLocations":["10296:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"10296:9:23"},"nodeType":"ModifierInvocation","src":"10296:9:23"}],"name":"setPlatformFee","nameLocation":"10250:14:23","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"_platformFee","nameLocation":"10273:12:23","nodeType":"VariableDeclaration","scope":4501,"src":"10265:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"10265:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10264:22:23"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[],"src":"10306:0:23"},"scope":4595,"src":"10241:108:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4512,"nodeType":"Block","src":"10432:55:23","statements":[{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4508,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"10442:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4509,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"10462:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10442:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4511,"nodeType":"ExpressionStatement","src":"10442:38:23"}]},"functionSelector":"44cda485","id":4513,"implemented":true,"kind":"function","modifiers":[{"id":4506,"kind":"modifierInvocation","modifierName":{"id":4505,"name":"onlyOwner","nameLocations":["10422:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"10422:9:23"},"nodeType":"ModifierInvocation","src":"10422:9:23"}],"name":"setAstrologerManager","nameLocation":"10364:20:23","nodeType":"FunctionDefinition","parameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"_astrologerManager","nameLocation":"10393:18:23","nodeType":"VariableDeclaration","scope":4513,"src":"10385:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4502,"name":"address","nodeType":"ElementaryTypeName","src":"10385:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10384:28:23"},"returnParameters":{"id":4507,"nodeType":"ParameterList","parameters":[],"src":"10432:0:23"},"scope":4595,"src":"10355:132:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4524,"nodeType":"Block","src":"10592:77:23","statements":[{"expression":{"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4520,"name":"predictionCredibilityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"10602:28:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4521,"name":"_predictionCredibilityManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"10633:29:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10602:60:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4523,"nodeType":"ExpressionStatement","src":"10602:60:23"}]},"functionSelector":"b0d485b3","id":4525,"implemented":true,"kind":"function","modifiers":[{"id":4518,"kind":"modifierInvocation","modifierName":{"id":4517,"name":"onlyOwner","nameLocations":["10582:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"10582:9:23"},"nodeType":"ModifierInvocation","src":"10582:9:23"}],"name":"setPredictionCredibilityManager","nameLocation":"10502:31:23","nodeType":"FunctionDefinition","parameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"_predictionCredibilityManager","nameLocation":"10542:29:23","nodeType":"VariableDeclaration","scope":4525,"src":"10534:37:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4514,"name":"address","nodeType":"ElementaryTypeName","src":"10534:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10533:39:23"},"returnParameters":{"id":4519,"nodeType":"ParameterList","parameters":[],"src":"10592:0:23"},"scope":4595,"src":"10493:176:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4536,"nodeType":"Block","src":"10750:53:23","statements":[{"expression":{"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"10760:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4533,"name":"_reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"10779:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10760:36:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4535,"nodeType":"ExpressionStatement","src":"10760:36:23"}]},"functionSelector":"e9725c21","id":4537,"implemented":true,"kind":"function","modifiers":[{"id":4530,"kind":"modifierInvocation","modifierName":{"id":4529,"name":"onlyOwner","nameLocations":["10740:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"10740:9:23"},"nodeType":"ModifierInvocation","src":"10740:9:23"}],"name":"setReputationScorer","nameLocation":"10684:19:23","nodeType":"FunctionDefinition","parameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"_reputationScorer","nameLocation":"10712:17:23","nodeType":"VariableDeclaration","scope":4537,"src":"10704:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4526,"name":"address","nodeType":"ElementaryTypeName","src":"10704:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10703:27:23"},"returnParameters":{"id":4531,"nodeType":"ParameterList","parameters":[],"src":"10750:0:23"},"scope":4595,"src":"10675:128:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4565,"nodeType":"Block","src":"10879:164:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"10897:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10923:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10915:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4546,"name":"address","nodeType":"ElementaryTypeName","src":"10915:7:23","typeDescriptions":{}}},"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10915:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10897:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20636f6e7472616374","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10927:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263","typeString":"literal_string \"Invalid token contract\""},"value":"Invalid token contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7da84f3a1c9f163c91d06a811fbdd86f5cfb6057a97fe7a83411f17c926ea263","typeString":"literal_string \"Invalid token contract\""}],"id":4544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10889:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4553,"nodeType":"ExpressionStatement","src":"10889:63:23"},{"expression":{"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4554,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"10962:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":4556,"indexExpression":{"id":4555,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"10973:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10962:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"id":4557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10989:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"10962:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11000:36:23","subExpression":{"expression":{"baseExpression":{"id":4558,"name":"tokenInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"11001:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_TokenInfo_$3753_storage_$","typeString":"mapping(address => struct BuyTokenContract.TokenInfo storage ref)"}},"id":4560,"indexExpression":{"id":4559,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"11012:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11001:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$3753_storage","typeString":"struct BuyTokenContract.TokenInfo storage ref"}},"id":4561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11028:8:23","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":3752,"src":"11001:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10962:74:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4564,"nodeType":"ExpressionStatement","src":"10962:74:23"}]},"functionSelector":"4f1d052d","id":4566,"implemented":true,"kind":"function","modifiers":[{"id":4542,"kind":"modifierInvocation","modifierName":{"id":4541,"name":"onlyOwner","nameLocations":["10869:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"10869:9:23"},"nodeType":"ModifierInvocation","src":"10869:9:23"}],"name":"toggleTokenActive","nameLocation":"10818:17:23","nodeType":"FunctionDefinition","parameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4539,"mutability":"mutable","name":"_tokenContract","nameLocation":"10844:14:23","nodeType":"VariableDeclaration","scope":4566,"src":"10836:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4538,"name":"address","nodeType":"ElementaryTypeName","src":"10836:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10835:24:23"},"returnParameters":{"id":4543,"nodeType":"ParameterList","parameters":[],"src":"10879:0:23"},"scope":4595,"src":"10809:234:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4584,"nodeType":"Block","src":"11088:65:23","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":4579,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11132:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_BuyTokenContract_$4595","typeString":"contract BuyTokenContract"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BuyTokenContract_$4595","typeString":"contract BuyTokenContract"}],"id":4578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11124:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4577,"name":"address","nodeType":"ElementaryTypeName","src":"11124:7:23","typeDescriptions":{}}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11124:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11138:7:23","memberName":"balance","nodeType":"MemberAccess","src":"11124:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4573,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"11106:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11106:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11098:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4571,"name":"address","nodeType":"ElementaryTypeName","src":"11098:8:23","stateMutability":"payable","typeDescriptions":{}}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11098:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11115:8:23","memberName":"transfer","nodeType":"MemberAccess","src":"11098:25:23","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11098:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4583,"nodeType":"ExpressionStatement","src":"11098:48:23"}]},"functionSelector":"3ccfd60b","id":4585,"implemented":true,"kind":"function","modifiers":[{"id":4569,"kind":"modifierInvocation","modifierName":{"id":4568,"name":"onlyOwner","nameLocations":["11078:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"11078:9:23"},"nodeType":"ModifierInvocation","src":"11078:9:23"}],"name":"withdraw","nameLocation":"11058:8:23","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[],"src":"11066:2:23"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[],"src":"11088:0:23"},"scope":4595,"src":"11049:104:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[795],"body":{"id":4593,"nodeType":"Block","src":"11241:2:23","statements":[]},"id":4594,"implemented":true,"kind":"function","modifiers":[{"id":4591,"kind":"modifierInvocation","modifierName":{"id":4590,"name":"onlyOwner","nameLocations":["11231:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"11231:9:23"},"nodeType":"ModifierInvocation","src":"11231:9:23"}],"name":"_authorizeUpgrade","nameLocation":"11168:17:23","nodeType":"FunctionDefinition","overrides":{"id":4589,"nodeType":"OverrideSpecifier","overrides":[],"src":"11222:8:23"},"parameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"newImplementation","nameLocation":"11194:17:23","nodeType":"VariableDeclaration","scope":4594,"src":"11186:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4586,"name":"address","nodeType":"ElementaryTypeName","src":"11186:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11185:27:23"},"returnParameters":{"id":4592,"nodeType":"ParameterList","parameters":[],"src":"11241:0:23"},"scope":4595,"src":"11159:84:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4596,"src":"484:10761:23","usedErrors":[]}],"src":"32:11214:23"},"id":23},"contracts/PredictionCredibilityManager.sol":{"ast":{"absolutePath":"contracts/PredictionCredibilityManager.sol","exportedSymbols":{"AddressUpgradeable":[2322],"ContextUpgradeable":[2364],"CountersUpgradeable":[2438],"ERC1967UpgradeUpgradeable":[486],"IAstroTokenLauncher":[6632],"IAstrologerManager":[6715],"IBeaconUpgradeable":[496],"IBuyTokenContract":[6755],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"OwnableUpgradeable":[131],"PredictionCredibilityManager":[5355],"StorageSlotUpgradeable":[2548],"UUPSUpgradeable":[801]},"id":5356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4597,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:24"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5356,"sourceUnit":132,"src":"57:75:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5356,"sourceUnit":666,"src":"133:75:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5356,"sourceUnit":802,"src":"209:77:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAstrologerManager.sol","file":"./interfaces/IAstrologerManager.sol","id":4601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5356,"sourceUnit":6716,"src":"287:45:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBuyTokenContract.sol","file":"./interfaces/IBuyTokenContract.sol","id":4602,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5356,"sourceUnit":6756,"src":"333:44:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAstroTokenLauncher.sol","file":"./interfaces/IAstroTokenLauncher.sol","id":4603,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5356,"sourceUnit":6633,"src":"378:46:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","id":4604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5356,"sourceUnit":2439,"src":"425:75:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4605,"name":"Initializable","nameLocations":["548:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"548:13:24"},"id":4606,"nodeType":"InheritanceSpecifier","src":"548:13:24"},{"baseName":{"id":4607,"name":"OwnableUpgradeable","nameLocations":["568:18:24"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"568:18:24"},"id":4608,"nodeType":"InheritanceSpecifier","src":"568:18:24"},{"baseName":{"id":4609,"name":"UUPSUpgradeable","nameLocations":["593:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":801,"src":"593:15:24"},"id":4610,"nodeType":"InheritanceSpecifier","src":"593:15:24"}],"canonicalName":"PredictionCredibilityManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5355,"linearizedBaseContracts":[5355,801,486,152,162,131,2364,665],"name":"PredictionCredibilityManager","nameLocation":"511:28:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4614,"libraryName":{"id":4611,"name":"CountersUpgradeable","nameLocations":["622:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":2438,"src":"622:19:24"},"nodeType":"UsingForDirective","src":"616:58:24","typeName":{"id":4613,"nodeType":"UserDefinedTypeName","pathNode":{"id":4612,"name":"CountersUpgradeable.Counter","nameLocations":["646:19:24","666:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"646:27:24"},"referencedDeclaration":2370,"src":"646:27:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":4617,"mutability":"mutable","name":"_predictionIds","nameLocation":"716:14:24","nodeType":"VariableDeclaration","scope":5355,"src":"680:50:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":4616,"nodeType":"UserDefinedTypeName","pathNode":{"id":4615,"name":"CountersUpgradeable.Counter","nameLocations":["680:19:24","700:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"680:27:24"},"referencedDeclaration":2370,"src":"680:27:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"canonicalName":"PredictionCredibilityManager.Prediction","id":4642,"members":[{"constant":false,"id":4619,"mutability":"mutable","name":"id","nameLocation":"777:2:24","nodeType":"VariableDeclaration","scope":4642,"src":"769:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4618,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4621,"mutability":"mutable","name":"astrologer","nameLocation":"797:10:24","nodeType":"VariableDeclaration","scope":4642,"src":"789:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4620,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4623,"mutability":"mutable","name":"astrologerId","nameLocation":"825:12:24","nodeType":"VariableDeclaration","scope":4642,"src":"817:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4622,"name":"uint256","nodeType":"ElementaryTypeName","src":"817:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4625,"mutability":"mutable","name":"description","nameLocation":"854:11:24","nodeType":"VariableDeclaration","scope":4642,"src":"847:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4624,"name":"string","nodeType":"ElementaryTypeName","src":"847:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4627,"mutability":"mutable","name":"predictionType","nameLocation":"883:14:24","nodeType":"VariableDeclaration","scope":4642,"src":"875:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4629,"mutability":"mutable","name":"deadline","nameLocation":"951:8:24","nodeType":"VariableDeclaration","scope":4642,"src":"943:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4631,"mutability":"mutable","name":"outcome","nameLocation":"974:7:24","nodeType":"VariableDeclaration","scope":4642,"src":"969:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4630,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4633,"mutability":"mutable","name":"isResolved","nameLocation":"996:10:24","nodeType":"VariableDeclaration","scope":4642,"src":"991:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4632,"name":"bool","nodeType":"ElementaryTypeName","src":"991:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4635,"mutability":"mutable","name":"wasAccurate","nameLocation":"1021:11:24","nodeType":"VariableDeclaration","scope":4642,"src":"1016:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4634,"name":"bool","nodeType":"ElementaryTypeName","src":"1016:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4637,"mutability":"mutable","name":"stakeAmount","nameLocation":"1050:11:24","nodeType":"VariableDeclaration","scope":4642,"src":"1042:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1042:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4639,"mutability":"mutable","name":"totalStaked","nameLocation":"1079:11:24","nodeType":"VariableDeclaration","scope":4642,"src":"1071:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1071:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4641,"mutability":"mutable","name":"createdAt","nameLocation":"1108:9:24","nodeType":"VariableDeclaration","scope":4642,"src":"1100:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1100:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Prediction","nameLocation":"748:10:24","nodeType":"StructDefinition","scope":5355,"src":"741:383:24","visibility":"public"},{"canonicalName":"PredictionCredibilityManager.CredibilityScore","id":4653,"members":[{"constant":false,"id":4644,"mutability":"mutable","name":"totalPredictions","nameLocation":"1172:16:24","nodeType":"VariableDeclaration","scope":4653,"src":"1164:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1164:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4646,"mutability":"mutable","name":"accuratePredictions","nameLocation":"1206:19:24","nodeType":"VariableDeclaration","scope":4653,"src":"1198:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1198:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4648,"mutability":"mutable","name":"accuracyPercentage","nameLocation":"1243:18:24","nodeType":"VariableDeclaration","scope":4653,"src":"1235:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"reputationMultiplier","nameLocation":"1279:20:24","nodeType":"VariableDeclaration","scope":4653,"src":"1271:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"lastUpdated","nameLocation":"1317:11:24","nodeType":"VariableDeclaration","scope":4653,"src":"1309:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CredibilityScore","nameLocation":"1137:16:24","nodeType":"StructDefinition","scope":5355,"src":"1130:205:24","visibility":"public"},{"constant":false,"functionSelector":"004fbbb0","id":4658,"mutability":"mutable","name":"predictions","nameLocation":"1379:11:24","nodeType":"VariableDeclaration","scope":5355,"src":"1341:49:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Prediction_$4642_storage_$","typeString":"mapping(uint256 => struct PredictionCredibilityManager.Prediction)"},"typeName":{"id":4657,"keyType":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1341:30:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Prediction_$4642_storage_$","typeString":"mapping(uint256 => struct PredictionCredibilityManager.Prediction)"},"valueType":{"id":4656,"nodeType":"UserDefinedTypeName","pathNode":{"id":4655,"name":"Prediction","nameLocations":["1360:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4642,"src":"1360:10:24"},"referencedDeclaration":4642,"src":"1360:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction"}}},"visibility":"public"},{"constant":false,"functionSelector":"7d54f2a5","id":4663,"mutability":"mutable","name":"credibilityScores","nameLocation":"1440:17:24","nodeType":"VariableDeclaration","scope":5355,"src":"1396:61:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CredibilityScore_$4653_storage_$","typeString":"mapping(address => struct PredictionCredibilityManager.CredibilityScore)"},"typeName":{"id":4662,"keyType":{"id":4659,"name":"address","nodeType":"ElementaryTypeName","src":"1404:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1396:36:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CredibilityScore_$4653_storage_$","typeString":"mapping(address => struct PredictionCredibilityManager.CredibilityScore)"},"valueType":{"id":4661,"nodeType":"UserDefinedTypeName","pathNode":{"id":4660,"name":"CredibilityScore","nameLocations":["1415:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":4653,"src":"1415:16:24"},"referencedDeclaration":4653,"src":"1415:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore"}}},"visibility":"public"},{"constant":false,"functionSelector":"37562b29","id":4668,"mutability":"mutable","name":"astrologerPredictions","nameLocation":"1500:21:24","nodeType":"VariableDeclaration","scope":5355,"src":"1463:58:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":4667,"keyType":{"id":4664,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1463:29:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":4665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1482:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ArrayTypeName","src":"1482:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"6fd31a41","id":4670,"mutability":"mutable","name":"astrologerManager","nameLocation":"1547:17:24","nodeType":"VariableDeclaration","scope":5355,"src":"1532:32:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4669,"name":"address","nodeType":"ElementaryTypeName","src":"1532:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"16d54f09","id":4672,"mutability":"mutable","name":"buyTokenContract","nameLocation":"1585:16:24","nodeType":"VariableDeclaration","scope":5355,"src":"1570:31:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4671,"name":"address","nodeType":"ElementaryTypeName","src":"1570:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"73c84d21","id":4674,"mutability":"mutable","name":"reputationScorer","nameLocation":"1622:16:24","nodeType":"VariableDeclaration","scope":5355,"src":"1607:31:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4673,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ab3dcd6a","id":4676,"mutability":"mutable","name":"astroTokenLauncher","nameLocation":"1659:18:24","nodeType":"VariableDeclaration","scope":5355,"src":"1644:33:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4675,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f1887684","id":4678,"mutability":"mutable","name":"minStakeAmount","nameLocation":"1703:14:24","nodeType":"VariableDeclaration","scope":5355,"src":"1688:29:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5d80ca32","id":4680,"mutability":"mutable","name":"maxStakeAmount","nameLocation":"1738:14:24","nodeType":"VariableDeclaration","scope":5355,"src":"1723:29:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2a2fa8c8","id":4682,"mutability":"mutable","name":"credibilityUpdateDelay","nameLocation":"1773:22:24","nodeType":"VariableDeclaration","scope":5355,"src":"1758:37:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"37f3edf7ed237f91fd6999d49411c7e10b3602f2e561a5adf21934775659c61a","id":4694,"name":"PredictionCreated","nameLocation":"1812:17:24","nodeType":"EventDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"indexed":true,"mutability":"mutable","name":"predictionId","nameLocation":"1855:12:24","nodeType":"VariableDeclaration","scope":4694,"src":"1839:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4686,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"1893:10:24","nodeType":"VariableDeclaration","scope":4694,"src":"1877:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4685,"name":"address","nodeType":"ElementaryTypeName","src":"1877:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4688,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"1920:11:24","nodeType":"VariableDeclaration","scope":4694,"src":"1913:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4687,"name":"string","nodeType":"ElementaryTypeName","src":"1913:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4690,"indexed":false,"mutability":"mutable","name":"predictionType","nameLocation":"1949:14:24","nodeType":"VariableDeclaration","scope":4694,"src":"1941:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1941:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4692,"indexed":false,"mutability":"mutable","name":"deadline","nameLocation":"1981:8:24","nodeType":"VariableDeclaration","scope":4694,"src":"1973:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:166:24"},"src":"1806:190:24"},{"anonymous":false,"eventSelector":"ce4539ae54088cf98525b0ed90db8b4271abcb31bd3a4b964aed59895698f72f","id":4702,"name":"PredictionResolved","nameLocation":"2008:18:24","nodeType":"EventDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"indexed":true,"mutability":"mutable","name":"predictionId","nameLocation":"2052:12:24","nodeType":"VariableDeclaration","scope":4702,"src":"2036:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2036:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4698,"indexed":false,"mutability":"mutable","name":"outcome","nameLocation":"2079:7:24","nodeType":"VariableDeclaration","scope":4702,"src":"2074:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4697,"name":"bool","nodeType":"ElementaryTypeName","src":"2074:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4700,"indexed":false,"mutability":"mutable","name":"wasAccurate","nameLocation":"2101:11:24","nodeType":"VariableDeclaration","scope":4702,"src":"2096:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4699,"name":"bool","nodeType":"ElementaryTypeName","src":"2096:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:92:24"},"src":"2002:117:24"},{"anonymous":false,"eventSelector":"6a7ecd478c262bb3ab79078dfdd91746ac4294a080e783fcb6c01647a353d5f7","id":4712,"name":"CredibilityUpdated","nameLocation":"2131:18:24","nodeType":"EventDefinition","parameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"2175:10:24","nodeType":"VariableDeclaration","scope":4712,"src":"2159:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4703,"name":"address","nodeType":"ElementaryTypeName","src":"2159:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4706,"indexed":false,"mutability":"mutable","name":"oldAccuracy","nameLocation":"2203:11:24","nodeType":"VariableDeclaration","scope":4712,"src":"2195:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4705,"name":"uint256","nodeType":"ElementaryTypeName","src":"2195:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4708,"indexed":false,"mutability":"mutable","name":"newAccuracy","nameLocation":"2232:11:24","nodeType":"VariableDeclaration","scope":4712,"src":"2224:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4710,"indexed":false,"mutability":"mutable","name":"newMultiplier","nameLocation":"2261:13:24","nodeType":"VariableDeclaration","scope":4712,"src":"2253:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2149:131:24"},"src":"2125:156:24"},{"body":{"id":4719,"nodeType":"Block","src":"2354:39:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4716,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"2364:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2364:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4718,"nodeType":"ExpressionStatement","src":"2364:22:24"}]},"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"2287:48:24","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":4720,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4714,"nodeType":"ParameterList","parameters":[],"src":"2351:2:24"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[],"src":"2354:0:24"},"scope":5355,"src":"2340:53:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4771,"nodeType":"Block","src":"2653:391:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4737,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2663:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2663:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4739,"nodeType":"ExpressionStatement","src":"2663:16:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4740,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2689:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4742,"nodeType":"ExpressionStatement","src":"2689:24:24"},{"expression":{"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4743,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"2732:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4744,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"2752:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2732:38:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4746,"nodeType":"ExpressionStatement","src":"2732:38:24"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4747,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"2780:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4748,"name":"_buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"2799:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2780:36:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4750,"nodeType":"ExpressionStatement","src":"2780:36:24"},{"expression":{"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4751,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"2826:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4752,"name":"_reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"2845:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2826:36:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4754,"nodeType":"ExpressionStatement","src":"2826:36:24"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4755,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"2872:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4756,"name":"_astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"2893:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2872:40:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4758,"nodeType":"ExpressionStatement","src":"2872:40:24"},{"expression":{"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4759,"name":"minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"2922:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4760,"name":"_minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"2939:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2922:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4762,"nodeType":"ExpressionStatement","src":"2922:32:24"},{"expression":{"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4763,"name":"maxStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"2964:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4764,"name":"_maxStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"2981:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2964:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4766,"nodeType":"ExpressionStatement","src":"2964:32:24"},{"expression":{"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4767,"name":"credibilityUpdateDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"3006:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3031:6:24","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"3006:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4770,"nodeType":"ExpressionStatement","src":"3006:31:24"}]},"functionSelector":"d7c41c79","id":4772,"implemented":true,"kind":"function","modifiers":[{"id":4735,"kind":"modifierInvocation","modifierName":{"id":4734,"name":"initializer","nameLocations":["2641:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"2641:11:24"},"nodeType":"ModifierInvocation","src":"2641:11:24"}],"name":"initialize","nameLocation":"2408:10:24","nodeType":"FunctionDefinition","parameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4722,"mutability":"mutable","name":"_astrologerManager","nameLocation":"2436:18:24","nodeType":"VariableDeclaration","scope":4772,"src":"2428:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4721,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4724,"mutability":"mutable","name":"_buyTokenContract","nameLocation":"2472:17:24","nodeType":"VariableDeclaration","scope":4772,"src":"2464:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4723,"name":"address","nodeType":"ElementaryTypeName","src":"2464:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4726,"mutability":"mutable","name":"_reputationScorer","nameLocation":"2507:17:24","nodeType":"VariableDeclaration","scope":4772,"src":"2499:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4725,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"_astroTokenLauncher","nameLocation":"2542:19:24","nodeType":"VariableDeclaration","scope":4772,"src":"2534:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4727,"name":"address","nodeType":"ElementaryTypeName","src":"2534:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4730,"mutability":"mutable","name":"_minStakeAmount","nameLocation":"2579:15:24","nodeType":"VariableDeclaration","scope":4772,"src":"2571:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"_maxStakeAmount","nameLocation":"2612:15:24","nodeType":"VariableDeclaration","scope":4772,"src":"2604:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2604:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2418:215:24"},"returnParameters":{"id":4736,"nodeType":"ParameterList","parameters":[],"src":"2653:0:24"},"scope":5355,"src":"2399:645:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4880,"nodeType":"Block","src":"3243:1174:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3261:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3265:5:24","memberName":"value","nodeType":"MemberAccess","src":"3261:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4788,"name":"minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"3274:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3261:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616d6f756e7420746f6f206c6f77","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3290:22:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cb3ff2c701fef9e84415b7f7c571c6f22ee68819abc324ffb7431b798992b76","typeString":"literal_string \"Stake amount too low\""},"value":"Stake amount too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cb3ff2c701fef9e84415b7f7c571c6f22ee68819abc324ffb7431b798992b76","typeString":"literal_string \"Stake amount too low\""}],"id":4785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3253:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4792,"nodeType":"ExpressionStatement","src":"3253:60:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4794,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3331:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3335:5:24","memberName":"value","nodeType":"MemberAccess","src":"3331:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4796,"name":"maxStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"3344:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3331:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616d6f756e7420746f6f2068696768","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3360:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_18aae7b06d8cca1aad60c6e7a965c7cc9b1e7647c01b28f8bb3d06af3148b8c6","typeString":"literal_string \"Stake amount too high\""},"value":"Stake amount too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18aae7b06d8cca1aad60c6e7a965c7cc9b1e7647c01b28f8bb3d06af3148b8c6","typeString":"literal_string \"Stake amount too high\""}],"id":4793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3323:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3323:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4800,"nodeType":"ExpressionStatement","src":"3323:61:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"3402:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4803,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3414:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3420:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"3414:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3402:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206d75737420626520696e2074686520667574757265","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3431:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3e7aa4aa0cbec9a64fb6a0b8b9ffd2b31f86995a33f516b85a302b0ba10930e","typeString":"literal_string \"Deadline must be in the future\""},"value":"Deadline must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3e7aa4aa0cbec9a64fb6a0b8b9ffd2b31f86995a33f516b85a302b0ba10930e","typeString":"literal_string \"Deadline must be in the future\""}],"id":4801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3394:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4808,"nodeType":"ExpressionStatement","src":"3394:70:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4812,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"3488:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3482:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4810,"name":"bytes","nodeType":"ElementaryTypeName","src":"3482:5:24","typeDescriptions":{}}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3482:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3502:6:24","memberName":"length","nodeType":"MemberAccess","src":"3482:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3511:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3482:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465736372697074696f6e2063616e6e6f7420626520656d707479","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3514:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214","typeString":"literal_string \"Description cannot be empty\""},"value":"Description cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214","typeString":"literal_string \"Description cannot be empty\""}],"id":4809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3474:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4819,"nodeType":"ExpressionStatement","src":"3474:70:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"_predictionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"3562:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"32","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3581:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3562:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e2074797065","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3584:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a28d16626ad406b0820fc6e7bbcbbd8409d5ba7f818e0446a05eb7079ed41dcd","typeString":"literal_string \"Invalid prediction type\""},"value":"Invalid prediction type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a28d16626ad406b0820fc6e7bbcbbd8409d5ba7f818e0446a05eb7079ed41dcd","typeString":"literal_string \"Invalid prediction type\""}],"id":4820,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3554:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4826,"nodeType":"ExpressionStatement","src":"3554:56:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4827,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"3621:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":4829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3636:9:24","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"3621:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2370_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3621:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4831,"nodeType":"ExpressionStatement","src":"3621:26:24"},{"assignments":[4833],"declarations":[{"constant":false,"id":4833,"mutability":"mutable","name":"predictionId","nameLocation":"3665:12:24","nodeType":"VariableDeclaration","scope":4880,"src":"3657:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4837,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4834,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"3680:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":4835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3695:7:24","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"3680:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3680:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3657:47:24"},{"expression":{"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4838,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"3715:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Prediction_$4642_storage_$","typeString":"mapping(uint256 => struct PredictionCredibilityManager.Prediction storage ref)"}},"id":4840,"indexExpression":{"id":4839,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"3727:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3715:25:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage","typeString":"struct PredictionCredibilityManager.Prediction storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4842,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"3772:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4843,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3810:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3814:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3810:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3848:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4846,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"3913:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4847,"name":"_predictionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"3955:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4848,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"3994:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4026:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4057:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4089:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":4852,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4121:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4125:5:24","memberName":"value","nodeType":"MemberAccess","src":"4121:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4157:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:5:24","memberName":"value","nodeType":"MemberAccess","src":"4157:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4856,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4191:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4197:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"4191:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4841,"name":"Prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"3743:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Prediction_$4642_storage_ptr_$","typeString":"type(struct PredictionCredibilityManager.Prediction storage pointer)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3768:2:24","3798:10:24","3834:12:24","3900:11:24","3939:14:24","3984:8:24","4017:7:24","4045:10:24","4076:11:24","4108:11:24","4144:11:24","4180:9:24"],"names":["id","astrologer","astrologerId","description","predictionType","deadline","outcome","isResolved","wasAccurate","stakeAmount","totalStaked","createdAt"],"nodeType":"FunctionCall","src":"3743:474:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_memory_ptr","typeString":"struct PredictionCredibilityManager.Prediction memory"}},"src":"3715:502:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage","typeString":"struct PredictionCredibilityManager.Prediction storage ref"}},"id":4860,"nodeType":"ExpressionStatement","src":"3715:502:24"},{"expression":{"arguments":[{"id":4866,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"4267:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4861,"name":"astrologerPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"4228:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4864,"indexExpression":{"expression":{"id":4862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4250:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4254:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4250:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4228:33:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:4:24","memberName":"push","nodeType":"MemberAccess","src":"4228:38:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4228:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4868,"nodeType":"ExpressionStatement","src":"4228:52:24"},{"eventCall":{"arguments":[{"id":4870,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"4314:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4328:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4332:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4328:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4873,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"4340:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4874,"name":"_predictionType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"4354:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4875,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"4371:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4869,"name":"PredictionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"4296:17:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256,uint256)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4296:85:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4877,"nodeType":"EmitStatement","src":"4291:90:24"},{"expression":{"id":4878,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"4398:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4784,"id":4879,"nodeType":"Return","src":"4391:19:24"}]},"functionSelector":"c4faa808","id":4881,"implemented":true,"kind":"function","modifiers":[],"name":"createPrediction","nameLocation":"3059:16:24","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"_description","nameLocation":"3099:12:24","nodeType":"VariableDeclaration","scope":4881,"src":"3085:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4773,"name":"string","nodeType":"ElementaryTypeName","src":"3085:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4776,"mutability":"mutable","name":"_predictionType","nameLocation":"3129:15:24","nodeType":"VariableDeclaration","scope":4881,"src":"3121:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3121:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4778,"mutability":"mutable","name":"_deadline","nameLocation":"3162:9:24","nodeType":"VariableDeclaration","scope":4881,"src":"3154:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3154:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4780,"mutability":"mutable","name":"_stakeAmount","nameLocation":"3189:12:24","nodeType":"VariableDeclaration","scope":4881,"src":"3181:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3075:132:24"},"returnParameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4881,"src":"3234:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"3234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3233:9:24"},"scope":5355,"src":"3050:1367:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":5002,"nodeType":"Block","src":"4497:1290:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4515:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4515:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4891,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"4529:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4529:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4515:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4894,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4540:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4544:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4540:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4896,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"4554:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4540:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:55:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4572:14:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""},"value":"Unauthorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""}],"id":4888,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4507:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4507:80:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4901,"nodeType":"ExpressionStatement","src":"4507:80:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"4605:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4621:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4605:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4906,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"4626:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4907,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"4643:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":4908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4658:7:24","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"4643:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4643:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4626:41:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4605:62:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e204944","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4669:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""},"value":"Invalid prediction ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""}],"id":4902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4597:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4597:96:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4914,"nodeType":"ExpressionStatement","src":"4597:96:24"},{"assignments":[4917],"declarations":[{"constant":false,"id":4917,"mutability":"mutable","name":"prediction","nameLocation":"4731:10:24","nodeType":"VariableDeclaration","scope":5002,"src":"4712:29:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction"},"typeName":{"id":4916,"nodeType":"UserDefinedTypeName","pathNode":{"id":4915,"name":"Prediction","nameLocations":["4712:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4642,"src":"4712:10:24"},"referencedDeclaration":4642,"src":"4712:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction"}},"visibility":"internal"}],"id":4921,"initialValue":{"baseExpression":{"id":4918,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"4744:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Prediction_$4642_storage_$","typeString":"mapping(uint256 => struct PredictionCredibilityManager.Prediction storage ref)"}},"id":4920,"indexExpression":{"id":4919,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"4756:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4744:26:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage","typeString":"struct PredictionCredibilityManager.Prediction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4712:58:24"},{"expression":{"arguments":[{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4788:22:24","subExpression":{"expression":{"id":4923,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"4789:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4800:10:24","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":4633,"src":"4789:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726564696374696f6e20616c7265616479207265736f6c766564","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4812:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""},"value":"Prediction already resolved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""}],"id":4922,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4780:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4780:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4928,"nodeType":"ExpressionStatement","src":"4780:62:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4930,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4860:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4866:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"4860:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4932,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"4879:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4890:8:24","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":4629,"src":"4879:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4860:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206e6f742072656163686564","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4900:22:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""},"value":"Deadline not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53e292b015226176e474a9791766536fc304b6afdefdc8e17ad1e85a84510013","typeString":"literal_string \"Deadline not reached\""}],"id":4929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4852:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4852:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4937,"nodeType":"ExpressionStatement","src":"4852:71:24"},{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4938,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"4934:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4945:7:24","memberName":"outcome","nodeType":"MemberAccess","referencedDeclaration":4631,"src":"4934:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4941,"name":"_outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"4955:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4934:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4943,"nodeType":"ExpressionStatement","src":"4934:29:24"},{"expression":{"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4944,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"4973:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4984:10:24","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":4633,"src":"4973:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4997:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4973:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4949,"nodeType":"ExpressionStatement","src":"4973:28:24"},{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4950,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"5139:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5150:11:24","memberName":"wasAccurate","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"5139:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4953,"name":"_outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5164:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5139:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4955,"nodeType":"ExpressionStatement","src":"5139:33:24"},{"expression":{"arguments":[{"expression":{"id":4957,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"5267:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5278:10:24","memberName":"astrologer","nodeType":"MemberAccess","referencedDeclaration":4621,"src":"5267:21:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4959,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"5290:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5301:11:24","memberName":"wasAccurate","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"5290:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4956,"name":"updateAstrologerCredibility","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"5239:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5239:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4962,"nodeType":"ExpressionStatement","src":"5239:74:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"5375:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5404:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5396:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4964,"name":"address","nodeType":"ElementaryTypeName","src":"5396:7:24","typeDescriptions":{}}},"id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5396:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5375:31:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4994,"nodeType":"IfStatement","src":"5371:327:24","trueBody":{"id":4993,"nodeType":"Block","src":"5408:290:24","statements":[{"assignments":[4970],"declarations":[{"constant":false,"id":4970,"mutability":"mutable","name":"astrologerId","nameLocation":"5430:12:24","nodeType":"VariableDeclaration","scope":4993,"src":"5422:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4978,"initialValue":{"arguments":[{"expression":{"id":4975,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"5499:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5510:10:24","memberName":"astrologer","nodeType":"MemberAccess","referencedDeclaration":4621,"src":"5499:21:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4972,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"5464:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4971,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"5445:18:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5445:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5483:15:24","memberName":"getAstrologerId","nodeType":"MemberAccess","referencedDeclaration":6714,"src":"5445:53:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5445:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5422:99:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4979,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"5539:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5554:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5539:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4992,"nodeType":"IfStatement","src":"5535:153:24","trueBody":{"id":4991,"nodeType":"Block","src":"5557:131:24","statements":[{"expression":{"arguments":[{"id":4986,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"5636:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4987,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"5650:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5661:11:24","memberName":"wasAccurate","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"5650:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":4983,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"5594:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4982,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"5575:18:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5575:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5613:22:24","memberName":"recordPredictionResult","nodeType":"MemberAccess","referencedDeclaration":6693,"src":"5575:60:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool) external"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5575:98:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4990,"nodeType":"ExpressionStatement","src":"5575:98:24"}]}}]}},{"eventCall":{"arguments":[{"id":4996,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"5732:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4997,"name":"_outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"5747:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4998,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"5757:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction storage pointer"}},"id":4999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5768:11:24","memberName":"wasAccurate","nodeType":"MemberAccess","referencedDeclaration":4635,"src":"5757:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4995,"name":"PredictionResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"5713:18:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$__$","typeString":"function (uint256,bool,bool)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5713:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5001,"nodeType":"EmitStatement","src":"5708:72:24"}]},"functionSelector":"76f34501","id":5003,"implemented":true,"kind":"function","modifiers":[],"name":"resolvePrediction","nameLocation":"4432:17:24","nodeType":"FunctionDefinition","parameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"_predictionId","nameLocation":"4458:13:24","nodeType":"VariableDeclaration","scope":5003,"src":"4450:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"_outcome","nameLocation":"4478:8:24","nodeType":"VariableDeclaration","scope":5003,"src":"4473:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4884,"name":"bool","nodeType":"ElementaryTypeName","src":"4473:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4449:38:24"},"returnParameters":{"id":4887,"nodeType":"ParameterList","parameters":[],"src":"4497:0:24"},"scope":5355,"src":"4423:1364:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5169,"nodeType":"Block","src":"5879:1812:24","statements":[{"assignments":[5012],"declarations":[{"constant":false,"id":5012,"mutability":"mutable","name":"score","nameLocation":"5914:5:24","nodeType":"VariableDeclaration","scope":5169,"src":"5889:30:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore"},"typeName":{"id":5011,"nodeType":"UserDefinedTypeName","pathNode":{"id":5010,"name":"CredibilityScore","nameLocations":["5889:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":4653,"src":"5889:16:24"},"referencedDeclaration":4653,"src":"5889:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore"}},"visibility":"internal"}],"id":5016,"initialValue":{"baseExpression":{"id":5013,"name":"credibilityScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"5922:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CredibilityScore_$4653_storage_$","typeString":"mapping(address => struct PredictionCredibilityManager.CredibilityScore storage ref)"}},"id":5015,"indexExpression":{"id":5014,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"5940:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5922:30:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage","typeString":"struct PredictionCredibilityManager.CredibilityScore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5889:63:24"},{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5971:24:24","subExpression":{"expression":{"id":5017,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"5971:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5977:16:24","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":4644,"src":"5971:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5021,"nodeType":"ExpressionStatement","src":"5971:24:24"},{"condition":{"id":5022,"name":"_wasAccurate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"6009:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5029,"nodeType":"IfStatement","src":"6005:70:24","trueBody":{"id":5028,"nodeType":"Block","src":"6023:52:24","statements":[{"expression":{"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6037:27:24","subExpression":{"expression":{"id":5023,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6037:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6043:19:24","memberName":"accuratePredictions","nodeType":"MemberAccess","referencedDeclaration":4646,"src":"6037:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5027,"nodeType":"ExpressionStatement","src":"6037:27:24"}]}},{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5030,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6093:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6099:18:24","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"6093:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5033,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6121:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6127:19:24","memberName":"accuratePredictions","nodeType":"MemberAccess","referencedDeclaration":4646,"src":"6121:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6149:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6121:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6120:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":5038,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6156:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6162:16:24","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":4644,"src":"6156:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6120:58:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6093:85:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5042,"nodeType":"ExpressionStatement","src":"6093:85:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5043,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6262:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6268:18:24","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"6262:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3930","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:2:24","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"6262:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5054,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6370:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6376:18:24","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"6370:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3830","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"6370:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5065,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6478:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6484:18:24","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"6478:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3730","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6506:2:24","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},"src":"6478:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5076,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6586:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6592:18:24","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"6586:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3630","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6614:2:24","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"6586:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5093,"nodeType":"Block","src":"6689:65:24","statements":[{"expression":{"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5087,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6703:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6709:20:24","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"6703:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"353030","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6732:3:24","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"6703:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5092,"nodeType":"ExpressionStatement","src":"6703:32:24"}]},"id":5094,"nodeType":"IfStatement","src":"6582:172:24","trueBody":{"id":5086,"nodeType":"Block","src":"6618:65:24","statements":[{"expression":{"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5080,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6632:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6638:20:24","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"6632:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"383030","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:3:24","typeDescriptions":{"typeIdentifier":"t_rational_800_by_1","typeString":"int_const 800"},"value":"800"},"src":"6632:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5085,"nodeType":"ExpressionStatement","src":"6632:32:24"}]}},"id":5095,"nodeType":"IfStatement","src":"6474:280:24","trueBody":{"id":5075,"nodeType":"Block","src":"6510:66:24","statements":[{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5069,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6524:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6530:20:24","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"6524:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31303030","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6553:4:24","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"6524:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5074,"nodeType":"ExpressionStatement","src":"6524:33:24"}]}},"id":5096,"nodeType":"IfStatement","src":"6366:388:24","trueBody":{"id":5064,"nodeType":"Block","src":"6402:66:24","statements":[{"expression":{"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5058,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6416:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6422:20:24","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"6416:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31323030","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6445:4:24","typeDescriptions":{"typeIdentifier":"t_rational_1200_by_1","typeString":"int_const 1200"},"value":"1200"},"src":"6416:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5063,"nodeType":"ExpressionStatement","src":"6416:33:24"}]}},"id":5097,"nodeType":"IfStatement","src":"6258:496:24","trueBody":{"id":5053,"nodeType":"Block","src":"6294:66:24","statements":[{"expression":{"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5047,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6308:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6314:20:24","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"6308:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31353030","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6337:4:24","typeDescriptions":{"typeIdentifier":"t_rational_1500_by_1","typeString":"int_const 1500"},"value":"1500"},"src":"6308:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5052,"nodeType":"ExpressionStatement","src":"6308:33:24"}]}},{"expression":{"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5098,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"6772:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6778:11:24","memberName":"lastUpdated","nodeType":"MemberAccess","referencedDeclaration":4652,"src":"6772:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5101,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6792:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6798:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"6792:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6772:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5104,"nodeType":"ExpressionStatement","src":"6772:35:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"6882:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6912:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5106,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:24","typeDescriptions":{}}},"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6882:32:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5158,"nodeType":"IfStatement","src":"6878:680:24","trueBody":{"id":5157,"nodeType":"Block","src":"6916:642:24","statements":[{"clauses":[{"block":{"id":5152,"nodeType":"Block","src":"7065:395:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5121,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7087:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7097:13:24","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":6578,"src":"7087:23:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7122:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7114:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5123,"name":"address","nodeType":"ElementaryTypeName","src":"7114:7:24","typeDescriptions":{}}},"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7114:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7087:37:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5128,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7128:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7138:11:24","memberName":"buyContract","nodeType":"MemberAccess","referencedDeclaration":6580,"src":"7128:21:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7161:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7153:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5130,"name":"address","nodeType":"ElementaryTypeName","src":"7153:7:24","typeDescriptions":{}}},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7128:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7087:76:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":5136,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7167:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7177:8:24","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6590,"src":"7167:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7087:98:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5151,"nodeType":"IfStatement","src":"7083:363:24","trueBody":{"id":5150,"nodeType":"Block","src":"7187:259:24","statements":[{"expression":{"arguments":[{"expression":{"id":5144,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7375:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7385:13:24","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":6578,"src":"7375:23:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5146,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"7400:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7406:20:24","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"7400:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":5140,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"7334:9:24","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7344:11:24","memberName":"buyContract","nodeType":"MemberAccess","referencedDeclaration":6580,"src":"7334:21:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5139,"name":"IBuyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"7316:17:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBuyTokenContract_$6755_$","typeString":"type(contract IBuyTokenContract)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBuyTokenContract_$6755","typeString":"contract IBuyTokenContract"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7357:17:24","memberName":"updateCredibility","nodeType":"MemberAccess","referencedDeclaration":6735,"src":"7316:58:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:111:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5149,"nodeType":"ExpressionStatement","src":"7316:111:24"}]}}]},"errorName":"","id":5153,"nodeType":"TryCatchClause","parameters":{"id":5120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"tokenInfo","nameLocation":"7054:9:24","nodeType":"VariableDeclaration","scope":5153,"src":"7017:46:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":5118,"nodeType":"UserDefinedTypeName","pathNode":{"id":5117,"name":"IAstroTokenLauncher.TokenInfo","nameLocations":["7017:19:24","7037:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":6593,"src":"7017:29:24"},"referencedDeclaration":6593,"src":"7017:29:24","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"7016:48:24"},"src":"7008:452:24"},{"block":{"id":5154,"nodeType":"Block","src":"7467:81:24","statements":[]},"errorName":"","id":5155,"nodeType":"TryCatchClause","src":"7461:87:24"}],"externalCall":{"arguments":[{"id":5115,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"6995:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5112,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"6954:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5111,"name":"IAstroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"6934:19:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstroTokenLauncher_$6632_$","typeString":"type(contract IAstroTokenLauncher)"}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6934:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstroTokenLauncher_$6632","typeString":"contract IAstroTokenLauncher"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6974:20:24","memberName":"getTokenByAstrologer","nodeType":"MemberAccess","referencedDeclaration":6601,"src":"6934:60:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_TokenInfo_$6593_memory_ptr_$","typeString":"function (address) view external returns (struct IAstroTokenLauncher.TokenInfo memory)"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6934:73:24","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5156,"nodeType":"TryStatement","src":"6930:618:24"}]}},{"eventCall":{"arguments":[{"id":5160,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"7592:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5161,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"7605:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7611:18:24","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"7605:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5163,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"7631:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7637:18:24","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"7631:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5165,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"7657:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore storage pointer"}},"id":5166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7663:20:24","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"7657:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5159,"name":"CredibilityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"7573:18:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7573:111:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5168,"nodeType":"EmitStatement","src":"7568:116:24"}]},"id":5170,"implemented":true,"kind":"function","modifiers":[],"name":"updateAstrologerCredibility","nameLocation":"5802:27:24","nodeType":"FunctionDefinition","parameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"_astrologer","nameLocation":"5838:11:24","nodeType":"VariableDeclaration","scope":5170,"src":"5830:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5004,"name":"address","nodeType":"ElementaryTypeName","src":"5830:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5007,"mutability":"mutable","name":"_wasAccurate","nameLocation":"5856:12:24","nodeType":"VariableDeclaration","scope":5170,"src":"5851:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5006,"name":"bool","nodeType":"ElementaryTypeName","src":"5851:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5829:40:24"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[],"src":"5879:0:24"},"scope":5355,"src":"5793:1898:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5195,"nodeType":"Block","src":"7785:156:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5179,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"7803:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7819:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7803:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5182,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"7824:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5183,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4617,"src":"7841:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":5184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7856:7:24","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"7841:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2370_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2370_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7824:41:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7803:62:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e204944","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7867:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""},"value":"Invalid prediction ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""}],"id":5178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7795:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7795:96:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5190,"nodeType":"ExpressionStatement","src":"7795:96:24"},{"expression":{"baseExpression":{"id":5191,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"7908:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Prediction_$4642_storage_$","typeString":"mapping(uint256 => struct PredictionCredibilityManager.Prediction storage ref)"}},"id":5193,"indexExpression":{"id":5192,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"7920:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7908:26:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage","typeString":"struct PredictionCredibilityManager.Prediction storage ref"}},"functionReturnParameters":5177,"id":5194,"nodeType":"Return","src":"7901:33:24"}]},"functionSelector":"fe83bece","id":5196,"implemented":true,"kind":"function","modifiers":[],"name":"getPrediction","nameLocation":"7706:13:24","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"_predictionId","nameLocation":"7728:13:24","nodeType":"VariableDeclaration","scope":5196,"src":"7720:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5171,"name":"uint256","nodeType":"ElementaryTypeName","src":"7720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7719:23:24"},"returnParameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5196,"src":"7766:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_memory_ptr","typeString":"struct PredictionCredibilityManager.Prediction"},"typeName":{"id":5175,"nodeType":"UserDefinedTypeName","pathNode":{"id":5174,"name":"Prediction","nameLocations":["7766:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":4642,"src":"7766:10:24"},"referencedDeclaration":4642,"src":"7766:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Prediction_$4642_storage_ptr","typeString":"struct PredictionCredibilityManager.Prediction"}},"visibility":"internal"}],"src":"7765:19:24"},"scope":5355,"src":"7697:244:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5208,"nodeType":"Block","src":"8043:58:24","statements":[{"expression":{"baseExpression":{"id":5204,"name":"astrologerPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"8060:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":5206,"indexExpression":{"id":5205,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"8082:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8060:34:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":5203,"id":5207,"nodeType":"Return","src":"8053:41:24"}]},"functionSelector":"bc858185","id":5209,"implemented":true,"kind":"function","modifiers":[],"name":"getAstrologerPredictions","nameLocation":"7956:24:24","nodeType":"FunctionDefinition","parameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"_astrologer","nameLocation":"7989:11:24","nodeType":"VariableDeclaration","scope":5209,"src":"7981:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5197,"name":"address","nodeType":"ElementaryTypeName","src":"7981:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7980:21:24"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5209,"src":"8025:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"8025:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5201,"nodeType":"ArrayTypeName","src":"8025:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8024:18:24"},"scope":5355,"src":"7947:154:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5221,"nodeType":"Block","src":"8205:54:24","statements":[{"expression":{"baseExpression":{"id":5217,"name":"credibilityScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8222:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CredibilityScore_$4653_storage_$","typeString":"mapping(address => struct PredictionCredibilityManager.CredibilityScore storage ref)"}},"id":5219,"indexExpression":{"id":5218,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"8240:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8222:30:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage","typeString":"struct PredictionCredibilityManager.CredibilityScore storage ref"}},"functionReturnParameters":5216,"id":5220,"nodeType":"Return","src":"8215:37:24"}]},"functionSelector":"ec88c09b","id":5222,"implemented":true,"kind":"function","modifiers":[],"name":"getCredibilityScore","nameLocation":"8116:19:24","nodeType":"FunctionDefinition","parameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"_astrologer","nameLocation":"8144:11:24","nodeType":"VariableDeclaration","scope":5222,"src":"8136:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5210,"name":"address","nodeType":"ElementaryTypeName","src":"8136:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8135:21:24"},"returnParameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5222,"src":"8180:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_memory_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore"},"typeName":{"id":5214,"nodeType":"UserDefinedTypeName","pathNode":{"id":5213,"name":"CredibilityScore","nameLocations":["8180:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":4653,"src":"8180:16:24"},"referencedDeclaration":4653,"src":"8180:16:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage_ptr","typeString":"struct PredictionCredibilityManager.CredibilityScore"}},"visibility":"internal"}],"src":"8179:25:24"},"scope":5355,"src":"8107:152:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5234,"nodeType":"Block","src":"8349:73:24","statements":[{"expression":{"expression":{"baseExpression":{"id":5229,"name":"credibilityScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8366:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CredibilityScore_$4653_storage_$","typeString":"mapping(address => struct PredictionCredibilityManager.CredibilityScore storage ref)"}},"id":5231,"indexExpression":{"id":5230,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"8384:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8366:30:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage","typeString":"struct PredictionCredibilityManager.CredibilityScore storage ref"}},"id":5232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8397:18:24","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":4648,"src":"8366:49:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5228,"id":5233,"nodeType":"Return","src":"8359:56:24"}]},"functionSelector":"6882fc51","id":5235,"implemented":true,"kind":"function","modifiers":[],"name":"getAstrologerAccuracy","nameLocation":"8274:21:24","nodeType":"FunctionDefinition","parameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"_astrologer","nameLocation":"8304:11:24","nodeType":"VariableDeclaration","scope":5235,"src":"8296:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5223,"name":"address","nodeType":"ElementaryTypeName","src":"8296:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8295:21:24"},"returnParameters":{"id":5228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5235,"src":"8340:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5226,"name":"uint256","nodeType":"ElementaryTypeName","src":"8340:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8339:9:24"},"scope":5355,"src":"8265:157:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5247,"nodeType":"Block","src":"8514:75:24","statements":[{"expression":{"expression":{"baseExpression":{"id":5242,"name":"credibilityScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"8531:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_CredibilityScore_$4653_storage_$","typeString":"mapping(address => struct PredictionCredibilityManager.CredibilityScore storage ref)"}},"id":5244,"indexExpression":{"id":5243,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"8549:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8531:30:24","typeDescriptions":{"typeIdentifier":"t_struct$_CredibilityScore_$4653_storage","typeString":"struct PredictionCredibilityManager.CredibilityScore storage ref"}},"id":5245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8562:20:24","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"8531:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5241,"id":5246,"nodeType":"Return","src":"8524:58:24"}]},"functionSelector":"b107e88c","id":5248,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationMultiplier","nameLocation":"8437:23:24","nodeType":"FunctionDefinition","parameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"_astrologer","nameLocation":"8469:11:24","nodeType":"VariableDeclaration","scope":5248,"src":"8461:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5236,"name":"address","nodeType":"ElementaryTypeName","src":"8461:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8460:21:24"},"returnParameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5248,"src":"8505:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"8505:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8504:9:24"},"scope":5355,"src":"8428:161:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5259,"nodeType":"Block","src":"8672:55:24","statements":[{"expression":{"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5255,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"8682:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5256,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"8702:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8682:38:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5258,"nodeType":"ExpressionStatement","src":"8682:38:24"}]},"functionSelector":"44cda485","id":5260,"implemented":true,"kind":"function","modifiers":[{"id":5253,"kind":"modifierInvocation","modifierName":{"id":5252,"name":"onlyOwner","nameLocations":["8662:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"8662:9:24"},"nodeType":"ModifierInvocation","src":"8662:9:24"}],"name":"setAstrologerManager","nameLocation":"8604:20:24","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"_astrologerManager","nameLocation":"8633:18:24","nodeType":"VariableDeclaration","scope":5260,"src":"8625:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5249,"name":"address","nodeType":"ElementaryTypeName","src":"8625:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8624:28:24"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[],"src":"8672:0:24"},"scope":5355,"src":"8595:132:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5271,"nodeType":"Block","src":"8808:53:24","statements":[{"expression":{"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5267,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"8818:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5268,"name":"_buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"8837:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8818:36:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5270,"nodeType":"ExpressionStatement","src":"8818:36:24"}]},"functionSelector":"c3a274c2","id":5272,"implemented":true,"kind":"function","modifiers":[{"id":5265,"kind":"modifierInvocation","modifierName":{"id":5264,"name":"onlyOwner","nameLocations":["8798:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"8798:9:24"},"nodeType":"ModifierInvocation","src":"8798:9:24"}],"name":"setBuyTokenContract","nameLocation":"8742:19:24","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"_buyTokenContract","nameLocation":"8770:17:24","nodeType":"VariableDeclaration","scope":5272,"src":"8762:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5261,"name":"address","nodeType":"ElementaryTypeName","src":"8762:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8761:27:24"},"returnParameters":{"id":5266,"nodeType":"ParameterList","parameters":[],"src":"8808:0:24"},"scope":5355,"src":"8733:128:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5283,"nodeType":"Block","src":"8942:53:24","statements":[{"expression":{"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5279,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"8952:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5280,"name":"_reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"8971:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8952:36:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5282,"nodeType":"ExpressionStatement","src":"8952:36:24"}]},"functionSelector":"e9725c21","id":5284,"implemented":true,"kind":"function","modifiers":[{"id":5277,"kind":"modifierInvocation","modifierName":{"id":5276,"name":"onlyOwner","nameLocations":["8932:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"8932:9:24"},"nodeType":"ModifierInvocation","src":"8932:9:24"}],"name":"setReputationScorer","nameLocation":"8876:19:24","nodeType":"FunctionDefinition","parameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"_reputationScorer","nameLocation":"8904:17:24","nodeType":"VariableDeclaration","scope":5284,"src":"8896:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5273,"name":"address","nodeType":"ElementaryTypeName","src":"8896:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8895:27:24"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[],"src":"8942:0:24"},"scope":5355,"src":"8867:128:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5295,"nodeType":"Block","src":"9080:57:24","statements":[{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"9090:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5292,"name":"_astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"9111:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9090:40:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5294,"nodeType":"ExpressionStatement","src":"9090:40:24"}]},"functionSelector":"e2c3538c","id":5296,"implemented":true,"kind":"function","modifiers":[{"id":5289,"kind":"modifierInvocation","modifierName":{"id":5288,"name":"onlyOwner","nameLocations":["9070:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"9070:9:24"},"nodeType":"ModifierInvocation","src":"9070:9:24"}],"name":"setAstroTokenLauncher","nameLocation":"9010:21:24","nodeType":"FunctionDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"_astroTokenLauncher","nameLocation":"9040:19:24","nodeType":"VariableDeclaration","scope":5296,"src":"9032:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5285,"name":"address","nodeType":"ElementaryTypeName","src":"9032:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9031:29:24"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[],"src":"9080:0:24"},"scope":5355,"src":"9001:136:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5313,"nodeType":"Block","src":"9236:91:24","statements":[{"expression":{"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5305,"name":"minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4678,"src":"9246:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5306,"name":"_minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"9263:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9246:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5308,"nodeType":"ExpressionStatement","src":"9246:32:24"},{"expression":{"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5309,"name":"maxStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"9288:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5310,"name":"_maxStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5300,"src":"9305:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9288:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5312,"nodeType":"ExpressionStatement","src":"9288:32:24"}]},"functionSelector":"8c9bd1b5","id":5314,"implemented":true,"kind":"function","modifiers":[{"id":5303,"kind":"modifierInvocation","modifierName":{"id":5302,"name":"onlyOwner","nameLocations":["9226:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"9226:9:24"},"nodeType":"ModifierInvocation","src":"9226:9:24"}],"name":"setStakeLimits","nameLocation":"9152:14:24","nodeType":"FunctionDefinition","parameters":{"id":5301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"_minStakeAmount","nameLocation":"9175:15:24","nodeType":"VariableDeclaration","scope":5314,"src":"9167:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5297,"name":"uint256","nodeType":"ElementaryTypeName","src":"9167:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5300,"mutability":"mutable","name":"_maxStakeAmount","nameLocation":"9200:15:24","nodeType":"VariableDeclaration","scope":5314,"src":"9192:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5299,"name":"uint256","nodeType":"ElementaryTypeName","src":"9192:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9166:50:24"},"returnParameters":{"id":5304,"nodeType":"ParameterList","parameters":[],"src":"9236:0:24"},"scope":5355,"src":"9143:184:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5325,"nodeType":"Block","src":"9403:48:24","statements":[{"expression":{"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"credibilityUpdateDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"9413:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5322,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"9438:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9413:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5324,"nodeType":"ExpressionStatement","src":"9413:31:24"}]},"functionSelector":"5ddb0e2b","id":5326,"implemented":true,"kind":"function","modifiers":[{"id":5319,"kind":"modifierInvocation","modifierName":{"id":5318,"name":"onlyOwner","nameLocations":["9393:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"9393:9:24"},"nodeType":"ModifierInvocation","src":"9393:9:24"}],"name":"setCredibilityUpdateDelay","nameLocation":"9342:25:24","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"_delay","nameLocation":"9376:6:24","nodeType":"VariableDeclaration","scope":5326,"src":"9368:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"9368:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9367:16:24"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[],"src":"9403:0:24"},"scope":5355,"src":"9333:118:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5344,"nodeType":"Block","src":"9496:65:24","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":5339,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9540:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionCredibilityManager_$5355","typeString":"contract PredictionCredibilityManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictionCredibilityManager_$5355","typeString":"contract PredictionCredibilityManager"}],"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9532:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5337,"name":"address","nodeType":"ElementaryTypeName","src":"9532:7:24","typeDescriptions":{}}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9532:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9546:7:24","memberName":"balance","nodeType":"MemberAccess","src":"9532:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5333,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"9514:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9514:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9506:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5331,"name":"address","nodeType":"ElementaryTypeName","src":"9506:8:24","stateMutability":"payable","typeDescriptions":{}}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9523:8:24","memberName":"transfer","nodeType":"MemberAccess","src":"9506:25:24","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5343,"nodeType":"ExpressionStatement","src":"9506:48:24"}]},"functionSelector":"3ccfd60b","id":5345,"implemented":true,"kind":"function","modifiers":[{"id":5329,"kind":"modifierInvocation","modifierName":{"id":5328,"name":"onlyOwner","nameLocations":["9486:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"9486:9:24"},"nodeType":"ModifierInvocation","src":"9486:9:24"}],"name":"withdraw","nameLocation":"9466:8:24","nodeType":"FunctionDefinition","parameters":{"id":5327,"nodeType":"ParameterList","parameters":[],"src":"9474:2:24"},"returnParameters":{"id":5330,"nodeType":"ParameterList","parameters":[],"src":"9496:0:24"},"scope":5355,"src":"9457:104:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[795],"body":{"id":5353,"nodeType":"Block","src":"9649:2:24","statements":[]},"id":5354,"implemented":true,"kind":"function","modifiers":[{"id":5351,"kind":"modifierInvocation","modifierName":{"id":5350,"name":"onlyOwner","nameLocations":["9639:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"9639:9:24"},"nodeType":"ModifierInvocation","src":"9639:9:24"}],"name":"_authorizeUpgrade","nameLocation":"9576:17:24","nodeType":"FunctionDefinition","overrides":{"id":5349,"nodeType":"OverrideSpecifier","overrides":[],"src":"9630:8:24"},"parameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"newImplementation","nameLocation":"9602:17:24","nodeType":"VariableDeclaration","scope":5354,"src":"9594:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5346,"name":"address","nodeType":"ElementaryTypeName","src":"9594:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9593:27:24"},"returnParameters":{"id":5352,"nodeType":"ParameterList","parameters":[],"src":"9649:0:24"},"scope":5355,"src":"9567:84:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5356,"src":"502:9151:24","usedErrors":[]}],"src":"32:9622:24"},"id":24},"contracts/ReputationScorer.sol":{"ast":{"absolutePath":"contracts/ReputationScorer.sol","exportedSymbols":{"AddressUpgradeable":[2322],"ContextUpgradeable":[2364],"CountersUpgradeable":[2438],"ERC1967UpgradeUpgradeable":[486],"IAstroTokenLauncher":[6632],"IAstrologerManager":[6715],"IBeaconUpgradeable":[496],"IBuyTokenContract":[6755],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"OwnableUpgradeable":[131],"ReputationScorer":[6570],"StorageSlotUpgradeable":[2548],"UUPSUpgradeable":[801]},"id":6571,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5357,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:25"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":5358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6571,"sourceUnit":132,"src":"57:75:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":5359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6571,"sourceUnit":666,"src":"133:75:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":5360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6571,"sourceUnit":802,"src":"209:77:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAstrologerManager.sol","file":"./interfaces/IAstrologerManager.sol","id":5361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6571,"sourceUnit":6716,"src":"287:45:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBuyTokenContract.sol","file":"./interfaces/IBuyTokenContract.sol","id":5362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6571,"sourceUnit":6756,"src":"333:44:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAstroTokenLauncher.sol","file":"./interfaces/IAstroTokenLauncher.sol","id":5363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6571,"sourceUnit":6633,"src":"378:46:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","id":5364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6571,"sourceUnit":2439,"src":"425:75:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5365,"name":"Initializable","nameLocations":["536:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"536:13:25"},"id":5366,"nodeType":"InheritanceSpecifier","src":"536:13:25"},{"baseName":{"id":5367,"name":"OwnableUpgradeable","nameLocations":["556:18:25"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"556:18:25"},"id":5368,"nodeType":"InheritanceSpecifier","src":"556:18:25"},{"baseName":{"id":5369,"name":"UUPSUpgradeable","nameLocations":["581:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":801,"src":"581:15:25"},"id":5370,"nodeType":"InheritanceSpecifier","src":"581:15:25"}],"canonicalName":"ReputationScorer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6570,"linearizedBaseContracts":[6570,801,486,152,162,131,2364,665],"name":"ReputationScorer","nameLocation":"511:16:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5374,"libraryName":{"id":5371,"name":"CountersUpgradeable","nameLocations":["610:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":2438,"src":"610:19:25"},"nodeType":"UsingForDirective","src":"604:58:25","typeName":{"id":5373,"nodeType":"UserDefinedTypeName","pathNode":{"id":5372,"name":"CountersUpgradeable.Counter","nameLocations":["634:19:25","654:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"634:27:25"},"referencedDeclaration":2370,"src":"634:27:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":5377,"mutability":"mutable","name":"_scoreIds","nameLocation":"704:9:25","nodeType":"VariableDeclaration","scope":6570,"src":"668:45:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":5376,"nodeType":"UserDefinedTypeName","pathNode":{"id":5375,"name":"CountersUpgradeable.Counter","nameLocations":["668:19:25","688:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"668:27:25"},"referencedDeclaration":2370,"src":"668:27:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2370_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"canonicalName":"ReputationScorer.ReputationScore","id":5400,"members":[{"constant":false,"id":5379,"mutability":"mutable","name":"id","nameLocation":"765:2:25","nodeType":"VariableDeclaration","scope":5400,"src":"757:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5378,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5381,"mutability":"mutable","name":"astrologer","nameLocation":"785:10:25","nodeType":"VariableDeclaration","scope":5400,"src":"777:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5380,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5383,"mutability":"mutable","name":"totalPredictions","nameLocation":"813:16:25","nodeType":"VariableDeclaration","scope":5400,"src":"805:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5385,"mutability":"mutable","name":"accuratePredictions","nameLocation":"847:19:25","nodeType":"VariableDeclaration","scope":5400,"src":"839:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5384,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5387,"mutability":"mutable","name":"accuracyPercentage","nameLocation":"884:18:25","nodeType":"VariableDeclaration","scope":5400,"src":"876:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"876:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5389,"mutability":"mutable","name":"reputationMultiplier","nameLocation":"920:20:25","nodeType":"VariableDeclaration","scope":5400,"src":"912:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5388,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5391,"mutability":"mutable","name":"marketPredictions","nameLocation":"958:17:25","nodeType":"VariableDeclaration","scope":5400,"src":"950:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"950:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5393,"mutability":"mutable","name":"dailyPredictions","nameLocation":"993:16:25","nodeType":"VariableDeclaration","scope":5400,"src":"985:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5395,"mutability":"mutable","name":"oneToOnePredictions","nameLocation":"1027:19:25","nodeType":"VariableDeclaration","scope":5400,"src":"1019:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1019:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5397,"mutability":"mutable","name":"lastUpdated","nameLocation":"1064:11:25","nodeType":"VariableDeclaration","scope":5400,"src":"1056:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5399,"mutability":"mutable","name":"isActive","nameLocation":"1090:8:25","nodeType":"VariableDeclaration","scope":5400,"src":"1085:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5398,"name":"bool","nodeType":"ElementaryTypeName","src":"1085:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ReputationScore","nameLocation":"731:15:25","nodeType":"StructDefinition","scope":6570,"src":"724:381:25","visibility":"public"},{"canonicalName":"ReputationScorer.ScoreBreakdown","id":5411,"members":[{"constant":false,"id":5402,"mutability":"mutable","name":"marketAccuracy","nameLocation":"1151:14:25","nodeType":"VariableDeclaration","scope":5411,"src":"1143:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5404,"mutability":"mutable","name":"dailyAccuracy","nameLocation":"1183:13:25","nodeType":"VariableDeclaration","scope":5411,"src":"1175:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"oneToOneAccuracy","nameLocation":"1214:16:25","nodeType":"VariableDeclaration","scope":5411,"src":"1206:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5408,"mutability":"mutable","name":"weightedScore","nameLocation":"1248:13:25","nodeType":"VariableDeclaration","scope":5411,"src":"1240:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1240:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5410,"mutability":"mutable","name":"reputationTier","nameLocation":"1279:14:25","nodeType":"VariableDeclaration","scope":5411,"src":"1271:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ScoreBreakdown","nameLocation":"1118:14:25","nodeType":"StructDefinition","scope":6570,"src":"1111:189:25","visibility":"public"},{"canonicalName":"ReputationScorer.PredictionModule","id":5420,"members":[{"constant":false,"id":5413,"mutability":"mutable","name":"contractAddress","nameLocation":"1348:15:25","nodeType":"VariableDeclaration","scope":5420,"src":"1340:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5412,"name":"address","nodeType":"ElementaryTypeName","src":"1340:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5415,"mutability":"mutable","name":"isActive","nameLocation":"1378:8:25","nodeType":"VariableDeclaration","scope":5420,"src":"1373:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5414,"name":"bool","nodeType":"ElementaryTypeName","src":"1373:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5417,"mutability":"mutable","name":"weight","nameLocation":"1404:6:25","nodeType":"VariableDeclaration","scope":5420,"src":"1396:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5419,"mutability":"mutable","name":"lastUpdate","nameLocation":"1428:10:25","nodeType":"VariableDeclaration","scope":5420,"src":"1420:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PredictionModule","nameLocation":"1313:16:25","nodeType":"StructDefinition","scope":6570,"src":"1306:139:25","visibility":"public"},{"constant":false,"functionSelector":"fe0438b2","id":5425,"mutability":"mutable","name":"reputationScores","nameLocation":"1494:16:25","nodeType":"VariableDeclaration","scope":6570,"src":"1451:59:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$5400_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore)"},"typeName":{"id":5424,"keyType":{"id":5421,"name":"address","nodeType":"ElementaryTypeName","src":"1459:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1451:35:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$5400_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore)"},"valueType":{"id":5423,"nodeType":"UserDefinedTypeName","pathNode":{"id":5422,"name":"ReputationScore","nameLocations":["1470:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":5400,"src":"1470:15:25"},"referencedDeclaration":5400,"src":"1470:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"}}},"visibility":"public"},{"constant":false,"functionSelector":"dc0a40bd","id":5430,"mutability":"mutable","name":"scoreBreakdowns","nameLocation":"1558:15:25","nodeType":"VariableDeclaration","scope":6570,"src":"1516:57:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$5411_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown)"},"typeName":{"id":5429,"keyType":{"id":5426,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1516:34:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$5411_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown)"},"valueType":{"id":5428,"nodeType":"UserDefinedTypeName","pathNode":{"id":5427,"name":"ScoreBreakdown","nameLocations":["1535:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":5411,"src":"1535:14:25"},"referencedDeclaration":5411,"src":"1535:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"}}},"visibility":"public"},{"constant":false,"functionSelector":"10d4f374","id":5435,"mutability":"mutable","name":"predictionModules","nameLocation":"1623:17:25","nodeType":"VariableDeclaration","scope":6570,"src":"1579:61:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$5420_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule)"},"typeName":{"id":5434,"keyType":{"id":5431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1587:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1579:36:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$5420_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule)"},"valueType":{"id":5433,"nodeType":"UserDefinedTypeName","pathNode":{"id":5432,"name":"PredictionModule","nameLocations":["1598:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":5420,"src":"1598:16:25"},"referencedDeclaration":5420,"src":"1598:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_storage_ptr","typeString":"struct ReputationScorer.PredictionModule"}}},"visibility":"public"},{"constant":false,"functionSelector":"6fd31a41","id":5437,"mutability":"mutable","name":"astrologerManager","nameLocation":"1666:17:25","nodeType":"VariableDeclaration","scope":6570,"src":"1651:32:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5436,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"16d54f09","id":5439,"mutability":"mutable","name":"buyTokenContract","nameLocation":"1704:16:25","nodeType":"VariableDeclaration","scope":6570,"src":"1689:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5438,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ab76c9ed","id":5441,"mutability":"mutable","name":"zodiacDAO","nameLocation":"1741:9:25","nodeType":"VariableDeclaration","scope":6570,"src":"1726:24:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5440,"name":"address","nodeType":"ElementaryTypeName","src":"1726:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ab3dcd6a","id":5443,"mutability":"mutable","name":"astroTokenLauncher","nameLocation":"1771:18:25","nodeType":"VariableDeclaration","scope":6570,"src":"1756:33:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5442,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"02bc7f4a","id":5445,"mutability":"mutable","name":"worldPredictionMarket","nameLocation":"1810:21:25","nodeType":"VariableDeclaration","scope":6570,"src":"1795:36:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5444,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"78bbd701","id":5447,"mutability":"mutable","name":"totalModules","nameLocation":"1857:12:25","nodeType":"VariableDeclaration","scope":6570,"src":"1842:27:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"450f1442","id":5449,"mutability":"mutable","name":"minPredictionsForScore","nameLocation":"1890:22:25","nodeType":"VariableDeclaration","scope":6570,"src":"1875:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1875:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f92eadf6","id":5451,"mutability":"mutable","name":"scoreUpdateDelay","nameLocation":"1933:16:25","nodeType":"VariableDeclaration","scope":6570,"src":"1918:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"960e6f88","id":5453,"mutability":"mutable","name":"reputationDecayRate","nameLocation":"1970:19:25","nodeType":"VariableDeclaration","scope":6570,"src":"1955:34:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1955:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"430cd57a","id":5455,"mutability":"mutable","name":"maxReputationMultiplier","nameLocation":"2010:23:25","nodeType":"VariableDeclaration","scope":6570,"src":"1995:38:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5df4d161","id":5457,"mutability":"mutable","name":"minReputationMultiplier","nameLocation":"2107:23:25","nodeType":"VariableDeclaration","scope":6570,"src":"2092:38:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2092:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac244","id":5467,"name":"ReputationScoreUpdated","nameLocation":"2199:22:25","nodeType":"EventDefinition","parameters":{"id":5466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"2247:10:25","nodeType":"VariableDeclaration","scope":5467,"src":"2231:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5458,"name":"address","nodeType":"ElementaryTypeName","src":"2231:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5461,"indexed":false,"mutability":"mutable","name":"oldAccuracy","nameLocation":"2275:11:25","nodeType":"VariableDeclaration","scope":5467,"src":"2267:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2267:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5463,"indexed":false,"mutability":"mutable","name":"newAccuracy","nameLocation":"2304:11:25","nodeType":"VariableDeclaration","scope":5467,"src":"2296:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5465,"indexed":false,"mutability":"mutable","name":"newMultiplier","nameLocation":"2333:13:25","nodeType":"VariableDeclaration","scope":5467,"src":"2325:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2221:131:25"},"src":"2193:160:25"},{"anonymous":false,"eventSelector":"af31016049a06640f36fa55e20d2a8c9809bbdadf9fd3327a7763e5aa652346e","id":5475,"name":"PredictionModuleAdded","nameLocation":"2365:21:25","nodeType":"EventDefinition","parameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"indexed":true,"mutability":"mutable","name":"moduleId","nameLocation":"2412:8:25","nodeType":"VariableDeclaration","scope":5475,"src":"2396:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2396:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5471,"indexed":false,"mutability":"mutable","name":"contractAddress","nameLocation":"2438:15:25","nodeType":"VariableDeclaration","scope":5475,"src":"2430:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5470,"name":"address","nodeType":"ElementaryTypeName","src":"2430:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5473,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"2471:6:25","nodeType":"VariableDeclaration","scope":5475,"src":"2463:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2386:97:25"},"src":"2359:125:25"},{"anonymous":false,"eventSelector":"ad4434fdebadb9d3b07e14eaea89a4f564780aca2d11dbf1d7fcd70d921a5d64","id":5487,"name":"ScoreBreakdownUpdated","nameLocation":"2496:21:25","nodeType":"EventDefinition","parameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"2543:10:25","nodeType":"VariableDeclaration","scope":5487,"src":"2527:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5476,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5479,"indexed":false,"mutability":"mutable","name":"marketAccuracy","nameLocation":"2571:14:25","nodeType":"VariableDeclaration","scope":5487,"src":"2563:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2563:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5481,"indexed":false,"mutability":"mutable","name":"dailyAccuracy","nameLocation":"2603:13:25","nodeType":"VariableDeclaration","scope":5487,"src":"2595:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2595:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5483,"indexed":false,"mutability":"mutable","name":"oneToOneAccuracy","nameLocation":"2634:16:25","nodeType":"VariableDeclaration","scope":5487,"src":"2626:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5485,"indexed":false,"mutability":"mutable","name":"weightedScore","nameLocation":"2668:13:25","nodeType":"VariableDeclaration","scope":5487,"src":"2660:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2517:170:25"},"src":"2490:198:25"},{"body":{"id":5494,"nodeType":"Block","src":"2761:39:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5491,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"2771:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2771:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5493,"nodeType":"ExpressionStatement","src":"2771:22:25"}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"2694:48:25","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":5495,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5489,"nodeType":"ParameterList","parameters":[],"src":"2758:2:25"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[],"src":"2761:0:25"},"scope":6570,"src":"2747:53:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5562,"nodeType":"Block","src":"3026:631:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5510,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3036:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3036:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5512,"nodeType":"ExpressionStatement","src":"3036:16:25"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5513,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3062:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5515,"nodeType":"ExpressionStatement","src":"3062:24:25"},{"expression":{"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5516,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"3105:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5517,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"3125:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3105:38:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5519,"nodeType":"ExpressionStatement","src":"3105:38:25"},{"expression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5520,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"3153:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5521,"name":"_buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"3172:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3153:36:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5523,"nodeType":"ExpressionStatement","src":"3153:36:25"},{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5524,"name":"zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"3199:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5525,"name":"_zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"3211:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3199:22:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5527,"nodeType":"ExpressionStatement","src":"3199:22:25"},{"expression":{"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5528,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"3231:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":5531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3260:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3252:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5529,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:25","typeDescriptions":{}}},"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3252:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3231:31:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5534,"nodeType":"ExpressionStatement","src":"3231:31:25"},{"expression":{"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5535,"name":"worldPredictionMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"3298:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3330:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3322:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5536,"name":"address","nodeType":"ElementaryTypeName","src":"3322:7:25","typeDescriptions":{}}},"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3298:34:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5541,"nodeType":"ExpressionStatement","src":"3298:34:25"},{"expression":{"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5542,"name":"minPredictionsForScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"3368:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5543,"name":"_minPredictionsForScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"3393:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3368:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5545,"nodeType":"ExpressionStatement","src":"3368:48:25"},{"expression":{"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5546,"name":"scoreUpdateDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"3426:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5547,"name":"_scoreUpdateDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"3445:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3426:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5549,"nodeType":"ExpressionStatement","src":"3426:36:25"},{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5550,"name":"reputationDecayRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"3472:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3494:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"3472:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5553,"nodeType":"ExpressionStatement","src":"3472:23:25"},{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5554,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"3527:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35303030","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3553:4:25","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"src":"3527:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5557,"nodeType":"ExpressionStatement","src":"3527:30:25"},{"expression":{"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5558,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"3594:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323030","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3620:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"3594:29:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5561,"nodeType":"ExpressionStatement","src":"3594:29:25"}]},"functionSelector":"a6b63eb8","id":5563,"implemented":true,"kind":"function","modifiers":[{"id":5508,"kind":"modifierInvocation","modifierName":{"id":5507,"name":"initializer","nameLocations":["3014:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"3014:11:25"},"nodeType":"ModifierInvocation","src":"3014:11:25"}],"name":"initialize","nameLocation":"2815:10:25","nodeType":"FunctionDefinition","parameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5497,"mutability":"mutable","name":"_astrologerManager","nameLocation":"2843:18:25","nodeType":"VariableDeclaration","scope":5563,"src":"2835:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5496,"name":"address","nodeType":"ElementaryTypeName","src":"2835:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5499,"mutability":"mutable","name":"_buyTokenContract","nameLocation":"2879:17:25","nodeType":"VariableDeclaration","scope":5563,"src":"2871:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5498,"name":"address","nodeType":"ElementaryTypeName","src":"2871:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5501,"mutability":"mutable","name":"_zodiacDAO","nameLocation":"2914:10:25","nodeType":"VariableDeclaration","scope":5563,"src":"2906:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5500,"name":"address","nodeType":"ElementaryTypeName","src":"2906:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5503,"mutability":"mutable","name":"_minPredictionsForScore","nameLocation":"2942:23:25","nodeType":"VariableDeclaration","scope":5563,"src":"2934:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2934:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"_scoreUpdateDelay","nameLocation":"2983:17:25","nodeType":"VariableDeclaration","scope":5563,"src":"2975:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2975:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2825:181:25"},"returnParameters":{"id":5509,"nodeType":"ParameterList","parameters":[],"src":"3026:0:25"},"scope":6570,"src":"2806:851:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5618,"nodeType":"Block","src":"3794:526:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"_contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"3812:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3832:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5576,"name":"address","nodeType":"ElementaryTypeName","src":"3832:7:25","typeDescriptions":{}}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3812:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e74726163742061646472657373","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3844:26:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68","typeString":"literal_string \"Invalid contract address\""},"value":"Invalid contract address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68","typeString":"literal_string \"Invalid contract address\""}],"id":5574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3804:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3804:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5583,"nodeType":"ExpressionStatement","src":"3804:67:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5585,"name":"_weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"3889:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3899:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3889:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576569676874206d7573742062652067726561746572207468616e2030","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3902:31:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""},"value":"Weight must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""}],"id":5584,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3881:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3881:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5590,"nodeType":"ExpressionStatement","src":"3881:53:25"},{"expression":{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3945:14:25","subExpression":{"id":5591,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"3945:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5593,"nodeType":"ExpressionStatement","src":"3945:14:25"},{"assignments":[5595],"declarations":[{"constant":false,"id":5595,"mutability":"mutable","name":"moduleId","nameLocation":"3977:8:25","nodeType":"VariableDeclaration","scope":5618,"src":"3969:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3969:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5597,"initialValue":{"id":5596,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"3988:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3969:31:25"},{"expression":{"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5598,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"4011:17:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$5420_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":5600,"indexExpression":{"id":5599,"name":"moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"4029:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4011:27:25","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5602,"name":"_contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"4089:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4129:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5604,"name":"_weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"4155:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5605,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4188:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4194:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"4188:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5601,"name":"PredictionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"4041:16:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PredictionModule_$5420_storage_ptr_$","typeString":"type(struct ReputationScorer.PredictionModule storage pointer)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4072:15:25","4119:8:25","4147:6:25","4176:10:25"],"names":["contractAddress","isActive","weight","lastUpdate"],"nodeType":"FunctionCall","src":"4041:173:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_memory_ptr","typeString":"struct ReputationScorer.PredictionModule memory"}},"src":"4011:203:25","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":5609,"nodeType":"ExpressionStatement","src":"4011:203:25"},{"eventCall":{"arguments":[{"id":5611,"name":"moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"4252:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5612,"name":"_contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"4262:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5613,"name":"_weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"4280:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5610,"name":"PredictionModuleAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"4230:21:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5615,"nodeType":"EmitStatement","src":"4225:63:25"},{"expression":{"id":5616,"name":"moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"4305:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5573,"id":5617,"nodeType":"Return","src":"4298:15:25"}]},"functionSelector":"51131876","id":5619,"implemented":true,"kind":"function","modifiers":[{"id":5570,"kind":"modifierInvocation","modifierName":{"id":5569,"name":"onlyOwner","nameLocations":["3766:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"3766:9:25"},"nodeType":"ModifierInvocation","src":"3766:9:25"}],"name":"addPredictionModule","nameLocation":"3672:19:25","nodeType":"FunctionDefinition","parameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"_contractAddress","nameLocation":"3709:16:25","nodeType":"VariableDeclaration","scope":5619,"src":"3701:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5564,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5567,"mutability":"mutable","name":"_weight","nameLocation":"3743:7:25","nodeType":"VariableDeclaration","scope":5619,"src":"3735:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"3735:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3691:65:25"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5619,"src":"3785:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3785:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3784:9:25"},"scope":6570,"src":"3663:657:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5805,"nodeType":"Block","src":"4441:2075:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5627,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4459:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4463:6:25","memberName":"sender","nodeType":"MemberAccess","src":"4459:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5629,"name":"worldPredictionMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"4473:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4459:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5631,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4498:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4502:6:25","memberName":"sender","nodeType":"MemberAccess","src":"4498:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5633,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"4512:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4498:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4459:60:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4521:14:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""},"value":"Unauthorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""}],"id":5626,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4451:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5639,"nodeType":"ExpressionStatement","src":"4451:85:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"4554:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4577:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4569:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5642,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:25","typeDescriptions":{}}},"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4569:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4554:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617374726f6c6f6765722061646472657373","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4581:28:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""},"value":"Invalid astrologer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""}],"id":5640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4546:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5649,"nodeType":"ExpressionStatement","src":"4546:64:25"},{"assignments":[5652],"declarations":[{"constant":false,"id":5652,"mutability":"mutable","name":"score","nameLocation":"4645:5:25","nodeType":"VariableDeclaration","scope":5805,"src":"4621:29:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"},"typeName":{"id":5651,"nodeType":"UserDefinedTypeName","pathNode":{"id":5650,"name":"ReputationScore","nameLocations":["4621:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":5400,"src":"4621:15:25"},"referencedDeclaration":5400,"src":"4621:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"}},"visibility":"internal"}],"id":5656,"initialValue":{"baseExpression":{"id":5653,"name":"reputationScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"4653:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$5400_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore storage ref)"}},"id":5655,"indexExpression":{"id":5654,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"4670:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4653:29:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage","typeString":"struct ReputationScorer.ReputationScore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4621:61:25"},{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4743:25:25","subExpression":{"expression":{"id":5657,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"4743:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4749:17:25","memberName":"marketPredictions","nodeType":"MemberAccess","referencedDeclaration":5391,"src":"4743:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5661,"nodeType":"ExpressionStatement","src":"4743:25:25"},{"expression":{"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4827:24:25","subExpression":{"expression":{"id":5662,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"4827:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4833:16:25","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":5383,"src":"4827:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5666,"nodeType":"ExpressionStatement","src":"4827:24:25"},{"condition":{"id":5667,"name":"_wasCorrect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"4874:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5674,"nodeType":"IfStatement","src":"4870:69:25","trueBody":{"id":5673,"nodeType":"Block","src":"4887:52:25","statements":[{"expression":{"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4901:27:25","subExpression":{"expression":{"id":5668,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"4901:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4907:19:25","memberName":"accuratePredictions","nodeType":"MemberAccess","referencedDeclaration":5385,"src":"4901:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5672,"nodeType":"ExpressionStatement","src":"4901:27:25"}]}},{"expression":{"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5675,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5000:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5006:18:25","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"5000:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5678,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5028:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5034:19:25","memberName":"accuratePredictions","nodeType":"MemberAccess","referencedDeclaration":5385,"src":"5028:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5056:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5028:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5027:33:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":5683,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5063:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5069:16:25","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":5383,"src":"5063:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5027:58:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5000:85:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5687,"nodeType":"ExpressionStatement","src":"5000:85:25"},{"expression":{"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5688,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5144:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5150:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"5144:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5692,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5203:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:18:25","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"5203:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5691,"name":"calculateReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"5173:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5173:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5144:84:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5696,"nodeType":"ExpressionStatement","src":"5144:84:25"},{"expression":{"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5697,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5238:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5244:11:25","memberName":"lastUpdated","nodeType":"MemberAccess","referencedDeclaration":5397,"src":"5238:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5700,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5258:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5264:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"5258:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5238:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5703,"nodeType":"ExpressionStatement","src":"5238:35:25"},{"expression":{"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5704,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5283:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5289:8:25","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5399,"src":"5283:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5300:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5283:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5709,"nodeType":"ExpressionStatement","src":"5283:21:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"5356:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5385:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5377:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5711,"name":"address","nodeType":"ElementaryTypeName","src":"5377:7:25","typeDescriptions":{}}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5377:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5356:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5740,"nodeType":"IfStatement","src":"5352:315:25","trueBody":{"id":5739,"nodeType":"Block","src":"5389:278:25","statements":[{"assignments":[5717],"declarations":[{"constant":false,"id":5717,"mutability":"mutable","name":"astrologerId","nameLocation":"5411:12:25","nodeType":"VariableDeclaration","scope":5739,"src":"5403:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"5403:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5724,"initialValue":{"arguments":[{"id":5722,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"5480:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5719,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"5445:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5718,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"5426:18:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5426:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5464:15:25","memberName":"getAstrologerId","nodeType":"MemberAccess","referencedDeclaration":6714,"src":"5426:53:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5426:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5403:89:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5725,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"5510:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5510:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5738,"nodeType":"IfStatement","src":"5506:151:25","trueBody":{"id":5737,"nodeType":"Block","src":"5528:129:25","statements":[{"expression":{"arguments":[{"id":5732,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"5601:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5733,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"5615:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5621:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"5615:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5729,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"5565:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5728,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"5546:18:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5584:16:25","memberName":"updateReputation","nodeType":"MemberAccess","referencedDeclaration":6686,"src":"5546:54:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:96:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5736,"nodeType":"ExpressionStatement","src":"5546:96:25"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5741,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"5718:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5748:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5740:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5742,"name":"address","nodeType":"ElementaryTypeName","src":"5740:7:25","typeDescriptions":{}}},"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5740:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5718:32:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5794,"nodeType":"IfStatement","src":"5714:665:25","trueBody":{"id":5793,"nodeType":"Block","src":"5752:627:25","statements":[{"clauses":[{"block":{"id":5788,"nodeType":"Block","src":"5901:380:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5757,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"5923:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5933:13:25","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":6578,"src":"5923:23:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5958:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5950:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5759,"name":"address","nodeType":"ElementaryTypeName","src":"5950:7:25","typeDescriptions":{}}},"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5950:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5923:37:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5764,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"5964:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5974:11:25","memberName":"buyContract","nodeType":"MemberAccess","referencedDeclaration":6580,"src":"5964:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5989:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5766,"name":"address","nodeType":"ElementaryTypeName","src":"5989:7:25","typeDescriptions":{}}},"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5989:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5964:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5923:76:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":5772,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"6003:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6013:8:25","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6590,"src":"6003:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5923:98:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5787,"nodeType":"IfStatement","src":"5919:348:25","trueBody":{"id":5786,"nodeType":"Block","src":"6023:244:25","statements":[{"expression":{"arguments":[{"expression":{"id":5780,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"6196:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6206:13:25","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":6578,"src":"6196:23:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5782,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"6221:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6227:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"6221:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":5776,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"6155:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6165:11:25","memberName":"buyContract","nodeType":"MemberAccess","referencedDeclaration":6580,"src":"6155:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5775,"name":"IBuyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"6137:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBuyTokenContract_$6755_$","typeString":"type(contract IBuyTokenContract)"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6137:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBuyTokenContract_$6755","typeString":"contract IBuyTokenContract"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6178:17:25","memberName":"updateCredibility","nodeType":"MemberAccess","referencedDeclaration":6735,"src":"6137:58:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6137:111:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5785,"nodeType":"ExpressionStatement","src":"6137:111:25"}]}}]},"errorName":"","id":5789,"nodeType":"TryCatchClause","parameters":{"id":5756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"tokenInfo","nameLocation":"5890:9:25","nodeType":"VariableDeclaration","scope":5789,"src":"5853:46:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":5754,"nodeType":"UserDefinedTypeName","pathNode":{"id":5753,"name":"IAstroTokenLauncher.TokenInfo","nameLocations":["5853:19:25","5873:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":6593,"src":"5853:29:25"},"referencedDeclaration":6593,"src":"5853:29:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"5852:48:25"},"src":"5844:437:25"},{"block":{"id":5790,"nodeType":"Block","src":"6288:81:25","statements":[]},"errorName":"","id":5791,"nodeType":"TryCatchClause","src":"6282:87:25"}],"externalCall":{"arguments":[{"id":5751,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"5831:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5748,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"5790:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5747,"name":"IAstroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"5770:19:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstroTokenLauncher_$6632_$","typeString":"type(contract IAstroTokenLauncher)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5770:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstroTokenLauncher_$6632","typeString":"contract IAstroTokenLauncher"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5810:20:25","memberName":"getTokenByAstrologer","nodeType":"MemberAccess","referencedDeclaration":6601,"src":"5770:60:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_TokenInfo_$6593_memory_ptr_$","typeString":"function (address) view external returns (struct IAstroTokenLauncher.TokenInfo memory)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5770:73:25","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":5792,"nodeType":"TryStatement","src":"5766:603:25"}]}},{"eventCall":{"arguments":[{"id":5796,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"6417:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5797,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"6430:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6436:18:25","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"6430:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5799,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"6456:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6462:18:25","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"6456:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5801,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"6482:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6488:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"6482:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5795,"name":"ReputationScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"6394:22:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:115:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"EmitStatement","src":"6389:120:25"}]},"functionSelector":"9f7c4688","id":5806,"implemented":true,"kind":"function","modifiers":[],"name":"updateReputationFromWorldPrediction","nameLocation":"4335:35:25","nodeType":"FunctionDefinition","parameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"_astrologer","nameLocation":"4388:11:25","nodeType":"VariableDeclaration","scope":5806,"src":"4380:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5620,"name":"address","nodeType":"ElementaryTypeName","src":"4380:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5623,"mutability":"mutable","name":"_wasCorrect","nameLocation":"4414:11:25","nodeType":"VariableDeclaration","scope":5806,"src":"4409:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5622,"name":"bool","nodeType":"ElementaryTypeName","src":"4409:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4370:61:25"},"returnParameters":{"id":5625,"nodeType":"ParameterList","parameters":[],"src":"4441:0:25"},"scope":6570,"src":"4326:2190:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6151,"nodeType":"Block","src":"6806:3462:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5824,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6824:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6828:6:25","memberName":"sender","nodeType":"MemberAccess","src":"6824:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5826,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"6838:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6838:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6824:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":5830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6868:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6872:6:25","memberName":"sender","nodeType":"MemberAccess","src":"6868:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5829,"name":"isPredictionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"6849:18:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6849:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6824:55:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6881:14:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""},"value":"Unauthorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""}],"id":5823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6816:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6816:80:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5836,"nodeType":"ExpressionStatement","src":"6816:80:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"6914:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6937:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6929:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5839,"name":"address","nodeType":"ElementaryTypeName","src":"6929:7:25","typeDescriptions":{}}},"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6914:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617374726f6c6f6765722061646472657373","id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6941:28:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""},"value":"Invalid astrologer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""}],"id":5837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6906:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5846,"nodeType":"ExpressionStatement","src":"6906:64:25"},{"assignments":[5849],"declarations":[{"constant":false,"id":5849,"mutability":"mutable","name":"score","nameLocation":"7005:5:25","nodeType":"VariableDeclaration","scope":6151,"src":"6981:29:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"},"typeName":{"id":5848,"nodeType":"UserDefinedTypeName","pathNode":{"id":5847,"name":"ReputationScore","nameLocations":["6981:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":5400,"src":"6981:15:25"},"referencedDeclaration":5400,"src":"6981:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"}},"visibility":"internal"}],"id":5853,"initialValue":{"baseExpression":{"id":5850,"name":"reputationScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"7013:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$5400_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore storage ref)"}},"id":5852,"indexExpression":{"id":5851,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"7030:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7013:29:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage","typeString":"struct ReputationScorer.ReputationScore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6981:61:25"},{"assignments":[5856],"declarations":[{"constant":false,"id":5856,"mutability":"mutable","name":"breakdown","nameLocation":"7075:9:25","nodeType":"VariableDeclaration","scope":6151,"src":"7052:32:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"},"typeName":{"id":5855,"nodeType":"UserDefinedTypeName","pathNode":{"id":5854,"name":"ScoreBreakdown","nameLocations":["7052:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":5411,"src":"7052:14:25"},"referencedDeclaration":5411,"src":"7052:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"}},"visibility":"internal"}],"id":5860,"initialValue":{"baseExpression":{"id":5857,"name":"scoreBreakdowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"7087:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$5411_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown storage ref)"}},"id":5859,"indexExpression":{"id":5858,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"7103:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7087:28:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage","typeString":"struct ReputationScorer.ScoreBreakdown storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7052:63:25"},{"expression":{"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5861,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"7162:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7168:17:25","memberName":"marketPredictions","nodeType":"MemberAccess","referencedDeclaration":5391,"src":"7162:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5864,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"7188:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7162:44:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5866,"nodeType":"ExpressionStatement","src":"7162:44:25"},{"expression":{"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5867,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"7216:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7222:16:25","memberName":"dailyPredictions","nodeType":"MemberAccess","referencedDeclaration":5393,"src":"7216:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5870,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"7241:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7216:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5872,"nodeType":"ExpressionStatement","src":"7216:42:25"},{"expression":{"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5873,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"7268:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7274:19:25","memberName":"oneToOnePredictions","nodeType":"MemberAccess","referencedDeclaration":5395,"src":"7268:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5876,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"7296:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7268:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5878,"nodeType":"ExpressionStatement","src":"7268:48:25"},{"expression":{"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5879,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"7326:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":5881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7332:16:25","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":5383,"src":"7326:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5882,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"7351:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5883,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"7372:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7351:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5885,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"7392:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7351:61:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7326:86:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5888,"nodeType":"ExpressionStatement","src":"7326:86:25"},{"expression":{"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5889,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"7455:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":5891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7465:14:25","memberName":"marketAccuracy","nodeType":"MemberAccess","referencedDeclaration":5402,"src":"7455:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5892,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"7482:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7503:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7482:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7554:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7482:73:25","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5895,"name":"_marketAccurate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5812,"src":"7508:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7526:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7508:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7507:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5899,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"7533:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7507:44:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7455:100:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5904,"nodeType":"ExpressionStatement","src":"7455:100:25"},{"expression":{"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5905,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"7565:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":5907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7575:13:25","memberName":"dailyAccuracy","nodeType":"MemberAccess","referencedDeclaration":5404,"src":"7565:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"7591:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7611:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7591:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7660:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7591:70:25","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5911,"name":"_dailyAccurate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"7616:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7633:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7616:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7615:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5915,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"7640:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7615:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7565:96:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5920,"nodeType":"ExpressionStatement","src":"7565:96:25"},{"expression":{"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5921,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"7671:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":5923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7681:16:25","memberName":"oneToOneAccuracy","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"7671:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"7700:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7723:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7700:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7778:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7700:79:25","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"_oneToOneAccurate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"7728:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7748:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7728:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7727:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5931,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"7755:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7727:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7671:108:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5936,"nodeType":"ExpressionStatement","src":"7671:108:25"},{"assignments":[5938],"declarations":[{"constant":false,"id":5938,"mutability":"mutable","name":"totalWeight","nameLocation":"7834:11:25","nodeType":"VariableDeclaration","scope":6151,"src":"7826:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"7826:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5940,"initialValue":{"hexValue":"30","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7848:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7826:23:25"},{"assignments":[5942],"declarations":[{"constant":false,"id":5942,"mutability":"mutable","name":"weightedSum","nameLocation":"7867:11:25","nodeType":"VariableDeclaration","scope":6151,"src":"7859:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"7859:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5944,"initialValue":{"hexValue":"30","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7881:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7859:23:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5945,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"7897:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7897:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5960,"nodeType":"IfStatement","src":"7893:158:25","trueBody":{"id":5959,"nodeType":"Block","src":"7921:130:25","statements":[{"expression":{"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5948,"name":"weightedSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"7935:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5949,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"7950:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":5950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7960:14:25","memberName":"marketAccuracy","nodeType":"MemberAccess","referencedDeclaration":5402,"src":"7950:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"7950:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7935:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5954,"nodeType":"ExpressionStatement","src":"7935:43:25"},{"expression":{"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5955,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8024:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"33","id":5956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8039:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"8024:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5958,"nodeType":"ExpressionStatement","src":"8024:16:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5961,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"8064:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8064:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5976,"nodeType":"IfStatement","src":"8060:155:25","trueBody":{"id":5975,"nodeType":"Block","src":"8087:128:25","statements":[{"expression":{"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5964,"name":"weightedSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"8101:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5965,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"8116:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":5966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8126:13:25","memberName":"dailyAccuracy","nodeType":"MemberAccess","referencedDeclaration":5404,"src":"8116:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8142:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8116:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8101:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5970,"nodeType":"ExpressionStatement","src":"8101:42:25"},{"expression":{"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5971,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8188:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8203:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8188:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5974,"nodeType":"ExpressionStatement","src":"8188:16:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5977,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"8228:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8251:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8228:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5992,"nodeType":"IfStatement","src":"8224:166:25","trueBody":{"id":5991,"nodeType":"Block","src":"8254:136:25","statements":[{"expression":{"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5980,"name":"weightedSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"8268:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5981,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"8283:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":5982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8293:16:25","memberName":"oneToOneAccuracy","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"8283:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"8283:30:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8268:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5986,"nodeType":"ExpressionStatement","src":"8268:45:25"},{"expression":{"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5987,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8363:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8378:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"8363:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5990,"nodeType":"ExpressionStatement","src":"8363:16:25"}]}},{"expression":{"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5993,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"8400:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":5995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8410:13:25","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"8400:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8426:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8440:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8426:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8472:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8426:47:25","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5999,"name":"weightedSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"8444:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6000,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8458:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8444:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8400:73:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6005,"nodeType":"ExpressionStatement","src":"8400:73:25"},{"expression":{"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6006,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"8483:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8489:18:25","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"8483:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6009,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"8510:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":6010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8520:13:25","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"8510:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8483:50:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6012,"nodeType":"ExpressionStatement","src":"8483:50:25"},{"expression":{"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6013,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"8605:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8611:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"8605:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6017,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"8664:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":6018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8674:13:25","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"8664:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6016,"name":"calculateReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"8634:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8634:54:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8605:83:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6021,"nodeType":"ExpressionStatement","src":"8605:83:25"},{"expression":{"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6022,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"8736:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":6024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8746:14:25","memberName":"reputationTier","nodeType":"MemberAccess","referencedDeclaration":5410,"src":"8736:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6026,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"8787:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":6027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8797:13:25","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"8787:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6025,"name":"calculateReputationTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"8763:23:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8763:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8736:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6030,"nodeType":"ExpressionStatement","src":"8736:75:25"},{"expression":{"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6031,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"8822:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8828:11:25","memberName":"lastUpdated","nodeType":"MemberAccess","referencedDeclaration":5397,"src":"8822:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6034,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8842:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8848:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"8842:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6037,"nodeType":"ExpressionStatement","src":"8822:35:25"},{"expression":{"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6038,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"8867:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8873:8:25","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5399,"src":"8867:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8884:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8867:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6043,"nodeType":"ExpressionStatement","src":"8867:21:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6044,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"8940:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6045,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:25","typeDescriptions":{}}},"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8940:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6074,"nodeType":"IfStatement","src":"8936:315:25","trueBody":{"id":6073,"nodeType":"Block","src":"8973:278:25","statements":[{"assignments":[6051],"declarations":[{"constant":false,"id":6051,"mutability":"mutable","name":"astrologerId","nameLocation":"8995:12:25","nodeType":"VariableDeclaration","scope":6073,"src":"8987:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint256","nodeType":"ElementaryTypeName","src":"8987:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6058,"initialValue":{"arguments":[{"id":6056,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"9064:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6053,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"9029:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6052,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"9010:18:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9048:15:25","memberName":"getAstrologerId","nodeType":"MemberAccess","referencedDeclaration":6714,"src":"9010:53:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8987:89:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6059,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"9094:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9109:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9094:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6072,"nodeType":"IfStatement","src":"9090:151:25","trueBody":{"id":6071,"nodeType":"Block","src":"9112:129:25","statements":[{"expression":{"arguments":[{"id":6066,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"9185:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6067,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"9199:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9205:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"9199:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6063,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"9149:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6062,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"9130:18:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$6715_$","typeString":"type(contract IAstrologerManager)"}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9130:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$6715","typeString":"contract IAstrologerManager"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9168:16:25","memberName":"updateReputation","nodeType":"MemberAccess","referencedDeclaration":6686,"src":"9130:54:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9130:96:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6070,"nodeType":"ExpressionStatement","src":"9130:96:25"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"9302:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9332:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9324:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6076,"name":"address","nodeType":"ElementaryTypeName","src":"9324:7:25","typeDescriptions":{}}},"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9302:32:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6128,"nodeType":"IfStatement","src":"9298:680:25","trueBody":{"id":6127,"nodeType":"Block","src":"9336:642:25","statements":[{"clauses":[{"block":{"id":6122,"nodeType":"Block","src":"9485:395:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6091,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"9507:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":6092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9517:13:25","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":6578,"src":"9507:23:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9542:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9534:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6093,"name":"address","nodeType":"ElementaryTypeName","src":"9534:7:25","typeDescriptions":{}}},"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9534:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9507:37:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6098,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"9548:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":6099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9558:11:25","memberName":"buyContract","nodeType":"MemberAccess","referencedDeclaration":6580,"src":"9548:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9581:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9573:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6100,"name":"address","nodeType":"ElementaryTypeName","src":"9573:7:25","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9573:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9548:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9507:76:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":6106,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"9587:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":6107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9597:8:25","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6590,"src":"9587:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9507:98:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6121,"nodeType":"IfStatement","src":"9503:363:25","trueBody":{"id":6120,"nodeType":"Block","src":"9607:259:25","statements":[{"expression":{"arguments":[{"expression":{"id":6114,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"9795:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":6115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9805:13:25","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":6578,"src":"9795:23:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6116,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"9820:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9826:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"9820:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":6110,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"9754:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":6111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9764:11:25","memberName":"buyContract","nodeType":"MemberAccess","referencedDeclaration":6580,"src":"9754:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6109,"name":"IBuyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"9736:17:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBuyTokenContract_$6755_$","typeString":"type(contract IBuyTokenContract)"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9736:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBuyTokenContract_$6755","typeString":"contract IBuyTokenContract"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9777:17:25","memberName":"updateCredibility","nodeType":"MemberAccess","referencedDeclaration":6735,"src":"9736:58:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9736:111:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6119,"nodeType":"ExpressionStatement","src":"9736:111:25"}]}}]},"errorName":"","id":6123,"nodeType":"TryCatchClause","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"tokenInfo","nameLocation":"9474:9:25","nodeType":"VariableDeclaration","scope":6123,"src":"9437:46:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":6088,"nodeType":"UserDefinedTypeName","pathNode":{"id":6087,"name":"IAstroTokenLauncher.TokenInfo","nameLocations":["9437:19:25","9457:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":6593,"src":"9437:29:25"},"referencedDeclaration":6593,"src":"9437:29:25","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"9436:48:25"},"src":"9428:452:25"},{"block":{"id":6124,"nodeType":"Block","src":"9887:81:25","statements":[]},"errorName":"","id":6125,"nodeType":"TryCatchClause","src":"9881:87:25"}],"externalCall":{"arguments":[{"id":6085,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"9415:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6082,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"9374:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6081,"name":"IAstroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"9354:19:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstroTokenLauncher_$6632_$","typeString":"type(contract IAstroTokenLauncher)"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstroTokenLauncher_$6632","typeString":"contract IAstroTokenLauncher"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9394:20:25","memberName":"getTokenByAstrologer","nodeType":"MemberAccess","referencedDeclaration":6601,"src":"9354:60:25","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_TokenInfo_$6593_memory_ptr_$","typeString":"function (address) view external returns (struct IAstroTokenLauncher.TokenInfo memory)"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:73:25","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":6126,"nodeType":"TryStatement","src":"9350:618:25"}]}},{"eventCall":{"arguments":[{"id":6130,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"10016:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6131,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"10029:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10035:18:25","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"10029:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6133,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"10055:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10061:18:25","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":5387,"src":"10055:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6135,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"10081:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":6136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10087:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"10081:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6129,"name":"ReputationScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9993:22:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9993:115:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6138,"nodeType":"EmitStatement","src":"9988:120:25"},{"eventCall":{"arguments":[{"id":6140,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"10145:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6141,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"10158:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":6142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10168:14:25","memberName":"marketAccuracy","nodeType":"MemberAccess","referencedDeclaration":5402,"src":"10158:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6143,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"10184:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":6144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10194:13:25","memberName":"dailyAccuracy","nodeType":"MemberAccess","referencedDeclaration":5404,"src":"10184:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6145,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"10209:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":6146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10219:16:25","memberName":"oneToOneAccuracy","nodeType":"MemberAccess","referencedDeclaration":5406,"src":"10209:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6147,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"10237:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":6148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10247:13:25","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":5408,"src":"10237:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6139,"name":"ScoreBreakdownUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"10123:21:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10123:138:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6150,"nodeType":"EmitStatement","src":"10118:143:25"}]},"functionSelector":"adcbcde5","id":6152,"implemented":true,"kind":"function","modifiers":[],"name":"updateReputationScore","nameLocation":"6531:21:25","nodeType":"FunctionDefinition","parameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"_astrologer","nameLocation":"6570:11:25","nodeType":"VariableDeclaration","scope":6152,"src":"6562:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5807,"name":"address","nodeType":"ElementaryTypeName","src":"6562:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5810,"mutability":"mutable","name":"_marketPredictions","nameLocation":"6599:18:25","nodeType":"VariableDeclaration","scope":6152,"src":"6591:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5812,"mutability":"mutable","name":"_marketAccurate","nameLocation":"6635:15:25","nodeType":"VariableDeclaration","scope":6152,"src":"6627:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5811,"name":"uint256","nodeType":"ElementaryTypeName","src":"6627:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5814,"mutability":"mutable","name":"_dailyPredictions","nameLocation":"6668:17:25","nodeType":"VariableDeclaration","scope":6152,"src":"6660:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5813,"name":"uint256","nodeType":"ElementaryTypeName","src":"6660:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5816,"mutability":"mutable","name":"_dailyAccurate","nameLocation":"6703:14:25","nodeType":"VariableDeclaration","scope":6152,"src":"6695:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"6695:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5818,"mutability":"mutable","name":"_oneToOnePredictions","nameLocation":"6735:20:25","nodeType":"VariableDeclaration","scope":6152,"src":"6727:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6727:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5820,"mutability":"mutable","name":"_oneToOneAccurate","nameLocation":"6773:17:25","nodeType":"VariableDeclaration","scope":6152,"src":"6765:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6765:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6552:244:25"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[],"src":"6806:0:25"},"scope":6570,"src":"6522:3746:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6192,"nodeType":"Block","src":"10364:691:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6159,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"10533:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"10533:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6165,"nodeType":"IfStatement","src":"10529:95:25","trueBody":{"id":6164,"nodeType":"Block","src":"10551:73:25","statements":[{"expression":{"id":6162,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"10572:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6158,"id":6163,"nodeType":"Return","src":"10565:30:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6166,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"10646:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10659:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10646:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6172,"nodeType":"IfStatement","src":"10642:95:25","trueBody":{"id":6171,"nodeType":"Block","src":"10662:75:25","statements":[{"expression":{"id":6169,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"10683:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6158,"id":6170,"nodeType":"Return","src":"10676:30:25"}]}},{"assignments":[6174],"declarations":[{"constant":false,"id":6174,"mutability":"mutable","name":"multiplierRange","nameLocation":"10833:15:25","nodeType":"VariableDeclaration","scope":6192,"src":"10825:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"10825:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6178,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6175,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"10851:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6176,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"10877:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10851:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10825:75:25"},{"assignments":[6180],"declarations":[{"constant":false,"id":6180,"mutability":"mutable","name":"accuracyContribution","nameLocation":"10918:20:25","nodeType":"VariableDeclaration","scope":6192,"src":"10910:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"10910:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6187,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6181,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"10942:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6182,"name":"multiplierRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"10954:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10942:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10941:29:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10973:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"10941:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10910:66:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"11002:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6189,"name":"accuracyContribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"11028:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11002:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6158,"id":6191,"nodeType":"Return","src":"10995:53:25"}]},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReputationMultiplier","nameLocation":"10283:29:25","nodeType":"FunctionDefinition","parameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6154,"mutability":"mutable","name":"_accuracy","nameLocation":"10321:9:25","nodeType":"VariableDeclaration","scope":6193,"src":"10313:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6153,"name":"uint256","nodeType":"ElementaryTypeName","src":"10313:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10312:19:25"},"returnParameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6193,"src":"10355:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6156,"name":"uint256","nodeType":"ElementaryTypeName","src":"10355:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10354:9:25"},"scope":6570,"src":"10274:781:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6232,"nodeType":"Block","src":"11145:345:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6200,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"11159:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3935","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11172:2:25","typeDescriptions":{"typeIdentifier":"t_rational_95_by_1","typeString":"int_const 95"},"value":"95"},"src":"11159:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6205,"nodeType":"IfStatement","src":"11155:29:25","trueBody":{"expression":{"hexValue":"35","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11183:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"functionReturnParameters":6199,"id":6204,"nodeType":"Return","src":"11176:8:25"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"11219:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3930","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11232:2:25","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"11219:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6211,"nodeType":"IfStatement","src":"11215:29:25","trueBody":{"expression":{"hexValue":"34","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11243:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"functionReturnParameters":6199,"id":6210,"nodeType":"Return","src":"11236:8:25"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6212,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"11279:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3835","id":6213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11292:2:25","typeDescriptions":{"typeIdentifier":"t_rational_85_by_1","typeString":"int_const 85"},"value":"85"},"src":"11279:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6217,"nodeType":"IfStatement","src":"11275:29:25","trueBody":{"expression":{"hexValue":"33","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11303:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"functionReturnParameters":6199,"id":6216,"nodeType":"Return","src":"11296:8:25"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6218,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"11341:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3830","id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11354:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"11341:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6223,"nodeType":"IfStatement","src":"11337:29:25","trueBody":{"expression":{"hexValue":"32","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11365:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"functionReturnParameters":6199,"id":6222,"nodeType":"Return","src":"11358:8:25"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6224,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"11407:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3735","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11420:2:25","typeDescriptions":{"typeIdentifier":"t_rational_75_by_1","typeString":"int_const 75"},"value":"75"},"src":"11407:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6229,"nodeType":"IfStatement","src":"11403:29:25","trueBody":{"expression":{"hexValue":"31","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11431:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":6199,"id":6228,"nodeType":"Return","src":"11424:8:25"}},{"expression":{"hexValue":"30","id":6230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11472:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6199,"id":6231,"nodeType":"Return","src":"11465:8:25"}]},"id":6233,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReputationTier","nameLocation":"11070:23:25","nodeType":"FunctionDefinition","parameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6195,"mutability":"mutable","name":"_accuracy","nameLocation":"11102:9:25","nodeType":"VariableDeclaration","scope":6233,"src":"11094:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"11094:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11093:19:25"},"returnParameters":{"id":6199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6233,"src":"11136:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6197,"name":"uint256","nodeType":"ElementaryTypeName","src":"11136:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11135:9:25"},"scope":6570,"src":"11061:429:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6245,"nodeType":"Block","src":"11592:53:25","statements":[{"expression":{"baseExpression":{"id":6241,"name":"reputationScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"11609:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$5400_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore storage ref)"}},"id":6243,"indexExpression":{"id":6242,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"11626:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11609:29:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage","typeString":"struct ReputationScorer.ReputationScore storage ref"}},"functionReturnParameters":6240,"id":6244,"nodeType":"Return","src":"11602:36:25"}]},"functionSelector":"75a67d5c","id":6246,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationScore","nameLocation":"11505:18:25","nodeType":"FunctionDefinition","parameters":{"id":6236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"_astrologer","nameLocation":"11532:11:25","nodeType":"VariableDeclaration","scope":6246,"src":"11524:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6234,"name":"address","nodeType":"ElementaryTypeName","src":"11524:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11523:21:25"},"returnParameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6246,"src":"11568:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_memory_ptr","typeString":"struct ReputationScorer.ReputationScore"},"typeName":{"id":6238,"nodeType":"UserDefinedTypeName","pathNode":{"id":6237,"name":"ReputationScore","nameLocations":["11568:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":5400,"src":"11568:15:25"},"referencedDeclaration":5400,"src":"11568:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"}},"visibility":"internal"}],"src":"11567:24:25"},"scope":6570,"src":"11496:149:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6258,"nodeType":"Block","src":"11745:52:25","statements":[{"expression":{"baseExpression":{"id":6254,"name":"scoreBreakdowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"11762:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$5411_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown storage ref)"}},"id":6256,"indexExpression":{"id":6255,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"11778:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11762:28:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage","typeString":"struct ReputationScorer.ScoreBreakdown storage ref"}},"functionReturnParameters":6253,"id":6257,"nodeType":"Return","src":"11755:35:25"}]},"functionSelector":"2c27750a","id":6259,"implemented":true,"kind":"function","modifiers":[],"name":"getScoreBreakdown","nameLocation":"11660:17:25","nodeType":"FunctionDefinition","parameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"_astrologer","nameLocation":"11686:11:25","nodeType":"VariableDeclaration","scope":6259,"src":"11678:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6247,"name":"address","nodeType":"ElementaryTypeName","src":"11678:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11677:21:25"},"returnParameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6259,"src":"11722:21:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_memory_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"},"typeName":{"id":6251,"nodeType":"UserDefinedTypeName","pathNode":{"id":6250,"name":"ScoreBreakdown","nameLocations":["11722:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":5411,"src":"11722:14:25"},"referencedDeclaration":5411,"src":"11722:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"}},"visibility":"internal"}],"src":"11721:23:25"},"scope":6570,"src":"11651:146:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6271,"nodeType":"Block","src":"11889:74:25","statements":[{"expression":{"expression":{"baseExpression":{"id":6266,"name":"reputationScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"11906:16:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$5400_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore storage ref)"}},"id":6268,"indexExpression":{"id":6267,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"11923:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11906:29:25","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$5400_storage","typeString":"struct ReputationScorer.ReputationScore storage ref"}},"id":6269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11936:20:25","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":5389,"src":"11906:50:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6265,"id":6270,"nodeType":"Return","src":"11899:57:25"}]},"functionSelector":"b107e88c","id":6272,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationMultiplier","nameLocation":"11812:23:25","nodeType":"FunctionDefinition","parameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"_astrologer","nameLocation":"11844:11:25","nodeType":"VariableDeclaration","scope":6272,"src":"11836:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6260,"name":"address","nodeType":"ElementaryTypeName","src":"11836:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11835:21:25"},"returnParameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6272,"src":"11880:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6263,"name":"uint256","nodeType":"ElementaryTypeName","src":"11880:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11879:9:25"},"scope":6570,"src":"11803:160:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6284,"nodeType":"Block","src":"12049:67:25","statements":[{"expression":{"expression":{"baseExpression":{"id":6279,"name":"scoreBreakdowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"12066:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$5411_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown storage ref)"}},"id":6281,"indexExpression":{"id":6280,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"12082:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12066:28:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$5411_storage","typeString":"struct ReputationScorer.ScoreBreakdown storage ref"}},"id":6282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12095:14:25","memberName":"reputationTier","nodeType":"MemberAccess","referencedDeclaration":5410,"src":"12066:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6278,"id":6283,"nodeType":"Return","src":"12059:50:25"}]},"functionSelector":"6be2cefb","id":6285,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationTier","nameLocation":"11978:17:25","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"_astrologer","nameLocation":"12004:11:25","nodeType":"VariableDeclaration","scope":6285,"src":"11996:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6273,"name":"address","nodeType":"ElementaryTypeName","src":"11996:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11995:21:25"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6285,"src":"12040:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6276,"name":"uint256","nodeType":"ElementaryTypeName","src":"12040:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12039:9:25"},"scope":6570,"src":"11969:147:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6310,"nodeType":"Block","src":"12206:195:25","statements":[{"assignments":[6297],"declarations":[{"constant":false,"id":6297,"mutability":"mutable","name":"topAstrologers","nameLocation":"12233:14:25","nodeType":"VariableDeclaration","scope":6310,"src":"12216:31:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6295,"name":"address","nodeType":"ElementaryTypeName","src":"12216:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6296,"nodeType":"ArrayTypeName","src":"12216:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":6303,"initialValue":{"arguments":[{"id":6301,"name":"_limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"12264:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12250:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":6298,"name":"address","nodeType":"ElementaryTypeName","src":"12254:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6299,"nodeType":"ArrayTypeName","src":"12254:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12250:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12216:55:25"},{"assignments":[6305],"declarations":[{"constant":false,"id":6305,"mutability":"mutable","name":"count","nameLocation":"12289:5:25","nodeType":"VariableDeclaration","scope":6310,"src":"12281:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6304,"name":"uint256","nodeType":"ElementaryTypeName","src":"12281:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6307,"initialValue":{"hexValue":"30","id":6306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12297:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12281:17:25"},{"expression":{"id":6308,"name":"topAstrologers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"12380:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":6292,"id":6309,"nodeType":"Return","src":"12373:21:25"}]},"functionSelector":"5245420d","id":6311,"implemented":true,"kind":"function","modifiers":[],"name":"getTopAstrologers","nameLocation":"12131:17:25","nodeType":"FunctionDefinition","parameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"_limit","nameLocation":"12157:6:25","nodeType":"VariableDeclaration","scope":6311,"src":"12149:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6286,"name":"uint256","nodeType":"ElementaryTypeName","src":"12149:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12148:16:25"},"returnParameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6311,"src":"12188:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6289,"name":"address","nodeType":"ElementaryTypeName","src":"12188:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6290,"nodeType":"ArrayTypeName","src":"12188:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12187:18:25"},"scope":6570,"src":"12122:279:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6347,"nodeType":"Block","src":"12481:236:25","statements":[{"body":{"id":6343,"nodeType":"Block","src":"12535:154:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6328,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"12553:17:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$5420_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":6330,"indexExpression":{"id":6329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"12571:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12553:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":6331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12574:15:25","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5413,"src":"12553:36:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6332,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6313,"src":"12593:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12553:47:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"baseExpression":{"id":6334,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"12604:17:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$5420_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":6336,"indexExpression":{"id":6335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"12622:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12604:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":6337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12625:8:25","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5415,"src":"12604:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12553:80:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6342,"nodeType":"IfStatement","src":"12549:130:25","trueBody":{"id":6341,"nodeType":"Block","src":"12635:44:25","statements":[{"expression":{"hexValue":"74727565","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12660:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6317,"id":6340,"nodeType":"Return","src":"12653:11:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"12511:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6323,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"12516:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12511:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6344,"initializationExpression":{"assignments":[6319],"declarations":[{"constant":false,"id":6319,"mutability":"mutable","name":"i","nameLocation":"12504:1:25","nodeType":"VariableDeclaration","scope":6344,"src":"12496:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6318,"name":"uint256","nodeType":"ElementaryTypeName","src":"12496:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6321,"initialValue":{"hexValue":"31","id":6320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12508:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"12496:13:25"},"loopExpression":{"expression":{"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12530:3:25","subExpression":{"id":6325,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"12530:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6327,"nodeType":"ExpressionStatement","src":"12530:3:25"},"nodeType":"ForStatement","src":"12491:198:25"},{"expression":{"hexValue":"66616c7365","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12705:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6317,"id":6346,"nodeType":"Return","src":"12698:12:25"}]},"id":6348,"implemented":true,"kind":"function","modifiers":[],"name":"isPredictionModule","nameLocation":"12416:18:25","nodeType":"FunctionDefinition","parameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"_module","nameLocation":"12443:7:25","nodeType":"VariableDeclaration","scope":6348,"src":"12435:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6312,"name":"address","nodeType":"ElementaryTypeName","src":"12435:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12434:17:25"},"returnParameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6348,"src":"12475:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6315,"name":"bool","nodeType":"ElementaryTypeName","src":"12475:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12474:6:25"},"scope":6570,"src":"12407:310:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6359,"nodeType":"Block","src":"12800:55:25","statements":[{"expression":{"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6355,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"12810:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6356,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"12830:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12810:38:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6358,"nodeType":"ExpressionStatement","src":"12810:38:25"}]},"functionSelector":"44cda485","id":6360,"implemented":true,"kind":"function","modifiers":[{"id":6353,"kind":"modifierInvocation","modifierName":{"id":6352,"name":"onlyOwner","nameLocations":["12790:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"12790:9:25"},"nodeType":"ModifierInvocation","src":"12790:9:25"}],"name":"setAstrologerManager","nameLocation":"12732:20:25","nodeType":"FunctionDefinition","parameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"_astrologerManager","nameLocation":"12761:18:25","nodeType":"VariableDeclaration","scope":6360,"src":"12753:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6349,"name":"address","nodeType":"ElementaryTypeName","src":"12753:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12752:28:25"},"returnParameters":{"id":6354,"nodeType":"ParameterList","parameters":[],"src":"12800:0:25"},"scope":6570,"src":"12723:132:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6371,"nodeType":"Block","src":"12936:53:25","statements":[{"expression":{"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6367,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"12946:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6368,"name":"_buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"12965:17:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12946:36:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6370,"nodeType":"ExpressionStatement","src":"12946:36:25"}]},"functionSelector":"c3a274c2","id":6372,"implemented":true,"kind":"function","modifiers":[{"id":6365,"kind":"modifierInvocation","modifierName":{"id":6364,"name":"onlyOwner","nameLocations":["12926:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"12926:9:25"},"nodeType":"ModifierInvocation","src":"12926:9:25"}],"name":"setBuyTokenContract","nameLocation":"12870:19:25","nodeType":"FunctionDefinition","parameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"_buyTokenContract","nameLocation":"12898:17:25","nodeType":"VariableDeclaration","scope":6372,"src":"12890:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6361,"name":"address","nodeType":"ElementaryTypeName","src":"12890:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12889:27:25"},"returnParameters":{"id":6366,"nodeType":"ParameterList","parameters":[],"src":"12936:0:25"},"scope":6570,"src":"12861:128:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6383,"nodeType":"Block","src":"13074:57:25","statements":[{"expression":{"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6379,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"13084:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6380,"name":"_astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"13105:19:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13084:40:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6382,"nodeType":"ExpressionStatement","src":"13084:40:25"}]},"functionSelector":"e2c3538c","id":6384,"implemented":true,"kind":"function","modifiers":[{"id":6377,"kind":"modifierInvocation","modifierName":{"id":6376,"name":"onlyOwner","nameLocations":["13064:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13064:9:25"},"nodeType":"ModifierInvocation","src":"13064:9:25"}],"name":"setAstroTokenLauncher","nameLocation":"13004:21:25","nodeType":"FunctionDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"_astroTokenLauncher","nameLocation":"13034:19:25","nodeType":"VariableDeclaration","scope":6384,"src":"13026:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6373,"name":"address","nodeType":"ElementaryTypeName","src":"13026:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13025:29:25"},"returnParameters":{"id":6378,"nodeType":"ParameterList","parameters":[],"src":"13074:0:25"},"scope":6570,"src":"12995:136:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6395,"nodeType":"Block","src":"13198:39:25","statements":[{"expression":{"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6391,"name":"zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"13208:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6392,"name":"_zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"13220:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13208:22:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6394,"nodeType":"ExpressionStatement","src":"13208:22:25"}]},"functionSelector":"65af67bd","id":6396,"implemented":true,"kind":"function","modifiers":[{"id":6389,"kind":"modifierInvocation","modifierName":{"id":6388,"name":"onlyOwner","nameLocations":["13188:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13188:9:25"},"nodeType":"ModifierInvocation","src":"13188:9:25"}],"name":"setZodiacDAO","nameLocation":"13146:12:25","nodeType":"FunctionDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"_zodiacDAO","nameLocation":"13167:10:25","nodeType":"VariableDeclaration","scope":6396,"src":"13159:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6385,"name":"address","nodeType":"ElementaryTypeName","src":"13159:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13158:20:25"},"returnParameters":{"id":6390,"nodeType":"ParameterList","parameters":[],"src":"13198:0:25"},"scope":6570,"src":"13137:100:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6407,"nodeType":"Block","src":"13328:63:25","statements":[{"expression":{"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6403,"name":"worldPredictionMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"13338:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6404,"name":"_worldPredictionMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"13362:22:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13338:46:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6406,"nodeType":"ExpressionStatement","src":"13338:46:25"}]},"functionSelector":"106bdcf5","id":6408,"implemented":true,"kind":"function","modifiers":[{"id":6401,"kind":"modifierInvocation","modifierName":{"id":6400,"name":"onlyOwner","nameLocations":["13318:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13318:9:25"},"nodeType":"ModifierInvocation","src":"13318:9:25"}],"name":"setWorldPredictionMarket","nameLocation":"13252:24:25","nodeType":"FunctionDefinition","parameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"_worldPredictionMarket","nameLocation":"13285:22:25","nodeType":"VariableDeclaration","scope":6408,"src":"13277:30:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6397,"name":"address","nodeType":"ElementaryTypeName","src":"13277:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13276:32:25"},"returnParameters":{"id":6402,"nodeType":"ParameterList","parameters":[],"src":"13328:0:25"},"scope":6570,"src":"13243:148:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6419,"nodeType":"Block","src":"13476:57:25","statements":[{"expression":{"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6415,"name":"minPredictionsForScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"13486:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6416,"name":"_minPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"13511:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13486:40:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6418,"nodeType":"ExpressionStatement","src":"13486:40:25"}]},"functionSelector":"9f68871d","id":6420,"implemented":true,"kind":"function","modifiers":[{"id":6413,"kind":"modifierInvocation","modifierName":{"id":6412,"name":"onlyOwner","nameLocations":["13466:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13466:9:25"},"nodeType":"ModifierInvocation","src":"13466:9:25"}],"name":"setMinPredictionsForScore","nameLocation":"13406:25:25","nodeType":"FunctionDefinition","parameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"_minPredictions","nameLocation":"13440:15:25","nodeType":"VariableDeclaration","scope":6420,"src":"13432:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6409,"name":"uint256","nodeType":"ElementaryTypeName","src":"13432:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13431:25:25"},"returnParameters":{"id":6414,"nodeType":"ParameterList","parameters":[],"src":"13476:0:25"},"scope":6570,"src":"13397:136:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6431,"nodeType":"Block","src":"13603:42:25","statements":[{"expression":{"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6427,"name":"scoreUpdateDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"13613:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6428,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"13632:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13613:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6430,"nodeType":"ExpressionStatement","src":"13613:25:25"}]},"functionSelector":"e6f95583","id":6432,"implemented":true,"kind":"function","modifiers":[{"id":6425,"kind":"modifierInvocation","modifierName":{"id":6424,"name":"onlyOwner","nameLocations":["13593:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13593:9:25"},"nodeType":"ModifierInvocation","src":"13593:9:25"}],"name":"setScoreUpdateDelay","nameLocation":"13548:19:25","nodeType":"FunctionDefinition","parameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"_delay","nameLocation":"13576:6:25","nodeType":"VariableDeclaration","scope":6432,"src":"13568:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6421,"name":"uint256","nodeType":"ElementaryTypeName","src":"13568:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13567:16:25"},"returnParameters":{"id":6426,"nodeType":"ParameterList","parameters":[],"src":"13603:0:25"},"scope":6570,"src":"13539:106:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6443,"nodeType":"Block","src":"13722:49:25","statements":[{"expression":{"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6439,"name":"reputationDecayRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"13732:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6440,"name":"_decayRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"13754:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13732:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6442,"nodeType":"ExpressionStatement","src":"13732:32:25"}]},"functionSelector":"4cba103e","id":6444,"implemented":true,"kind":"function","modifiers":[{"id":6437,"kind":"modifierInvocation","modifierName":{"id":6436,"name":"onlyOwner","nameLocations":["13712:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13712:9:25"},"nodeType":"ModifierInvocation","src":"13712:9:25"}],"name":"setReputationDecayRate","nameLocation":"13660:22:25","nodeType":"FunctionDefinition","parameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"_decayRate","nameLocation":"13691:10:25","nodeType":"VariableDeclaration","scope":6444,"src":"13683:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6433,"name":"uint256","nodeType":"ElementaryTypeName","src":"13683:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13682:20:25"},"returnParameters":{"id":6438,"nodeType":"ParameterList","parameters":[],"src":"13722:0:25"},"scope":6570,"src":"13651:120:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6473,"nodeType":"Block","src":"13847:177:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6452,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"13865:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13865:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6455,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"13882:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6456,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"13895:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13882:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13865:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d6f64756c65204944","id":6459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13909:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4432bc9a1666e2d0de0e0f9f41101175b2992444c68ddd1d0b446f479d2369c2","typeString":"literal_string \"Invalid module ID\""},"value":"Invalid module ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4432bc9a1666e2d0de0e0f9f41101175b2992444c68ddd1d0b446f479d2369c2","typeString":"literal_string \"Invalid module ID\""}],"id":6451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13857:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13857:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6461,"nodeType":"ExpressionStatement","src":"13857:72:25"},{"expression":{"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6462,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"13939:17:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$5420_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":6464,"indexExpression":{"id":6463,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"13957:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13939:28:25","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":6465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13968:8:25","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5415,"src":"13939:37:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13979:38:25","subExpression":{"expression":{"baseExpression":{"id":6466,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"13980:17:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$5420_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":6468,"indexExpression":{"id":6467,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"13998:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13980:28:25","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":6469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14009:8:25","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5415,"src":"13980:37:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13939:78:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6472,"nodeType":"ExpressionStatement","src":"13939:78:25"}]},"functionSelector":"893849de","id":6474,"implemented":true,"kind":"function","modifiers":[{"id":6449,"kind":"modifierInvocation","modifierName":{"id":6448,"name":"onlyOwner","nameLocations":["13837:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13837:9:25"},"nodeType":"ModifierInvocation","src":"13837:9:25"}],"name":"togglePredictionModule","nameLocation":"13786:22:25","nodeType":"FunctionDefinition","parameters":{"id":6447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6446,"mutability":"mutable","name":"_moduleId","nameLocation":"13817:9:25","nodeType":"VariableDeclaration","scope":6474,"src":"13809:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6445,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:19:25"},"returnParameters":{"id":6450,"nodeType":"ParameterList","parameters":[],"src":"13847:0:25"},"scope":6570,"src":"13777:247:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6508,"nodeType":"Block","src":"14116:213:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6484,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"14134:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14146:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14134:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6487,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"14151:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6488,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"14164:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14151:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14134:42:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d6f64756c65204944","id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14178:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4432bc9a1666e2d0de0e0f9f41101175b2992444c68ddd1d0b446f479d2369c2","typeString":"literal_string \"Invalid module ID\""},"value":"Invalid module ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4432bc9a1666e2d0de0e0f9f41101175b2992444c68ddd1d0b446f479d2369c2","typeString":"literal_string \"Invalid module ID\""}],"id":6483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14126:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14126:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6493,"nodeType":"ExpressionStatement","src":"14126:72:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6495,"name":"_newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"14216:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14229:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14216:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576569676874206d7573742062652067726561746572207468616e2030","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14232:31:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""},"value":"Weight must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""}],"id":6494,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14208:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14208:56:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6500,"nodeType":"ExpressionStatement","src":"14208:56:25"},{"expression":{"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6501,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5435,"src":"14274:17:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$5420_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":6503,"indexExpression":{"id":6502,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"14292:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14274:28:25","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$5420_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":6504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14303:6:25","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":5417,"src":"14274:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6505,"name":"_newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"14312:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14274:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6507,"nodeType":"ExpressionStatement","src":"14274:48:25"}]},"functionSelector":"9754cfd1","id":6509,"implemented":true,"kind":"function","modifiers":[{"id":6481,"kind":"modifierInvocation","modifierName":{"id":6480,"name":"onlyOwner","nameLocations":["14106:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"14106:9:25"},"nodeType":"ModifierInvocation","src":"14106:9:25"}],"name":"updateModuleWeight","nameLocation":"14039:18:25","nodeType":"FunctionDefinition","parameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"_moduleId","nameLocation":"14066:9:25","nodeType":"VariableDeclaration","scope":6509,"src":"14058:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6475,"name":"uint256","nodeType":"ElementaryTypeName","src":"14058:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6478,"mutability":"mutable","name":"_newWeight","nameLocation":"14085:10:25","nodeType":"VariableDeclaration","scope":6509,"src":"14077:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6477,"name":"uint256","nodeType":"ElementaryTypeName","src":"14077:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14057:39:25"},"returnParameters":{"id":6482,"nodeType":"ParameterList","parameters":[],"src":"14116:0:25"},"scope":6570,"src":"14030:299:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6547,"nodeType":"Block","src":"14436:360:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6519,"name":"_maxMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"14454:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6520,"name":"_minMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"14471:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14454:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178206d7573742062652067726561746572207468616e206d696e","id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14487:30:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_61d0c281bad020c47ec6f2801de2e56dc066854a8b9ad695cfc8a5e8de45a38e","typeString":"literal_string \"Max must be greater than min\""},"value":"Max must be greater than min"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61d0c281bad020c47ec6f2801de2e56dc066854a8b9ad695cfc8a5e8de45a38e","typeString":"literal_string \"Max must be greater than min\""}],"id":6518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14446:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14446:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6524,"nodeType":"ExpressionStatement","src":"14446:72:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6526,"name":"_minMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"14536:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":6527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14554:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"14536:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e206d756c7469706c696572206d757374206265206174206c6561737420302e3178","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14559:38:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0fc7e32423aaef9679cf82901f970d035e235c14e3c89af0a74d6f99eacfd4f6","typeString":"literal_string \"Min multiplier must be at least 0.1x\""},"value":"Min multiplier must be at least 0.1x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0fc7e32423aaef9679cf82901f970d035e235c14e3c89af0a74d6f99eacfd4f6","typeString":"literal_string \"Min multiplier must be at least 0.1x\""}],"id":6525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14528:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14528:70:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6531,"nodeType":"ExpressionStatement","src":"14528:70:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6533,"name":"_maxMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"14616:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130303030","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14634:5:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"14616:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178206d756c7469706c696572206d757374206265206174206d6f73742031302e3078","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14641:38:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae33eea7ea24c925addb12addc0d5bc8e8f0a74e98a84766d77bc571cd574988","typeString":"literal_string \"Max multiplier must be at most 10.0x\""},"value":"Max multiplier must be at most 10.0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae33eea7ea24c925addb12addc0d5bc8e8f0a74e98a84766d77bc571cd574988","typeString":"literal_string \"Max multiplier must be at most 10.0x\""}],"id":6532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14608:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14608:72:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6538,"nodeType":"ExpressionStatement","src":"14608:72:25"},{"expression":{"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6539,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"14699:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6540,"name":"_maxMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"14725:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14699:40:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6542,"nodeType":"ExpressionStatement","src":"14699:40:25"},{"expression":{"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6543,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"14749:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6544,"name":"_minMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"14775:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14749:40:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6546,"nodeType":"ExpressionStatement","src":"14749:40:25"}]},"functionSelector":"58bd9b93","id":6548,"implemented":true,"kind":"function","modifiers":[{"id":6516,"kind":"modifierInvocation","modifierName":{"id":6515,"name":"onlyOwner","nameLocations":["14426:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"14426:9:25"},"nodeType":"ModifierInvocation","src":"14426:9:25"}],"name":"setReputationMultipliers","nameLocation":"14344:24:25","nodeType":"FunctionDefinition","parameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"_maxMultiplier","nameLocation":"14377:14:25","nodeType":"VariableDeclaration","scope":6548,"src":"14369:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6510,"name":"uint256","nodeType":"ElementaryTypeName","src":"14369:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6513,"mutability":"mutable","name":"_minMultiplier","nameLocation":"14401:14:25","nodeType":"VariableDeclaration","scope":6548,"src":"14393:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6512,"name":"uint256","nodeType":"ElementaryTypeName","src":"14393:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14368:48:25"},"returnParameters":{"id":6517,"nodeType":"ParameterList","parameters":[],"src":"14436:0:25"},"scope":6570,"src":"14335:461:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6559,"nodeType":"Block","src":"14891:74:25","statements":[{"expression":{"components":[{"id":6555,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"14909:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6556,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"14934:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14908:50:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":6554,"id":6558,"nodeType":"Return","src":"14901:57:25"}]},"functionSelector":"3d9617be","id":6560,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationMultiplierRange","nameLocation":"14811:28:25","nodeType":"FunctionDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[],"src":"14839:2:25"},"returnParameters":{"id":6554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"max","nameLocation":"14873:3:25","nodeType":"VariableDeclaration","scope":6560,"src":"14865:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"14865:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6553,"mutability":"mutable","name":"min","nameLocation":"14886:3:25","nodeType":"VariableDeclaration","scope":6560,"src":"14878:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6552,"name":"uint256","nodeType":"ElementaryTypeName","src":"14878:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14864:26:25"},"scope":6570,"src":"14802:163:25","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[795],"body":{"id":6568,"nodeType":"Block","src":"15053:2:25","statements":[]},"id":6569,"implemented":true,"kind":"function","modifiers":[{"id":6566,"kind":"modifierInvocation","modifierName":{"id":6565,"name":"onlyOwner","nameLocations":["15043:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"15043:9:25"},"nodeType":"ModifierInvocation","src":"15043:9:25"}],"name":"_authorizeUpgrade","nameLocation":"14980:17:25","nodeType":"FunctionDefinition","overrides":{"id":6564,"nodeType":"OverrideSpecifier","overrides":[],"src":"15034:8:25"},"parameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6562,"mutability":"mutable","name":"newImplementation","nameLocation":"15006:17:25","nodeType":"VariableDeclaration","scope":6569,"src":"14998:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6561,"name":"address","nodeType":"ElementaryTypeName","src":"14998:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14997:27:25"},"returnParameters":{"id":6567,"nodeType":"ParameterList","parameters":[],"src":"15053:0:25"},"scope":6570,"src":"14971:84:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6571,"src":"502:14555:25","usedErrors":[]}],"src":"32:15026:25"},"id":25},"contracts/interfaces/IAstroTokenLauncher.sol":{"ast":{"absolutePath":"contracts/interfaces/IAstroTokenLauncher.sol","exportedSymbols":{"IAstroTokenLauncher":[6632]},"id":6633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6572,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IAstroTokenLauncher","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6632,"linearizedBaseContracts":[6632],"name":"IAstroTokenLauncher","nameLocation":"67:19:26","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IAstroTokenLauncher.TokenInfo","id":6593,"members":[{"constant":false,"id":6574,"mutability":"mutable","name":"id","nameLocation":"128:2:26","nodeType":"VariableDeclaration","scope":6593,"src":"120:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"120:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6576,"mutability":"mutable","name":"astrologer","nameLocation":"148:10:26","nodeType":"VariableDeclaration","scope":6593,"src":"140:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6575,"name":"address","nodeType":"ElementaryTypeName","src":"140:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6578,"mutability":"mutable","name":"tokenContract","nameLocation":"176:13:26","nodeType":"VariableDeclaration","scope":6593,"src":"168:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6577,"name":"address","nodeType":"ElementaryTypeName","src":"168:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6580,"mutability":"mutable","name":"buyContract","nameLocation":"207:11:26","nodeType":"VariableDeclaration","scope":6593,"src":"199:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6579,"name":"address","nodeType":"ElementaryTypeName","src":"199:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6582,"mutability":"mutable","name":"name","nameLocation":"235:4:26","nodeType":"VariableDeclaration","scope":6593,"src":"228:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6581,"name":"string","nodeType":"ElementaryTypeName","src":"228:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6584,"mutability":"mutable","name":"symbol","nameLocation":"256:6:26","nodeType":"VariableDeclaration","scope":6593,"src":"249:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6583,"name":"string","nodeType":"ElementaryTypeName","src":"249:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6586,"mutability":"mutable","name":"totalSupply","nameLocation":"280:11:26","nodeType":"VariableDeclaration","scope":6593,"src":"272:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6585,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6588,"mutability":"mutable","name":"initialPrice","nameLocation":"309:12:26","nodeType":"VariableDeclaration","scope":6593,"src":"301:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6587,"name":"uint256","nodeType":"ElementaryTypeName","src":"301:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6590,"mutability":"mutable","name":"isActive","nameLocation":"336:8:26","nodeType":"VariableDeclaration","scope":6593,"src":"331:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6589,"name":"bool","nodeType":"ElementaryTypeName","src":"331:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6592,"mutability":"mutable","name":"createdAt","nameLocation":"362:9:26","nodeType":"VariableDeclaration","scope":6593,"src":"354:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6591,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"100:9:26","nodeType":"StructDefinition","scope":6632,"src":"93:285:26","visibility":"public"},{"functionSelector":"922edb34","id":6601,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenByAstrologer","nameLocation":"393:20:26","nodeType":"FunctionDefinition","parameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"astrologer","nameLocation":"422:10:26","nodeType":"VariableDeclaration","scope":6601,"src":"414:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6594,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"413:20:26"},"returnParameters":{"id":6600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6601,"src":"457:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":6598,"nodeType":"UserDefinedTypeName","pathNode":{"id":6597,"name":"TokenInfo","nameLocations":["457:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":6593,"src":"457:9:26"},"referencedDeclaration":6593,"src":"457:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"456:18:26"},"scope":6632,"src":"384:91:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8d84289e","id":6609,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenByContract","nameLocation":"489:18:26","nodeType":"FunctionDefinition","parameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"tokenContract","nameLocation":"516:13:26","nodeType":"VariableDeclaration","scope":6609,"src":"508:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6602,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:23:26"},"returnParameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6609,"src":"554:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":6606,"nodeType":"UserDefinedTypeName","pathNode":{"id":6605,"name":"TokenInfo","nameLocations":["554:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":6593,"src":"554:9:26"},"referencedDeclaration":6593,"src":"554:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"553:18:26"},"scope":6632,"src":"480:92:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8c7a63ae","id":6617,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"586:12:26","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"tokenId","nameLocation":"607:7:26","nodeType":"VariableDeclaration","scope":6617,"src":"599:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6610,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"598:17:26"},"returnParameters":{"id":6616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6617,"src":"639:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":6614,"nodeType":"UserDefinedTypeName","pathNode":{"id":6613,"name":"TokenInfo","nameLocations":["639:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":6593,"src":"639:9:26"},"referencedDeclaration":6593,"src":"639:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$6593_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"638:18:26"},"scope":6632,"src":"577:80:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"21dd6760","id":6624,"implemented":false,"kind":"function","modifiers":[],"name":"astrologerToTokenId","nameLocation":"671:19:26","nodeType":"FunctionDefinition","parameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"astrologer","nameLocation":"699:10:26","nodeType":"VariableDeclaration","scope":6624,"src":"691:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6618,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"690:20:26"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6624,"src":"734:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6621,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:9:26"},"scope":6632,"src":"662:81:26","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"36203131","id":6631,"implemented":false,"kind":"function","modifiers":[],"name":"tokenContractToId","nameLocation":"757:17:26","nodeType":"FunctionDefinition","parameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"tokenContract","nameLocation":"783:13:26","nodeType":"VariableDeclaration","scope":6631,"src":"775:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6625,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"774:23:26"},"returnParameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6631,"src":"821:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6628,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:26"},"scope":6632,"src":"748:82:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6633,"src":"57:775:26","usedErrors":[]}],"src":"32:801:26"},"id":26},"contracts/interfaces/IAstrologerManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IAstrologerManager.sol","exportedSymbols":{"IAstrologerManager":[6715]},"id":6716,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6634,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IAstrologerManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6715,"linearizedBaseContracts":[6715],"name":"IAstrologerManager","nameLocation":"67:18:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IAstrologerManager.Astrologer","id":6663,"members":[{"constant":false,"id":6636,"mutability":"mutable","name":"id","nameLocation":"128:2:27","nodeType":"VariableDeclaration","scope":6663,"src":"120:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6635,"name":"uint256","nodeType":"ElementaryTypeName","src":"120:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6638,"mutability":"mutable","name":"wallet","nameLocation":"148:6:27","nodeType":"VariableDeclaration","scope":6663,"src":"140:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6637,"name":"address","nodeType":"ElementaryTypeName","src":"140:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6640,"mutability":"mutable","name":"name","nameLocation":"171:4:27","nodeType":"VariableDeclaration","scope":6663,"src":"164:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6639,"name":"string","nodeType":"ElementaryTypeName","src":"164:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6642,"mutability":"mutable","name":"description","nameLocation":"192:11:27","nodeType":"VariableDeclaration","scope":6663,"src":"185:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6641,"name":"string","nodeType":"ElementaryTypeName","src":"185:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6644,"mutability":"mutable","name":"specialty","nameLocation":"220:9:27","nodeType":"VariableDeclaration","scope":6663,"src":"213:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6643,"name":"string","nodeType":"ElementaryTypeName","src":"213:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6646,"mutability":"mutable","name":"experience","nameLocation":"247:10:27","nodeType":"VariableDeclaration","scope":6663,"src":"239:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6645,"name":"uint256","nodeType":"ElementaryTypeName","src":"239:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6648,"mutability":"mutable","name":"reputation","nameLocation":"275:10:27","nodeType":"VariableDeclaration","scope":6663,"src":"267:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6647,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6650,"mutability":"mutable","name":"totalPredictions","nameLocation":"303:16:27","nodeType":"VariableDeclaration","scope":6663,"src":"295:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"295:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6652,"mutability":"mutable","name":"accuratePredictions","nameLocation":"337:19:27","nodeType":"VariableDeclaration","scope":6663,"src":"329:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6651,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6654,"mutability":"mutable","name":"tokenContract","nameLocation":"374:13:27","nodeType":"VariableDeclaration","scope":6663,"src":"366:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6653,"name":"uint256","nodeType":"ElementaryTypeName","src":"366:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6656,"mutability":"mutable","name":"isVerified","nameLocation":"402:10:27","nodeType":"VariableDeclaration","scope":6663,"src":"397:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6655,"name":"bool","nodeType":"ElementaryTypeName","src":"397:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6658,"mutability":"mutable","name":"isActive","nameLocation":"427:8:27","nodeType":"VariableDeclaration","scope":6663,"src":"422:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6657,"name":"bool","nodeType":"ElementaryTypeName","src":"422:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6660,"mutability":"mutable","name":"registeredAt","nameLocation":"453:12:27","nodeType":"VariableDeclaration","scope":6663,"src":"445:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6662,"mutability":"mutable","name":"lastActive","nameLocation":"483:10:27","nodeType":"VariableDeclaration","scope":6663,"src":"475:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6661,"name":"uint256","nodeType":"ElementaryTypeName","src":"475:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Astrologer","nameLocation":"99:10:27","nodeType":"StructDefinition","scope":6715,"src":"92:408:27","visibility":"public"},{"functionSelector":"61cb82ba","id":6671,"implemented":false,"kind":"function","modifiers":[],"name":"getAstrologerByWallet","nameLocation":"515:21:27","nodeType":"FunctionDefinition","parameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"wallet","nameLocation":"545:6:27","nodeType":"VariableDeclaration","scope":6671,"src":"537:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6664,"name":"address","nodeType":"ElementaryTypeName","src":"537:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"536:16:27"},"returnParameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6671,"src":"576:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Astrologer_$6663_memory_ptr","typeString":"struct IAstrologerManager.Astrologer"},"typeName":{"id":6668,"nodeType":"UserDefinedTypeName","pathNode":{"id":6667,"name":"Astrologer","nameLocations":["576:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":6663,"src":"576:10:27"},"referencedDeclaration":6663,"src":"576:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Astrologer_$6663_storage_ptr","typeString":"struct IAstrologerManager.Astrologer"}},"visibility":"internal"}],"src":"575:19:27"},"scope":6715,"src":"506:89:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b56faf11","id":6679,"implemented":false,"kind":"function","modifiers":[],"name":"getAstrologer","nameLocation":"609:13:27","nodeType":"FunctionDefinition","parameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"astrologerId","nameLocation":"631:12:27","nodeType":"VariableDeclaration","scope":6679,"src":"623:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"622:22:27"},"returnParameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6679,"src":"668:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Astrologer_$6663_memory_ptr","typeString":"struct IAstrologerManager.Astrologer"},"typeName":{"id":6676,"nodeType":"UserDefinedTypeName","pathNode":{"id":6675,"name":"Astrologer","nameLocations":["668:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":6663,"src":"668:10:27"},"referencedDeclaration":6663,"src":"668:10:27","typeDescriptions":{"typeIdentifier":"t_struct$_Astrologer_$6663_storage_ptr","typeString":"struct IAstrologerManager.Astrologer"}},"visibility":"internal"}],"src":"667:19:27"},"scope":6715,"src":"600:87:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0675f763","id":6686,"implemented":false,"kind":"function","modifiers":[],"name":"updateReputation","nameLocation":"701:16:27","nodeType":"FunctionDefinition","parameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"astrologerId","nameLocation":"726:12:27","nodeType":"VariableDeclaration","scope":6686,"src":"718:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6680,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6683,"mutability":"mutable","name":"newReputation","nameLocation":"748:13:27","nodeType":"VariableDeclaration","scope":6686,"src":"740:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6682,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"717:45:27"},"returnParameters":{"id":6685,"nodeType":"ParameterList","parameters":[],"src":"771:0:27"},"scope":6715,"src":"692:80:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e47ef5a8","id":6693,"implemented":false,"kind":"function","modifiers":[],"name":"recordPredictionResult","nameLocation":"786:22:27","nodeType":"FunctionDefinition","parameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"mutability":"mutable","name":"astrologerId","nameLocation":"817:12:27","nodeType":"VariableDeclaration","scope":6693,"src":"809:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"809:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6690,"mutability":"mutable","name":"wasAccurate","nameLocation":"836:11:27","nodeType":"VariableDeclaration","scope":6693,"src":"831:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6689,"name":"bool","nodeType":"ElementaryTypeName","src":"831:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"808:40:27"},"returnParameters":{"id":6692,"nodeType":"ParameterList","parameters":[],"src":"857:0:27"},"scope":6715,"src":"777:81:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5273496a","id":6700,"implemented":false,"kind":"function","modifiers":[],"name":"setTokenContract","nameLocation":"872:16:27","nodeType":"FunctionDefinition","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"astrologerId","nameLocation":"897:12:27","nodeType":"VariableDeclaration","scope":6700,"src":"889:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6694,"name":"uint256","nodeType":"ElementaryTypeName","src":"889:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6697,"mutability":"mutable","name":"tokenContract","nameLocation":"919:13:27","nodeType":"VariableDeclaration","scope":6700,"src":"911:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6696,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"888:45:27"},"returnParameters":{"id":6699,"nodeType":"ParameterList","parameters":[],"src":"942:0:27"},"scope":6715,"src":"863:80:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"30a7d32a","id":6707,"implemented":false,"kind":"function","modifiers":[],"name":"isAstrologerVerified","nameLocation":"957:20:27","nodeType":"FunctionDefinition","parameters":{"id":6703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"wallet","nameLocation":"986:6:27","nodeType":"VariableDeclaration","scope":6707,"src":"978:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6701,"name":"address","nodeType":"ElementaryTypeName","src":"978:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"977:16:27"},"returnParameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6707,"src":"1017:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6704,"name":"bool","nodeType":"ElementaryTypeName","src":"1017:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1016:6:27"},"scope":6715,"src":"948:75:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"656d0c39","id":6714,"implemented":false,"kind":"function","modifiers":[],"name":"getAstrologerId","nameLocation":"1037:15:27","nodeType":"FunctionDefinition","parameters":{"id":6710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6709,"mutability":"mutable","name":"wallet","nameLocation":"1061:6:27","nodeType":"VariableDeclaration","scope":6714,"src":"1053:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6708,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1052:16:27"},"returnParameters":{"id":6713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6714,"src":"1092:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1091:9:27"},"scope":6715,"src":"1028:73:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6716,"src":"57:1046:27","usedErrors":[]}],"src":"32:1072:27"},"id":27},"contracts/interfaces/IBuyTokenContract.sol":{"ast":{"absolutePath":"contracts/interfaces/IBuyTokenContract.sol","exportedSymbols":{"IBuyTokenContract":[6755]},"id":6756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6717,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"IBuyTokenContract","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6755,"linearizedBaseContracts":[6755],"name":"IBuyTokenContract","nameLocation":"67:17:28","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cea9f4b5","id":6728,"implemented":false,"kind":"function","modifiers":[],"name":"registerToken","nameLocation":"100:13:28","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"_tokenContract","nameLocation":"131:14:28","nodeType":"VariableDeclaration","scope":6728,"src":"123:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6718,"name":"address","nodeType":"ElementaryTypeName","src":"123:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6721,"mutability":"mutable","name":"_astrologer","nameLocation":"163:11:28","nodeType":"VariableDeclaration","scope":6728,"src":"155:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6720,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6723,"mutability":"mutable","name":"_totalSupply","nameLocation":"192:12:28","nodeType":"VariableDeclaration","scope":6728,"src":"184:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6722,"name":"uint256","nodeType":"ElementaryTypeName","src":"184:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6725,"mutability":"mutable","name":"_basePrice","nameLocation":"222:10:28","nodeType":"VariableDeclaration","scope":6728,"src":"214:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6724,"name":"uint256","nodeType":"ElementaryTypeName","src":"214:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"113:125:28"},"returnParameters":{"id":6727,"nodeType":"ParameterList","parameters":[],"src":"247:0:28"},"scope":6755,"src":"91:157:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f6322a5f","id":6735,"implemented":false,"kind":"function","modifiers":[],"name":"updateCredibility","nameLocation":"267:17:28","nodeType":"FunctionDefinition","parameters":{"id":6733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"_tokenContract","nameLocation":"293:14:28","nodeType":"VariableDeclaration","scope":6735,"src":"285:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6729,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6732,"mutability":"mutable","name":"_credibilityMultiplier","nameLocation":"317:22:28","nodeType":"VariableDeclaration","scope":6735,"src":"309:30:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6731,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"284:56:28"},"returnParameters":{"id":6734,"nodeType":"ParameterList","parameters":[],"src":"349:0:28"},"scope":6755,"src":"258:92:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"84cc315b","id":6742,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentPrice","nameLocation":"364:15:28","nodeType":"FunctionDefinition","parameters":{"id":6738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6737,"mutability":"mutable","name":"_tokenContract","nameLocation":"388:14:28","nodeType":"VariableDeclaration","scope":6742,"src":"380:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6736,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:24:28"},"returnParameters":{"id":6741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6742,"src":"427:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"427:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"426:9:28"},"scope":6755,"src":"355:81:28","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ec8ac4d8","id":6747,"implemented":false,"kind":"function","modifiers":[],"name":"buyTokens","nameLocation":"450:9:28","nodeType":"FunctionDefinition","parameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"_tokenContract","nameLocation":"468:14:28","nodeType":"VariableDeclaration","scope":6747,"src":"460:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6743,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:24:28"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[],"src":"500:0:28"},"scope":6755,"src":"441:60:28","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c464fe65","id":6754,"implemented":false,"kind":"function","modifiers":[],"name":"sellTokens","nameLocation":"515:10:28","nodeType":"FunctionDefinition","parameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6749,"mutability":"mutable","name":"_tokenContract","nameLocation":"534:14:28","nodeType":"VariableDeclaration","scope":6754,"src":"526:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6748,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6751,"mutability":"mutable","name":"_tokenAmount","nameLocation":"558:12:28","nodeType":"VariableDeclaration","scope":6754,"src":"550:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"525:46:28"},"returnParameters":{"id":6753,"nodeType":"ParameterList","parameters":[],"src":"580:0:28"},"scope":6755,"src":"506:75:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6756,"src":"57:526:28","usedErrors":[]}],"src":"32:552:28"},"id":28}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."},"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":485,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._","kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable state-variable-assignment"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":485,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234610016576108b0908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146104b257508163095ea7b31461048857816318160ddd1461046957816323b872dd1461039d578163313ce56714610381578163395093511461031a57816370a08231146102e257816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6105d7565b6100c26105f2565b6001600160a01b0391821683526034865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086105d7565b6024359033610608565b5160018152f35b905082346101be57826003193601126101be576101346105d7565b918360243592338152603460205281812060018060a01b038616825260205220549082821061016d576020856101128585038733610778565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e55780519082603754600181811c908083169283156102d8575b60209384841081146102c5578388529081156102a95750600114610253575b505050829003601f01601f191682019267ffffffffffffffff841183851017610240575082918261023c92528261058e565b0390f35b634e487b7160e01b815260418552602490fd5b603787529192508591837f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b838510610295575050505083010185808061020a565b80548886018301529301928490820161027f565b60ff1916878501525050151560051b840101905085808061020a565b634e487b7160e01b895260228a52602489fd5b91607f16916101eb565b5050346100e55760203660031901126100e55760209181906001600160a01b0361030a6105d7565b1681526033845220549051908152f35b8284346101be57816003193601126101be576103346105d7565b338252603460209081528383206001600160a01b038316845290528282205460243581019290831061036e57602084610112858533610778565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e5576103b96105d7565b6103c16105f2565b6001600160a01b038216845260346020908152858520338652905292849020546044359392600182016103fd575b602086610112878787610608565b848210610426575091839161041b6020969561011295033383610778565b9193948193506103ef565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906035549051908152f35b5050346100e557806003193601126100e5576020906101126104a86105d7565b6024359033610778565b8490843461058a578260031936011261058a5782603654600181811c90808316928315610580575b60209384841081146102c5578388529081156102a9575060011461052a57505050829003601f01601f191682019267ffffffffffffffff841183851017610240575082918261023c92528261058e565b603687529192508591837f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b83851061056c575050505083010185808061020a565b805488860183015293019284908201610556565b91607f16916104da565b8280fd5b6020808252825181830181905290939260005b8281106105c357505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016105a1565b600435906001600160a01b03821682036105ed57565b600080fd5b602435906001600160a01b03821682036105ed57565b6001600160a01b0390811691821561072557169182156106d4576000828152603360205260408120549180831061068057604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561082957169182156107d95760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220792171e80ecb95be4a393ac5743b0bc18193a922c98275347198773b50f4f12664736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x8B0 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x4B2 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x488 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x469 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x39D JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x381 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x31A JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2E2 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C1 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x34 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x608 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1BE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x134 PUSH2 0x5D7 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x16D JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x778 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x37 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2D8 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C5 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x253 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x240 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23C SWAP3 MSTORE DUP3 PUSH2 0x58E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x37 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x42A7B7DD785CD69714A189DFFB3FD7D7174EDC9ECE837694CE50F7078F7C31AE JUMPDEST DUP4 DUP6 LT PUSH2 0x295 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x20A JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x20A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EB JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x30A PUSH2 0x5D7 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x33 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x334 PUSH2 0x5D7 JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 MSTORE SWAP1 MSTORE DUP3 DUP3 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD SWAP3 SWAP1 DUP4 LT PUSH2 0x36E JUMPI PUSH1 0x20 DUP5 PUSH2 0x112 DUP6 DUP6 CALLER PUSH2 0x778 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x3B9 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 MSTORE SWAP3 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 PUSH1 0x1 DUP3 ADD PUSH2 0x3FD JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x112 DUP8 DUP8 DUP8 PUSH2 0x608 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x426 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x41B PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x112 SWAP6 SUB CALLER DUP4 PUSH2 0x778 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x35 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x4A8 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x778 JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x58A JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x58A JUMPI DUP3 PUSH1 0x36 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x580 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C5 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x52A JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x240 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23C SWAP3 MSTORE DUP3 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x36 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x4A11F94E20A93C79F6EC743A1954EC4FC2C08429AE2122118BF234B2185C81B8 JUMPDEST DUP4 DUP6 LT PUSH2 0x56C JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x20A JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x556 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4DA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5C3 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5ED JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5ED JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x725 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x680 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x33 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x829 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x34 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x2171E80ECB95BE4A393AC5743B0BC18193A922C9827534719877 EXTCODESIZE POP DELEGATECALL CALL 0x26 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1611:11861:7:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1495,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4782":{"entryPoint":1522,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1422,"id":null,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":1912,"id":1342,"parameterSlots":3,"returnSlots":0},"fun_transfer":{"entryPoint":1544,"id":1168,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146104b257508163095ea7b31461048857816318160ddd1461046957816323b872dd1461039d578163313ce56714610381578163395093511461031a57816370a08231146102e257816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6105d7565b6100c26105f2565b6001600160a01b0391821683526034865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086105d7565b6024359033610608565b5160018152f35b905082346101be57826003193601126101be576101346105d7565b918360243592338152603460205281812060018060a01b038616825260205220549082821061016d576020856101128585038733610778565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e55780519082603754600181811c908083169283156102d8575b60209384841081146102c5578388529081156102a95750600114610253575b505050829003601f01601f191682019267ffffffffffffffff841183851017610240575082918261023c92528261058e565b0390f35b634e487b7160e01b815260418552602490fd5b603787529192508591837f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b838510610295575050505083010185808061020a565b80548886018301529301928490820161027f565b60ff1916878501525050151560051b840101905085808061020a565b634e487b7160e01b895260228a52602489fd5b91607f16916101eb565b5050346100e55760203660031901126100e55760209181906001600160a01b0361030a6105d7565b1681526033845220549051908152f35b8284346101be57816003193601126101be576103346105d7565b338252603460209081528383206001600160a01b038316845290528282205460243581019290831061036e57602084610112858533610778565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e5576103b96105d7565b6103c16105f2565b6001600160a01b038216845260346020908152858520338652905292849020546044359392600182016103fd575b602086610112878787610608565b848210610426575091839161041b6020969561011295033383610778565b9193948193506103ef565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906035549051908152f35b5050346100e557806003193601126100e5576020906101126104a86105d7565b6024359033610778565b8490843461058a578260031936011261058a5782603654600181811c90808316928315610580575b60209384841081146102c5578388529081156102a9575060011461052a57505050829003601f01601f191682019267ffffffffffffffff841183851017610240575082918261023c92528261058e565b603687529192508591837f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b83851061056c575050505083010185808061020a565b805488860183015293019284908201610556565b91607f16916104da565b8280fd5b6020808252825181830181905290939260005b8281106105c357505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016105a1565b600435906001600160a01b03821682036105ed57565b600080fd5b602435906001600160a01b03821682036105ed57565b6001600160a01b0390811691821561072557169182156106d4576000828152603360205260408120549180831061068057604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561082957169182156107d95760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220792171e80ecb95be4a393ac5743b0bc18193a922c98275347198773b50f4f12664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x4B2 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x488 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x469 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x39D JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x381 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x31A JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2E2 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C1 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x34 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x608 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1BE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x134 PUSH2 0x5D7 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x16D JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x778 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x37 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2D8 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C5 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x253 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x240 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23C SWAP3 MSTORE DUP3 PUSH2 0x58E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x37 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x42A7B7DD785CD69714A189DFFB3FD7D7174EDC9ECE837694CE50F7078F7C31AE JUMPDEST DUP4 DUP6 LT PUSH2 0x295 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x20A JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x20A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EB JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x30A PUSH2 0x5D7 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x33 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x334 PUSH2 0x5D7 JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 MSTORE SWAP1 MSTORE DUP3 DUP3 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD SWAP3 SWAP1 DUP4 LT PUSH2 0x36E JUMPI PUSH1 0x20 DUP5 PUSH2 0x112 DUP6 DUP6 CALLER PUSH2 0x778 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x3B9 PUSH2 0x5D7 JUMP JUMPDEST PUSH2 0x3C1 PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 MSTORE SWAP3 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 PUSH1 0x1 DUP3 ADD PUSH2 0x3FD JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x112 DUP8 DUP8 DUP8 PUSH2 0x608 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x426 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x41B PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x112 SWAP6 SUB CALLER DUP4 PUSH2 0x778 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x35 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x4A8 PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x778 JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x58A JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x58A JUMPI DUP3 PUSH1 0x36 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x580 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C5 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x52A JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x240 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23C SWAP3 MSTORE DUP3 PUSH2 0x58E JUMP JUMPDEST PUSH1 0x36 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x4A11F94E20A93C79F6EC743A1954EC4FC2C08429AE2122118BF234B2185C81B8 JUMPDEST DUP4 DUP6 LT PUSH2 0x56C JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x20A JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x556 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4DA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5C3 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5ED JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5ED JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x725 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x680 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x33 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x829 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x34 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x2171E80ECB95BE4A393AC5743B0BC18193A922C9827534719877 EXTCODESIZE POP DELEGATECALL CALL 0x26 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1611:11861:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1611:11861:7;;;;;4439:11;1611:11861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4231:6;1611:11861;;:::i;:::-;;;929:10:14;;4231:6:7;:::i;:::-;1611:11861;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;929:10:14;;1611:11861:7;;4439:11;1611:11861;;;;;;;;;;;;;;;;;;7129:35;;;;1611:11861;;;;7265:34;1611:11861;;;;929:10:14;7265:34:7;:::i;1611:11861::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;;;;;;;;;;;;;;;;;2794:7;1611:11861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;-1:-1:-1;;1611:11861:7;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;2794:7;1611:11861;;;;-1:-1:-1;1611:11861:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1611:11861:7;;;;;-1:-1:-1;;1611:11861:7;;;;;;;;-1:-1:-1;1611:11861:7;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1611:11861:7;;;;;;;;-1:-1:-1;;;;;1611:11861:7;;:::i;:::-;;;;3856:9;1611:11861;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;929:10:14;1611:11861:7;;4439:11;1611:11861;;;;;;;-1:-1:-1;;;;;1611:11861:7;;;;;;;;;;;;;;;;;-1:-1:-1;1611:11861:7;;;929:10:14;6358:38:7;929:10:14;;;6358:38:7;:::i;1611:11861::-;-1:-1:-1;;;1611:11861:7;;;;;;;;;;;;;;;;;;;;;;;;;3523:2;1611:11861;;;;;;;;;;;;-1:-1:-1;;1611:11861:7;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1611:11861:7;;;;4439:11;1611:11861;;;;;;;929:10:14;1611:11861:7;;;;;;;;;;;;;;11581:37;;11577:243;;1611:11861;;5761:6;;;;;;:::i;11577:243::-;11642:26;;;1611:11861;;;;;;11769:25;1611:11861;;;5761:6;1611:11861;;929:10:14;11769:25:7;;:::i;:::-;11577:243;;;;;;;;1611:11861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3679:12;1611:11861;;;;;;;;;;;;;;;;;;;;;;;4943:6;1611:11861;;:::i;:::-;;;929:10:14;;4943:6:7;:::i;1611:11861::-;;;;;;;;;;;;;;;;2581:5;1611:11861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;-1:-1:-1;;1611:11861:7;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2581:5;1611:11861;;;;-1:-1:-1;1611:11861:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1611:11861:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1611:11861:7;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1611:11861:7;;;;;;:::o;7793:788::-;-1:-1:-1;;;;;1611:11861:7;;;;7889:18;;1611:11861;;;7967:16;;;1611:11861;;7905:1;1611:11861;;;8105:9;1611:11861;;;;;;8138:21;;;;1611:11861;;;;;8500:26;1611:11861;;;;;8105:9;1611:11861;;;;;;;;;;;;;;;;;;;;;;8500:26;7793:788::o;1611:11861::-;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;10794:340;-1:-1:-1;;;;;1611:11861:7;;;;10895:19;;1611:11861;;;10973:21;;;1611:11861;;;11095:32;1611:11861;;10912:1;1611:11861;11044:11;1611:11861;;;10912:1;1611:11861;;10912:1;1611:11861;;;;;10912:1;1611:11861;;;;;;;11095:32;10794:340::o;1611:11861::-;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;1611:11861:7;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"444800","executionCost":"487","totalCost":"445287"},"external":{"allowance(address,address)":"2788","approve(address,uint256)":"24387","balanceOf(address)":"2563","decimals()":"262","decreaseAllowance(address,uint256)":"26828","increaseAllowance(address,uint256)":"26763","name()":"infinite","symbol()":"infinite","totalSupply()":"2324","transfer(address,uint256)":"50966","transferFrom(address,address,uint256)":"77391"},"internal":{"__ERC20_init(string memory,string memory)":"infinite","__ERC20_init_unchained(string memory,string memory)":"infinite","_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":820,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":826,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":828,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":830,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":832,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1412,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\\n    function __ERC20Burnable_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":820,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":826,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":828,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":830,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":832,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1412,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":1554,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol":{"SafeERC20Upgradeable":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122031e68ab1984adc4505889fb8c53c07a8dceb8cabb76b06700c2e5c03ed7dabb964736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xE6 DUP11 0xB1 SWAP9 0x4A 0xDC GASLIMIT SDIV DUP9 SWAP16 0xB8 0xC5 EXTCODECOPY SMOD 0xA8 0xDC 0xEB DUP13 0xAB 0xB7 PUSH12 0x6700C2E5C03ED7DABB96473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"734:6366:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122031e68ab1984adc4505889fb8c53c07a8dceb8cabb76b06700c2e5c03ed7dabb964736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xE6 DUP11 0xB1 SWAP9 0x4A 0xDC GASLIMIT SDIV DUP9 SWAP16 0xB8 0xC5 EXTCODECOPY SMOD 0xA8 0xDC 0xEB DUP13 0xAB 0xB7 PUSH12 0x6700C2E5C03ED7DABB96473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"734:6366:12:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20Upgradeable,bytes memory)":"infinite","forceApprove(contract IERC20Upgradeable,address,uint256)":"infinite","safeApprove(contract IERC20Upgradeable,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)":"infinite","safePermit(contract IERC20PermitUpgradeable,address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","safeTransfer(contract IERC20Upgradeable,address,uint256)":"infinite","safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b1e3be4c5b3b88c3c0cf80d5016514a1a8cec2d1065e8003ff831c61f49c62db64736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE3 0xBE 0x4C JUMPDEST EXTCODESIZE DUP9 0xC3 0xC0 0xCF DUP1 0xD5 ADD PUSH6 0x14A1A8CEC2D1 MOD 0x5E DUP1 SUB SELFDESTRUCT DUP4 SHR PUSH2 0xF49C PUSH3 0xDB6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:9180:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b1e3be4c5b3b88c3c0cf80d5016514a1a8cec2d1065e8003ff831c61f49c62db64736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE3 0xBE 0x4C JUMPDEST EXTCODESIZE DUP9 0xC3 0xC0 0xCF DUP1 0xD5 ADD PUSH6 0x14A1A8CEC2D1 MOD 0x5E DUP1 SUB SELFDESTRUCT DUP4 SHR PUSH2 0xF49C PUSH3 0xDB6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:9180:13:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"devdoc":{"author":"Matt Condon (@shrugs)","details":"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`","kind":"dev","methods":{},"title":"Counters","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fc37d900abddb73c46c379b2a2664b71775298d45c4841409270186ba604ffda64736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC CALLDATACOPY 0xD9 STOP 0xAB 0xDD 0xB7 EXTCODECOPY CHAINID 0xC3 PUSH26 0xB2A2664B71775298D45C4841409270186BA604FFDA64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"424:982:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fc37d900abddb73c46c379b2a2664b71775298d45c4841409270186ba604ffda64736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC CALLDATACOPY 0xD9 STOP 0xAB 0xDD 0xB7 EXTCODECOPY CHAINID 0xC3 PUSH26 0xB2A2664B71775298D45C4841409270186BA604FFDA64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"424:982:15:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"current(struct CountersUpgradeable.Counter storage pointer)":"infinite","decrement(struct CountersUpgradeable.Counter storage pointer)":"infinite","increment(struct CountersUpgradeable.Counter storage pointer)":"infinite","reset(struct CountersUpgradeable.Counter storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary CountersUpgradeable {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d5316a15c9aedf1238b60ad56577f4a69cfc811a6b1f01726800648dfd510cb364736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 BALANCE PUSH11 0x15C9AEDF1238B60AD56577 DELEGATECALL 0xA6 SWAP13 0xFC DUP2 BYTE PUSH12 0x1F01726800648DFD510CB364 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"1420:2696:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d5316a15c9aedf1238b60ad56577f4a69cfc811a6b1f01726800648dfd510cb364736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 BALANCE PUSH11 0x15C9AEDF1238B60AD56577 DELEGATECALL 0xA6 SWAP13 0xFC DUP2 BYTE PUSH12 0x1F01726800648DFD510CB364 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"1420:2696:16:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2556,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[],"devdoc":{"details":"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220308ff9e969d0900e21e9be3c6afb247a10fc6d614ffd387f089fea94ae8d8cb364736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS DUP16 0xF9 0xE9 PUSH10 0xD0900E21E9BE3C6AFB24 PUSH27 0x10FC6D614FFD387F089FEA94AE8D8CB364736F6C63430008110033 ","sourceMap":"755:3275:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220308ff9e969d0900e21e9be3c6afb247a10fc6d614ffd387f089fea94ae8d8cb364736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS DUP16 0xF9 0xE9 PUSH10 0xD0900E21E9BE3C6AFB24 PUSH27 0x10FC6D614FFD387F089FEA94AE8D8CB364736F6C63430008110033 ","sourceMap":"755:3275:18:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"clone(address)":"infinite","cloneDeterministic(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create(0, 0x09, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create2(0, 0x09, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x38), deployer)\\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\\n            mstore(add(ptr, 0x14), implementation)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\\n            mstore(add(ptr, 0x58), salt)\\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\\n            predicted := keccak256(add(ptr, 0x43), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt\\n    ) internal view returns (address predicted) {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AstroToken.sol":{"AstroToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"uint256","name":"totalSupply","type":"uint256"}],"name":"AstroTokenInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"astrologer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"buyContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"address","name":"_buyContract","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isInitialized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_buyContract","type":"address"}],"name":"setBuyContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b604051611d2790816100e28239608051818181610b3201528181610c320152610fed0152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461137757508063095ea7b31461135157806318160ddd1461133357806323b872dd14611275578063313ce567146112595780633659cfe614610fc8578063392e53cd14610fa15780633950935114610f5057806340c10f1914610ebf57806342966c6814610ea25780634f1ef28614610be357806352d1902d14610b1f57806370a0823114610ae55780637103ef0d14610aa2578063715018a614610a4557806379cc6790146109b45780637e77c503146104405780638da5cb5b1461041757806395d89b41146103435780639b7e307014610319578063a457c2d714610272578063a9059cbb14610241578063dd62ed3e146101f0578063de866db1146101c65763f2fde38b1461013257600080fd5b346101c15760203660031901126101c15761014b611448565b610153611523565b6001600160a01b0381161561016d5761016b9061157b565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101c15760003660031901126101c15761012e546040516001600160a01b039091168152602090f35b346101c15760403660031901126101c157610209611448565b61021161145e565b9060018060a01b038091166000526034602052604060002091166000526020526020604060002054604051908152f35b346101c15760403660031901126101c15761026761025d611448565b6024359033611773565b602060405160018152f35b346101c15760403660031901126101c15761028b611448565b60243590336000526034602052604060002060018060a01b038216600052602052604060002054918083106102c657610267920390336118e3565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b346101c15760003660031901126101c15761012d546040516001600160a01b039091168152602090f35b346101c15760003660031901126101c157604051600060375461036581611716565b808452906001908181169081156103f057506001146103a7575b6103a38461038f81860382611490565b604051918291602083526020830190611408565b0390f35b603760009081529250600080516020611cd28339815191525b8284106103d857505050810160200161038f8261037f565b805460208587018101919091529093019281016103c0565b60ff191660208087019190915292151560051b8501909201925061038f915083905061037f565b346101c15760003660031901126101c1576097546040516001600160a01b039091168152602090f35b346101c15760a03660031901126101c15760043567ffffffffffffffff81116101c157610471903690600401611505565b60243567ffffffffffffffff81116101c157610491903690600401611505565b6001600160a01b039060643580831690036101c1576084359282841684036101c1576000549260ff8460081c1615938480956109a7575b8015610990575b156109345760ff19811660011760005584610922575b5060ff61012e5460a01c166108e75761050e60ff60005460081c1661050981611b8d565b611b8d565b815167ffffffffffffffff81116107ea5761052a603654611716565b601f811161087e575b50806020601f821160011461080b57600091610800575b508160011b916000199060031b1c1916176036555b82519467ffffffffffffffff86116107ea5761057c603754611716565b601f811161077d575b50602095601f81116001146106e457908161067f9493927f66ade9796bf49316a9f90919f336baf2ab35f33f927c08e14e934bccdbddef7c9697986000916106d9575b508160011b916000199060031b1c1916176037555b6105fb60ff60005460081c166105f281611b8d565b61050981611b8d565b6106043361157b565b61061560ff60005460081c16611b8d565b816bffffffffffffffffffffffff60a01b9161012d826064351684825416179055169061012e54161761012e5561068d6044359561065587606435611bed565b61012e805460ff60a01b1916600160a01b1790556040516060808252909586959091860190611408565b908482036020860152611408565b94604083015260643516930390a26106a157005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b9050870151896105c8565b6037600052600080516020611cd28339815191526000601f198316905b8181106107655750916001917f66ade9796bf49316a9f90919f336baf2ab35f33f927c08e14e934bccdbddef7c9798998261067f989796951061074c575b5050811b016037556105dd565b89015160001960f88460031b161c19169055898061073f565b878a015183556020998a019960019093019201610701565b6037600052601f870160051c600080516020611cd28339815191520190602088106107d4575b601f0160051c600080516020611cd283398151915201905b8181106107c85750610585565b600081556001016107bb565b600080516020611cd283398151915291506107a3565b634e487b7160e01b600052604160045260246000fd5b90508301518761054a565b91506036600052600080516020611c928339815191526000925b601f1983168410610866576001935082601f1981161061084d575b5050811b0160365561055f565b85015160001960f88460031b161c191690558780610840565b85810151825560209384019360019092019101610825565b6036600052601f820160051c600080516020611c9283398151915201602083106108d2575b601f820160051c600080516020611c928339815191520181106108c65750610533565b600081556001016108a3565b50600080516020611c928339815191526108a3565b60405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b61ffff191661010117600055856104e5565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156104cf5750600160ff8216146104cf565b50600160ff8216106104c8565b346101c15760403660031901126101c1576109cd611448565b609754336001600160a01b0391821614908115610a36575b50156109f85761016b90602435906119e5565b60405162461bcd60e51b81526020600482015260166024820152752737ba1030baba3437b934bd32b2103a3790313ab93760511b6044820152606490fd5b905061012e54163314826109e5565b346101c15760003660031901126101c157610a5e611523565b609780546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101c15760203660031901126101c157610abb611448565b610ac3611523565b61012e80546001600160a01b0319166001600160a01b03909216919091179055005b346101c15760203660031901126101c1576001600160a01b03610b06611448565b1660005260336020526020604060002054604051908152f35b346101c15760003660031901126101c1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610b78576020604051600080516020611cb28339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b60403660031901126101c157610bf7611448565b60243567ffffffffffffffff81116101c157366023820112156101c157610c289036906024816004013591016114ce565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169190610c61308414156115c4565b610c7e600080516020611cb2833981519152938285541614611625565b610c86611523565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610cbc5750505061016b90611686565b8316604051926352d1902d60e01b84526020938481600481865afa60009181610e73575b50610d415760405162461bcd60e51b815260048101869052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b93929303610e1c57610d5284611686565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610e14575b610d8857005b61016b9260008060405194610d9c86611474565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d15610e0b573d610dee816114b2565b90610dfc6040519283611490565b8152600081943d92013e611af0565b60609250611af0565b506001610d82565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508581813d8311610e9b575b610e8b8183611490565b810103126101c157519087610ce0565b503d610e81565b346101c15760203660031901126101c15761016b600435336119e5565b346101c15760403660031901126101c157610ed8611448565b609754336001600160a01b0391821614908115610f41575b5015610f035761016b9060243590611bed565b60405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b6044820152606490fd5b905061012e5416331482610ef0565b346101c15760403660031901126101c157610267610f6c611448565b336000526034602052604060002060018060a01b038216600052602052610f9a602435604060002054611750565b90336118e3565b346101c15760003660031901126101c157602060ff61012e5460a01c166040519015158152f35b346101c1576020806003193601126101c157610fe2611448565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831661101a308214156115c4565b611037600080516020611cb2833981519152918583541614611625565b61103f611523565b604051908282019482861067ffffffffffffffff8711176107ea57856040526000835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143541660001461109c575050505061016b9150611686565b8492939416906040516352d1902d60e01b81528581600481865afa6000918161122a575b506111215760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b949394036111d35761113282611686565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28251158015906111cb575b61116857005b60008061016b956040519561117c87611474565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15610e0b573d610dee816114b2565b506000611162565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d8311611252575b6112428183611490565b810103126101c1575190886110c0565b503d611238565b346101c15760003660031901126101c157602060405160128152f35b346101c15760603660031901126101c15761128e611448565b61129661145e565b6044359060018060a01b03831660005260346020526040600020336000526020526040600020549260001984036112d2575b6102679350611773565b8284106112ee576112e983610267950333836118e3565b6112c8565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b346101c15760003660031901126101c1576020603554604051908152f35b346101c15760403660031901126101c15761026761136d611448565b60243590336118e3565b346101c15760003660031901126101c157600060365461139681611716565b808452906001908181169081156103f057506001146113bf576103a38461038f81860382611490565b603660009081529250600080516020611c928339815191525b8284106113f057505050810160200161038f8261037f565b805460208587018101919091529093019281016113d8565b919082519283825260005b848110611434575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611413565b600435906001600160a01b03821682036101c157565b602435906001600160a01b03821682036101c157565b6060810190811067ffffffffffffffff8211176107ea57604052565b90601f8019910116810190811067ffffffffffffffff8211176107ea57604052565b67ffffffffffffffff81116107ea57601f01601f191660200190565b9291926114da826114b2565b916114e86040519384611490565b8294818452818301116101c1578281602093846000960137010152565b9080601f830112156101c157816020611520933591016114ce565b90565b6097546001600160a01b0316330361153757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b609780546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156115cb57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561162c57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156116bb57600080516020611cb283398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b90600182811c92168015611746575b602083101461173057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611725565b9190820180921161175d57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215611890571691821561183f57600082815260336020526040812054918083106117eb57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561199457169182156119445760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b03168015611aa15780600052603360205260406000205491808310611a51576020817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92600095858752603384520360408620558060355403603555604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b91929015611b525750815115611b04575090565b3b15611b0d5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611b655750805190602001fd5b60405162461bcd60e51b815260206004820152908190611b89906024830190611408565b0390fd5b15611b9457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6001600160a01b0316908115611c4c577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082611c2f600094603554611750565b6035558484526033825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fdfe4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31aea26469706673582212205716e2a05c16866d5ef35d35a64c06d9a341a601e30b6dbd816770237d956daa64736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D27 SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xB32 ADD MSTORE DUP2 DUP2 PUSH2 0xC32 ADD MSTORE PUSH2 0xFED ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x1377 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1351 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1333 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1275 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1259 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xFC8 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0xFA1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xF50 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xEBF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0xEA2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xBE3 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xB1F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0x7103EF0D EQ PUSH2 0xAA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA45 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x9B4 JUMPI DUP1 PUSH4 0x7E77C503 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x9B7E3070 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDE866DB1 EQ PUSH2 0x1C6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x14B PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x16D JUMPI PUSH2 0x16B SWAP1 PUSH2 0x157B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x12E SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x209 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x145E JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x267 PUSH2 0x25D PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1773 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x28B PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x2C6 JUMPI PUSH2 0x267 SWAP3 SUB SWAP1 CALLER PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x12D SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x37 SLOAD PUSH2 0x365 DUP2 PUSH2 0x1716 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3A7 JUMPI JUMPDEST PUSH2 0x3A3 DUP5 PUSH2 0x38F DUP2 DUP7 SUB DUP3 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1408 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x37 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP5 LT PUSH2 0x3D8 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x38F DUP3 PUSH2 0x37F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x38F SWAP2 POP DUP4 SWAP1 POP PUSH2 0x37F JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x471 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x491 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x64 CALLDATALOAD DUP1 DUP4 AND SWAP1 SUB PUSH2 0x1C1 JUMPI PUSH1 0x84 CALLDATALOAD SWAP3 DUP3 DUP5 AND DUP5 SUB PUSH2 0x1C1 JUMPI PUSH1 0x0 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0x9A7 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x990 JUMPI JUMPDEST ISZERO PUSH2 0x934 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP5 PUSH2 0x922 JUMPI JUMPDEST POP PUSH1 0xFF PUSH2 0x12E SLOAD PUSH1 0xA0 SHR AND PUSH2 0x8E7 JUMPI PUSH2 0x50E PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x509 DUP2 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1B8D JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7EA JUMPI PUSH2 0x52A PUSH1 0x36 SLOAD PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x87E JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x80B JUMPI PUSH1 0x0 SWAP2 PUSH2 0x800 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x36 SSTORE JUMPDEST DUP3 MLOAD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT PUSH2 0x7EA JUMPI PUSH2 0x57C PUSH1 0x37 SLOAD PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x77D JUMPI JUMPDEST POP PUSH1 0x20 SWAP6 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH2 0x6E4 JUMPI SWAP1 DUP2 PUSH2 0x67F SWAP5 SWAP4 SWAP3 PUSH32 0x66ADE9796BF49316A9F90919F336BAF2AB35F33F927C08E14E934BCCDBDDEF7C SWAP7 SWAP8 SWAP9 PUSH1 0x0 SWAP2 PUSH2 0x6D9 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x37 SSTORE JUMPDEST PUSH2 0x5FB PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x5F2 DUP2 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x509 DUP2 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x604 CALLER PUSH2 0x157B JUMP JUMPDEST PUSH2 0x615 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1B8D JUMP JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 PUSH2 0x12D DUP3 PUSH1 0x64 CALLDATALOAD AND DUP5 DUP3 SLOAD AND OR SWAP1 SSTORE AND SWAP1 PUSH2 0x12E SLOAD AND OR PUSH2 0x12E SSTORE PUSH2 0x68D PUSH1 0x44 CALLDATALOAD SWAP6 PUSH2 0x655 DUP8 PUSH1 0x64 CALLDATALOAD PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x12E DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE SWAP1 SWAP6 DUP7 SWAP6 SWAP1 SWAP2 DUP7 ADD SWAP1 PUSH2 0x1408 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1408 JUMP JUMPDEST SWAP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD AND SWAP4 SUB SWAP1 LOG2 PUSH2 0x6A1 JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP10 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x1F NOT DUP4 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x765 JUMPI POP SWAP2 PUSH1 0x1 SWAP2 PUSH32 0x66ADE9796BF49316A9F90919F336BAF2AB35F33F927C08E14E934BCCDBDDEF7C SWAP8 SWAP9 SWAP10 DUP3 PUSH2 0x67F SWAP9 SWAP8 SWAP7 SWAP6 LT PUSH2 0x74C JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x37 SSTORE PUSH2 0x5DD JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 PUSH2 0x73F JUMP JUMPDEST DUP8 DUP11 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP10 DUP11 ADD SWAP10 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x1F DUP8 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP9 LT PUSH2 0x7D4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x7C8 JUMPI POP PUSH2 0x585 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x7A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP4 ADD MLOAD DUP8 PUSH2 0x54A JUMP JUMPDEST SWAP2 POP PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SWAP3 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH2 0x866 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x84D JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x36 SSTORE PUSH2 0x55F JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 PUSH2 0x840 JUMP JUMPDEST DUP6 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x825 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP4 LT PUSH2 0x8D2 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0x8C6 JUMPI POP PUSH2 0x533 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8A3 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP6 PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x4CF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x4C8 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x9CD PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x97 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0xA36 JUMPI JUMPDEST POP ISZERO PUSH2 0x9F8 JUMPI PUSH2 0x16B SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1030BABA3437B934BD32B2103A3790313AB937 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x12E SLOAD AND CALLER EQ DUP3 PUSH2 0x9E5 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xA5E PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xABB PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xAC3 PUSH2 0x1523 JUMP JUMPDEST PUSH2 0x12E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB06 PUSH2 0x1448 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xB78 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CB2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xBF7 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C1 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1C1 JUMPI PUSH2 0xC28 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 SWAP1 PUSH2 0xC61 ADDRESS DUP5 EQ ISZERO PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0xC7E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CB2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x1625 JUMP JUMPDEST PUSH2 0xC86 PUSH2 0x1523 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCBC JUMPI POP POP POP PUSH2 0x16B SWAP1 PUSH2 0x1686 JUMP JUMPDEST DUP4 AND PUSH1 0x40 MLOAD SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xE73 JUMPI JUMPDEST POP PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP3 SWAP4 SUB PUSH2 0xE1C JUMPI PUSH2 0xD52 DUP5 PUSH2 0x1686 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE14 JUMPI JUMPDEST PUSH2 0xD88 JUMPI STOP JUMPDEST PUSH2 0x16B SWAP3 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0xD9C DUP7 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP6 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP5 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0xE0B JUMPI RETURNDATASIZE PUSH2 0xDEE DUP2 PUSH2 0x14B2 JUMP JUMPDEST SWAP1 PUSH2 0xDFC PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1490 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1AF0 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE9B JUMPI JUMPDEST PUSH2 0xE8B DUP2 DUP4 PUSH2 0x1490 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C1 JUMPI MLOAD SWAP1 DUP8 PUSH2 0xCE0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE81 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x16B PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x19E5 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xED8 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x97 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0xF41 JUMPI JUMPDEST POP ISZERO PUSH2 0xF03 JUMPI PUSH2 0x16B SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x12E SLOAD AND CALLER EQ DUP3 PUSH2 0xEF0 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x267 PUSH2 0xF6C PUSH2 0x1448 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xF9A PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1750 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x18E3 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x12E SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xFE2 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH32 0x0 DUP4 AND PUSH2 0x101A ADDRESS DUP3 EQ ISZERO PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1037 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CB2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP6 DUP4 SLOAD AND EQ PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x103F PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 ADD SWAP5 DUP3 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x7EA JUMPI DUP6 PUSH1 0x40 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x109C JUMPI POP POP POP POP PUSH2 0x16B SWAP2 POP PUSH2 0x1686 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x122A JUMPI JUMPDEST POP PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP4 SWAP5 SUB PUSH2 0x11D3 JUMPI PUSH2 0x1132 DUP3 PUSH2 0x1686 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11CB JUMPI JUMPDEST PUSH2 0x1168 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16B SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x117C DUP8 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0xE0B JUMPI RETURNDATASIZE PUSH2 0xDEE DUP2 PUSH2 0x14B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1252 JUMPI JUMPDEST PUSH2 0x1242 DUP2 DUP4 PUSH2 0x1490 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C1 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x10C0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1238 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x128E PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x1296 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0x12D2 JUMPI JUMPDEST PUSH2 0x267 SWAP4 POP PUSH2 0x1773 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x12EE JUMPI PUSH2 0x12E9 DUP4 PUSH2 0x267 SWAP6 SUB CALLER DUP4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x267 PUSH2 0x136D PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x18E3 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x0 PUSH1 0x36 SLOAD PUSH2 0x1396 DUP2 PUSH2 0x1716 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13BF JUMPI PUSH2 0x3A3 DUP5 PUSH2 0x38F DUP2 DUP7 SUB DUP3 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP5 LT PUSH2 0x13F0 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x38F DUP3 PUSH2 0x37F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x13D8 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1434 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7EA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7EA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7EA JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x14DA DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 PUSH2 0x14E8 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1490 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1C1 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1520 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1537 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x15CB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x162C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x16BB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CB2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1746 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1730 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1725 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x175D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1890 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x183F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x17EB JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x33 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1994 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1944 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x34 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1AA1 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1A51 JUMPI PUSH1 0x20 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x0 SWAP6 DUP6 DUP8 MSTORE PUSH1 0x33 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x35 SLOAD SUB PUSH1 0x35 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1B52 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1B04 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1B0D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1B65 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1B89 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1408 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B94 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1C4C JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x1C2F PUSH1 0x0 SWAP5 PUSH1 0x35 SLOAD PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x35 SSTORE DUP5 DUP5 MSTORE PUSH1 0x33 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID 0x4A GT 0xF9 0x4E KECCAK256 0xA9 EXTCODECOPY PUSH26 0xF6EC743A1954EC4FC2C08429AE2122118BF234B2185C81B83608 SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC42A7B7DD785CD69714A189 0xDF 0xFB EXTCODEHASH 0xD7 0xD7 OR 0x4E 0xDC SWAP15 0xCE DUP4 PUSH23 0x94CE50F7078F7C31AEA26469706673582212205716E2A0 0x5C AND DUP7 PUSH14 0x5EF35D35A64C06D9A341A601E30B PUSH14 0xBD816770237D956DAA64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"465:1805:20:-:0;;;;;;;1332:4:6;1324:13;;6007::5;465:1805:20;;;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;465:1805:20;;;;;;;;1324:13:6;465:1805:20;;;;;;;;;;;;;;;;6074:139:5;465:1805:20;;;;;;6007:13:5;465:1805:20;6174:28:5;465:1805:20;;;;;;6174:28:5;6074:139;;;465:1805:20;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5192,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_18730":{"entryPoint":5214,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":5326,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":5381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5128,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":5298,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":5968,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5910,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5264,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_26276":{"entryPoint":5236,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":6371,"id":1342,"parameterSlots":3,"returnSlots":0},"fun_burn":{"entryPoint":6629,"id":1297,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":5411,"id":68,"parameterSlots":0,"returnSlots":0},"fun_mint":{"entryPoint":7149,"id":1225,"parameterSlots":2,"returnSlots":0},"fun_setImplementation":{"entryPoint":5766,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transfer":{"entryPoint":6003,"id":1168,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership":{"entryPoint":5499,"id":125,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":6896,"id":2277,"parameterSlots":4,"returnSlots":1},"require_helper_stringliteral_36e1":{"entryPoint":5572,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":5669,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":7053,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":2866},{"length":32,"start":3122},{"length":32,"start":4077}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461137757508063095ea7b31461135157806318160ddd1461133357806323b872dd14611275578063313ce567146112595780633659cfe614610fc8578063392e53cd14610fa15780633950935114610f5057806340c10f1914610ebf57806342966c6814610ea25780634f1ef28614610be357806352d1902d14610b1f57806370a0823114610ae55780637103ef0d14610aa2578063715018a614610a4557806379cc6790146109b45780637e77c503146104405780638da5cb5b1461041757806395d89b41146103435780639b7e307014610319578063a457c2d714610272578063a9059cbb14610241578063dd62ed3e146101f0578063de866db1146101c65763f2fde38b1461013257600080fd5b346101c15760203660031901126101c15761014b611448565b610153611523565b6001600160a01b0381161561016d5761016b9061157b565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101c15760003660031901126101c15761012e546040516001600160a01b039091168152602090f35b346101c15760403660031901126101c157610209611448565b61021161145e565b9060018060a01b038091166000526034602052604060002091166000526020526020604060002054604051908152f35b346101c15760403660031901126101c15761026761025d611448565b6024359033611773565b602060405160018152f35b346101c15760403660031901126101c15761028b611448565b60243590336000526034602052604060002060018060a01b038216600052602052604060002054918083106102c657610267920390336118e3565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b346101c15760003660031901126101c15761012d546040516001600160a01b039091168152602090f35b346101c15760003660031901126101c157604051600060375461036581611716565b808452906001908181169081156103f057506001146103a7575b6103a38461038f81860382611490565b604051918291602083526020830190611408565b0390f35b603760009081529250600080516020611cd28339815191525b8284106103d857505050810160200161038f8261037f565b805460208587018101919091529093019281016103c0565b60ff191660208087019190915292151560051b8501909201925061038f915083905061037f565b346101c15760003660031901126101c1576097546040516001600160a01b039091168152602090f35b346101c15760a03660031901126101c15760043567ffffffffffffffff81116101c157610471903690600401611505565b60243567ffffffffffffffff81116101c157610491903690600401611505565b6001600160a01b039060643580831690036101c1576084359282841684036101c1576000549260ff8460081c1615938480956109a7575b8015610990575b156109345760ff19811660011760005584610922575b5060ff61012e5460a01c166108e75761050e60ff60005460081c1661050981611b8d565b611b8d565b815167ffffffffffffffff81116107ea5761052a603654611716565b601f811161087e575b50806020601f821160011461080b57600091610800575b508160011b916000199060031b1c1916176036555b82519467ffffffffffffffff86116107ea5761057c603754611716565b601f811161077d575b50602095601f81116001146106e457908161067f9493927f66ade9796bf49316a9f90919f336baf2ab35f33f927c08e14e934bccdbddef7c9697986000916106d9575b508160011b916000199060031b1c1916176037555b6105fb60ff60005460081c166105f281611b8d565b61050981611b8d565b6106043361157b565b61061560ff60005460081c16611b8d565b816bffffffffffffffffffffffff60a01b9161012d826064351684825416179055169061012e54161761012e5561068d6044359561065587606435611bed565b61012e805460ff60a01b1916600160a01b1790556040516060808252909586959091860190611408565b908482036020860152611408565b94604083015260643516930390a26106a157005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b9050870151896105c8565b6037600052600080516020611cd28339815191526000601f198316905b8181106107655750916001917f66ade9796bf49316a9f90919f336baf2ab35f33f927c08e14e934bccdbddef7c9798998261067f989796951061074c575b5050811b016037556105dd565b89015160001960f88460031b161c19169055898061073f565b878a015183556020998a019960019093019201610701565b6037600052601f870160051c600080516020611cd28339815191520190602088106107d4575b601f0160051c600080516020611cd283398151915201905b8181106107c85750610585565b600081556001016107bb565b600080516020611cd283398151915291506107a3565b634e487b7160e01b600052604160045260246000fd5b90508301518761054a565b91506036600052600080516020611c928339815191526000925b601f1983168410610866576001935082601f1981161061084d575b5050811b0160365561055f565b85015160001960f88460031b161c191690558780610840565b85810151825560209384019360019092019101610825565b6036600052601f820160051c600080516020611c9283398151915201602083106108d2575b601f820160051c600080516020611c928339815191520181106108c65750610533565b600081556001016108a3565b50600080516020611c928339815191526108a3565b60405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b61ffff191661010117600055856104e5565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156104cf5750600160ff8216146104cf565b50600160ff8216106104c8565b346101c15760403660031901126101c1576109cd611448565b609754336001600160a01b0391821614908115610a36575b50156109f85761016b90602435906119e5565b60405162461bcd60e51b81526020600482015260166024820152752737ba1030baba3437b934bd32b2103a3790313ab93760511b6044820152606490fd5b905061012e54163314826109e5565b346101c15760003660031901126101c157610a5e611523565b609780546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101c15760203660031901126101c157610abb611448565b610ac3611523565b61012e80546001600160a01b0319166001600160a01b03909216919091179055005b346101c15760203660031901126101c1576001600160a01b03610b06611448565b1660005260336020526020604060002054604051908152f35b346101c15760003660031901126101c1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610b78576020604051600080516020611cb28339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b60403660031901126101c157610bf7611448565b60243567ffffffffffffffff81116101c157366023820112156101c157610c289036906024816004013591016114ce565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169190610c61308414156115c4565b610c7e600080516020611cb2833981519152938285541614611625565b610c86611523565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610cbc5750505061016b90611686565b8316604051926352d1902d60e01b84526020938481600481865afa60009181610e73575b50610d415760405162461bcd60e51b815260048101869052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b93929303610e1c57610d5284611686565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610e14575b610d8857005b61016b9260008060405194610d9c86611474565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d15610e0b573d610dee816114b2565b90610dfc6040519283611490565b8152600081943d92013e611af0565b60609250611af0565b506001610d82565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508581813d8311610e9b575b610e8b8183611490565b810103126101c157519087610ce0565b503d610e81565b346101c15760203660031901126101c15761016b600435336119e5565b346101c15760403660031901126101c157610ed8611448565b609754336001600160a01b0391821614908115610f41575b5015610f035761016b9060243590611bed565b60405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b6044820152606490fd5b905061012e5416331482610ef0565b346101c15760403660031901126101c157610267610f6c611448565b336000526034602052604060002060018060a01b038216600052602052610f9a602435604060002054611750565b90336118e3565b346101c15760003660031901126101c157602060ff61012e5460a01c166040519015158152f35b346101c1576020806003193601126101c157610fe2611448565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831661101a308214156115c4565b611037600080516020611cb2833981519152918583541614611625565b61103f611523565b604051908282019482861067ffffffffffffffff8711176107ea57856040526000835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143541660001461109c575050505061016b9150611686565b8492939416906040516352d1902d60e01b81528581600481865afa6000918161122a575b506111215760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b949394036111d35761113282611686565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28251158015906111cb575b61116857005b60008061016b956040519561117c87611474565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15610e0b573d610dee816114b2565b506000611162565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d8311611252575b6112428183611490565b810103126101c1575190886110c0565b503d611238565b346101c15760003660031901126101c157602060405160128152f35b346101c15760603660031901126101c15761128e611448565b61129661145e565b6044359060018060a01b03831660005260346020526040600020336000526020526040600020549260001984036112d2575b6102679350611773565b8284106112ee576112e983610267950333836118e3565b6112c8565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b346101c15760003660031901126101c1576020603554604051908152f35b346101c15760403660031901126101c15761026761136d611448565b60243590336118e3565b346101c15760003660031901126101c157600060365461139681611716565b808452906001908181169081156103f057506001146113bf576103a38461038f81860382611490565b603660009081529250600080516020611c928339815191525b8284106113f057505050810160200161038f8261037f565b805460208587018101919091529093019281016113d8565b919082519283825260005b848110611434575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611413565b600435906001600160a01b03821682036101c157565b602435906001600160a01b03821682036101c157565b6060810190811067ffffffffffffffff8211176107ea57604052565b90601f8019910116810190811067ffffffffffffffff8211176107ea57604052565b67ffffffffffffffff81116107ea57601f01601f191660200190565b9291926114da826114b2565b916114e86040519384611490565b8294818452818301116101c1578281602093846000960137010152565b9080601f830112156101c157816020611520933591016114ce565b90565b6097546001600160a01b0316330361153757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b609780546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156115cb57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561162c57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156116bb57600080516020611cb283398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b90600182811c92168015611746575b602083101461173057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611725565b9190820180921161175d57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215611890571691821561183f57600082815260336020526040812054918083106117eb57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561199457169182156119445760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b03168015611aa15780600052603360205260406000205491808310611a51576020817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92600095858752603384520360408620558060355403603555604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b91929015611b525750815115611b04575090565b3b15611b0d5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611b655750805190602001fd5b60405162461bcd60e51b815260206004820152908190611b89906024830190611408565b0390fd5b15611b9457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6001600160a01b0316908115611c4c577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082611c2f600094603554611750565b6035558484526033825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fdfe4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31aea26469706673582212205716e2a05c16866d5ef35d35a64c06d9a341a601e30b6dbd816770237d956daa64736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x1377 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1351 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1333 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1275 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1259 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xFC8 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0xFA1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xF50 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xEBF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0xEA2 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xBE3 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xB1F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0x7103EF0D EQ PUSH2 0xAA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA45 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x9B4 JUMPI DUP1 PUSH4 0x7E77C503 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x9B7E3070 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDE866DB1 EQ PUSH2 0x1C6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x14B PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x16D JUMPI PUSH2 0x16B SWAP1 PUSH2 0x157B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x12E SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x209 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x145E JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x267 PUSH2 0x25D PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1773 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x28B PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x2C6 JUMPI PUSH2 0x267 SWAP3 SUB SWAP1 CALLER PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x12D SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x37 SLOAD PUSH2 0x365 DUP2 PUSH2 0x1716 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3A7 JUMPI JUMPDEST PUSH2 0x3A3 DUP5 PUSH2 0x38F DUP2 DUP7 SUB DUP3 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1408 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x37 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP5 LT PUSH2 0x3D8 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x38F DUP3 PUSH2 0x37F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x38F SWAP2 POP DUP4 SWAP1 POP PUSH2 0x37F JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x97 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x471 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C1 JUMPI PUSH2 0x491 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x64 CALLDATALOAD DUP1 DUP4 AND SWAP1 SUB PUSH2 0x1C1 JUMPI PUSH1 0x84 CALLDATALOAD SWAP3 DUP3 DUP5 AND DUP5 SUB PUSH2 0x1C1 JUMPI PUSH1 0x0 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0x9A7 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x990 JUMPI JUMPDEST ISZERO PUSH2 0x934 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP5 PUSH2 0x922 JUMPI JUMPDEST POP PUSH1 0xFF PUSH2 0x12E SLOAD PUSH1 0xA0 SHR AND PUSH2 0x8E7 JUMPI PUSH2 0x50E PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x509 DUP2 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1B8D JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7EA JUMPI PUSH2 0x52A PUSH1 0x36 SLOAD PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x87E JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x80B JUMPI PUSH1 0x0 SWAP2 PUSH2 0x800 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x36 SSTORE JUMPDEST DUP3 MLOAD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT PUSH2 0x7EA JUMPI PUSH2 0x57C PUSH1 0x37 SLOAD PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x77D JUMPI JUMPDEST POP PUSH1 0x20 SWAP6 PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH2 0x6E4 JUMPI SWAP1 DUP2 PUSH2 0x67F SWAP5 SWAP4 SWAP3 PUSH32 0x66ADE9796BF49316A9F90919F336BAF2AB35F33F927C08E14E934BCCDBDDEF7C SWAP7 SWAP8 SWAP9 PUSH1 0x0 SWAP2 PUSH2 0x6D9 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x37 SSTORE JUMPDEST PUSH2 0x5FB PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x5F2 DUP2 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x509 DUP2 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x604 CALLER PUSH2 0x157B JUMP JUMPDEST PUSH2 0x615 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x1B8D JUMP JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 PUSH2 0x12D DUP3 PUSH1 0x64 CALLDATALOAD AND DUP5 DUP3 SLOAD AND OR SWAP1 SSTORE AND SWAP1 PUSH2 0x12E SLOAD AND OR PUSH2 0x12E SSTORE PUSH2 0x68D PUSH1 0x44 CALLDATALOAD SWAP6 PUSH2 0x655 DUP8 PUSH1 0x64 CALLDATALOAD PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x12E DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE SWAP1 SWAP6 DUP7 SWAP6 SWAP1 SWAP2 DUP7 ADD SWAP1 PUSH2 0x1408 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1408 JUMP JUMPDEST SWAP5 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD AND SWAP4 SUB SWAP1 LOG2 PUSH2 0x6A1 JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP10 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH1 0x1F NOT DUP4 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x765 JUMPI POP SWAP2 PUSH1 0x1 SWAP2 PUSH32 0x66ADE9796BF49316A9F90919F336BAF2AB35F33F927C08E14E934BCCDBDDEF7C SWAP8 SWAP9 SWAP10 DUP3 PUSH2 0x67F SWAP9 SWAP8 SWAP7 SWAP6 LT PUSH2 0x74C JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x37 SSTORE PUSH2 0x5DD JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 PUSH2 0x73F JUMP JUMPDEST DUP8 DUP11 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP10 DUP11 ADD SWAP10 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x1F DUP8 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP9 LT PUSH2 0x7D4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x7C8 JUMPI POP PUSH2 0x585 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CD2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x7A3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP4 ADD MLOAD DUP8 PUSH2 0x54A JUMP JUMPDEST SWAP2 POP PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SWAP3 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH2 0x866 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x84D JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x36 SSTORE PUSH2 0x55F JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 PUSH2 0x840 JUMP JUMPDEST DUP6 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x825 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP4 LT PUSH2 0x8D2 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0x8C6 JUMPI POP PUSH2 0x533 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8A3 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP6 PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x4CF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x4C8 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x9CD PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x97 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0xA36 JUMPI JUMPDEST POP ISZERO PUSH2 0x9F8 JUMPI PUSH2 0x16B SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x19E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1030BABA3437B934BD32B2103A3790313AB937 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x12E SLOAD AND CALLER EQ DUP3 PUSH2 0x9E5 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xA5E PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xABB PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xAC3 PUSH2 0x1523 JUMP JUMPDEST PUSH2 0x12E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB06 PUSH2 0x1448 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xB78 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CB2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xBF7 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1C1 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1C1 JUMPI PUSH2 0xC28 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 SWAP1 PUSH2 0xC61 ADDRESS DUP5 EQ ISZERO PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0xC7E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CB2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x1625 JUMP JUMPDEST PUSH2 0xC86 PUSH2 0x1523 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCBC JUMPI POP POP POP PUSH2 0x16B SWAP1 PUSH2 0x1686 JUMP JUMPDEST DUP4 AND PUSH1 0x40 MLOAD SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xE73 JUMPI JUMPDEST POP PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP3 SWAP4 SUB PUSH2 0xE1C JUMPI PUSH2 0xD52 DUP5 PUSH2 0x1686 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE14 JUMPI JUMPDEST PUSH2 0xD88 JUMPI STOP JUMPDEST PUSH2 0x16B SWAP3 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0xD9C DUP7 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP6 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP5 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0xE0B JUMPI RETURNDATASIZE PUSH2 0xDEE DUP2 PUSH2 0x14B2 JUMP JUMPDEST SWAP1 PUSH2 0xDFC PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1490 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1AF0 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE9B JUMPI JUMPDEST PUSH2 0xE8B DUP2 DUP4 PUSH2 0x1490 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C1 JUMPI MLOAD SWAP1 DUP8 PUSH2 0xCE0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE81 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x16B PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x19E5 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xED8 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x97 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0xF41 JUMPI JUMPDEST POP ISZERO PUSH2 0xF03 JUMPI PUSH2 0x16B SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x12E SLOAD AND CALLER EQ DUP3 PUSH2 0xEF0 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x267 PUSH2 0xF6C PUSH2 0x1448 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xF9A PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1750 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x18E3 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x12E SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0xFE2 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH32 0x0 DUP4 AND PUSH2 0x101A ADDRESS DUP3 EQ ISZERO PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1037 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CB2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP6 DUP4 SLOAD AND EQ PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x103F PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 ADD SWAP5 DUP3 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x7EA JUMPI DUP6 PUSH1 0x40 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x109C JUMPI POP POP POP POP PUSH2 0x16B SWAP2 POP PUSH2 0x1686 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x122A JUMPI JUMPDEST POP PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP4 SWAP5 SUB PUSH2 0x11D3 JUMPI PUSH2 0x1132 DUP3 PUSH2 0x1686 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11CB JUMPI JUMPDEST PUSH2 0x1168 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16B SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x117C DUP8 PUSH2 0x1474 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0xE0B JUMPI RETURNDATASIZE PUSH2 0xDEE DUP2 PUSH2 0x14B2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1252 JUMPI JUMPDEST PUSH2 0x1242 DUP2 DUP4 PUSH2 0x1490 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C1 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x10C0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1238 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x128E PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x1296 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0x12D2 JUMPI JUMPDEST PUSH2 0x267 SWAP4 POP PUSH2 0x1773 JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x12EE JUMPI PUSH2 0x12E9 DUP4 PUSH2 0x267 SWAP6 SUB CALLER DUP4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x20 PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH2 0x267 PUSH2 0x136D PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x18E3 JUMP JUMPDEST CALLVALUE PUSH2 0x1C1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C1 JUMPI PUSH1 0x0 PUSH1 0x36 SLOAD PUSH2 0x1396 DUP2 PUSH2 0x1716 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13BF JUMPI PUSH2 0x3A3 DUP5 PUSH2 0x38F DUP2 DUP7 SUB DUP3 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C92 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP5 LT PUSH2 0x13F0 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x38F DUP3 PUSH2 0x37F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x13D8 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1434 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C1 JUMPI JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7EA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7EA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7EA JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x14DA DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 PUSH2 0x14E8 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1490 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1C1 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1C1 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1520 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x14CE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1537 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x15CB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x162C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x16BB JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CB2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1746 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1730 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1725 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x175D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1890 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x183F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x17EB JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x33 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1994 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1944 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x34 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1AA1 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1A51 JUMPI PUSH1 0x20 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x0 SWAP6 DUP6 DUP8 MSTORE PUSH1 0x33 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x35 SLOAD SUB PUSH1 0x35 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1B52 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1B04 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1B0D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1B65 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1B89 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1408 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B94 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1C4C JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x1C2F PUSH1 0x0 SWAP5 PUSH1 0x35 SLOAD PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x35 SSTORE DUP5 DUP5 MSTORE PUSH1 0x33 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID 0x4A GT 0xF9 0x4E KECCAK256 0xA9 EXTCODECOPY PUSH26 0xF6EC743A1954EC4FC2C08429AE2122118BF234B2185C81B83608 SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC42A7B7DD785CD69714A189 0xDF 0xFB EXTCODEHASH 0xD7 0xD7 OR 0x4E 0xDC SWAP15 0xCE DUP4 PUSH23 0x94CE50F7078F7C31AEA26469706673582212205716E2A0 0x5C AND DUP7 PUSH14 0x5EF35D35A64C06D9A341A601E30B PUSH14 0xBD816770237D956DAA64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"465:1805:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;465:1805:20;;2402:22:0;465:1805:20;;2496:8:0;;;:::i;:::-;465:1805:20;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;646:26;465:1805;;;-1:-1:-1;;;;;465:1805:20;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;4439:11:7;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;4231:6:7;465:1805:20;;:::i;:::-;;;929:10:14;;4231:6:7;:::i;:::-;465:1805:20;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;;:::i;:::-;;;929:10:14;;465:1805:20;;4439:11:7;465:1805:20;;;;;;;;;;;;;;;;;;;;7129:35:7;;;;465:1805:20;;7265:34:7;465:1805:20;;929:10:14;;7265:34:7;:::i;465:1805:20:-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;615:25;465:1805;;;-1:-1:-1;;;;;465:1805:20;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;;;2794:7:7;465:1805:20;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;2794:7:7;465:1805:20;;;;;-1:-1:-1;;;;;;;;;;;;465:1805:20;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:1805:20;;-1:-1:-1;465:1805:20;;-1:-1:-1;465:1805:20;;;;;;;;-1:-1:-1;;465:1805:20;;;;1513:6:0;465:1805:20;;;-1:-1:-1;;;;;465:1805:20;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:14:5;3347:34;;;;;;465:1805:20;3346:108:5;;;;465:1805:20;;;;-1:-1:-1;;465:1805:20;;;;;;;3562:65:5;;465:1805:20;;;1188:13;465:1805;;;;;;5366:69:5;465:1805:20;;;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;465:1805:20;;;;;;;;2383:13:7;465:1805:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;11601:17:7;;;465:1805:20;;;;;;;2383:13:7;465:1805:20;;;;;;;;;;;2406:17:7;465:1805:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1600:64;465:1805;;;;;;;;;;;;11601:17:7;;;465:1805:20;;;;;;;2406:17:7;465:1805:20;;5366:69:5;465:1805:20;;;;;;5366:69:5;;;:::i;:::-;;;;:::i;:::-;1195:12:0;929:10:14;1195:12:0;:::i;:::-;5366:69:5;465:1805:20;;;;;;5366:69:5;:::i;:::-;465:1805:20;;;;1383:24;;465:1805;;;;;;;;;;;;;1188:13;465:1805;;;1188:13;465:1805;;;;;1524:12;465:1805;;;1524:12;:::i;:::-;1188:13;465:1805;;-1:-1:-1;;;;465:1805:20;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;1600:64;;;;3647:99:5;;465:1805:20;3647:99:5;465:1805:20;;;;;;;3721:14:5;465:1805:20;;;;;;3721:14:5;465:1805:20;;;;;;;;;;;2406:17:7;465:1805:20;;-1:-1:-1;;;;;;;;;;;465:1805:20;;;;;;;;;;;;;;;;1600:64;465:1805;;;;;;;;;;;;;;;;;;2406:17:7;465:1805:20;;;;;;;11601:17:7;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:17:7;465:1805:20;;;;;;;-1:-1:-1;;;;;;;;;;;465:1805:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;465:1805:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;465:1805:20;-1:-1:-1;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;2383:13:7;465:1805:20;;-1:-1:-1;;;;;;;;;;;465:1805:20;;;-1:-1:-1;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;2383:13:7;465:1805:20;;;;;;;11601:17:7;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2383:13:7;465:1805:20;;;;;;;-1:-1:-1;;;;;;;;;;;465:1805:20;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;465:1805:20;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;3562:65:5;-1:-1:-1;;465:1805:20;;;;;3562:65:5;;;465:1805:20;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;3346:108:5;3426:4;;1713:19:13;:23;3387:66:5;;3346:108;3387:66;465:1805:20;;;;;3436:17:5;3346:108;;3347:34;465:1805:20;;;;;3365:16:5;3347:34;;465:1805:20;;;;;;-1:-1:-1;;465:1805:20;;;;;;:::i;:::-;1513:6:0;465:1805:20;1948:10;-1:-1:-1;;;;;465:1805:20;;;1948:21;;:50;;;;465:1805;;;;;2050:6;465:1805;;;2050:6;;:::i;465:1805::-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;1948:50;465:1805;;1987:11;465:1805;;1948:10;1973:25;1948:50;;;465:1805;;;;;;-1:-1:-1;;465:1805:20;;;;1303:62:0;;:::i;:::-;2758:6;465:1805:20;;-1:-1:-1;;;;;;465:1805:20;;;;;;;-1:-1:-1;;;;;465:1805:20;2806:40:0;465:1805:20;;2806:40:0;465:1805:20;;;;;;;-1:-1:-1;;465:1805:20;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;2145:26:20;465:1805;;-1:-1:-1;;;;;;465:1805:20;-1:-1:-1;;;;;465:1805:20;;;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;-1:-1:-1;;;;;465:1805:20;;:::i;:::-;;;;3856:9:7;465:1805:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;2333:6:6;-1:-1:-1;;;;;465:1805:20;2324:4:6;2316:23;465:1805:20;;;;;-1:-1:-1;;;;;;;;;;;465:1805:20;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;465:1805:20;;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;465:1805:20;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;971:66:3;;465:1805:20;;;;;3330:17:3;;;;;;:::i;3232:526::-;465:1805:20;;;;971:66:3;;;;3383:63;;;;;;465:1805:20;3383:63:3;;;;465:1805:20;;3383:63:3;;;3232:526;-1:-1:-1;3379:302:3;;465:1805:20;;-1:-1:-1;;;3610:56:3;;465:1805:20;3610:56:3;;971:66;;;;465:1805:20;971:66:3;;465:1805:20;971:66:3;465:1805:20;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;971:66;;2171:17;;;:::i;:::-;2204:27;465:1805:20;2204:27:3;;465:1805:20;;2523:15:3;;;:28;;;3379:302;2519:123;;465:1805:20;2519:123:3;7318:69:13;465:1805:20;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;7276:25:13;;;;;;;;;465:1805:20;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;7318:69:13;:::i;465:1805:20:-;;;-1:-1:-1;7318:69:13;:::i;2523:28:3:-;;465:1805:20;2523:28:3;;971:66;465:1805:20;;-1:-1:-1;;;971:66:3;;465:1805:20;971:66:3;;;;;;465:1805:20;971:66:3;;465:1805:20;971:66:3;465:1805:20;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;465:1805:20;;;;;;-1:-1:-1;;465:1805:20;;;;923:6:9;465:1805:20;;929:10:14;923:6:9;:::i;465:1805:20:-;;;;;;-1:-1:-1;;465:1805:20;;;;;;:::i;:::-;1513:6:0;465:1805:20;1746:10;-1:-1:-1;;;;;465:1805:20;;;1746:21;;:50;;;;465:1805;;;;;1843:6;465:1805;;;1843:6;;:::i;465:1805::-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;1746:50;465:1805;;1785:11;465:1805;;1746:10;1771:25;1746:50;;;465:1805;;;;;;-1:-1:-1;;465:1805:20;;;;6358:38:7;465:1805:20;;:::i;:::-;929:10:14;465:1805:20;;4439:11:7;465:1805:20;;;;;;;;;;;;;;;;6358:38:7;465:1805:20;;;;;;6358:38:7;:::i;:::-;929:10:14;;6358:38:7;:::i;465:1805:20:-;;;;;;-1:-1:-1;;465:1805:20;;;;;;678:25;465:1805;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;465:1805:20;1898:6:6;465:1805:20;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;465:1805:20;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;971:66:3;;465:1805:20;3232:526:3;465:1805:20;;;3330:17:3;;;;;;;;:::i;3232:526::-;465:1805:20;;;;;;;;971:66:3;;;3383:63;;;;465:1805:20;3383:63:3;;;;465:1805:20;;3383:63:3;;;3232:526;-1:-1:-1;3379:302:3;;465:1805:20;;-1:-1:-1;;;3610:56:3;;465:1805:20;3610:56:3;;971:66;;;;;;;465:1805:20;971:66:3;465:1805:20;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;971:66;;2171:17;;;:::i;:::-;2204:27;465:1805:20;2204:27:3;;465:1805:20;;2523:15:3;;;:28;;;3379:302;2519:123;;465:1805:20;2519:123:3;465:1805:20;;7318:69:13;465:1805:20;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;7276:25:13;;;;;;465:1805:20;;;;;;;;:::i;2523:28:3:-;;465:1805:20;2523:28:3;;971:66;465:1805:20;;-1:-1:-1;;;971:66:3;;465:1805:20;971:66:3;;;;;;;;;465:1805:20;971:66:3;465:1805:20;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;465:1805:20;;;;;;-1:-1:-1;;465:1805:20;;;;;;;3523:2:7;465:1805:20;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;4439:11:7;465:1805:20;;;;;929:10:14;465:1805:20;;;;;;;;11601:17:7;;;11581:37;;11577:243;;465:1805:20;5761:6:7;;;;:::i;11577:243::-;11642:26;;;465:1805:20;;11769:25:7;465:1805:20;5761:6:7;465:1805:20;;929:10:14;11769:25:7;;:::i;:::-;11577:243;;465:1805:20;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;;3679:12:7;465:1805:20;;;;;;;;;;;;;-1:-1:-1;;465:1805:20;;;;4943:6:7;465:1805:20;;:::i;:::-;;;929:10:14;;4943:6:7;:::i;465:1805:20:-;;;;;;-1:-1:-1;;465:1805:20;;;;;2581:5:7;465:1805:20;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2581:5:7;465:1805:20;;;;;-1:-1:-1;;;;;;;;;;;;465:1805:20;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:1805:20;;;;;;;;;-1:-1:-1;465:1805:20;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;465:1805:20;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;465:1805:20;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;465:1805:20;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;465:1805:20;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;1599:130:0:-;1513:6;465:1805:20;-1:-1:-1;;;;;465:1805:20;929:10:14;1662:23:0;465:1805:20;;1599:130:0:o;465:1805:20:-;;;;;;;;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;465:1805:20;;-1:-1:-1;;;;;465:1805:20;;;-1:-1:-1;;;;;;465:1805:20;;;;;;;;;;2806:40:0;-1:-1:-1;;2806:40:0;2666:187::o;465:1805:20:-;;;;:::o;:::-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;1699:281:3;1713:19:13;;:23;465:1805:20;;-1:-1:-1;;;;;;;;;;;465:1805:20;;-1:-1:-1;;;;;;465:1805:20;-1:-1:-1;;;;;465:1805:20;;;;;;;;;1699:281:3:o;465:1805:20:-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7793:788:7;-1:-1:-1;;;;;465:1805:20;;;;7889:18:7;;465:1805:20;;;7967:16:7;;;465:1805:20;;7905:1:7;465:1805:20;;;8105:9:7;465:1805:20;;;;;;8138:21:7;;;;465:1805:20;;;;;8500:26:7;465:1805:20;;;;;8105:9:7;465:1805:20;;;;;;;;;;;;;;;;;;;;;;8500:26:7;7793:788::o;465:1805:20:-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;10794:340:7;-1:-1:-1;;;;;465:1805:20;;;;10895:19:7;;465:1805:20;;;10973:21:7;;;465:1805:20;;;11095:32:7;465:1805:20;;10912:1:7;465:1805:20;11044:11:7;465:1805:20;;;10912:1:7;465:1805:20;;10912:1:7;465:1805:20;;;;;10912:1:7;465:1805:20;;;;;;;11095:32:7;10794:340::o;465:1805:20:-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;9712:659:7;-1:-1:-1;;;;;465:1805:20;9795:21:7;;465:1805:20;;;9814:1:7;465:1805:20;9950:9:7;465:1805:20;;;9814:1:7;465:1805:20;;9986:24:7;;;;465:1805:20;;;;10268:37:7;465:1805:20;9814:1:7;465:1805:20;;;;9950:9:7;465:1805:20;;;;;;;;10220:22:7;465:1805:20;;10220:22:7;465:1805:20;;;;;;10268:37:7;9712:659::o;465:1805:20:-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;7682:628:13;;;;7886:418;;;465:1805:20;;;7917:22:13;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;465:1805:20;;8212:17:13;:::o;465:1805:20:-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;;;;7886:418:13;465:1805:20;;;;-1:-1:-1;8991:21:13;:17;;9163:142;;;;;;;8987:379;465:1805:20;;-1:-1:-1;;;9335:20:13;;465:1805:20;9335:20:13;;;465:1805:20;;;;;;;;;;;:::i;:::-;9335:20:13;;;465:1805:20;;;;:::o;:::-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;465:1805:20;;;;;;;8857:535:7;-1:-1:-1;;;;;465:1805:20;;8940:21:7;;465:1805:20;;9289:37:7;465:1805:20;;9068:22:7;8959:1;465:1805:20;9068:22:7;465:1805:20;9068:22:7;:::i;:::-;;465:1805:20;;;;9236:9:7;465:1805:20;;;;;;;;;;;;;;;;9289:37:7;8857:535::o;465:1805:20:-;;;-1:-1:-1;;;465:1805:20;;;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1492600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"3041","approve(address,uint256)":"24368","astrologer()":"2700","balanceOf(address)":"2673","burn(uint256)":"50765","burnFrom(address,uint256)":"55278","buyContract()":"2788","decimals()":"243","decreaseAllowance(address,uint256)":"27066","increaseAllowance(address,uint256)":"26804","initialize(string,string,uint256,address,address)":"infinite","isInitialized()":"2408","mint(address,uint256)":"55094","name()":"infinite","owner()":"2656","proxiableUUID()":"infinite","renounceOwnership()":"28371","setBuyContract(address)":"26919","symbol()":"infinite","totalSupply()":"2302","transfer(address,uint256)":"51211","transferFrom(address,address,uint256)":"77324","transferOwnership(address)":"28740","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","astrologer()":"9b7e3070","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","buyContract()":"de866db1","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","initialize(string,string,uint256,address,address)":"7e77c503","isInitialized()":"392e53cd","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","setBuyContract(address)":"7103ef0d","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"AstroTokenInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astrologer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyContract\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyContract\",\"type\":\"address\"}],\"name\":\"setBuyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AstroToken.sol\":\"AstroToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\\n    function __ERC20Burnable_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/AstroToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\ncontract AstroToken is \\n    Initializable, \\n    ERC20Upgradeable, \\n    ERC20BurnableUpgradeable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    address public astrologer;\\n    address public buyContract;\\n    bool public isInitialized;\\n    \\n    event AstroTokenInitialized(\\n        address indexed astrologer,\\n        string name,\\n        string symbol,\\n        uint256 totalSupply\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _totalSupply,\\n        address _astrologer,\\n        address _buyContract\\n    ) public initializer {\\n        require(!isInitialized, \\\"Already initialized\\\");\\n        \\n        __ERC20_init(_name, _symbol);\\n        __ERC20Burnable_init();\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologer = _astrologer;\\n        buyContract = _buyContract;\\n        \\n        // Mint total supply to astrologer\\n        _mint(_astrologer, _totalSupply);\\n        \\n        isInitialized = true;\\n        \\n        emit AstroTokenInitialized(_astrologer, _name, _symbol, _totalSupply);\\n    }\\n\\n    function mint(address to, uint256 amount) external {\\n        require(msg.sender == owner() || msg.sender == buyContract, \\\"Not authorized to mint\\\");\\n        _mint(to, amount);\\n    }\\n\\n    function burnFrom(address account, uint256 amount) public override {\\n        require(msg.sender == owner() || msg.sender == buyContract, \\\"Not authorized to burn\\\");\\n        _burn(account, amount);\\n    }\\n\\n    function setBuyContract(address _buyContract) external onlyOwner {\\n        buyContract = _buyContract;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0xa6c063b2d755749a9463670f43bc6062d6ca2f8b31b717e161dac5134f2ce13c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"contracts/AstroToken.sol:AstroToken","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"contracts/AstroToken.sol:AstroToken","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"contracts/AstroToken.sol:AstroToken","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":820,"contract":"contracts/AstroToken.sol:AstroToken","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":826,"contract":"contracts/AstroToken.sol:AstroToken","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":828,"contract":"contracts/AstroToken.sol:AstroToken","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":830,"contract":"contracts/AstroToken.sol:AstroToken","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":832,"contract":"contracts/AstroToken.sol:AstroToken","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1412,"contract":"contracts/AstroToken.sol:AstroToken","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":1554,"contract":"contracts/AstroToken.sol:AstroToken","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/AstroToken.sol:AstroToken","label":"_owner","offset":0,"slot":"151","type":"t_address"},{"astId":130,"contract":"contracts/AstroToken.sol:AstroToken","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":485,"contract":"contracts/AstroToken.sol:AstroToken","label":"__gap","offset":0,"slot":"201","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"contracts/AstroToken.sol:AstroToken","label":"__gap","offset":0,"slot":"251","type":"t_array(t_uint256)50_storage"},{"astId":2782,"contract":"contracts/AstroToken.sol:AstroToken","label":"astrologer","offset":0,"slot":"301","type":"t_address"},{"astId":2784,"contract":"contracts/AstroToken.sol:AstroToken","label":"buyContract","offset":0,"slot":"302","type":"t_address"},{"astId":2786,"contract":"contracts/AstroToken.sol:AstroToken","label":"isInitialized","offset":20,"slot":"302","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AstroTokenFactory.sol":{"AstroTokenFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_astroTokenImplementation","type":"address"},{"internalType":"address","name":"_buyTokenContractImplementation","type":"address"},{"internalType":"address","name":"_astrologerManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenContract","type":"address"},{"indexed":true,"internalType":"address","name":"buyContract","type":"address"},{"indexed":true,"internalType":"address","name":"astrologer","type":"address"}],"name":"TokenDeployed","type":"event"},{"inputs":[],"name":"astroTokenImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"astrologerManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyTokenContractImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"uint256","name":"_initialPrice","type":"uint256"},{"internalType":"address","name":"_astrologer","type":"address"}],"name":"deployTokenPair","outputs":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reputationScorer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"}],"name":"setAstrologerManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astroTokenImplementation","type":"address"},{"internalType":"address","name":"_buyTokenContractImplementation","type":"address"}],"name":"setImplementations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_reputationScorer","type":"address"}],"name":"setReputationScorer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":254,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346100e357601f61094238819003918201601f19168301916001600160401b038311848410176100e8578084926060946040528339810103126100e357610047816100fe565b61005f6040610058602085016100fe565b93016100fe565b600080546001600160a01b03198082163390811784556040519691956001600160a01b0395948694859391908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a31685600154161760015516836002541617600255168160035416176003556004541660045561082f90816101138239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e35756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816307d4efe3146106055750806332e1d0ec1461034757806334416f631461031e57806344cda485146102de5780636fd31a41146102b5578063715018a61461025b57806373c84d211461023457806385bff341146101d35780638da5cb5b146101ab578063e9725c21146101665763f2fde38b1461009c57600080fd5b34610162576020366003190112610162576100b56106b7565b906100be6106cd565b6001600160a01b03918216928315610110575050600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b8382346101a75760203660031901126101a7576101816106b7565b6101896106cd565b81546001600160a01b0319166001600160a01b039190911617905580f35b5080fd5b5050346101a757816003193601126101a757905490516001600160a01b039091168152602090f35b5050346101a757366003190112610231576101ec6106b7565b6024356001600160a01b03818116929183900361022c5761020b6106cd565b6001600160601b0360a01b9116816001541617600155600254161760025580f35b600080fd5b80fd5b50346101625782600319360112610162575490516001600160a01b03909116815260209150f35b83346102315780600319360112610231576102746106cd565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101a757816003193601126101a75760035490516001600160a01b039091168152602090f35b8334610231576020366003190112610231576102f86106b7565b6103006106cd565b60018060a01b03166001600160601b0360a01b600354161760035580f35b5050346101a757816003193601126101a75760015490516001600160a01b039091168152602090f35b508290346101a75760031960a0368201126101625767ffffffffffffffff82358181116106015761037b9036908501610654565b92602491823590811161054c576103959036908301610654565b6001600160a01b039460843586811694926044359290918690036105e657876103c18160015416610765565b1696873b156105fd578a51637e77c50360e01b815260a087820152928a9284928392610403926103f59060a4860190610725565b918483030189850152610725565b8560448301528860648301528360848301520381838a5af180156105ba576105ea575b50856104358160025416610765565b16958060035416873b156105e6578951906305e52ecf60e21b8252858201528884820152606460448201528881606481838c5af180156105dc579089916105c8575b505083541680610572575b50853b1561056e5787519063cea9f4b560e01b825285848301528483830152604482015260643560648201528681608481838a5af1801561056457908791610550575b5050833b1561054c578651637103ef0d60e01b8152918201859052859082908183875af180156105425790859161052a575b505082827fd7b4770d872cf541c7302a5671e3ceb80df26b15aacab2ba0f395c3056b9ad5f87519680a482526020820152f35b6105339061062a565b61053e5783866104f7565b8380fd5b86513d87823e3d90fd5b8580fd5b6105599061062a565b61054c5785886104c5565b88513d89823e3d90fd5b8680fd5b863b156105c45788519063e9725c2160e01b82528482015287818481838b5af180156105ba579088916105a6575b50610482565b6105af9061062a565b61056e5786896105a0565b89513d8a823e3d90fd5b8780fd5b6105d19061062a565b6105c457878a610477565b8a513d8b823e3d90fd5b8880fd5b6105f69097919761062a565b9588610426565b8980fd5b8480fd5b8490346101a757816003193601126101a7576002546001600160a01b03168152602090f35b67ffffffffffffffff811161063e57604052565b634e487b7160e01b600052604160045260246000fd5b81601f8201121561022c5780359067ffffffffffffffff9283831161063e5760405193601f8401601f19908116603f011685019081118582101761063e576040528284526020838301011161022c57816000926020809301838601378301015290565b600435906001600160a01b038216820361022c57565b6000546001600160a01b031633036106e157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919082519283825260005b848110610751575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610730565b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c161760005260781b17602052603760096000f0906001600160a01b038216156107bb57565b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fdfea2646970667358221220aef65291c2748987828ecf6951f0ab4c42566feca0405bd4da1d2cae969e4dda64736f6c63430008110033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x1F PUSH2 0x942 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xE8 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE3 JUMPI PUSH2 0x47 DUP2 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x5F PUSH1 0x40 PUSH2 0x58 PUSH1 0x20 DUP6 ADD PUSH2 0xFE JUMP JUMPDEST SWAP4 ADD PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP7 SWAP2 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP5 DUP7 SWAP5 DUP6 SWAP4 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 AND DUP6 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE AND DUP4 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND DUP2 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD AND PUSH1 0x4 SSTORE PUSH2 0x82F SWAP1 DUP2 PUSH2 0x113 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE3 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x7D4EFE3 EQ PUSH2 0x605 JUMPI POP DUP1 PUSH4 0x32E1D0EC EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x34416F63 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x73C84D21 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x85BFF341 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xE9725C21 EQ PUSH2 0x166 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x162 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x162 JUMPI PUSH2 0xB5 PUSH2 0x6B7 JUMP JUMPDEST SWAP1 PUSH2 0xBE PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x110 JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x181 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x6CD JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A7 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x231 JUMPI PUSH2 0x1EC PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH2 0x22C JUMPI PUSH2 0x20B PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 AND DUP2 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x162 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x231 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x231 JUMPI PUSH2 0x274 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x231 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x231 JUMPI PUSH2 0x2F8 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x3 NOT PUSH1 0xA0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x162 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x601 JUMPI PUSH2 0x37B SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x654 JUMP JUMPDEST SWAP3 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x54C JUMPI PUSH2 0x395 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH1 0x84 CALLDATALOAD DUP7 DUP2 AND SWAP5 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP1 SWAP2 DUP7 SWAP1 SUB PUSH2 0x5E6 JUMPI DUP8 PUSH2 0x3C1 DUP2 PUSH1 0x1 SLOAD AND PUSH2 0x765 JUMP JUMPDEST AND SWAP7 DUP8 EXTCODESIZE ISZERO PUSH2 0x5FD JUMPI DUP11 MLOAD PUSH4 0x7E77C503 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xA0 DUP8 DUP3 ADD MSTORE SWAP3 DUP11 SWAP3 DUP5 SWAP3 DUP4 SWAP3 PUSH2 0x403 SWAP3 PUSH2 0x3F5 SWAP1 PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x725 JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB ADD DUP10 DUP6 ADD MSTORE PUSH2 0x725 JUMP JUMPDEST DUP6 PUSH1 0x44 DUP4 ADD MSTORE DUP9 PUSH1 0x64 DUP4 ADD MSTORE DUP4 PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5EA JUMPI JUMPDEST POP DUP6 PUSH2 0x435 DUP2 PUSH1 0x2 SLOAD AND PUSH2 0x765 JUMP JUMPDEST AND SWAP6 DUP1 PUSH1 0x3 SLOAD AND DUP8 EXTCODESIZE ISZERO PUSH2 0x5E6 JUMPI DUP10 MLOAD SWAP1 PUSH4 0x5E52ECF PUSH1 0xE2 SHL DUP3 MSTORE DUP6 DUP3 ADD MSTORE DUP9 DUP5 DUP3 ADD MSTORE PUSH1 0x64 PUSH1 0x44 DUP3 ADD MSTORE DUP9 DUP2 PUSH1 0x64 DUP2 DUP4 DUP13 GAS CALL DUP1 ISZERO PUSH2 0x5DC JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x5C8 JUMPI JUMPDEST POP POP DUP4 SLOAD AND DUP1 PUSH2 0x572 JUMPI JUMPDEST POP DUP6 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP8 MLOAD SWAP1 PUSH4 0xCEA9F4B5 PUSH1 0xE0 SHL DUP3 MSTORE DUP6 DUP5 DUP4 ADD MSTORE DUP5 DUP4 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x84 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x564 JUMPI SWAP1 DUP8 SWAP2 PUSH2 0x550 JUMPI JUMPDEST POP POP DUP4 EXTCODESIZE ISZERO PUSH2 0x54C JUMPI DUP7 MLOAD PUSH4 0x7103EF0D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE DUP6 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x542 JUMPI SWAP1 DUP6 SWAP2 PUSH2 0x52A JUMPI JUMPDEST POP POP DUP3 DUP3 PUSH32 0xD7B4770D872CF541C7302A5671E3CEB80DF26B15AACAB2BA0F395C3056B9AD5F DUP8 MLOAD SWAP7 DUP1 LOG4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x533 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x53E JUMPI DUP4 DUP7 PUSH2 0x4F7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH2 0x559 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x54C JUMPI DUP6 DUP9 PUSH2 0x4C5 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP7 EXTCODESIZE ISZERO PUSH2 0x5C4 JUMPI DUP9 MLOAD SWAP1 PUSH4 0xE9725C21 PUSH1 0xE0 SHL DUP3 MSTORE DUP5 DUP3 ADD MSTORE DUP8 DUP2 DUP5 DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH2 0x5BA JUMPI SWAP1 DUP9 SWAP2 PUSH2 0x5A6 JUMPI JUMPDEST POP PUSH2 0x482 JUMP JUMPDEST PUSH2 0x5AF SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x56E JUMPI DUP7 DUP10 PUSH2 0x5A0 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH2 0x5D1 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x5C4 JUMPI DUP8 DUP11 PUSH2 0x477 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH2 0x5F6 SWAP1 SWAP8 SWAP2 SWAP8 PUSH2 0x62A JUMP JUMPDEST SWAP6 DUP9 PUSH2 0x426 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x63E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x22C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP4 GT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x63E JUMPI PUSH1 0x40 MSTORE DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x22C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x22C JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x6E1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x751 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x730 JUMP JUMPDEST PUSH15 0x5AF43D82803E903D91602B57FD5BF3 SWAP1 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 PUSH3 0xFFFFFF DUP3 PUSH1 0x88 SHR AND OR PUSH1 0x0 MSTORE PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x7BB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xF6 MSTORE SWAP2 0xC2 PUSH21 0x8987828ECF6951F0AB4C42566FECA0405BD4DA1D2C 0xAE SWAP7 SWAP15 0x4D 0xDA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"222:2517:21:-:0;;;;;;;;;;;;;-1:-1:-1;;222:2517:21;;;;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;222:2517:21;;-1:-1:-1;;;;;;222:2517:21;;;719:10:19;222:2517:21;;;;;;;;;;-1:-1:-1;;;;;222:2517:21;;;;;;719:10:19;222:2517:21;;;;2566:40:17;;-1:-1:-1;2566:40:17;222:2517:21;;;;;;;;;;778:64;222:2517;;;778:64;222:2517;;;852:38;222:2517;;;852:38;222:2517;900:29;222:2517;;900:29;222:2517;;;;;;;;;-1:-1:-1;222:2517:21;;;;;;-1:-1:-1;222:2517:21;;;;;-1:-1:-1;222:2517:21;;;;-1:-1:-1;;;;;222:2517:21;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1719,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":1620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":1829,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1578,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":1741,"id":2603,"parameterSlots":0,"returnSlots":0},"fun_clone":{"entryPoint":1893,"id":2684,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604081815260048036101561001557600080fd5b600092833560e01c90816307d4efe3146106055750806332e1d0ec1461034757806334416f631461031e57806344cda485146102de5780636fd31a41146102b5578063715018a61461025b57806373c84d211461023457806385bff341146101d35780638da5cb5b146101ab578063e9725c21146101665763f2fde38b1461009c57600080fd5b34610162576020366003190112610162576100b56106b7565b906100be6106cd565b6001600160a01b03918216928315610110575050600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b8382346101a75760203660031901126101a7576101816106b7565b6101896106cd565b81546001600160a01b0319166001600160a01b039190911617905580f35b5080fd5b5050346101a757816003193601126101a757905490516001600160a01b039091168152602090f35b5050346101a757366003190112610231576101ec6106b7565b6024356001600160a01b03818116929183900361022c5761020b6106cd565b6001600160601b0360a01b9116816001541617600155600254161760025580f35b600080fd5b80fd5b50346101625782600319360112610162575490516001600160a01b03909116815260209150f35b83346102315780600319360112610231576102746106cd565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101a757816003193601126101a75760035490516001600160a01b039091168152602090f35b8334610231576020366003190112610231576102f86106b7565b6103006106cd565b60018060a01b03166001600160601b0360a01b600354161760035580f35b5050346101a757816003193601126101a75760015490516001600160a01b039091168152602090f35b508290346101a75760031960a0368201126101625767ffffffffffffffff82358181116106015761037b9036908501610654565b92602491823590811161054c576103959036908301610654565b6001600160a01b039460843586811694926044359290918690036105e657876103c18160015416610765565b1696873b156105fd578a51637e77c50360e01b815260a087820152928a9284928392610403926103f59060a4860190610725565b918483030189850152610725565b8560448301528860648301528360848301520381838a5af180156105ba576105ea575b50856104358160025416610765565b16958060035416873b156105e6578951906305e52ecf60e21b8252858201528884820152606460448201528881606481838c5af180156105dc579089916105c8575b505083541680610572575b50853b1561056e5787519063cea9f4b560e01b825285848301528483830152604482015260643560648201528681608481838a5af1801561056457908791610550575b5050833b1561054c578651637103ef0d60e01b8152918201859052859082908183875af180156105425790859161052a575b505082827fd7b4770d872cf541c7302a5671e3ceb80df26b15aacab2ba0f395c3056b9ad5f87519680a482526020820152f35b6105339061062a565b61053e5783866104f7565b8380fd5b86513d87823e3d90fd5b8580fd5b6105599061062a565b61054c5785886104c5565b88513d89823e3d90fd5b8680fd5b863b156105c45788519063e9725c2160e01b82528482015287818481838b5af180156105ba579088916105a6575b50610482565b6105af9061062a565b61056e5786896105a0565b89513d8a823e3d90fd5b8780fd5b6105d19061062a565b6105c457878a610477565b8a513d8b823e3d90fd5b8880fd5b6105f69097919761062a565b9588610426565b8980fd5b8480fd5b8490346101a757816003193601126101a7576002546001600160a01b03168152602090f35b67ffffffffffffffff811161063e57604052565b634e487b7160e01b600052604160045260246000fd5b81601f8201121561022c5780359067ffffffffffffffff9283831161063e5760405193601f8401601f19908116603f011685019081118582101761063e576040528284526020838301011161022c57816000926020809301838601378301015290565b600435906001600160a01b038216820361022c57565b6000546001600160a01b031633036106e157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919082519283825260005b848110610751575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610730565b6e5af43d82803e903d91602b57fd5bf390763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c161760005260781b17602052603760096000f0906001600160a01b038216156107bb57565b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fdfea2646970667358221220aef65291c2748987828ecf6951f0ab4c42566feca0405bd4da1d2cae969e4dda64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x7D4EFE3 EQ PUSH2 0x605 JUMPI POP DUP1 PUSH4 0x32E1D0EC EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x34416F63 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x73C84D21 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x85BFF341 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xE9725C21 EQ PUSH2 0x166 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x162 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x162 JUMPI PUSH2 0xB5 PUSH2 0x6B7 JUMP JUMPDEST SWAP1 PUSH2 0xBE PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x110 JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x181 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x6CD JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A7 JUMPI CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x231 JUMPI PUSH2 0x1EC PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH2 0x22C JUMPI PUSH2 0x20B PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 AND DUP2 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x162 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x162 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x231 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x231 JUMPI PUSH2 0x274 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x231 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x231 JUMPI PUSH2 0x2F8 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x3 NOT PUSH1 0xA0 CALLDATASIZE DUP3 ADD SLT PUSH2 0x162 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x601 JUMPI PUSH2 0x37B SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x654 JUMP JUMPDEST SWAP3 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x54C JUMPI PUSH2 0x395 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 PUSH1 0x84 CALLDATALOAD DUP7 DUP2 AND SWAP5 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP1 SWAP2 DUP7 SWAP1 SUB PUSH2 0x5E6 JUMPI DUP8 PUSH2 0x3C1 DUP2 PUSH1 0x1 SLOAD AND PUSH2 0x765 JUMP JUMPDEST AND SWAP7 DUP8 EXTCODESIZE ISZERO PUSH2 0x5FD JUMPI DUP11 MLOAD PUSH4 0x7E77C503 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xA0 DUP8 DUP3 ADD MSTORE SWAP3 DUP11 SWAP3 DUP5 SWAP3 DUP4 SWAP3 PUSH2 0x403 SWAP3 PUSH2 0x3F5 SWAP1 PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x725 JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB ADD DUP10 DUP6 ADD MSTORE PUSH2 0x725 JUMP JUMPDEST DUP6 PUSH1 0x44 DUP4 ADD MSTORE DUP9 PUSH1 0x64 DUP4 ADD MSTORE DUP4 PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5EA JUMPI JUMPDEST POP DUP6 PUSH2 0x435 DUP2 PUSH1 0x2 SLOAD AND PUSH2 0x765 JUMP JUMPDEST AND SWAP6 DUP1 PUSH1 0x3 SLOAD AND DUP8 EXTCODESIZE ISZERO PUSH2 0x5E6 JUMPI DUP10 MLOAD SWAP1 PUSH4 0x5E52ECF PUSH1 0xE2 SHL DUP3 MSTORE DUP6 DUP3 ADD MSTORE DUP9 DUP5 DUP3 ADD MSTORE PUSH1 0x64 PUSH1 0x44 DUP3 ADD MSTORE DUP9 DUP2 PUSH1 0x64 DUP2 DUP4 DUP13 GAS CALL DUP1 ISZERO PUSH2 0x5DC JUMPI SWAP1 DUP10 SWAP2 PUSH2 0x5C8 JUMPI JUMPDEST POP POP DUP4 SLOAD AND DUP1 PUSH2 0x572 JUMPI JUMPDEST POP DUP6 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP8 MLOAD SWAP1 PUSH4 0xCEA9F4B5 PUSH1 0xE0 SHL DUP3 MSTORE DUP6 DUP5 DUP4 ADD MSTORE DUP5 DUP4 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0x84 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x564 JUMPI SWAP1 DUP8 SWAP2 PUSH2 0x550 JUMPI JUMPDEST POP POP DUP4 EXTCODESIZE ISZERO PUSH2 0x54C JUMPI DUP7 MLOAD PUSH4 0x7103EF0D PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE DUP6 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x542 JUMPI SWAP1 DUP6 SWAP2 PUSH2 0x52A JUMPI JUMPDEST POP POP DUP3 DUP3 PUSH32 0xD7B4770D872CF541C7302A5671E3CEB80DF26B15AACAB2BA0F395C3056B9AD5F DUP8 MLOAD SWAP7 DUP1 LOG4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x533 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x53E JUMPI DUP4 DUP7 PUSH2 0x4F7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH2 0x559 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x54C JUMPI DUP6 DUP9 PUSH2 0x4C5 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP7 EXTCODESIZE ISZERO PUSH2 0x5C4 JUMPI DUP9 MLOAD SWAP1 PUSH4 0xE9725C21 PUSH1 0xE0 SHL DUP3 MSTORE DUP5 DUP3 ADD MSTORE DUP8 DUP2 DUP5 DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH2 0x5BA JUMPI SWAP1 DUP9 SWAP2 PUSH2 0x5A6 JUMPI JUMPDEST POP PUSH2 0x482 JUMP JUMPDEST PUSH2 0x5AF SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x56E JUMPI DUP7 DUP10 PUSH2 0x5A0 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH2 0x5D1 SWAP1 PUSH2 0x62A JUMP JUMPDEST PUSH2 0x5C4 JUMPI DUP8 DUP11 PUSH2 0x477 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH2 0x5F6 SWAP1 SWAP8 SWAP2 SWAP8 PUSH2 0x62A JUMP JUMPDEST SWAP6 DUP9 PUSH2 0x426 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x63E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x22C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP4 GT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x63E JUMPI PUSH1 0x40 MSTORE DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x22C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x22C JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x6E1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x751 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x730 JUMP JUMPDEST PUSH15 0x5AF43D82803E903D91602B57FD5BF3 SWAP1 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 PUSH3 0xFFFFFF DUP3 PUSH1 0x88 SHR AND OR PUSH1 0x0 MSTORE PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x7BB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xF6 MSTORE SWAP2 0xC2 PUSH21 0x8987828ECF6951F0AB4C42566FECA0405BD4DA1D2C 0xAE SWAP7 SWAP15 0x4D 0xDA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"222:2517:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;222:2517:21;;;;;;:::i;:::-;1063:62:17;;;:::i;:::-;-1:-1:-1;;;;;222:2517:21;;;;2162:22:17;;222:2517:21;;;;;;;-1:-1:-1;;;;;222:2517:21;;;;;;;;2566:40:17;222:2517:21;2566:40:17;;222:2517:21;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;222:2517:21;;;;;;;;;;;;;;;;;-1:-1:-1;;222:2517:21;;;;;;:::i;:::-;1063:62:17;;:::i;:::-;222:2517:21;;-1:-1:-1;;;;;;222:2517:21;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;;;;;-1:-1:-1;;222:2517:21;;;;;;:::i;:::-;;;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;1063:62:17;;:::i;:::-;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;2666:64;222:2517;;;2666:64;222:2517;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2517:21;;;;;;;-1:-1:-1;222:2517:21;;;;;;;;;;;;;;1063:62:17;;:::i;:::-;222:2517:21;;;-1:-1:-1;;;;;;222:2517:21;;;;-1:-1:-1;;;;;222:2517:21;2566:40:17;222:2517:21;;2566:40:17;222:2517:21;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;;;;;-1:-1:-1;;222:2517:21;;;;;;:::i;:::-;1063:62:17;;:::i;:::-;222:2517:21;;;;;;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;;;;;-1:-1:-1;;222:2517:21;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;;;;;;;;;1280:38;222:2517;;;;1280:38;:::i;:::-;222:2517;1328:91;;;;;;222:2517;;-1:-1:-1;;;1328:91:21;;222:2517;1328:91;;;222:2517;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1328:91;;;;;;;;;;;;222:2517;;;1483:44;222:2517;1496:30;222:2517;;1483:44;:::i;:::-;222:2517;;;;;;1537:76;;;;;222:2517;;;;;;1537:76;;;;;222:2517;;;;;;;;;;;1537:76;;222:2517;1537:76;;;;;;;;;;;;;;222:2517;;;;;;1681:30;1677:128;;222:2517;1865:100;;;;;;222:2517;;;;;;1865:100;;;;;;222:2517;;;;;;;;;;;;;;;;1865:100;;222:2517;1865:100;;;;;;;;;;;;;;222:2517;2021:53;;;;;;;222:2517;;-1:-1:-1;;;2021:53:21;;;;;222:2517;;;;;;;;;2021:53;;;;;;;;;;;;222:2517;;;;;2098:54;222:2517;;2098:54;;;222:2517;;;;;;;2021:53;;;;:::i;:::-;222:2517;;2021:53;;;;222:2517;;;;2021:53;222:2517;;;;;;;;;2021:53;222:2517;;;1865:100;;;;:::i;:::-;222:2517;;1865:100;;;;;222:2517;;;;;;;;;1865:100;222:2517;;;1677:128;1727:67;;;;;222:2517;;;;;;1727:67;;;;;222:2517;1727:67;;;;;;;;;;;;;;;;;1677:128;;;;1727:67;;;;:::i;:::-;222:2517;;1727:67;;;;;222:2517;;;;;;;;;1727:67;222:2517;;;1537:76;;;;:::i;:::-;222:2517;;1537:76;;;;;222:2517;;;;;;;;;1537:76;222:2517;;;1328:91;;;;;;;:::i;:::-;;;;;;222:2517;;;;;;;;;;;;;;;;;;;;;311:45;222:2517;-1:-1:-1;;;;;222:2517:21;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;222:2517:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;222:2517:21;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;222:2517:21;;;;;;:::o;1359:130:17:-;1273:6;222:2517:21;-1:-1:-1;;;;;222:2517:21;719:10:19;1422:23:17;222:2517:21;;1359:130:17:o;222:2517:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;222:2517:21;;;;;;;;;-1:-1:-1;222:2517:21;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;973:759:18;1101:558;973:759;1101:558;;;;;;;;;;;;;;;;;;222:2517:21;-1:-1:-1;;;;;222:2517:21;;1676:22:18;222:2517:21;;973:759:18:o;222:2517:21:-;;;-1:-1:-1;;;222:2517:21;;1101:558:18;222:2517:21;;;;;;;;;-1:-1:-1;;;222:2517:21;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"419000","executionCost":"infinite","totalCost":"infinite"},"external":{"astroTokenImplementation()":"2342","astrologerManager()":"2386","buyTokenContractImplementation()":"2286","deployTokenPair(string,string,uint256,uint256,address)":"infinite","owner()":"2474","renounceOwnership()":"28182","reputationScorer()":"2427","setAstrologerManager(address)":"26702","setImplementations(address,address)":"51049","setReputationScorer(address)":"26843","transferOwnership(address)":"28403"}},"methodIdentifiers":{"astroTokenImplementation()":"34416f63","astrologerManager()":"6fd31a41","buyTokenContractImplementation()":"07d4efe3","deployTokenPair(string,string,uint256,uint256,address)":"32e1d0ec","owner()":"8da5cb5b","renounceOwnership()":"715018a6","reputationScorer()":"73c84d21","setAstrologerManager(address)":"44cda485","setImplementations(address,address)":"85bff341","setReputationScorer(address)":"e9725c21","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astroTokenImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyTokenContractImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"}],\"name\":\"TokenDeployed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"astroTokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astrologerManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokenContractImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"deployTokenPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationScorer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"}],\"name\":\"setAstrologerManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astroTokenImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyTokenContractImplementation\",\"type\":\"address\"}],\"name\":\"setImplementations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reputationScorer\",\"type\":\"address\"}],\"name\":\"setReputationScorer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AstroTokenFactory.sol\":\"AstroTokenFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\\n    function __ERC20Burnable_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create(0, 0x09, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create2(0, 0x09, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x38), deployer)\\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\\n            mstore(add(ptr, 0x14), implementation)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\\n            mstore(add(ptr, 0x58), salt)\\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\\n            predicted := keccak256(add(ptr, 0x43), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt\\n    ) internal view returns (address predicted) {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AstroToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\ncontract AstroToken is \\n    Initializable, \\n    ERC20Upgradeable, \\n    ERC20BurnableUpgradeable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    address public astrologer;\\n    address public buyContract;\\n    bool public isInitialized;\\n    \\n    event AstroTokenInitialized(\\n        address indexed astrologer,\\n        string name,\\n        string symbol,\\n        uint256 totalSupply\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _totalSupply,\\n        address _astrologer,\\n        address _buyContract\\n    ) public initializer {\\n        require(!isInitialized, \\\"Already initialized\\\");\\n        \\n        __ERC20_init(_name, _symbol);\\n        __ERC20Burnable_init();\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologer = _astrologer;\\n        buyContract = _buyContract;\\n        \\n        // Mint total supply to astrologer\\n        _mint(_astrologer, _totalSupply);\\n        \\n        isInitialized = true;\\n        \\n        emit AstroTokenInitialized(_astrologer, _name, _symbol, _totalSupply);\\n    }\\n\\n    function mint(address to, uint256 amount) external {\\n        require(msg.sender == owner() || msg.sender == buyContract, \\\"Not authorized to mint\\\");\\n        _mint(to, amount);\\n    }\\n\\n    function burnFrom(address account, uint256 amount) public override {\\n        require(msg.sender == owner() || msg.sender == buyContract, \\\"Not authorized to burn\\\");\\n        _burn(account, amount);\\n    }\\n\\n    function setBuyContract(address _buyContract) external onlyOwner {\\n        buyContract = _buyContract;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0xa6c063b2d755749a9463670f43bc6062d6ca2f8b31b717e161dac5134f2ce13c\",\"license\":\"MIT\"},\"contracts/AstroTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./AstroToken.sol\\\";\\nimport \\\"./BuyTokenContract.sol\\\";\\n\\ncontract AstroTokenFactory is Ownable {\\n    address public astroTokenImplementation;\\n    address public buyTokenContractImplementation;\\n    address public astrologerManager;\\n    address public reputationScorer;\\n    \\n    event TokenDeployed(address indexed tokenContract, address indexed buyContract, address indexed astrologer);\\n    \\n    constructor(\\n        address _astroTokenImplementation,\\n        address _buyTokenContractImplementation,\\n        address _astrologerManager\\n    ) {\\n        astroTokenImplementation = _astroTokenImplementation;\\n        buyTokenContractImplementation = _buyTokenContractImplementation;\\n        astrologerManager = _astrologerManager;\\n        reputationScorer = address(0); // Will be set later via setter\\n    }\\n    \\n    function deployTokenPair(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _totalSupply,\\n        uint256 _initialPrice,\\n        address _astrologer\\n    ) external returns (address tokenContract, address buyContract) {\\n        // Deploy token contract\\n        tokenContract = Clones.clone(astroTokenImplementation);\\n        AstroToken(tokenContract).initialize(_name, _symbol, _totalSupply, _astrologer, address(0));\\n        \\n        // Deploy buy contract\\n        buyContract = Clones.clone(buyTokenContractImplementation);\\n        BuyTokenContract(buyContract).initialize(astrologerManager, address(0), 100);\\n        \\n        // Set ReputationScorer if available\\n        if (reputationScorer != address(0)) {\\n            BuyTokenContract(buyContract).setReputationScorer(reputationScorer);\\n        }\\n        \\n        // Register token in buy contract\\n        BuyTokenContract(buyContract).registerToken(tokenContract, _astrologer, _totalSupply, _initialPrice);\\n        \\n        // Set buy contract in token\\n        AstroToken(tokenContract).setBuyContract(buyContract);\\n        \\n        emit TokenDeployed(tokenContract, buyContract, _astrologer);\\n    }\\n    \\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n    \\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\\n        reputationScorer = _reputationScorer;\\n    }\\n    \\n    function setImplementations(\\n        address _astroTokenImplementation,\\n        address _buyTokenContractImplementation\\n    ) external onlyOwner {\\n        astroTokenImplementation = _astroTokenImplementation;\\n        buyTokenContractImplementation = _buyTokenContractImplementation;\\n    }\\n} \",\"keccak256\":\"0xe8c48c2d4deae2feb1ca8dd33fb44282c36080ef654911929445875b61ab102f\",\"license\":\"MIT\"},\"contracts/BuyTokenContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"./AstroToken.sol\\\";\\n\\ncontract BuyTokenContract is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    struct TokenInfo {\\n        address tokenContract;\\n        address astrologer;\\n        uint256 totalSupply;\\n        uint256 circulatingSupply;\\n        uint256 basePrice;\\n        uint256 credibilityMultiplier;\\n        bool isActive;\\n    }\\n\\n    struct BondingCurve {\\n        uint256 k; // Bonding curve constant (very low for minimal supply impact)\\n        uint256 reserveRatio; // Reserve ratio (0-1000, where 1000 = 100%)\\n        uint256 slippageTolerance; // Slippage tolerance in basis points\\n        uint256 maxReputationMultiplier; // Maximum reputation multiplier (e.g., 5000 = 5.0x)\\n    }\\n\\n    mapping(address => TokenInfo) public tokenInfos;\\n    mapping(address => uint256) public userBalances;\\n    mapping(address => uint256) public userContributions;\\n    \\n    address public astrologerManager;\\n    address public predictionCredibilityManager;\\n    \\n    BondingCurve public bondingCurve;\\n    uint256 public platformFee; // Platform fee in basis points (100 = 1%)\\n    uint256 public totalVolume;\\n    \\n    // New variables must be added at the end for upgradeable contracts\\n    address public reputationScorer;\\n    \\n    event TokenBought(\\n        address indexed tokenContract,\\n        address indexed buyer,\\n        uint256 ethAmount,\\n        uint256 tokenAmount,\\n        uint256 price\\n    );\\n\\n    event TokenSold(\\n        address indexed tokenContract,\\n        address indexed seller,\\n        uint256 tokenAmount,\\n        uint256 ethAmount,\\n        uint256 price\\n    );\\n\\n    event CredibilityUpdated(\\n        address indexed tokenContract,\\n        uint256 oldMultiplier,\\n        uint256 newMultiplier\\n    );\\n\\n    event BondingCurveUpdated(\\n        uint256 k,\\n        uint256 reserveRatio,\\n        uint256 slippageTolerance,\\n        uint256 maxReputationMultiplier\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _predictionCredibilityManager,\\n        uint256 _platformFee\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        predictionCredibilityManager = _predictionCredibilityManager;\\n        platformFee = _platformFee;\\n        \\n        // Initialize bonding curve parameters\\n        bondingCurve = BondingCurve({\\n            k: 1000, // Very low constant for minimal supply impact (was 1M)\\n            reserveRatio: 500, // 50% reserve ratio\\n            slippageTolerance: 100, // 1% slippage tolerance\\n            maxReputationMultiplier: 5000 // 5.0x maximum reputation multiplier\\n        });\\n    }\\n\\n    function registerToken(\\n        address _tokenContract,\\n        address _astrologer,\\n        uint256 _totalSupply,\\n        uint256 _basePrice\\n    ) external {\\n        require(msg.sender == owner(), \\\"Only owner can register tokens\\\");\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n        require(_astrologer != address(0), \\\"Invalid astrologer address\\\");\\n        require(_totalSupply > 0, \\\"Total supply must be greater than 0\\\");\\n        require(_basePrice > 0, \\\"Base price must be greater than 0\\\");\\n\\n        tokenInfos[_tokenContract] = TokenInfo({\\n            tokenContract: _tokenContract,\\n            astrologer: _astrologer,\\n            totalSupply: _totalSupply,\\n            circulatingSupply: 0,\\n            basePrice: _basePrice,\\n            credibilityMultiplier: 1000, // 1.0x multiplier\\n            isActive: true\\n        });\\n    }\\n\\n    function buyTokens(address _tokenContract) external payable returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n        require(msg.value > 0, \\\"Must send ETH to buy tokens\\\");\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 tokenAmount = calculateBuyAmount(_tokenContract, msg.value);\\n        \\n        require(tokenAmount > 0, \\\"Insufficient ETH for minimum token amount\\\");\\n        require(\\n            tokenInfo.circulatingSupply + tokenAmount <= tokenInfo.totalSupply,\\n            \\\"Would exceed total supply\\\"\\n        );\\n\\n        // Calculate fees\\n        uint256 platformFeeAmount = (msg.value * platformFee) / 10000;\\n        uint256 astrologerAmount = msg.value - platformFeeAmount;\\n\\n        // Update state\\n        tokenInfo.circulatingSupply += tokenAmount;\\n        userBalances[_tokenContract] += tokenAmount;\\n        userContributions[msg.sender] += msg.value;\\n        totalVolume += msg.value;\\n\\n        // Mint tokens to buyer\\n        AstroToken(_tokenContract).mint(msg.sender, tokenAmount);\\n\\n        // Transfer ETH to astrologer\\n        if (astrologerAmount > 0) {\\n            payable(tokenInfo.astrologer).transfer(astrologerAmount);\\n        }\\n\\n        emit TokenBought(_tokenContract, msg.sender, msg.value, tokenAmount, currentPrice);\\n        return tokenAmount;\\n    }\\n\\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n        require(_tokenAmount > 0, \\\"Must sell positive amount\\\");\\n        require(userBalances[_tokenContract] >= _tokenAmount, \\\"Insufficient token balance\\\");\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 ethAmount = calculateSellAmount(_tokenContract, _tokenAmount);\\n        \\n        require(ethAmount > 0, \\\"Insufficient tokens for minimum ETH amount\\\");\\n\\n        // Calculate fees\\n        uint256 platformFeeAmount = (ethAmount * platformFee) / 10000;\\n        uint256 sellerAmount = ethAmount - platformFeeAmount;\\n\\n        // Update state\\n        tokenInfo.circulatingSupply -= _tokenAmount;\\n        userBalances[_tokenContract] -= _tokenAmount;\\n        totalVolume += ethAmount;\\n\\n        // Burn tokens from seller\\n        AstroToken(_tokenContract).burnFrom(msg.sender, _tokenAmount);\\n\\n        // Transfer ETH to seller\\n        if (sellerAmount > 0) {\\n            payable(msg.sender).transfer(sellerAmount);\\n        }\\n\\n        emit TokenSold(_tokenContract, msg.sender, _tokenAmount, ethAmount, currentPrice);\\n        return ethAmount;\\n    }\\n\\n    function updateCredibility(address _tokenContract, uint256 _newMultiplier) external {\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n\\n        uint256 oldMultiplier = tokenInfo.credibilityMultiplier;\\n        tokenInfo.credibilityMultiplier = _newMultiplier;\\n\\n        emit CredibilityUpdated(_tokenContract, oldMultiplier, _newMultiplier);\\n    }\\n\\n    function getCurrentPrice(address _tokenContract) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        // Very minimal supply impact: price = basePrice * (1 + tiny_supply_effect) * reputationMultiplier\\n        uint256 supplyRatio = (tokenInfo.circulatingSupply * 1e18) / tokenInfo.totalSupply;\\n        \\n        // Very small supply multiplier (k reduced from 1M to 1K for minimal impact)\\n        uint256 supplyMultiplier = 1e18 + (supplyRatio * bondingCurve.k) / 1000000; // Much smaller impact\\n        \\n        // Reputation is the main driver: credibilityMultiplier is in basis points (1000 = 1.0x)\\n        uint256 reputationMultiplier = tokenInfo.credibilityMultiplier;\\n        \\n        return (tokenInfo.basePrice * supplyMultiplier * reputationMultiplier) / (1e18 * 1000);\\n    }\\n\\n    function calculateBuyAmount(address _tokenContract, uint256 _ethAmount) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 tokenAmount = (_ethAmount * 1e18) / currentPrice;\\n        \\n        // Apply slippage tolerance\\n        uint256 slippage = (tokenAmount * bondingCurve.slippageTolerance) / 10000;\\n        return tokenAmount - slippage;\\n    }\\n\\n    function calculateSellAmount(address _tokenContract, uint256 _tokenAmount) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 ethAmount = (_tokenAmount * currentPrice) / 1e18;\\n        \\n        // Apply slippage tolerance\\n        uint256 slippage = (ethAmount * bondingCurve.slippageTolerance) / 10000;\\n        return ethAmount - slippage;\\n    }\\n\\n    function getTokenInfo(address _tokenContract) external view returns (TokenInfo memory) {\\n        return tokenInfos[_tokenContract];\\n    }\\n\\n    function getUserBalance(address _tokenContract) external view returns (uint256) {\\n        return userBalances[_tokenContract];\\n    }\\n\\n    function getUserContribution(address _user) external view returns (uint256) {\\n        return userContributions[_user];\\n    }\\n\\n    function setBondingCurve(\\n        uint256 _k,\\n        uint256 _reserveRatio,\\n        uint256 _slippageTolerance,\\n        uint256 _maxReputationMultiplier\\n    ) external onlyOwner {\\n        bondingCurve = BondingCurve({\\n            k: _k,\\n            reserveRatio: _reserveRatio,\\n            slippageTolerance: _slippageTolerance,\\n            maxReputationMultiplier: _maxReputationMultiplier\\n        });\\n\\n        emit BondingCurveUpdated(_k, _reserveRatio, _slippageTolerance, _maxReputationMultiplier);\\n    }\\n\\n    function setPlatformFee(uint256 _platformFee) external onlyOwner {\\n        platformFee = _platformFee;\\n    }\\n\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setPredictionCredibilityManager(address _predictionCredibilityManager) external onlyOwner {\\n        predictionCredibilityManager = _predictionCredibilityManager;\\n    }\\n\\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\\n        reputationScorer = _reputationScorer;\\n    }\\n\\n    function toggleTokenActive(address _tokenContract) external onlyOwner {\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n        tokenInfos[_tokenContract].isActive = !tokenInfos[_tokenContract].isActive;\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0x1ca5e1200e34787fb49afc8773bd31c914dc0716c88c77f34eda346a17893127\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2556,"contract":"contracts/AstroTokenFactory.sol:AstroTokenFactory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2951,"contract":"contracts/AstroTokenFactory.sol:AstroTokenFactory","label":"astroTokenImplementation","offset":0,"slot":"1","type":"t_address"},{"astId":2953,"contract":"contracts/AstroTokenFactory.sol:AstroTokenFactory","label":"buyTokenContractImplementation","offset":0,"slot":"2","type":"t_address"},{"astId":2955,"contract":"contracts/AstroTokenFactory.sol:AstroTokenFactory","label":"astrologerManager","offset":0,"slot":"3","type":"t_address"},{"astId":2957,"contract":"contracts/AstroTokenFactory.sol:AstroTokenFactory","label":"reputationScorer","offset":0,"slot":"4","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/AstroTokenLauncher.sol":{"AstroTokenLauncher":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"astrologer","type":"address"}],"name":"TokenDeactivated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"address","name":"tokenContract","type":"address"},{"indexed":false,"internalType":"address","name":"buyContract","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"}],"name":"TokenLaunched","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"astrologerManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"astrologerToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"deactivateToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllActiveTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"astrologer","type":"address"}],"name":"getTokenByAstrologer","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct AstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenContract","type":"address"}],"name":"getTokenByContract","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct AstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenInfo","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct AstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"},{"internalType":"address","name":"_tokenFactory","type":"address"},{"internalType":"uint256","name":"_launchFee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"launchFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"uint256","name":"_initialPrice","type":"uint256"},{"internalType":"string","name":"_description","type":"string"}],"name":"launchToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"}],"name":"setAstrologerManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_launchFee","type":"uint256"}],"name":"setLaunchFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenFactory","type":"address"}],"name":"setTokenFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenContractToId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b60405161205590816100e28239608051818181610e730152818161104001526114510152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081631794bb3c146117735750806321dd6760146117395780632f73a9f8146116f657806336203131146116bc5780633659cfe61461142c5780633ccfd60b146113e857806342fbbf4f146112f357806344cda485146112b05780634f1ef28614610ff25780634f64b2be14610f2457806352d1902d14610e605780635313be2c14610e3f5780636fd31a4114610e16578063715018a614610db95780638c7a63ae14610d235780638d84289e14610cd95780638da5cb5b14610cb0578063922edb3414610bc5578063ad19748b1461031f578063cf3cf57314610301578063e77772fe146102d8578063ec991da9146101b05763f2fde38b1461011c57600080fd5b346101ab5760203660031901126101ab57610135611901565b61013d611b98565b6001600160a01b038116156101575761015590611bf0565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101ab576020806003193601126101ab5760043590811515806102cc575b6101d890611e9c565b600082815260ca825260409020600101546001600160a01b03163303610296578160005260ca815260ff60086040600020015416156102525760ca908260005252600860406000200160ff19815416905533907fc5bc70dcbaa7453c88acb052849608a31643ca7b9865b086176cfc8fa995720b600080a3005b6064906040519062461bcd60e51b82526004820152601960248201527f546f6b656e20616c7265616479206465616374697661746564000000000000006044820152fd5b6064906040519062461bcd60e51b82526004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b6044820152fd5b5060c9548211156101cf565b346101ab5760003660031901126101ab5760ce546040516001600160a01b039091168152602090f35b346101ab5760003660031901126101ab57602060cf54604051908152f35b60a03660031901126101ab576004356001600160401b0381116101ab5761034a903690600401611b7a565b6024356001600160401b0381116101ab57610369903690600401611b7a565b6084356001600160401b0381116101ab57610388903690600401611b7a565b5060cf543410610b8057815115610b4457805115610b065760443515610ab55760643515610a64573360005260cb602052604060002054610a1f5760cd546001600160a01b031680610966575b5060c980546001019081905560ce5460408051630cb8743b60e21b815260a06004820152949293929185906001600160a01b03168160008161042f61041d60a4830189611aa1565b82810360031901602484015289611aa1565b6044356044830152606435606483015233608483015203925af19081156107475760009460009261091d575b5060405161046881611917565b8481523360208083019182526001600160a01b038881166040808601918252878316606087019081526080870188815260a088018b905260443560c089015260643560e089015260016101008901819052426101208a015260008d815260ca9097529290952087518155955191860180549285166001600160a01b031993841617905591516002860180549185169183169190911790559051600385018054919093169116179055518051919291906001600160401b03821161073157819061053460048601546119c1565b601f81116108ca575b50602090601f83116001146108585760009261084d575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107315761058f60058501546119c1565b601f8111610806575b50602090601f83116001146107905791806009949261012094600092610785575b50508160011b916000199060031b1c19161760058501555b60c0810151600685015560e0810151600785015560088401610100820151151560ff8019835416911617905501519101553360005260cb6020528360406000205560018060a01b03851660005260cc6020528360406000205560018060a01b0360cd5416806106b0575b5083916020956106a56106967f5a43e6dd8ff6dde13675567b53b8d147e61f48ec2bc7d6dadaf8e96904e348fe9460405194859460018060a01b0316855260018060a01b03168a850152608060408501526080840190611aa1565b82810360608401523396611aa1565b0390a3604051908152f35b60405163656d0c3960e01b8152336004820152602081602481855afa90811561074757600091610753575b50813b156101ab57600091604483926040519485938492632939a4b560e11b845260048401528a60248401525af18015610747571561063b5790916001600160401b03821161073157604091909152908361063b565b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b90506020813d60201161077d575b8161076e6020938361194e565b810103126101ab5751876106db565b3d9150610761565b015190508b806105b9565b906005850160005260206000209160005b601f19851681106107ee575092600994926001926101209583601f198116106107d5575b505050811b0160058501556105d1565b015160001960f88460031b161c191690558b80806107c5565b919260206001819286850151815501940192016107a1565b600585016000526020600020601f840160051c810160208510610846575b601f830160051c8201811061083a575050610598565b60008155600101610824565b5080610824565b015190508980610554565b9250600485016000526020600020906000935b601f19841685106108af576001945083601f19811610610896575b505050811b01600483015561056c565b015160001960f88460031b161c19169055898080610886565b8181015183556020948501946001909301929091019061086b565b909150600485016000526020600020601f840160051c810160208510610916575b90849392915b601f830160051c8201811061090757505061053d565b600081558594506001016108f1565b50806108eb565b945090506040843d60401161095e575b8161093a6040938361194e565b810103126101ab57610957602061095086611e88565b9501611e88565b908561045b565b3d915061092d565b602060249160405192838092631853e99560e11b82523360048301525afa908115610747576000916109e4575b501561099f57826103d5565b60405162461bcd60e51b815260206004820152601760248201527f417374726f6c6f676572206e6f742076657269666965640000000000000000006044820152606490fd5b90506020813d602011610a17575b816109ff6020938361194e565b810103126101ab575180151581036101ab5783610993565b3d91506109f2565b60405162461bcd60e51b815260206004820152601e60248201527f417374726f6c6f67657220616c726561647920686173206120746f6b656e00006044820152606490fd5b60405162461bcd60e51b8152602060048201526024808201527f496e697469616c207072696365206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f546f74616c20737570706c79206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b60405162461bcd60e51b815260206004820152601660248201527553796d626f6c2063616e6e6f7420626520656d70747960501b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e74206c61756e6368206665650000000000000000006044820152606490fd5b346101ab5760203660031901126101ab57610cac610be1611901565b610be9611edb565b506001600160a01b03908116600090815260cb6020526040902054610c0f811515611f29565b60005260ca6020526009604060002060405192610c2b84611917565b815484528060018301541660208501528060028301541660408501526003820154166060840152610c5e600482016119fb565b6080840152610c6f600582016119fb565b60a0840152600681015460c0840152600781015460e084015260ff6008820154161515610100840152015461012082015260405191829182611ae1565b0390f35b346101ab5760003660031901126101ab576033546040516001600160a01b039091168152602090f35b346101ab5760203660031901126101ab57610cac610cf5611901565b610cfd611edb565b506001600160a01b03908116600090815260cc6020526040902054610c0f811515611f29565b346101ab5760203660031901126101ab57600435610d3f611edb565b5080151580610dad575b610d5290611e9c565b60005260ca602052610cac6040600020600960405191610d7183611917565b8054835260018101546001600160a01b0390811660208501526002820154811660408501526003820154166060840152610c5e600482016119fb565b5060c954811115610d49565b346101ab5760003660031901126101ab57610dd2611b98565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101ab5760003660031901126101ab5760cd546040516001600160a01b039091168152602090f35b346101ab5760203660031901126101ab57610e58611b98565b60043560cf55005b346101ab5760003660031901126101ab577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610eb95760206040516000805160206120008339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b346101ab5760203660031901126101ab5760043560005260ca6020526040600020805460018060a01b03918260018201541692806002830154169060038301541691610f72600482016119fb565b92610fd5610f82600584016119fb565b610fc7600685015496600786015494600960ff600889015416970154976040519b8c9b8c5260208c015260408b015260608a01526101408060808b0152890190611aa1565b9087820360a0890152611aa1565b9360c086015260e085015215156101008401526101208301520390f35b60403660031901126101ab57611006611901565b6024356001600160401b0381116101ab57366023820112156101ab5761103690369060248160040135910161198a565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116919061106f30841415611c39565b61108c600080516020612000833981519152938285541614611c9a565b611094611b98565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156110ca5750505061015590611cfb565b8316604051926352d1902d60e01b84526020938481600481865afa60009181611281575b5061114f5760405162461bcd60e51b815260048101869052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9392930361122a5761116084611cfb565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590611222575b61119657005b61015592600080604051946111aa86611933565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d15611219573d6111fc8161196f565b9061120a604051928361194e565b8152600081943d92013e611d8b565b60609250611d8b565b506001611190565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508581813d83116112a9575b611299818361194e565b810103126101ab575190876110ee565b503d61128f565b346101ab5760203660031901126101ab576112c9611901565b6112d1611b98565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055005b346101ab5760003660031901126101ab5760c95461131081611f7e565b90600091600191825b8181111561139f57505061132c83611f7e565b9260005b818110611376575050506040519060208083018184528451809152816040850195019160005b8281106113635785870386f35b8351875295810195928101928401611356565b8061138661139792859795611fd5565b516113918286611fd5565b52611fb0565b939193611330565b8060009593955260ca60205260ff600860406000200154166113cd575b6113c590611fb0565b939193611319565b916113e081846113916113c59489611fd5565b9290506113bc565b346101ab5760003660031901126101ab57611401611b98565b600080808060018060a01b03603354164790828215611423575bf11561074757005b506108fc61141b565b346101ab576020806003193601126101ab57611446611901565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831661147e30821415611c39565b61149b600080516020612000833981519152918583541614611c9a565b6114a3611b98565b60405190828201948286106001600160401b0387111761073157856040526000835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914354166000146114ff57505050506101559150611cfb565b8492939416906040516352d1902d60e01b81528581600481865afa6000918161168d575b506115845760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b949394036116365761159582611cfb565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a282511580159061162e575b6115cb57005b60008061015595604051956115df87611933565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15611219573d6111fc8161196f565b5060006115c5565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d83116116b5575b6116a5818361194e565b810103126101ab57519088611523565b503d61169b565b346101ab5760203660031901126101ab576001600160a01b036116dd611901565b1660005260cc6020526020604060002054604051908152f35b346101ab5760203660031901126101ab5761170f611901565b611717611b98565b60ce80546001600160a01b0319166001600160a01b0392909216919091179055005b346101ab5760203660031901126101ab576001600160a01b0361175a611901565b1660005260cb6020526020604060002054604051908152f35b346101ab5760603660031901126101ab5761178c611901565b6001600160a01b03919060243583811691908290036101ab5760005460ff8160081c1615938480956118f4575b80156118dd575b15611884575060ff19811660011760005583611872575b506117f260ff60005460081c166117ed81611e28565b611e28565b6117fb33611bf0565b6000549361180e60ff8660081c16611e28565b6bffffffffffffffffffffffff60a01b91168160cd54161760cd5560ce54161760ce5560443560cf5561183d57005b61ff0019166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b61ffff191661010117600055846117d7565b62461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156117c05750600160ff8316146117c0565b50600160ff8316106117b9565b600435906001600160a01b03821682036101ab57565b61014081019081106001600160401b0382111761073157604052565b606081019081106001600160401b0382111761073157604052565b90601f801991011681019081106001600160401b0382111761073157604052565b6001600160401b03811161073157601f01601f191660200190565b9291926119968261196f565b916119a4604051938461194e565b8294818452818301116101ab578281602093846000960137010152565b90600182811c921680156119f1575b60208310146119db57565b634e487b7160e01b600052602260045260246000fd5b91607f16916119d0565b9060405191826000825492611a0f846119c1565b908184526001948581169081600014611a7e5750600114611a3b575b5050611a399250038361194e565b565b9093915060005260209081600020936000915b818310611a66575050611a3993508201013880611a2b565b85548884018501529485019487945091830191611a4e565b915050611a3994506020925060ff191682840152151560051b8201013880611a2b565b919082519283825260005b848110611acd575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611aac565b602081528151602082015260018060a01b0380602084015116604083015280604084015116606083015260608301511660808201526080820151611b4c611b36610140928360a0860152610160850190611aa1565b60a0850151848203601f190160c0860152611aa1565b9260c081015160e084015260e081015161010090818501528101511515906101209182850152015191015290565b9080601f830112156101ab57816020611b959335910161198a565b90565b6033546001600160a01b03163303611bac57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611c4057565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15611ca157565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15611d305760008051602061200083398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015611ded5750815115611d9f575090565b3b15611da85790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611e005750805190602001fd5b60405162461bcd60e51b815260206004820152908190611e24906024830190611aa1565b0390fd5b15611e2f57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b51906001600160a01b03821682036101ab57565b15611ea357565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081d1bdad95b88125160821b6044820152606490fd5b60405190611ee882611917565b8161012060009182815282602082015282604082015282606082015260606080820152606060a08201528260c08201528260e0820152826101008201520152565b15611f3057565b60405162461bcd60e51b815260206004820152600f60248201526e151bdad95b881b9bdd08199bdd5b99608a1b6044820152606490fd5b6001600160401b0381116107315760051b60200190565b90611f8882611f67565b611f95604051918261194e565b8281528092611fa6601f1991611f67565b0190602036910137565b6000198114611fbf5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015611fe95760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122089c326d37d883b1ae1b4989df96b1bbae11b04b3214f9666947fb00066a0f27264736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2055 SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xE73 ADD MSTORE DUP2 DUP2 PUSH2 0x1040 ADD MSTORE PUSH2 0x1451 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1794BB3C EQ PUSH2 0x1773 JUMPI POP DUP1 PUSH4 0x21DD6760 EQ PUSH2 0x1739 JUMPI DUP1 PUSH4 0x2F73A9F8 EQ PUSH2 0x16F6 JUMPI DUP1 PUSH4 0x36203131 EQ PUSH2 0x16BC JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x142C JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x13E8 JUMPI DUP1 PUSH4 0x42FBBF4F EQ PUSH2 0x12F3 JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x12B0 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xFF2 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0xF24 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xE60 JUMPI DUP1 PUSH4 0x5313BE2C EQ PUSH2 0xE3F JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0xE16 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDB9 JUMPI DUP1 PUSH4 0x8C7A63AE EQ PUSH2 0xD23 JUMPI DUP1 PUSH4 0x8D84289E EQ PUSH2 0xCD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCB0 JUMPI DUP1 PUSH4 0x922EDB34 EQ PUSH2 0xBC5 JUMPI DUP1 PUSH4 0xAD19748B EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xCF3CF573 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xE77772FE EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xEC991DA9 EQ PUSH2 0x1B0 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x135 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x157 JUMPI PUSH2 0x155 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x2CC JUMPI JUMPDEST PUSH2 0x1D8 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x296 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0xCA DUP2 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x252 JUMPI PUSH1 0xCA SWAP1 DUP3 PUSH1 0x0 MSTORE MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER SWAP1 PUSH32 0xC5BC70DCBAA7453C88ACB052849608A31643CA7B9865B086176CFC8FA995720B PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C726561647920646561637469766174656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP3 GT ISZERO PUSH2 0x1CF JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI PUSH2 0x34A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI PUSH2 0x369 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI PUSH2 0x388 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B7A JUMP JUMPDEST POP PUSH1 0xCF SLOAD CALLVALUE LT PUSH2 0xB80 JUMPI DUP2 MLOAD ISZERO PUSH2 0xB44 JUMPI DUP1 MLOAD ISZERO PUSH2 0xB06 JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0xA64 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA1F JUMPI PUSH1 0xCD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x966 JUMPI JUMPDEST POP PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0xCE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCB8743B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xA0 PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP3 SWAP4 SWAP3 SWAP2 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 PUSH2 0x42F PUSH2 0x41D PUSH1 0xA4 DUP4 ADD DUP10 PUSH2 0x1AA1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x24 DUP5 ADD MSTORE DUP10 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE CALLER PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x91D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x468 DUP2 PUSH2 0x1917 JUMP JUMPDEST DUP5 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 DUP3 MSTORE DUP8 DUP4 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP10 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH2 0x120 DUP11 ADD MSTORE PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0xCA SWAP1 SWAP8 MSTORE SWAP3 SWAP1 SWAP6 KECCAK256 DUP8 MLOAD DUP2 SSTORE SWAP6 MLOAD SWAP2 DUP7 ADD DUP1 SLOAD SWAP3 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP7 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x3 DUP6 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE MLOAD DUP1 MLOAD SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x731 JUMPI DUP2 SWAP1 PUSH2 0x534 PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x8CA JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x858 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x84D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x731 JUMPI PUSH2 0x58F PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x806 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x790 JUMPI SWAP2 DUP1 PUSH1 0x9 SWAP5 SWAP3 PUSH2 0x120 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x785 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP6 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH1 0x8 DUP5 ADD PUSH2 0x100 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xCD SLOAD AND DUP1 PUSH2 0x6B0 JUMPI JUMPDEST POP DUP4 SWAP2 PUSH1 0x20 SWAP6 PUSH2 0x6A5 PUSH2 0x696 PUSH32 0x5A43E6DD8FF6DDE13675567B53B8D147E61F48EC2BC7D6DADAF8E96904E348FE SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP11 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE CALLER SWAP7 PUSH2 0x1AA1 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x753 JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2939A4B5 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP11 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x747 JUMPI ISZERO PUSH2 0x63B JUMPI SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x731 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 PUSH2 0x63B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x77D JUMPI JUMPDEST DUP2 PUSH2 0x76E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI MLOAD DUP8 PUSH2 0x6DB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x761 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x5B9 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x7EE JUMPI POP SWAP3 PUSH1 0x9 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x120 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x7D5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x5D1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x846 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x83A JUMPI POP POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x824 JUMP JUMPDEST POP DUP1 PUSH2 0x824 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x554 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x8AF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x896 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x56C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x886 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x86B JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x916 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x907 JUMPI POP POP PUSH2 0x53D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x8F1 JUMP JUMPDEST POP DUP1 PUSH2 0x8EB JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH1 0x40 DUP5 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x95E JUMPI JUMPDEST DUP2 PUSH2 0x93A PUSH1 0x40 SWAP4 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI PUSH2 0x957 PUSH1 0x20 PUSH2 0x950 DUP7 PUSH2 0x1E88 JUMP JUMPDEST SWAP6 ADD PUSH2 0x1E88 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x45B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x92D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1853E995 PUSH1 0xE1 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x9E4 JUMPI JUMPDEST POP ISZERO PUSH2 0x99F JUMPI DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417374726F6C6F676572206E6F74207665726966696564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA17 JUMPI JUMPDEST DUP2 PUSH2 0x9FF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1AB JUMPI DUP4 PUSH2 0x993 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417374726F6C6F67657220616C726561647920686173206120746F6B656E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C207072696365206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C79206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x53796D626F6C2063616E6E6F7420626520656D707479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E616D652063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C61756E636820666565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0xCAC PUSH2 0xBE1 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0xBE9 PUSH2 0x1EDB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC0F DUP2 ISZERO ISZERO PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC2B DUP5 PUSH2 0x1917 JUMP JUMPDEST DUP2 SLOAD DUP5 MSTORE DUP1 PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE DUP1 PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC5E PUSH1 0x4 DUP3 ADD PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xC6F PUSH1 0x5 DUP3 ADD PUSH2 0x19FB JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x8 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1AE1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0xCAC PUSH2 0xCF5 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0xCFD PUSH2 0x1EDB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC0F DUP2 ISZERO ISZERO PUSH2 0x1F29 JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD3F PUSH2 0x1EDB JUMP JUMPDEST POP DUP1 ISZERO ISZERO DUP1 PUSH2 0xDAD JUMPI JUMPDEST PUSH2 0xD52 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH2 0xCAC PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xD71 DUP4 PUSH2 0x1917 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC5E PUSH1 0x4 DUP3 ADD PUSH2 0x19FB JUMP JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0xD49 JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0xDD2 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0xE58 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xCF SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xEB9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2000 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP3 DUP1 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x3 DUP4 ADD SLOAD AND SWAP2 PUSH2 0xF72 PUSH1 0x4 DUP3 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 PUSH2 0xFD5 PUSH2 0xF82 PUSH1 0x5 DUP5 ADD PUSH2 0x19FB JUMP JUMPDEST PUSH2 0xFC7 PUSH1 0x6 DUP6 ADD SLOAD SWAP7 PUSH1 0x7 DUP7 ADD SLOAD SWAP5 PUSH1 0x9 PUSH1 0xFF PUSH1 0x8 DUP10 ADD SLOAD AND SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH2 0x140 DUP1 PUSH1 0x80 DUP12 ADD MSTORE DUP10 ADD SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x1AA1 JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x1006 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1AB JUMPI PUSH2 0x1036 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x198A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 SWAP1 PUSH2 0x106F ADDRESS DUP5 EQ ISZERO PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x108C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2000 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x1C9A JUMP JUMPDEST PUSH2 0x1094 PUSH2 0x1B98 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10CA JUMPI POP POP POP PUSH2 0x155 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST DUP4 AND PUSH1 0x40 MLOAD SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1281 JUMPI JUMPDEST POP PUSH2 0x114F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP3 SWAP4 SUB PUSH2 0x122A JUMPI PUSH2 0x1160 DUP5 PUSH2 0x1CFB JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1222 JUMPI JUMPDEST PUSH2 0x1196 JUMPI STOP JUMPDEST PUSH2 0x155 SWAP3 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x11AA DUP7 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP6 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP5 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1219 JUMPI RETURNDATASIZE PUSH2 0x11FC DUP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 PUSH2 0x120A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1D8B JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x12A9 JUMPI JUMPDEST PUSH2 0x1299 DUP2 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI MLOAD SWAP1 DUP8 PUSH2 0x10EE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x128F JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x12C9 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x12D1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0xCD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0xC9 SLOAD PUSH2 0x1310 DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x1 SWAP2 DUP3 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x139F JUMPI POP POP PUSH2 0x132C DUP4 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1376 JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP5 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP6 ADD SWAP6 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1363 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x1356 JUMP JUMPDEST DUP1 PUSH2 0x1386 PUSH2 0x1397 SWAP3 DUP6 SWAP8 SWAP6 PUSH2 0x1FD5 JUMP JUMPDEST MLOAD PUSH2 0x1391 DUP3 DUP7 PUSH2 0x1FD5 JUMP JUMPDEST MSTORE PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 SWAP2 SWAP4 PUSH2 0x1330 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP6 SWAP4 SWAP6 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x13CD JUMPI JUMPDEST PUSH2 0x13C5 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 SWAP2 SWAP4 PUSH2 0x1319 JUMP JUMPDEST SWAP2 PUSH2 0x13E0 DUP2 DUP5 PUSH2 0x1391 PUSH2 0x13C5 SWAP5 DUP10 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x13BC JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x1401 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1423 JUMPI JUMPDEST CALL ISZERO PUSH2 0x747 JUMPI STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x141B JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x1446 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH32 0x0 DUP4 AND PUSH2 0x147E ADDRESS DUP3 EQ ISZERO PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x149B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2000 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP6 DUP4 SLOAD AND EQ PUSH2 0x1C9A JUMP JUMPDEST PUSH2 0x14A3 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 ADD SWAP5 DUP3 DUP7 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 GT OR PUSH2 0x731 JUMPI DUP6 PUSH1 0x40 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x14FF JUMPI POP POP POP POP PUSH2 0x155 SWAP2 POP PUSH2 0x1CFB JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x168D JUMPI JUMPDEST POP PUSH2 0x1584 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP4 SWAP5 SUB PUSH2 0x1636 JUMPI PUSH2 0x1595 DUP3 PUSH2 0x1CFB JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x162E JUMPI JUMPDEST PUSH2 0x15CB JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x155 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x15DF DUP8 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1219 JUMPI RETURNDATASIZE PUSH2 0x11FC DUP2 PUSH2 0x196F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x16B5 JUMPI JUMPDEST PUSH2 0x16A5 DUP2 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI MLOAD SWAP1 DUP9 PUSH2 0x1523 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x169B JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16DD PUSH2 0x1901 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x170F PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x1717 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0xCE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x175A PUSH2 0x1901 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x178C PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x1AB JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0x18F4 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x18DD JUMPI JUMPDEST ISZERO PUSH2 0x1884 JUMPI POP PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP4 PUSH2 0x1872 JUMPI JUMPDEST POP PUSH2 0x17F2 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x17ED DUP2 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x17FB CALLER PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP4 PUSH2 0x180E PUSH1 0xFF DUP7 PUSH1 0x8 SHR AND PUSH2 0x1E28 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 AND DUP2 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xCF SSTORE PUSH2 0x183D JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP5 PUSH2 0x17D7 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C0 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP4 AND EQ PUSH2 0x17C0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP4 AND LT PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x731 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x731 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x731 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x731 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1996 DUP3 PUSH2 0x196F JUMP JUMPDEST SWAP2 PUSH2 0x19A4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x194E JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1AB JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x19F1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x19DB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1A0F DUP5 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1A7E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A3B JUMPI JUMPDEST POP POP PUSH2 0x1A39 SWAP3 POP SUB DUP4 PUSH2 0x194E JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1A66 JUMPI POP POP PUSH2 0x1A39 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1A2B JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A39 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1A2B JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1ACD JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE DUP1 PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1B4C PUSH2 0x1B36 PUSH2 0x140 SWAP3 DUP4 PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1AA1 JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 SWAP1 DUP2 DUP6 ADD MSTORE DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x120 SWAP2 DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP2 PUSH1 0x20 PUSH2 0x1B95 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x198A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1BAC JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x1C40 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1CA1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1D30 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2000 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1DED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1D9F JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1DA8 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1E00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1E24 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E2F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1EA3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A59081D1BDAD95B881251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EE8 DUP3 PUSH2 0x1917 JUMP JUMPDEST DUP2 PUSH2 0x120 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1F30 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x731 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1F88 DUP3 PUSH2 0x1F67 JUMP JUMPDEST PUSH2 0x1F95 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x194E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1FA6 PUSH1 0x1F NOT SWAP2 PUSH2 0x1F67 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1FBF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1FE9 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122089 0xC3 0x26 0xD3 PUSH30 0x883B1AE1B4989DF96B1BBAE11B04B3214F9666947FB00066A0F27264736F PUSH13 0x63430008110033000000000000 ","sourceMap":"504:6024:22:-:0;;;;;;;1332:4:6;1324:13;;6007::5;504:6024:22;;;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;504:6024:22;;;;;;;;1324:13:6;504:6024:22;;;;;;;;;;;;;;;;6074:139:5;504:6024:22;;;;;;6007:13:5;504:6024:22;6174:28:5;504:6024:22;;;;;;6174:28:5;6074:139;;;504:6024:22;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6401,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":7816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":6538,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":7034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":6817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_TokenInfo":{"entryPoint":6881,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":8062,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_TokenInfo":{"entryPoint":7899,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":8039,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":6511,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":6651,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6593,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6478,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_21466":{"entryPoint":6423,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_29539":{"entryPoint":6451,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":7064,"id":68,"parameterSlots":0,"returnSlots":0},"fun_setImplementation":{"entryPoint":7419,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":7152,"id":125,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":7563,"id":2277,"parameterSlots":4,"returnSlots":1},"increment_uint256":{"entryPoint":8112,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":8149,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_36e1":{"entryPoint":7225,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_487a":{"entryPoint":7977,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":7322,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b44e":{"entryPoint":7836,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":7720,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":3699},{"length":32,"start":4160},{"length":32,"start":5201}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c9081631794bb3c146117735750806321dd6760146117395780632f73a9f8146116f657806336203131146116bc5780633659cfe61461142c5780633ccfd60b146113e857806342fbbf4f146112f357806344cda485146112b05780634f1ef28614610ff25780634f64b2be14610f2457806352d1902d14610e605780635313be2c14610e3f5780636fd31a4114610e16578063715018a614610db95780638c7a63ae14610d235780638d84289e14610cd95780638da5cb5b14610cb0578063922edb3414610bc5578063ad19748b1461031f578063cf3cf57314610301578063e77772fe146102d8578063ec991da9146101b05763f2fde38b1461011c57600080fd5b346101ab5760203660031901126101ab57610135611901565b61013d611b98565b6001600160a01b038116156101575761015590611bf0565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101ab576020806003193601126101ab5760043590811515806102cc575b6101d890611e9c565b600082815260ca825260409020600101546001600160a01b03163303610296578160005260ca815260ff60086040600020015416156102525760ca908260005252600860406000200160ff19815416905533907fc5bc70dcbaa7453c88acb052849608a31643ca7b9865b086176cfc8fa995720b600080a3005b6064906040519062461bcd60e51b82526004820152601960248201527f546f6b656e20616c7265616479206465616374697661746564000000000000006044820152fd5b6064906040519062461bcd60e51b82526004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b6044820152fd5b5060c9548211156101cf565b346101ab5760003660031901126101ab5760ce546040516001600160a01b039091168152602090f35b346101ab5760003660031901126101ab57602060cf54604051908152f35b60a03660031901126101ab576004356001600160401b0381116101ab5761034a903690600401611b7a565b6024356001600160401b0381116101ab57610369903690600401611b7a565b6084356001600160401b0381116101ab57610388903690600401611b7a565b5060cf543410610b8057815115610b4457805115610b065760443515610ab55760643515610a64573360005260cb602052604060002054610a1f5760cd546001600160a01b031680610966575b5060c980546001019081905560ce5460408051630cb8743b60e21b815260a06004820152949293929185906001600160a01b03168160008161042f61041d60a4830189611aa1565b82810360031901602484015289611aa1565b6044356044830152606435606483015233608483015203925af19081156107475760009460009261091d575b5060405161046881611917565b8481523360208083019182526001600160a01b038881166040808601918252878316606087019081526080870188815260a088018b905260443560c089015260643560e089015260016101008901819052426101208a015260008d815260ca9097529290952087518155955191860180549285166001600160a01b031993841617905591516002860180549185169183169190911790559051600385018054919093169116179055518051919291906001600160401b03821161073157819061053460048601546119c1565b601f81116108ca575b50602090601f83116001146108585760009261084d575b50508160011b916000199060031b1c19161760048301555b60a08101518051906001600160401b0382116107315761058f60058501546119c1565b601f8111610806575b50602090601f83116001146107905791806009949261012094600092610785575b50508160011b916000199060031b1c19161760058501555b60c0810151600685015560e0810151600785015560088401610100820151151560ff8019835416911617905501519101553360005260cb6020528360406000205560018060a01b03851660005260cc6020528360406000205560018060a01b0360cd5416806106b0575b5083916020956106a56106967f5a43e6dd8ff6dde13675567b53b8d147e61f48ec2bc7d6dadaf8e96904e348fe9460405194859460018060a01b0316855260018060a01b03168a850152608060408501526080840190611aa1565b82810360608401523396611aa1565b0390a3604051908152f35b60405163656d0c3960e01b8152336004820152602081602481855afa90811561074757600091610753575b50813b156101ab57600091604483926040519485938492632939a4b560e11b845260048401528a60248401525af18015610747571561063b5790916001600160401b03821161073157604091909152908361063b565b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b90506020813d60201161077d575b8161076e6020938361194e565b810103126101ab5751876106db565b3d9150610761565b015190508b806105b9565b906005850160005260206000209160005b601f19851681106107ee575092600994926001926101209583601f198116106107d5575b505050811b0160058501556105d1565b015160001960f88460031b161c191690558b80806107c5565b919260206001819286850151815501940192016107a1565b600585016000526020600020601f840160051c810160208510610846575b601f830160051c8201811061083a575050610598565b60008155600101610824565b5080610824565b015190508980610554565b9250600485016000526020600020906000935b601f19841685106108af576001945083601f19811610610896575b505050811b01600483015561056c565b015160001960f88460031b161c19169055898080610886565b8181015183556020948501946001909301929091019061086b565b909150600485016000526020600020601f840160051c810160208510610916575b90849392915b601f830160051c8201811061090757505061053d565b600081558594506001016108f1565b50806108eb565b945090506040843d60401161095e575b8161093a6040938361194e565b810103126101ab57610957602061095086611e88565b9501611e88565b908561045b565b3d915061092d565b602060249160405192838092631853e99560e11b82523360048301525afa908115610747576000916109e4575b501561099f57826103d5565b60405162461bcd60e51b815260206004820152601760248201527f417374726f6c6f676572206e6f742076657269666965640000000000000000006044820152606490fd5b90506020813d602011610a17575b816109ff6020938361194e565b810103126101ab575180151581036101ab5783610993565b3d91506109f2565b60405162461bcd60e51b815260206004820152601e60248201527f417374726f6c6f67657220616c726561647920686173206120746f6b656e00006044820152606490fd5b60405162461bcd60e51b8152602060048201526024808201527f496e697469616c207072696365206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f546f74616c20737570706c79206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b60405162461bcd60e51b815260206004820152601660248201527553796d626f6c2063616e6e6f7420626520656d70747960501b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e616d652063616e6e6f7420626520656d70747960601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e74206c61756e6368206665650000000000000000006044820152606490fd5b346101ab5760203660031901126101ab57610cac610be1611901565b610be9611edb565b506001600160a01b03908116600090815260cb6020526040902054610c0f811515611f29565b60005260ca6020526009604060002060405192610c2b84611917565b815484528060018301541660208501528060028301541660408501526003820154166060840152610c5e600482016119fb565b6080840152610c6f600582016119fb565b60a0840152600681015460c0840152600781015460e084015260ff6008820154161515610100840152015461012082015260405191829182611ae1565b0390f35b346101ab5760003660031901126101ab576033546040516001600160a01b039091168152602090f35b346101ab5760203660031901126101ab57610cac610cf5611901565b610cfd611edb565b506001600160a01b03908116600090815260cc6020526040902054610c0f811515611f29565b346101ab5760203660031901126101ab57600435610d3f611edb565b5080151580610dad575b610d5290611e9c565b60005260ca602052610cac6040600020600960405191610d7183611917565b8054835260018101546001600160a01b0390811660208501526002820154811660408501526003820154166060840152610c5e600482016119fb565b5060c954811115610d49565b346101ab5760003660031901126101ab57610dd2611b98565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101ab5760003660031901126101ab5760cd546040516001600160a01b039091168152602090f35b346101ab5760203660031901126101ab57610e58611b98565b60043560cf55005b346101ab5760003660031901126101ab577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610eb95760206040516000805160206120008339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b346101ab5760203660031901126101ab5760043560005260ca6020526040600020805460018060a01b03918260018201541692806002830154169060038301541691610f72600482016119fb565b92610fd5610f82600584016119fb565b610fc7600685015496600786015494600960ff600889015416970154976040519b8c9b8c5260208c015260408b015260608a01526101408060808b0152890190611aa1565b9087820360a0890152611aa1565b9360c086015260e085015215156101008401526101208301520390f35b60403660031901126101ab57611006611901565b6024356001600160401b0381116101ab57366023820112156101ab5761103690369060248160040135910161198a565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116919061106f30841415611c39565b61108c600080516020612000833981519152938285541614611c9a565b611094611b98565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156110ca5750505061015590611cfb565b8316604051926352d1902d60e01b84526020938481600481865afa60009181611281575b5061114f5760405162461bcd60e51b815260048101869052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9392930361122a5761116084611cfb565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590611222575b61119657005b61015592600080604051946111aa86611933565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d15611219573d6111fc8161196f565b9061120a604051928361194e565b8152600081943d92013e611d8b565b60609250611d8b565b506001611190565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508581813d83116112a9575b611299818361194e565b810103126101ab575190876110ee565b503d61128f565b346101ab5760203660031901126101ab576112c9611901565b6112d1611b98565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055005b346101ab5760003660031901126101ab5760c95461131081611f7e565b90600091600191825b8181111561139f57505061132c83611f7e565b9260005b818110611376575050506040519060208083018184528451809152816040850195019160005b8281106113635785870386f35b8351875295810195928101928401611356565b8061138661139792859795611fd5565b516113918286611fd5565b52611fb0565b939193611330565b8060009593955260ca60205260ff600860406000200154166113cd575b6113c590611fb0565b939193611319565b916113e081846113916113c59489611fd5565b9290506113bc565b346101ab5760003660031901126101ab57611401611b98565b600080808060018060a01b03603354164790828215611423575bf11561074757005b506108fc61141b565b346101ab576020806003193601126101ab57611446611901565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831661147e30821415611c39565b61149b600080516020612000833981519152918583541614611c9a565b6114a3611b98565b60405190828201948286106001600160401b0387111761073157856040526000835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914354166000146114ff57505050506101559150611cfb565b8492939416906040516352d1902d60e01b81528581600481865afa6000918161168d575b506115845760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b949394036116365761159582611cfb565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a282511580159061162e575b6115cb57005b60008061015595604051956115df87611933565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15611219573d6111fc8161196f565b5060006115c5565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d83116116b5575b6116a5818361194e565b810103126101ab57519088611523565b503d61169b565b346101ab5760203660031901126101ab576001600160a01b036116dd611901565b1660005260cc6020526020604060002054604051908152f35b346101ab5760203660031901126101ab5761170f611901565b611717611b98565b60ce80546001600160a01b0319166001600160a01b0392909216919091179055005b346101ab5760203660031901126101ab576001600160a01b0361175a611901565b1660005260cb6020526020604060002054604051908152f35b346101ab5760603660031901126101ab5761178c611901565b6001600160a01b03919060243583811691908290036101ab5760005460ff8160081c1615938480956118f4575b80156118dd575b15611884575060ff19811660011760005583611872575b506117f260ff60005460081c166117ed81611e28565b611e28565b6117fb33611bf0565b6000549361180e60ff8660081c16611e28565b6bffffffffffffffffffffffff60a01b91168160cd54161760cd5560ce54161760ce5560443560cf5561183d57005b61ff0019166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b61ffff191661010117600055846117d7565b62461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156117c05750600160ff8316146117c0565b50600160ff8316106117b9565b600435906001600160a01b03821682036101ab57565b61014081019081106001600160401b0382111761073157604052565b606081019081106001600160401b0382111761073157604052565b90601f801991011681019081106001600160401b0382111761073157604052565b6001600160401b03811161073157601f01601f191660200190565b9291926119968261196f565b916119a4604051938461194e565b8294818452818301116101ab578281602093846000960137010152565b90600182811c921680156119f1575b60208310146119db57565b634e487b7160e01b600052602260045260246000fd5b91607f16916119d0565b9060405191826000825492611a0f846119c1565b908184526001948581169081600014611a7e5750600114611a3b575b5050611a399250038361194e565b565b9093915060005260209081600020936000915b818310611a66575050611a3993508201013880611a2b565b85548884018501529485019487945091830191611a4e565b915050611a3994506020925060ff191682840152151560051b8201013880611a2b565b919082519283825260005b848110611acd575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611aac565b602081528151602082015260018060a01b0380602084015116604083015280604084015116606083015260608301511660808201526080820151611b4c611b36610140928360a0860152610160850190611aa1565b60a0850151848203601f190160c0860152611aa1565b9260c081015160e084015260e081015161010090818501528101511515906101209182850152015191015290565b9080601f830112156101ab57816020611b959335910161198a565b90565b6033546001600160a01b03163303611bac57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611c4057565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15611ca157565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15611d305760008051602061200083398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015611ded5750815115611d9f575090565b3b15611da85790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611e005750805190602001fd5b60405162461bcd60e51b815260206004820152908190611e24906024830190611aa1565b0390fd5b15611e2f57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b51906001600160a01b03821682036101ab57565b15611ea357565b60405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081d1bdad95b88125160821b6044820152606490fd5b60405190611ee882611917565b8161012060009182815282602082015282604082015282606082015260606080820152606060a08201528260c08201528260e0820152826101008201520152565b15611f3057565b60405162461bcd60e51b815260206004820152600f60248201526e151bdad95b881b9bdd08199bdd5b99608a1b6044820152606490fd5b6001600160401b0381116107315760051b60200190565b90611f8882611f67565b611f95604051918261194e565b8281528092611fa6601f1991611f67565b0190602036910137565b6000198114611fbf5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015611fe95760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122089c326d37d883b1ae1b4989df96b1bbae11b04b3214f9666947fb00066a0f27264736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1794BB3C EQ PUSH2 0x1773 JUMPI POP DUP1 PUSH4 0x21DD6760 EQ PUSH2 0x1739 JUMPI DUP1 PUSH4 0x2F73A9F8 EQ PUSH2 0x16F6 JUMPI DUP1 PUSH4 0x36203131 EQ PUSH2 0x16BC JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x142C JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x13E8 JUMPI DUP1 PUSH4 0x42FBBF4F EQ PUSH2 0x12F3 JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x12B0 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xFF2 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0xF24 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xE60 JUMPI DUP1 PUSH4 0x5313BE2C EQ PUSH2 0xE3F JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0xE16 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDB9 JUMPI DUP1 PUSH4 0x8C7A63AE EQ PUSH2 0xD23 JUMPI DUP1 PUSH4 0x8D84289E EQ PUSH2 0xCD9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCB0 JUMPI DUP1 PUSH4 0x922EDB34 EQ PUSH2 0xBC5 JUMPI DUP1 PUSH4 0xAD19748B EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xCF3CF573 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xE77772FE EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xEC991DA9 EQ PUSH2 0x1B0 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x135 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x157 JUMPI PUSH2 0x155 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x2CC JUMPI JUMPDEST PUSH2 0x1D8 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x296 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0xCA DUP2 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x252 JUMPI PUSH1 0xCA SWAP1 DUP3 PUSH1 0x0 MSTORE MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER SWAP1 PUSH32 0xC5BC70DCBAA7453C88ACB052849608A31643CA7B9865B086176CFC8FA995720B PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C726561647920646561637469766174656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA103A37B5B2B71037BBB732B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP3 GT ISZERO PUSH2 0x1CF JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x20 PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI PUSH2 0x34A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI PUSH2 0x369 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI PUSH2 0x388 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B7A JUMP JUMPDEST POP PUSH1 0xCF SLOAD CALLVALUE LT PUSH2 0xB80 JUMPI DUP2 MLOAD ISZERO PUSH2 0xB44 JUMPI DUP1 MLOAD ISZERO PUSH2 0xB06 JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0xAB5 JUMPI PUSH1 0x64 CALLDATALOAD ISZERO PUSH2 0xA64 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA1F JUMPI PUSH1 0xCD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x966 JUMPI JUMPDEST POP PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0xCE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCB8743B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0xA0 PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP3 SWAP4 SWAP3 SWAP2 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 PUSH2 0x42F PUSH2 0x41D PUSH1 0xA4 DUP4 ADD DUP10 PUSH2 0x1AA1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x24 DUP5 ADD MSTORE DUP10 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE CALLER PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x91D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x468 DUP2 PUSH2 0x1917 JUMP JUMPDEST DUP5 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 DUP3 MSTORE DUP8 DUP4 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP10 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH2 0x120 DUP11 ADD MSTORE PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0xCA SWAP1 SWAP8 MSTORE SWAP3 SWAP1 SWAP6 KECCAK256 DUP8 MLOAD DUP2 SSTORE SWAP6 MLOAD SWAP2 DUP7 ADD DUP1 SLOAD SWAP3 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP7 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x3 DUP6 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE MLOAD DUP1 MLOAD SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x731 JUMPI DUP2 SWAP1 PUSH2 0x534 PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x8CA JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x858 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x84D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x731 JUMPI PUSH2 0x58F PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x806 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x790 JUMPI SWAP2 DUP1 PUSH1 0x9 SWAP5 SWAP3 PUSH2 0x120 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x785 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP6 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH1 0x8 DUP5 ADD PUSH2 0x100 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xCD SLOAD AND DUP1 PUSH2 0x6B0 JUMPI JUMPDEST POP DUP4 SWAP2 PUSH1 0x20 SWAP6 PUSH2 0x6A5 PUSH2 0x696 PUSH32 0x5A43E6DD8FF6DDE13675567B53B8D147E61F48EC2BC7D6DADAF8E96904E348FE SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP11 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE CALLER SWAP7 PUSH2 0x1AA1 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x753 JUMPI JUMPDEST POP DUP2 EXTCODESIZE ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x2939A4B5 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP11 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x747 JUMPI ISZERO PUSH2 0x63B JUMPI SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x731 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 PUSH2 0x63B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x77D JUMPI JUMPDEST DUP2 PUSH2 0x76E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI MLOAD DUP8 PUSH2 0x6DB JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x761 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x5B9 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x7EE JUMPI POP SWAP3 PUSH1 0x9 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x120 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x7D5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x5D1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x846 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x83A JUMPI POP POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x824 JUMP JUMPDEST POP DUP1 PUSH2 0x824 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x554 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x8AF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x896 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x56C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x886 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x86B JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x916 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x907 JUMPI POP POP PUSH2 0x53D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x8F1 JUMP JUMPDEST POP DUP1 PUSH2 0x8EB JUMP JUMPDEST SWAP5 POP SWAP1 POP PUSH1 0x40 DUP5 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0x95E JUMPI JUMPDEST DUP2 PUSH2 0x93A PUSH1 0x40 SWAP4 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI PUSH2 0x957 PUSH1 0x20 PUSH2 0x950 DUP7 PUSH2 0x1E88 JUMP JUMPDEST SWAP6 ADD PUSH2 0x1E88 JUMP JUMPDEST SWAP1 DUP6 PUSH2 0x45B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x92D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1853E995 PUSH1 0xE1 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x9E4 JUMPI JUMPDEST POP ISZERO PUSH2 0x99F JUMPI DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417374726F6C6F676572206E6F74207665726966696564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA17 JUMPI JUMPDEST DUP2 PUSH2 0x9FF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1AB JUMPI DUP4 PUSH2 0x993 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417374726F6C6F67657220616C726561647920686173206120746F6B656E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C207072696365206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C79206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x53796D626F6C2063616E6E6F7420626520656D707479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E616D652063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C61756E636820666565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0xCAC PUSH2 0xBE1 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0xBE9 PUSH2 0x1EDB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC0F DUP2 ISZERO ISZERO PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC2B DUP5 PUSH2 0x1917 JUMP JUMPDEST DUP2 SLOAD DUP5 MSTORE DUP1 PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE DUP1 PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC5E PUSH1 0x4 DUP3 ADD PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0xC6F PUSH1 0x5 DUP3 ADD PUSH2 0x19FB JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x8 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1AE1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0xCAC PUSH2 0xCF5 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0xCFD PUSH2 0x1EDB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC0F DUP2 ISZERO ISZERO PUSH2 0x1F29 JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xD3F PUSH2 0x1EDB JUMP JUMPDEST POP DUP1 ISZERO ISZERO DUP1 PUSH2 0xDAD JUMPI JUMPDEST PUSH2 0xD52 SWAP1 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH2 0xCAC PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xD71 DUP4 PUSH2 0x1917 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xC5E PUSH1 0x4 DUP3 ADD PUSH2 0x19FB JUMP JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0xD49 JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0xDD2 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0xE58 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xCF SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xEB9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2000 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP3 DUP1 PUSH1 0x2 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x3 DUP4 ADD SLOAD AND SWAP2 PUSH2 0xF72 PUSH1 0x4 DUP3 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 PUSH2 0xFD5 PUSH2 0xF82 PUSH1 0x5 DUP5 ADD PUSH2 0x19FB JUMP JUMPDEST PUSH2 0xFC7 PUSH1 0x6 DUP6 ADD SLOAD SWAP7 PUSH1 0x7 DUP7 ADD SLOAD SWAP5 PUSH1 0x9 PUSH1 0xFF PUSH1 0x8 DUP10 ADD SLOAD AND SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH2 0x140 DUP1 PUSH1 0x80 DUP12 ADD MSTORE DUP10 ADD SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x1AA1 JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x1006 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1AB JUMPI PUSH2 0x1036 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x198A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 SWAP1 PUSH2 0x106F ADDRESS DUP5 EQ ISZERO PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x108C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2000 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 DUP3 DUP6 SLOAD AND EQ PUSH2 0x1C9A JUMP JUMPDEST PUSH2 0x1094 PUSH2 0x1B98 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10CA JUMPI POP POP POP PUSH2 0x155 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST DUP4 AND PUSH1 0x40 MLOAD SWAP3 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1281 JUMPI JUMPDEST POP PUSH2 0x114F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP4 SWAP3 SWAP4 SUB PUSH2 0x122A JUMPI PUSH2 0x1160 DUP5 PUSH2 0x1CFB JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1222 JUMPI JUMPDEST PUSH2 0x1196 JUMPI STOP JUMPDEST PUSH2 0x155 SWAP3 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x11AA DUP7 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP6 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP5 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1219 JUMPI RETURNDATASIZE PUSH2 0x11FC DUP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 PUSH2 0x120A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x1D8B JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x12A9 JUMPI JUMPDEST PUSH2 0x1299 DUP2 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI MLOAD SWAP1 DUP8 PUSH2 0x10EE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x128F JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x12C9 PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x12D1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0xCD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0xC9 SLOAD PUSH2 0x1310 DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x1 SWAP2 DUP3 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x139F JUMPI POP POP PUSH2 0x132C DUP4 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1376 JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP5 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP6 ADD SWAP6 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1363 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0x1356 JUMP JUMPDEST DUP1 PUSH2 0x1386 PUSH2 0x1397 SWAP3 DUP6 SWAP8 SWAP6 PUSH2 0x1FD5 JUMP JUMPDEST MLOAD PUSH2 0x1391 DUP3 DUP7 PUSH2 0x1FD5 JUMP JUMPDEST MSTORE PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 SWAP2 SWAP4 PUSH2 0x1330 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP6 SWAP4 SWAP6 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x13CD JUMPI JUMPDEST PUSH2 0x13C5 SWAP1 PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 SWAP2 SWAP4 PUSH2 0x1319 JUMP JUMPDEST SWAP2 PUSH2 0x13E0 DUP2 DUP5 PUSH2 0x1391 PUSH2 0x13C5 SWAP5 DUP10 PUSH2 0x1FD5 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x13BC JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x1401 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1423 JUMPI JUMPDEST CALL ISZERO PUSH2 0x747 JUMPI STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0x141B JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x1446 PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH32 0x0 DUP4 AND PUSH2 0x147E ADDRESS DUP3 EQ ISZERO PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x149B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2000 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP6 DUP4 SLOAD AND EQ PUSH2 0x1C9A JUMP JUMPDEST PUSH2 0x14A3 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 ADD SWAP5 DUP3 DUP7 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 GT OR PUSH2 0x731 JUMPI DUP6 PUSH1 0x40 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x14FF JUMPI POP POP POP POP PUSH2 0x155 SWAP2 POP PUSH2 0x1CFB JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x168D JUMPI JUMPDEST POP PUSH2 0x1584 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP4 SWAP5 SUB PUSH2 0x1636 JUMPI PUSH2 0x1595 DUP3 PUSH2 0x1CFB JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x162E JUMPI JUMPDEST PUSH2 0x15CB JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x155 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x15DF DUP8 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1219 JUMPI RETURNDATASIZE PUSH2 0x11FC DUP2 PUSH2 0x196F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x15C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x16B5 JUMPI JUMPDEST PUSH2 0x16A5 DUP2 DUP4 PUSH2 0x194E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI MLOAD SWAP1 DUP9 PUSH2 0x1523 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x169B JUMP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x16DD PUSH2 0x1901 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x170F PUSH2 0x1901 JUMP JUMPDEST PUSH2 0x1717 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0xCE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x175A PUSH2 0x1901 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1AB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1AB JUMPI PUSH2 0x178C PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x1AB JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0x18F4 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x18DD JUMPI JUMPDEST ISZERO PUSH2 0x1884 JUMPI POP PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP4 PUSH2 0x1872 JUMPI JUMPDEST POP PUSH2 0x17F2 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x17ED DUP2 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x17FB CALLER PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP4 PUSH2 0x180E PUSH1 0xFF DUP7 PUSH1 0x8 SHR AND PUSH2 0x1E28 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP2 AND DUP2 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xCF SSTORE PUSH2 0x183D JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP5 PUSH2 0x17D7 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C0 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP4 AND EQ PUSH2 0x17C0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP4 AND LT PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x731 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x731 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x731 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x731 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1996 DUP3 PUSH2 0x196F JUMP JUMPDEST SWAP2 PUSH2 0x19A4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x194E JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1AB JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x19F1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x19DB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1A0F DUP5 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1A7E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A3B JUMPI JUMPDEST POP POP PUSH2 0x1A39 SWAP3 POP SUB DUP4 PUSH2 0x194E JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1A66 JUMPI POP POP PUSH2 0x1A39 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1A2B JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A39 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1A2B JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1ACD JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1AAC JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE DUP1 PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1B4C PUSH2 0x1B36 PUSH2 0x140 SWAP3 DUP4 PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1AA1 JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 SWAP1 DUP2 DUP6 ADD MSTORE DUP2 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x120 SWAP2 DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP2 PUSH1 0x20 PUSH2 0x1B95 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x198A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1BAC JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x1C40 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1CA1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1D30 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2000 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1DED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1D9F JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1DA8 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1E00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1E24 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E2F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1AB JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1EA3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A59081D1BDAD95B881251 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1EE8 DUP3 PUSH2 0x1917 JUMP JUMPDEST DUP2 PUSH2 0x120 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1F30 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x731 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1F88 DUP3 PUSH2 0x1F67 JUMP JUMPDEST PUSH2 0x1F95 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x194E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1FA6 PUSH1 0x1F NOT SWAP2 PUSH2 0x1F67 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1FBF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1FE9 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122089 0xC3 0x26 0xD3 PUSH30 0x883B1AE1B4989DF96B1BBAE11B04B3214F9666947FB00066A0F27264736F PUSH13 0x63430008110033000000000000 ","sourceMap":"504:6024:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;504:6024:22;;2402:22:0;504:6024:22;;2496:8:0;;;:::i;:::-;504:6024:22;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;4337:11;;;;:45;;;504:6024;4329:74;;;:::i;:::-;504:6024;;;;4421:6;504:6024;;;;;;4421:26;504:6024;-1:-1:-1;;;;;504:6024:22;4451:10;4421:40;504:6024;;;;;4421:6;504:6024;;;4499:24;504:6024;;;4499:24;504:6024;;;;;4421:6;504:6024;;;;;4499:24;504:6024;;;4564:24;504:6024;;;;;;;4451:10;4611:37;;504:6024;4611:37;;504:6024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;4337:45;-1:-1:-1;4363:9:22;504:6024;4352:30;;;4337:45;;504:6024;;;;;;-1:-1:-1;;504:6024:22;;;;1229:27;504:6024;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;1267:24;504:6024;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;:::i;:::-;;2313:9;504:6024;2300:9;:22;504:6024;;;;2368:23;504:6024;;;;2434:25;504:6024;;;;2504:16;504:6024;;;;2578:17;504:6024;;2674:10;504:6024;;2654:19;504:6024;;;;;;;;2796:17;504:6024;-1:-1:-1;;;;;504:6024:22;;2792:168;;504:6024;-1:-1:-1;2970:9:22;504:6024;;;;;;;;3174:12;504:6024;;;;-1:-1:-1;;;3156:174:22;;504:6024;;3156:174;;504:6024;;;;;;;;-1:-1:-1;;;;;504:6024:22;;-1:-1:-1;504:6024:22;;;;;;;;:::i;:::-;;;;-1:-1:-1;;504:6024:22;;;;;;;:::i;:::-;;;;;;;;;;;;;2674:10;504:6024;;;;3156:174;;;;;;;;;504:6024;;;3156:174;;;504:6024;;;;;;;:::i;:::-;;;;2674:10;504:6024;3359:364;;;504:6024;;;-1:-1:-1;;;;;504:6024:22;;;;3359:364;;;504:6024;;;;;;;3359:364;;504:6024;;;;3359:364;;504:6024;;;;3359:364;;504:6024;;;;;3359:364;;;504:6024;;;;3359:364;;504:6024;;3359:364;;;504:6024;;;3697:15;3359:364;;;504:6024;-1:-1:-1;504:6024:22;;;3341:6;504:6024;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3359:364;;504:6024;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3359:364;504:6024;;;;;;;;;;;;;;;;;;;;;;;;;;3359:364;;;504:6024;;;;;;3359:364;;504:6024;;;;;;;;3359:364;;;504:6024;;;;;;;;;;;;;;3359:364;504:6024;;;;2674:10;504:6024;;2654:19;504:6024;;;;;;;;;;;;;;;;3785:17;504:6024;;;;;;;;;;;;2796:17;504:6024;;3899:31;3895:241;;504:6024;;;;;;;;4151:78;504:6024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2674:10;504:6024;;:::i;:::-;4151:78;;;504:6024;;;;;;3895:241;504:6024;;-1:-1:-1;;;3969:65:22;;2674:10;504:6024;3969:65;;504:6024;;;;;3969:65;;;;;;;;504:6024;3969:65;;;3895:241;4048:77;;;;;;504:6024;;;;;;;971:66:3;;;;;;;;4048:77:22;;504:6024;4048:77;;504:6024;;;;;;4048:77;;;;;;;3895:241;4048:77;504:6024;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;4048:77;504:6024;3895:241;;504:6024;;;;;;;;;;;;4048:77;504:6024;;971:66:3;504:6024:22;971:66:3;;;;;3969:65:22;;;504:6024;3969:65;;504:6024;3969:65;;;;;;504:6024;3969:65;;;:::i;:::-;;;504:6024;;;;;3969:65;;;;;;-1:-1:-1;3969:65:22;;504:6024;;;;-1:-1:-1;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;;;;;;;;3359:364;504:6024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:6024:22;;;;;;;-1:-1:-1;504:6024:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:6024:22;;;;;-1:-1:-1;504:6024:22;;;3156:174;;;;;504:6024;3156:174;;504:6024;3156:174;;;;;;504:6024;3156:174;;;:::i;:::-;;;504:6024;;;;;;;;;:::i;:::-;;;;:::i;:::-;3156:174;;;;;;;-1:-1:-1;3156:174:22;;2792:168;504:6024;;;;;971:66:3;;;;;;;2851:70:22;;2674:10;504:6024;2851:70;;504:6024;2851:70;;;;;;;504:6024;2851:70;;;2792:168;504:6024;;;;2792:168;;;504:6024;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;;;;2851:70;;;504:6024;2851:70;;504:6024;2851:70;;;;;;504:6024;2851:70;;;:::i;:::-;;;504:6024;;;;;;;;;;;;2851:70;;;;;;-1:-1:-1;2851:70:22;;504:6024;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;;504:6024:22;;;;;;;4989:19;504:6024;;;;;;5030:39;5038:11;;;5030:39;:::i;:::-;504:6024;;5086:6;504:6024;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;1513:6:0;504:6024:22;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;;504:6024:22;;;;;;;5234:17;504:6024;;;;;;5276:39;5284:11;;;5276:39;:::i;504:6024::-;;;;;;-1:-1:-1;;504:6024:22;;;;;;;;:::i;:::-;;4759:11;;;:45;;;504:6024;4751:74;;;:::i;:::-;504:6024;;4842:6;504:6024;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4759:45::-;-1:-1:-1;4785:9:22;504:6024;4774:30;;;4759:45;;504:6024;;;;;;-1:-1:-1;;504:6024:22;;;;1303:62:0;;:::i;:::-;2758:6;504:6024:22;;-1:-1:-1;;;;;;504:6024:22;;;;;;;-1:-1:-1;;;;;504:6024:22;2806:40:0;504:6024:22;;2806:40:0;504:6024:22;;;;;;;-1:-1:-1;;504:6024:22;;;;1191:32;504:6024;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;1303:62:0;;:::i;:::-;504:6024:22;;6297:22;504:6024;;;;;;;;-1:-1:-1;;504:6024:22;;;;2333:6:6;-1:-1:-1;;;;;504:6024:22;2324:4:6;2316:23;504:6024:22;;;;;-1:-1:-1;;;;;;;;;;;504:6024:22;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;;;1019:43;504:6024;;;;;;;;;;;;1019:43;;504:6024;1019:43;;504:6024;;1019:43;;;;;504:6024;;1019:43;504:6024;1019:43;;504:6024;;1019:43;;504:6024;1019:43;;;:::i;:::-;;504:6024;1019:43;;;;;:::i;:::-;504:6024;1019:43;;;504:6024;1019:43;;;;504:6024;1019:43;;504:6024;1019:43;;;504:6024;;1019:43;;504:6024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;:::i;:::-;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;504:6024:22;;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;504:6024:22;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;971:66:3;504:6024:22;;;;;;3330:17:3;;;;;;:::i;3232:526::-;504:6024:22;;;;971:66:3;;;;3383:63;;;;;;504:6024:22;3383:63:3;;;;504:6024:22;;3383:63:3;;;3232:526;-1:-1:-1;3379:302:3;;504:6024:22;;-1:-1:-1;;;3610:56:3;;504:6024:22;3610:56:3;;971:66;;;;504:6024:22;971:66:3;;504:6024:22;971:66:3;504:6024:22;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;971:66;;2171:17;;;:::i;:::-;2204:27;504:6024:22;2204:27:3;;504:6024:22;;2523:15:3;;;:28;;;3379:302;2519:123;;504:6024:22;2519:123:3;7318:69:13;504:6024:22;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;7276:25:13;;;;;;;;;504:6024:22;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;7318:69:13;:::i;504:6024:22:-;;;-1:-1:-1;7318:69:13;:::i;2523:28:3:-;;504:6024:22;2523:28:3;;971:66;504:6024:22;;-1:-1:-1;;;971:66:3;;504:6024:22;971:66:3;;;;;;504:6024:22;971:66:3;;504:6024:22;971:66:3;504:6024:22;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;504:6024:22;;;;;;-1:-1:-1;;504:6024:22;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;6057:38:22;504:6024;;-1:-1:-1;;;;;;504:6024:22;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;5484:9;504:6024;5470:34;;;:::i;:::-;5514:17;504:6024;5555:13;5567:1;5555:13;;5570:24;;;;;;;5811:20;;;;;:::i;:::-;5846:13;504:6024;5861:9;;;;;;504:6024;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5872:3;5903:12;;5872:3;5903:12;;;;;:::i;:::-;504:6024;5891:24;;;;:::i;:::-;504:6024;5872:3;:::i;:::-;5846:13;;;;;5596:3;504:6024;;;;;;5619:6;504:6024;;;5619:18;504:6024;;;5619:18;504:6024;;5615:102;;5596:3;;;;:::i;:::-;5555:13;;;;;5615:102;5657:20;5695:7;5657:20;;;5596:3;5657:20;;;:::i;5695:7::-;5615:102;;;;;504:6024;;;;;;-1:-1:-1;;504:6024:22;;;;1303:62:0;;:::i;:::-;504:6024:22;;;;;;;;;1513:6:0;504:6024:22;;6407:21;6381:48;;;;;;504:6024;6381:48;;;;504:6024;6381:48;;;;;504:6024;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;504:6024:22;1898:6:6;504:6024:22;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;504:6024:22;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;504:6024:22;;;;;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;971:66:3;504:6024:22;;3232:526:3;504:6024:22;;;3330:17:3;;;;;;;;:::i;3232:526::-;504:6024:22;;;;;;;;971:66:3;;;3383:63;;;;504:6024:22;3383:63:3;;;;504:6024:22;;3383:63:3;;;3232:526;-1:-1:-1;3379:302:3;;504:6024:22;;-1:-1:-1;;;3610:56:3;;504:6024:22;3610:56:3;;971:66;;;;;;;504:6024:22;971:66:3;504:6024:22;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;971:66;;2171:17;;;:::i;:::-;2204:27;504:6024:22;2204:27:3;;504:6024:22;;2523:15:3;;;:28;;;3379:302;2519:123;;504:6024:22;2519:123:3;504:6024:22;;7318:69:13;504:6024:22;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;7276:25:13;;;;;;504:6024:22;;;;;;;;:::i;2523:28:3:-;;504:6024:22;2523:28:3;;971:66;504:6024:22;;-1:-1:-1;;;971:66:3;;504:6024:22;971:66:3;;;;;;;;;504:6024:22;971:66:3;504:6024:22;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;504:6024:22;;;;;;-1:-1:-1;;504:6024:22;;;;-1:-1:-1;;;;;504:6024:22;;:::i;:::-;;;;1128:52;504:6024;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;6185:28:22;504:6024;;-1:-1:-1;;;;;;504:6024:22;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;-1:-1:-1;;;;;504:6024:22;;:::i;:::-;;;;1068:54;504:6024;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;:::i;:::-;-1:-1:-1;;;;;504:6024:22;;;;;;;;;;;;;;;;;;;;;3301:14:5;3347:34;;;;;;504:6024:22;3346:108:5;;;;504:6024:22;;;;-1:-1:-1;;;504:6024:22;;;;;;;3562:65:5;;504:6024:22;;5366:69:5;504:6024:22;;;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;1195:12:0;929:10:14;1195:12:0;:::i;:::-;504:6024:22;;;5366:69:5;504:6024:22;;;;;5366:69:5;:::i;:::-;504:6024:22;;;;;;1942:38;504:6024;;;1942:38;504:6024;1990:28;504:6024;;;1990:28;504:6024;;;2028:22;504:6024;3647:99:5;;504:6024:22;3647:99:5;504:6024:22;;;;;3721:14:5;504:6024:22;;;;;;3721:14:5;504:6024:22;3562:65:5;-1:-1:-1;;504:6024:22;;;;;3562:65:5;;;504:6024:22;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;3346:108:5;3426:4;;1713:19:13;:23;3387:66:5;;3346:108;3387:66;504:6024:22;;;;;3436:17:5;3346:108;;3347:34;504:6024:22;;;;;3365:16:5;3347:34;;504:6024:22;;;;-1:-1:-1;;;;;504:6024:22;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;:::o;:::-;-1:-1:-1;;;;;504:6024:22;;;;;;-1:-1:-1;;504:6024:22;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;504:6024:22;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:6024:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;504:6024:22;;;;-1:-1:-1;504:6024:22;;-1:-1:-1;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;504:6024:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;1599:130:0:-;1513:6;504:6024:22;-1:-1:-1;;;;;504:6024:22;929:10:14;1662:23:0;504:6024:22;;1599:130:0:o;504:6024:22:-;;;;;;;;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;504:6024:22;;-1:-1:-1;;;;;504:6024:22;;;-1:-1:-1;;;;;;504:6024:22;;;;;;;;;;2806:40:0;-1:-1:-1;;2806:40:0;2666:187::o;504:6024:22:-;;;;:::o;:::-;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;1699:281:3;1713:19:13;;:23;504:6024:22;;-1:-1:-1;;;;;;;;;;;504:6024:22;;-1:-1:-1;;;;;;504:6024:22;-1:-1:-1;;;;;504:6024:22;;;;;;;;;1699:281:3:o;504:6024:22:-;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;7682:628:13;;;;7886:418;;;504:6024:22;;;7917:22:13;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;504:6024:22;;8212:17:13;:::o;504:6024:22:-;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;;;;7886:418:13;504:6024:22;;;;-1:-1:-1;8991:21:13;:17;;9163:142;;;;;;;8987:379;504:6024:22;;-1:-1:-1;;;9335:20:13;;504:6024:22;9335:20:13;;;504:6024:22;;;;;;;;;;;:::i;:::-;9335:20:13;;;504:6024:22;;;;:::o;:::-;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;504:6024:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;504:6024:22;;;;;;;;;;;;-1:-1:-1;;;504:6024:22;;;;;;;;-1:-1:-1;;;;;504:6024:22;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;504:6024:22;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1655400","executionCost":"infinite","totalCost":"infinite"},"external":{"astrologerManager()":"2546","astrologerToTokenId(address)":"2431","deactivateToken(uint256)":"33006","getAllActiveTokens()":"infinite","getTokenByAstrologer(address)":"infinite","getTokenByContract(address)":"infinite","getTokenInfo(uint256)":"infinite","initialize(address,address,uint256)":"infinite","launchFee()":"2676","launchToken(string,string,uint256,uint256,string)":"infinite","owner()":"2634","proxiableUUID()":"infinite","renounceOwnership()":"28349","setAstrologerManager(address)":"26790","setLaunchFee(uint256)":"24645","setTokenFactory(address)":"26680","tokenContractToId(address)":"2475","tokenFactory()":"2722","tokens(uint256)":"infinite","transferOwnership(address)":"28696","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite","withdraw()":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"astrologerManager()":"6fd31a41","astrologerToTokenId(address)":"21dd6760","deactivateToken(uint256)":"ec991da9","getAllActiveTokens()":"42fbbf4f","getTokenByAstrologer(address)":"922edb34","getTokenByContract(address)":"8d84289e","getTokenInfo(uint256)":"8c7a63ae","initialize(address,address,uint256)":"1794bb3c","launchFee()":"cf3cf573","launchToken(string,string,uint256,uint256,string)":"ad19748b","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","setAstrologerManager(address)":"44cda485","setLaunchFee(uint256)":"5313be2c","setTokenFactory(address)":"2f73a9f8","tokenContractToId(address)":"36203131","tokenFactory()":"e77772fe","tokens(uint256)":"4f64b2be","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"}],\"name\":\"TokenDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"TokenLaunched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"astrologerManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"astrologerToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deactivateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllActiveTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"}],\"name\":\"getTokenByAstrologer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct AstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"getTokenByContract\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct AstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct AstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_launchFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"launchToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"}],\"name\":\"setAstrologerManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_launchFee\",\"type\":\"uint256\"}],\"name\":\"setLaunchFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenFactory\",\"type\":\"address\"}],\"name\":\"setTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenContractToId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AstroTokenLauncher.sol\":\"AstroTokenLauncher\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\\n    function __ERC20Burnable_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary CountersUpgradeable {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create(0, 0x09, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create2(0, 0x09, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x38), deployer)\\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\\n            mstore(add(ptr, 0x14), implementation)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\\n            mstore(add(ptr, 0x58), salt)\\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\\n            predicted := keccak256(add(ptr, 0x43), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt\\n    ) internal view returns (address predicted) {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AstroToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\ncontract AstroToken is \\n    Initializable, \\n    ERC20Upgradeable, \\n    ERC20BurnableUpgradeable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    address public astrologer;\\n    address public buyContract;\\n    bool public isInitialized;\\n    \\n    event AstroTokenInitialized(\\n        address indexed astrologer,\\n        string name,\\n        string symbol,\\n        uint256 totalSupply\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _totalSupply,\\n        address _astrologer,\\n        address _buyContract\\n    ) public initializer {\\n        require(!isInitialized, \\\"Already initialized\\\");\\n        \\n        __ERC20_init(_name, _symbol);\\n        __ERC20Burnable_init();\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologer = _astrologer;\\n        buyContract = _buyContract;\\n        \\n        // Mint total supply to astrologer\\n        _mint(_astrologer, _totalSupply);\\n        \\n        isInitialized = true;\\n        \\n        emit AstroTokenInitialized(_astrologer, _name, _symbol, _totalSupply);\\n    }\\n\\n    function mint(address to, uint256 amount) external {\\n        require(msg.sender == owner() || msg.sender == buyContract, \\\"Not authorized to mint\\\");\\n        _mint(to, amount);\\n    }\\n\\n    function burnFrom(address account, uint256 amount) public override {\\n        require(msg.sender == owner() || msg.sender == buyContract, \\\"Not authorized to burn\\\");\\n        _burn(account, amount);\\n    }\\n\\n    function setBuyContract(address _buyContract) external onlyOwner {\\n        buyContract = _buyContract;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0xa6c063b2d755749a9463670f43bc6062d6ca2f8b31b717e161dac5134f2ce13c\",\"license\":\"MIT\"},\"contracts/AstroTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./AstroToken.sol\\\";\\nimport \\\"./BuyTokenContract.sol\\\";\\n\\ncontract AstroTokenFactory is Ownable {\\n    address public astroTokenImplementation;\\n    address public buyTokenContractImplementation;\\n    address public astrologerManager;\\n    address public reputationScorer;\\n    \\n    event TokenDeployed(address indexed tokenContract, address indexed buyContract, address indexed astrologer);\\n    \\n    constructor(\\n        address _astroTokenImplementation,\\n        address _buyTokenContractImplementation,\\n        address _astrologerManager\\n    ) {\\n        astroTokenImplementation = _astroTokenImplementation;\\n        buyTokenContractImplementation = _buyTokenContractImplementation;\\n        astrologerManager = _astrologerManager;\\n        reputationScorer = address(0); // Will be set later via setter\\n    }\\n    \\n    function deployTokenPair(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _totalSupply,\\n        uint256 _initialPrice,\\n        address _astrologer\\n    ) external returns (address tokenContract, address buyContract) {\\n        // Deploy token contract\\n        tokenContract = Clones.clone(astroTokenImplementation);\\n        AstroToken(tokenContract).initialize(_name, _symbol, _totalSupply, _astrologer, address(0));\\n        \\n        // Deploy buy contract\\n        buyContract = Clones.clone(buyTokenContractImplementation);\\n        BuyTokenContract(buyContract).initialize(astrologerManager, address(0), 100);\\n        \\n        // Set ReputationScorer if available\\n        if (reputationScorer != address(0)) {\\n            BuyTokenContract(buyContract).setReputationScorer(reputationScorer);\\n        }\\n        \\n        // Register token in buy contract\\n        BuyTokenContract(buyContract).registerToken(tokenContract, _astrologer, _totalSupply, _initialPrice);\\n        \\n        // Set buy contract in token\\n        AstroToken(tokenContract).setBuyContract(buyContract);\\n        \\n        emit TokenDeployed(tokenContract, buyContract, _astrologer);\\n    }\\n    \\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n    \\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\\n        reputationScorer = _reputationScorer;\\n    }\\n    \\n    function setImplementations(\\n        address _astroTokenImplementation,\\n        address _buyTokenContractImplementation\\n    ) external onlyOwner {\\n        astroTokenImplementation = _astroTokenImplementation;\\n        buyTokenContractImplementation = _buyTokenContractImplementation;\\n    }\\n} \",\"keccak256\":\"0xe8c48c2d4deae2feb1ca8dd33fb44282c36080ef654911929445875b61ab102f\",\"license\":\"MIT\"},\"contracts/AstroTokenLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\\\";\\nimport \\\"./BuyTokenContract.sol\\\";\\nimport \\\"./AstroToken.sol\\\";\\nimport \\\"./AstroTokenFactory.sol\\\";\\nimport \\\"./interfaces/IAstrologerManager.sol\\\";\\n\\ncontract AstroTokenLauncher is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using CountersUpgradeable for CountersUpgradeable.Counter;\\n\\n    CountersUpgradeable.Counter private _tokenIds;\\n    \\n    struct TokenInfo {\\n        uint256 id;\\n        address astrologer;\\n        address tokenContract;\\n        address buyContract;\\n        string name;\\n        string symbol;\\n        uint256 totalSupply;\\n        uint256 initialPrice;\\n        bool isActive;\\n        uint256 createdAt;\\n    }\\n\\n    mapping(uint256 => TokenInfo) public tokens;\\n    mapping(address => uint256) public astrologerToTokenId;\\n    mapping(address => uint256) public tokenContractToId;\\n    \\n    address public astrologerManager;\\n    address public tokenFactory;\\n    \\n    uint256 public launchFee;\\n    \\n    event TokenLaunched(\\n        uint256 indexed tokenId,\\n        address indexed astrologer,\\n        address tokenContract,\\n        address buyContract,\\n        string name,\\n        string symbol\\n    );\\n\\n    event TokenDeactivated(\\n        uint256 indexed tokenId,\\n        address indexed astrologer\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _tokenFactory,\\n        uint256 _launchFee\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        tokenFactory = _tokenFactory;\\n        launchFee = _launchFee;\\n    }\\n\\n    function launchToken(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _totalSupply,\\n        uint256 _initialPrice,\\n        string memory _description\\n    ) external payable returns (uint256) {\\n        require(msg.value >= launchFee, \\\"Insufficient launch fee\\\");\\n        require(bytes(_name).length > 0, \\\"Name cannot be empty\\\");\\n        require(bytes(_symbol).length > 0, \\\"Symbol cannot be empty\\\");\\n        require(_totalSupply > 0, \\\"Total supply must be greater than 0\\\");\\n        require(_initialPrice > 0, \\\"Initial price must be greater than 0\\\");\\n        require(astrologerToTokenId[msg.sender] == 0, \\\"Astrologer already has a token\\\");\\n\\n        // Verify astrologer is registered and verified\\n        if (astrologerManager != address(0)) {\\n            require(IAstrologerManager(astrologerManager).isAstrologerVerified(msg.sender), \\\"Astrologer not verified\\\");\\n        }\\n\\n        _tokenIds.increment();\\n        uint256 tokenId = _tokenIds.current();\\n\\n        // Deploy token and buy contract pair using factory\\n        (address tokenContract, address buyContract) = AstroTokenFactory(tokenFactory).deployTokenPair(\\n            _name,\\n            _symbol,\\n            _totalSupply,\\n            _initialPrice,\\n            msg.sender\\n        );\\n\\n        tokens[tokenId] = TokenInfo({\\n            id: tokenId,\\n            astrologer: msg.sender,\\n            tokenContract: tokenContract,\\n            buyContract: buyContract,\\n            name: _name,\\n            symbol: _symbol,\\n            totalSupply: _totalSupply,\\n            initialPrice: _initialPrice,\\n            isActive: true,\\n            createdAt: block.timestamp\\n        });\\n\\n        astrologerToTokenId[msg.sender] = tokenId;\\n        tokenContractToId[tokenContract] = tokenId;\\n\\n        // Update astrologer manager with token contract\\n        if (astrologerManager != address(0)) {\\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(msg.sender);\\n            IAstrologerManager(astrologerManager).setTokenContract(astrologerId, tokenId);\\n        }\\n\\n        emit TokenLaunched(tokenId, msg.sender, tokenContract, buyContract, _name, _symbol);\\n        return tokenId;\\n    }\\n\\n\\n\\n    function deactivateToken(uint256 tokenId) external {\\n        require(tokenId > 0 && tokenId <= _tokenIds.current(), \\\"Invalid token ID\\\");\\n        require(tokens[tokenId].astrologer == msg.sender, \\\"Not token owner\\\");\\n        require(tokens[tokenId].isActive, \\\"Token already deactivated\\\");\\n\\n        tokens[tokenId].isActive = false;\\n        emit TokenDeactivated(tokenId, msg.sender);\\n    }\\n\\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory) {\\n        require(tokenId > 0 && tokenId <= _tokenIds.current(), \\\"Invalid token ID\\\");\\n        return tokens[tokenId];\\n    }\\n\\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory) {\\n        uint256 tokenId = astrologerToTokenId[astrologer];\\n        require(tokenId > 0, \\\"Token not found\\\");\\n        return tokens[tokenId];\\n    }\\n\\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory) {\\n        uint256 tokenId = tokenContractToId[tokenContract];\\n        require(tokenId > 0, \\\"Token not found\\\");\\n        return tokens[tokenId];\\n    }\\n\\n    function getAllActiveTokens() external view returns (uint256[] memory) {\\n        uint256[] memory activeIds = new uint256[](_tokenIds.current());\\n        uint256 count = 0;\\n        \\n        for (uint256 i = 1; i <= _tokenIds.current(); i++) {\\n            if (tokens[i].isActive) {\\n                activeIds[count] = i;\\n                count++;\\n            }\\n        }\\n        \\n        // Resize array to actual count\\n        uint256[] memory result = new uint256[](count);\\n        for (uint256 i = 0; i < count; i++) {\\n            result[i] = activeIds[i];\\n        }\\n        \\n        return result;\\n    }\\n\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setTokenFactory(address _tokenFactory) external onlyOwner {\\n        tokenFactory = _tokenFactory;\\n    }\\n\\n    function setLaunchFee(uint256 _launchFee) external onlyOwner {\\n        launchFee = _launchFee;\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0x971389b6aa8e6751cf0c115bf6a32945ca9b54f34e49792ee08691d876839a83\",\"license\":\"MIT\"},\"contracts/BuyTokenContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"./AstroToken.sol\\\";\\n\\ncontract BuyTokenContract is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    struct TokenInfo {\\n        address tokenContract;\\n        address astrologer;\\n        uint256 totalSupply;\\n        uint256 circulatingSupply;\\n        uint256 basePrice;\\n        uint256 credibilityMultiplier;\\n        bool isActive;\\n    }\\n\\n    struct BondingCurve {\\n        uint256 k; // Bonding curve constant (very low for minimal supply impact)\\n        uint256 reserveRatio; // Reserve ratio (0-1000, where 1000 = 100%)\\n        uint256 slippageTolerance; // Slippage tolerance in basis points\\n        uint256 maxReputationMultiplier; // Maximum reputation multiplier (e.g., 5000 = 5.0x)\\n    }\\n\\n    mapping(address => TokenInfo) public tokenInfos;\\n    mapping(address => uint256) public userBalances;\\n    mapping(address => uint256) public userContributions;\\n    \\n    address public astrologerManager;\\n    address public predictionCredibilityManager;\\n    \\n    BondingCurve public bondingCurve;\\n    uint256 public platformFee; // Platform fee in basis points (100 = 1%)\\n    uint256 public totalVolume;\\n    \\n    // New variables must be added at the end for upgradeable contracts\\n    address public reputationScorer;\\n    \\n    event TokenBought(\\n        address indexed tokenContract,\\n        address indexed buyer,\\n        uint256 ethAmount,\\n        uint256 tokenAmount,\\n        uint256 price\\n    );\\n\\n    event TokenSold(\\n        address indexed tokenContract,\\n        address indexed seller,\\n        uint256 tokenAmount,\\n        uint256 ethAmount,\\n        uint256 price\\n    );\\n\\n    event CredibilityUpdated(\\n        address indexed tokenContract,\\n        uint256 oldMultiplier,\\n        uint256 newMultiplier\\n    );\\n\\n    event BondingCurveUpdated(\\n        uint256 k,\\n        uint256 reserveRatio,\\n        uint256 slippageTolerance,\\n        uint256 maxReputationMultiplier\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _predictionCredibilityManager,\\n        uint256 _platformFee\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        predictionCredibilityManager = _predictionCredibilityManager;\\n        platformFee = _platformFee;\\n        \\n        // Initialize bonding curve parameters\\n        bondingCurve = BondingCurve({\\n            k: 1000, // Very low constant for minimal supply impact (was 1M)\\n            reserveRatio: 500, // 50% reserve ratio\\n            slippageTolerance: 100, // 1% slippage tolerance\\n            maxReputationMultiplier: 5000 // 5.0x maximum reputation multiplier\\n        });\\n    }\\n\\n    function registerToken(\\n        address _tokenContract,\\n        address _astrologer,\\n        uint256 _totalSupply,\\n        uint256 _basePrice\\n    ) external {\\n        require(msg.sender == owner(), \\\"Only owner can register tokens\\\");\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n        require(_astrologer != address(0), \\\"Invalid astrologer address\\\");\\n        require(_totalSupply > 0, \\\"Total supply must be greater than 0\\\");\\n        require(_basePrice > 0, \\\"Base price must be greater than 0\\\");\\n\\n        tokenInfos[_tokenContract] = TokenInfo({\\n            tokenContract: _tokenContract,\\n            astrologer: _astrologer,\\n            totalSupply: _totalSupply,\\n            circulatingSupply: 0,\\n            basePrice: _basePrice,\\n            credibilityMultiplier: 1000, // 1.0x multiplier\\n            isActive: true\\n        });\\n    }\\n\\n    function buyTokens(address _tokenContract) external payable returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n        require(msg.value > 0, \\\"Must send ETH to buy tokens\\\");\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 tokenAmount = calculateBuyAmount(_tokenContract, msg.value);\\n        \\n        require(tokenAmount > 0, \\\"Insufficient ETH for minimum token amount\\\");\\n        require(\\n            tokenInfo.circulatingSupply + tokenAmount <= tokenInfo.totalSupply,\\n            \\\"Would exceed total supply\\\"\\n        );\\n\\n        // Calculate fees\\n        uint256 platformFeeAmount = (msg.value * platformFee) / 10000;\\n        uint256 astrologerAmount = msg.value - platformFeeAmount;\\n\\n        // Update state\\n        tokenInfo.circulatingSupply += tokenAmount;\\n        userBalances[_tokenContract] += tokenAmount;\\n        userContributions[msg.sender] += msg.value;\\n        totalVolume += msg.value;\\n\\n        // Mint tokens to buyer\\n        AstroToken(_tokenContract).mint(msg.sender, tokenAmount);\\n\\n        // Transfer ETH to astrologer\\n        if (astrologerAmount > 0) {\\n            payable(tokenInfo.astrologer).transfer(astrologerAmount);\\n        }\\n\\n        emit TokenBought(_tokenContract, msg.sender, msg.value, tokenAmount, currentPrice);\\n        return tokenAmount;\\n    }\\n\\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n        require(_tokenAmount > 0, \\\"Must sell positive amount\\\");\\n        require(userBalances[_tokenContract] >= _tokenAmount, \\\"Insufficient token balance\\\");\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 ethAmount = calculateSellAmount(_tokenContract, _tokenAmount);\\n        \\n        require(ethAmount > 0, \\\"Insufficient tokens for minimum ETH amount\\\");\\n\\n        // Calculate fees\\n        uint256 platformFeeAmount = (ethAmount * platformFee) / 10000;\\n        uint256 sellerAmount = ethAmount - platformFeeAmount;\\n\\n        // Update state\\n        tokenInfo.circulatingSupply -= _tokenAmount;\\n        userBalances[_tokenContract] -= _tokenAmount;\\n        totalVolume += ethAmount;\\n\\n        // Burn tokens from seller\\n        AstroToken(_tokenContract).burnFrom(msg.sender, _tokenAmount);\\n\\n        // Transfer ETH to seller\\n        if (sellerAmount > 0) {\\n            payable(msg.sender).transfer(sellerAmount);\\n        }\\n\\n        emit TokenSold(_tokenContract, msg.sender, _tokenAmount, ethAmount, currentPrice);\\n        return ethAmount;\\n    }\\n\\n    function updateCredibility(address _tokenContract, uint256 _newMultiplier) external {\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n\\n        uint256 oldMultiplier = tokenInfo.credibilityMultiplier;\\n        tokenInfo.credibilityMultiplier = _newMultiplier;\\n\\n        emit CredibilityUpdated(_tokenContract, oldMultiplier, _newMultiplier);\\n    }\\n\\n    function getCurrentPrice(address _tokenContract) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        // Very minimal supply impact: price = basePrice * (1 + tiny_supply_effect) * reputationMultiplier\\n        uint256 supplyRatio = (tokenInfo.circulatingSupply * 1e18) / tokenInfo.totalSupply;\\n        \\n        // Very small supply multiplier (k reduced from 1M to 1K for minimal impact)\\n        uint256 supplyMultiplier = 1e18 + (supplyRatio * bondingCurve.k) / 1000000; // Much smaller impact\\n        \\n        // Reputation is the main driver: credibilityMultiplier is in basis points (1000 = 1.0x)\\n        uint256 reputationMultiplier = tokenInfo.credibilityMultiplier;\\n        \\n        return (tokenInfo.basePrice * supplyMultiplier * reputationMultiplier) / (1e18 * 1000);\\n    }\\n\\n    function calculateBuyAmount(address _tokenContract, uint256 _ethAmount) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 tokenAmount = (_ethAmount * 1e18) / currentPrice;\\n        \\n        // Apply slippage tolerance\\n        uint256 slippage = (tokenAmount * bondingCurve.slippageTolerance) / 10000;\\n        return tokenAmount - slippage;\\n    }\\n\\n    function calculateSellAmount(address _tokenContract, uint256 _tokenAmount) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 ethAmount = (_tokenAmount * currentPrice) / 1e18;\\n        \\n        // Apply slippage tolerance\\n        uint256 slippage = (ethAmount * bondingCurve.slippageTolerance) / 10000;\\n        return ethAmount - slippage;\\n    }\\n\\n    function getTokenInfo(address _tokenContract) external view returns (TokenInfo memory) {\\n        return tokenInfos[_tokenContract];\\n    }\\n\\n    function getUserBalance(address _tokenContract) external view returns (uint256) {\\n        return userBalances[_tokenContract];\\n    }\\n\\n    function getUserContribution(address _user) external view returns (uint256) {\\n        return userContributions[_user];\\n    }\\n\\n    function setBondingCurve(\\n        uint256 _k,\\n        uint256 _reserveRatio,\\n        uint256 _slippageTolerance,\\n        uint256 _maxReputationMultiplier\\n    ) external onlyOwner {\\n        bondingCurve = BondingCurve({\\n            k: _k,\\n            reserveRatio: _reserveRatio,\\n            slippageTolerance: _slippageTolerance,\\n            maxReputationMultiplier: _maxReputationMultiplier\\n        });\\n\\n        emit BondingCurveUpdated(_k, _reserveRatio, _slippageTolerance, _maxReputationMultiplier);\\n    }\\n\\n    function setPlatformFee(uint256 _platformFee) external onlyOwner {\\n        platformFee = _platformFee;\\n    }\\n\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setPredictionCredibilityManager(address _predictionCredibilityManager) external onlyOwner {\\n        predictionCredibilityManager = _predictionCredibilityManager;\\n    }\\n\\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\\n        reputationScorer = _reputationScorer;\\n    }\\n\\n    function toggleTokenActive(address _tokenContract) external onlyOwner {\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n        tokenInfos[_tokenContract].isActive = !tokenInfos[_tokenContract].isActive;\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0x1ca5e1200e34787fb49afc8773bd31c914dc0716c88c77f34eda346a17893127\",\"license\":\"MIT\"},\"contracts/interfaces/IAstrologerManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstrologerManager {\\n    struct Astrologer {\\n        uint256 id;\\n        address wallet;\\n        string name;\\n        string description;\\n        string specialty;\\n        uint256 experience;\\n        uint256 reputation;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 tokenContract;\\n        bool isVerified;\\n        bool isActive;\\n        uint256 registeredAt;\\n        uint256 lastActive;\\n    }\\n\\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\\n    function isAstrologerVerified(address wallet) external view returns (bool);\\n    function getAstrologerId(address wallet) external view returns (uint256);\\n} \",\"keccak256\":\"0x11ca9cb820c6a6cec9a66342e9d644365a1c256aff7fc4cca46964dbcdae6e64\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":485,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":3156,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"_tokenIds","offset":0,"slot":"201","type":"t_struct(Counter)2370_storage"},{"astId":3182,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"tokens","offset":0,"slot":"202","type":"t_mapping(t_uint256,t_struct(TokenInfo)3177_storage)"},{"astId":3186,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"astrologerToTokenId","offset":0,"slot":"203","type":"t_mapping(t_address,t_uint256)"},{"astId":3190,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"tokenContractToId","offset":0,"slot":"204","type":"t_mapping(t_address,t_uint256)"},{"astId":3192,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"astrologerManager","offset":0,"slot":"205","type":"t_address"},{"astId":3194,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"tokenFactory","offset":0,"slot":"206","type":"t_address"},{"astId":3196,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"launchFee","offset":0,"slot":"207","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(TokenInfo)3177_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct AstroTokenLauncher.TokenInfo)","numberOfBytes":"32","value":"t_struct(TokenInfo)3177_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)2370_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2369,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(TokenInfo)3177_storage":{"encoding":"inplace","label":"struct AstroTokenLauncher.TokenInfo","members":[{"astId":3158,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":3160,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"astrologer","offset":0,"slot":"1","type":"t_address"},{"astId":3162,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"tokenContract","offset":0,"slot":"2","type":"t_address"},{"astId":3164,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"buyContract","offset":0,"slot":"3","type":"t_address"},{"astId":3166,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"name","offset":0,"slot":"4","type":"t_string_storage"},{"astId":3168,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":3170,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"totalSupply","offset":0,"slot":"6","type":"t_uint256"},{"astId":3172,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"initialPrice","offset":0,"slot":"7","type":"t_uint256"},{"astId":3174,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"isActive","offset":0,"slot":"8","type":"t_bool"},{"astId":3176,"contract":"contracts/AstroTokenLauncher.sol:AstroTokenLauncher","label":"createdAt","offset":0,"slot":"9","type":"t_uint256"}],"numberOfBytes":"320"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BuyTokenContract.sol":{"BuyTokenContract":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"k","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reserveRatio","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"slippageTolerance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxReputationMultiplier","type":"uint256"}],"name":"BondingCurveUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"oldMultiplier","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newMultiplier","type":"uint256"}],"name":"CredibilityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenContract","type":"address"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"ethAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"TokenBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenContract","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ethAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"TokenSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"astrologerManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bondingCurve","outputs":[{"internalType":"uint256","name":"k","type":"uint256"},{"internalType":"uint256","name":"reserveRatio","type":"uint256"},{"internalType":"uint256","name":"slippageTolerance","type":"uint256"},{"internalType":"uint256","name":"maxReputationMultiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"buyTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_ethAmount","type":"uint256"}],"name":"calculateBuyAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_tokenAmount","type":"uint256"}],"name":"calculateSellAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"getTokenInfo","outputs":[{"components":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"circulatingSupply","type":"uint256"},{"internalType":"uint256","name":"basePrice","type":"uint256"},{"internalType":"uint256","name":"credibilityMultiplier","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct BuyTokenContract.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"getUserBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserContribution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"},{"internalType":"address","name":"_predictionCredibilityManager","type":"address"},{"internalType":"uint256","name":"_platformFee","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"predictionCredibilityManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"uint256","name":"_basePrice","type":"uint256"}],"name":"registerToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reputationScorer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_tokenAmount","type":"uint256"}],"name":"sellTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"}],"name":"setAstrologerManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_k","type":"uint256"},{"internalType":"uint256","name":"_reserveRatio","type":"uint256"},{"internalType":"uint256","name":"_slippageTolerance","type":"uint256"},{"internalType":"uint256","name":"_maxReputationMultiplier","type":"uint256"}],"name":"setBondingCurve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_platformFee","type":"uint256"}],"name":"setPlatformFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_predictionCredibilityManager","type":"address"}],"name":"setPredictionCredibilityManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_reputationScorer","type":"address"}],"name":"setReputationScorer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"toggleTokenActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenInfos","outputs":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"circulatingSupply","type":"uint256"},{"internalType":"uint256","name":"basePrice","type":"uint256"},{"internalType":"uint256","name":"credibilityMultiplier","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalVolume","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_newMultiplier","type":"uint256"}],"name":"updateCredibility","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userContributions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b604051611e6b90816100e28239608051818181610d3201528181610e5a01526112280152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c908163078bfd9b146116e85781630f6ca1a814610ab257816312e8e2c3146116c65781631794bb3c146115055781631f69565f1461141157816326224c641461113857816326232a2e146113f25781633659cfe6146112005781633ccfd60b146111b057816344cda4851461117057816347734892146111385781634f1d052d146110dd5781634f1ef28614610ddf57816352d1902d14610d1c578163573a5b6b14610cf35781635f81a57c14610cd45781636fd31a4114610cab578163715018a614610c4e57816373c84d2114610c2557816384cc315b14610bff5781638da5cb5b14610bd6578163b0d485b314610b96578163b76d03b214610b6d578163ba46ae7214610aea578163bb8b2b4714610ab2578163c464fe6514610839578163cea9f4b51461060e578163e9725c21146105ce578163ec8ac4d81461031c578163eff1d50e146102db578163f2f2c5c4146102ab578163f2fde38b14610215575063f6322a5f1461018e57600080fd5b346102115780600319360112610211577f35a172ee9b7bba49ce50c0ba9b35893a8948f2d53ca31ce2890a07a54e1f548a6101c761178a565b6001600160a01b0316916024356101df841515611b9e565b83855260c960205260058286206101fc60ff600683015416611be3565b0190808254925582519182526020820152a280f35b5080fd5b9050346102a75760203660031901126102a75761023061178a565b91610239611877565b6001600160a01b038316156102555783610252846118cf565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346102115780600319360112610211576020906102d46102cb61178a565b60243590611d4e565b9051908152f35b8284346103195780600319360112610319575060ce5460cf5460d05460d1549351928352602083019190915260408201526060810191909152608090f35b80fd5b8383602092836003193601126102a75761033461178a565b9060018060a01b03938483169182825260c9875284822061035b60ff600683015416611be3565b341561058b5761037561036d86611c85565b953490611d4e565b96871561053657600382019283549361038e8a86611c22565b6002850154106104f3576103bb8a6103b56127106103ae60d25434611c45565b0434611c78565b96611c22565b905585855260ca8a528785206103d28a8254611c22565b905533855260cb8a528785206103e9348254611c22565b90556103f73460d354611c22565b60d355853b156104ef5787516340c10f1960e01b815233918101918252602082018a9052908590829081906040010381838a5af180156104e5579085916104cd575b50508215918215610495575b50505050507f8692cf5ba66abd64f88cdc1ffa0ee9d9c21ee2d999322a20445ae32393394e3e83518061048c33958834846040919493926060820195825260208201520152565b0390a351908152f35b849384938493600185940154169083906104c4575bf1156104b95780808080610445565b8351903d90823e3d90fd5b506108fc6104aa565b6104d690611809565b6104e157838a610439565b8380fd5b88513d87823e3d90fd5b8480fd5b885162461bcd60e51b81528083018c9052601960248201527f576f756c642065786365656420746f74616c20737570706c79000000000000006044820152606490fd5b865162461bcd60e51b81528084018a9052602960248201527f496e73756666696369656e742045544820666f72206d696e696d756d20746f6b604482015268195b88185b5bdd5b9d60ba1b6064820152608490fd5b855162461bcd60e51b8152808301899052601b60248201527f4d7573742073656e642045544820746f2062757920746f6b656e7300000000006044820152606490fd5b8334610319576020366003190112610319576105e861178a565b6105f0611877565b60018060a01b03166001600160601b0360a01b60d454161760d45580f35b839150346102115760803660031901126102115761062a61178a565b906106336117a5565b906044356064359060018060a01b0394856033541633036107f657858091169461065e861515611b9e565b1680156107b3578115610764578215610717579286928861025297969360069682519861068a8a6117ed565b868a5260208a01918252838a019283528060608b019489865260808c0196875260a08c01986103e88a5260c08d019a60018c525260c96020528d209a5116906001600160601b0360a01b91828c5416178b5560018b0192511690825416179055516002880155516003870155519085015551600584015551151591019060ff801983541691151516179055565b875162461bcd60e51b8152602081860152602160248201527f42617365207072696365206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b875162461bcd60e51b8152602081860152602360248201527f546f74616c20737570706c79206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b875162461bcd60e51b8152602081860152601a60248201527f496e76616c696420617374726f6c6f67657220616464726573730000000000006044820152606490fd5b875162461bcd60e51b8152602081860152601e60248201527f4f6e6c79206f776e65722063616e20726567697374657220746f6b656e7300006044820152606490fd5b919050346102a757806003193601126102a75761085461178a565b6001600160a01b03811680855260c960209081528386206006810154919660243594926108839060ff16611be3565b8415610a6f5783815260ca8852848682205410610a2c576108ad856108a785611c85565b94611dc3565b9687156109d65760036108cf6127106108c860d2548c611c45565b048a611c78565b93016108dc878254611c78565b905584825260ca89528682206108f3878254611c78565b90556109018860d354611c22565b60d355843b1561021157865163079cc67960e41b8152339181019182526020820187905290829082908190604001038183895af180156109cc576109bd575b50908015801561098d575b505084519384525060208301859052604083015233917f9387a595ac4be9038bbb9751abad8baa3dcf219dd9e19abb81552bd521fe354690806060810161048c565b82808093819382906109b4575b3390f1156109a957808061094b565b8451903d90823e3d90fd5b506108fc61099a565b6109c690611809565b38610940565b87513d84823e3d90fd5b865162461bcd60e51b8152908101899052602a60248201527f496e73756666696369656e7420746f6b656e7320666f72206d696e696d756d2060448201526911551208185b5bdd5b9d60b21b6064820152608490fd5b855162461bcd60e51b8152808801899052601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e63650000000000006044820152606490fd5b855162461bcd60e51b8152808801899052601960248201527f4d7573742073656c6c20706f73697469766520616d6f756e74000000000000006044820152606490fd5b5050346102115760203660031901126102115760209181906001600160a01b03610ada61178a565b16815260cb845220549051908152f35b839150346102115760203660031901126102115760e0926001600160a01b0392819084610b1561178a565b16815260c9602052209083825416936001830154169260028301546003840154918401549260ff600660058701549601541695815197885260208801528601526060850152608084015260a0830152151560c0820152f35b50503461021157816003193601126102115760cd5490516001600160a01b039091168152602090f35b833461031957602036600319011261031957610bb061178a565b610bb8611877565b60018060a01b03166001600160601b0360a01b60cd54161760cd5580f35b50503461021157816003193601126102115760335490516001600160a01b039091168152602090f35b505034610211576020366003190112610211576020906102d4610c2061178a565b611c85565b50503461021157816003193601126102115760d45490516001600160a01b039091168152602090f35b8334610319578060031936011261031957610c67611877565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461021157816003193601126102115760cc5490516001600160a01b039091168152602090f35b50503461021157816003193601126102115760209060d3549051908152f35b5050346102115780600319360112610211576020906102d4610d1361178a565b60243590611dc3565b90508234610319578060031936011261031957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610d775760208251600080516020611e168339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b918091506003193601126102a757610df561178a565b906024359067ffffffffffffffff82116104ef57366023830112156104ef5781840135610e218161185b565b610e2d83519182611839565b818152866020948583019336602482840101116102a7578060248893018637830101526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690610e8830831415611918565b610ea5600080516020611e16833981519152928284541614611979565b610ead611877565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610ee75750505050505061025291506119da565b869293949596169085516352d1902d60e01b815287818a81865afa8a91816110aa575b50610f6957865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9791929396959497036110555750610f80826119da565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a28584511580159061104d575b610fbe575b50505050505080f35b8061103796845196610fcf8861181d565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d15611043573d6110296110208261185b565b92519283611839565b81528681943d92013e611a6a565b50388080808085610fb5565b5060609250611a6a565b506001610fb0565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d83116110d6575b6110c28183611839565b810103126110d257519038610f0a565b8a80fd5b503d6110b8565b50503461021157602036600319011261021157610252906110fc61178a565b611104611877565b6001600160a01b0316611118811515611b9e565b835260c96020528220600601805460ff818116151660ff19909116179055565b5050346102115760203660031901126102115760209181906001600160a01b0361116061178a565b16815260ca845220549051908152f35b83346103195760203660031901126103195761118a61178a565b611192611877565b60018060a01b03166001600160601b0360a01b60cc54161760cc5580f35b5050346102115781600319360112610211576111ca611877565b8180808060018060a01b036033541647908282156111f7575bf1156111ed575080f35b51903d90823e3d90fd5b506108fc6111e3565b919050346102a7576020806003193601126104e15761121d61178a565b916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811661125530821415611918565b611272600080516020611e16833981519152918383541614611979565b61127a611877565b8251908482019282841067ffffffffffffffff8511176113df578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156112d45750505050505061025291506119da565b869293949596169085516352d1902d60e01b815287818a81865afa8a91816113b0575b5061135657865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939695949703611055575061136d826119da565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2858451158015906113a957610fbe5750505050505080f35b5080610fb0565b9091508881813d83116113d8575b6113c88183611839565b810103126110d2575190386112f7565b503d6113be565b634e487b7160e01b895260418852602489fd5b50503461021157816003193601126102115760209060d2549051908152f35b9050346102a75760203660031901126102a75760e0928261143061178a565b918060c0835161143f816117ed565b82815282602082015282858201528260608201528260808201528260a0820152015260018060a01b03809316815260c96020522090835192611480846117ed565b818354169485855282600185015416926020860193845260028501549082870191825260038601549360608801948552860154946080880195865260c060ff600660058a01549960a08c019a8b520154169801971515885283519889525116602088015251908601525160608501525160808401525160a083015251151560c0820152f35b9050346102a75760603660031901126102a75761152061178a565b906115296117a5565b91845460ff8160081c1615928380946116b9575b80156116a2575b15611648575060ff198116600117865582611637575b5061157460ff865460081c1661156f81611b3e565b611b3e565b61157d336118cf565b84549261158f60ff8560081c16611b3e565b60018060a01b0390816001600160601b0360a01b93168360cc54161760cc55169060cd54161760cd5560443560d255606083516115cb816117bb565b6103e88082526101f491826020820152606487820152611388938491015260ce5560cf55606460d05560d1556115ff578280f35b61ff001916825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b61ffff19166101011785553861155a565b608490602087519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156115445750600160ff831614611544565b50600160ff83161061153d565b839034610211576020366003190112610211576116e1611877565b3560d25580f35b919050346102a75760803660031901126102a7577f642a2328272d9e8f7996714d21dad1230999171aabf9dc477fb696136713eef891356117846024359260443560643591611735611877565b8260608251611743816117bb565b878152886020820152848482015201528460ce558560cf558160d0558260d15551948594859094939260609260808301968352602083015260408201520152565b0390a180f35b600435906001600160a01b03821682036117a057565b600080fd5b602435906001600160a01b03821682036117a057565b6080810190811067ffffffffffffffff8211176117d757604052565b634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff8211176117d757604052565b67ffffffffffffffff81116117d757604052565b6060810190811067ffffffffffffffff8211176117d757604052565b90601f8019910116810190811067ffffffffffffffff8211176117d757604052565b67ffffffffffffffff81116117d757601f01601f191660200190565b6033546001600160a01b0316330361188b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561191f57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561198057565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15611a0f57600080516020611e1683398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015611acc5750815115611a7e575090565b3b15611a875790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611adf5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611b25575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611b02565b15611b4557565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b15611ba557565b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d1bdad95b8818dbdb9d1c9858dd60521b6044820152606490fd5b15611bea57565b60405162461bcd60e51b815260206004820152601060248201526f546f6b656e206e6f742061637469766560801b6044820152606490fd5b91908201809211611c2f57565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715611c2f57565b8115611c62570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211611c2f57565b6001600160a01b0316600090815260c960205260408120600681015490919060ff1615611d4957600382015490670de0b6b3a76400009182810290808204841490151715611d3557611cec611ce3620f424092600287015490611c58565b60ce5490611c45565b048201809211611d21575081611d18611d1d9260046005683635c9adc5dea00000960154930154611c45565b611c45565b0490565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526011600452602482fd5b905090565b6001600160a01b038116600090815260c9602052604090206006015460ff1615611dbc57611d7b90611c85565b90670de0b6b3a764000090818102918183041490151715611c2f57611db991611da391611c58565b612710611db260d05483611c45565b0490611c78565b90565b5050600090565b9060018060a01b03821660005260c960205260ff6006604060002001541615611dbc57611e05670de0b6b3a764000091611dff611db994611c85565b90611c45565b04612710611db260d05483611c4556fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212206f99c619d21c271393bdf41a66432716c9b462203e4616764f5bb0d51103474264736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6B SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD32 ADD MSTORE DUP2 DUP2 PUSH2 0xE5A ADD MSTORE PUSH2 0x1228 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x78BFD9B EQ PUSH2 0x16E8 JUMPI DUP2 PUSH4 0xF6CA1A8 EQ PUSH2 0xAB2 JUMPI DUP2 PUSH4 0x12E8E2C3 EQ PUSH2 0x16C6 JUMPI DUP2 PUSH4 0x1794BB3C EQ PUSH2 0x1505 JUMPI DUP2 PUSH4 0x1F69565F EQ PUSH2 0x1411 JUMPI DUP2 PUSH4 0x26224C64 EQ PUSH2 0x1138 JUMPI DUP2 PUSH4 0x26232A2E EQ PUSH2 0x13F2 JUMPI DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x1200 JUMPI DUP2 PUSH4 0x3CCFD60B EQ PUSH2 0x11B0 JUMPI DUP2 PUSH4 0x44CDA485 EQ PUSH2 0x1170 JUMPI DUP2 PUSH4 0x47734892 EQ PUSH2 0x1138 JUMPI DUP2 PUSH4 0x4F1D052D EQ PUSH2 0x10DD JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0xDDF JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0xD1C JUMPI DUP2 PUSH4 0x573A5B6B EQ PUSH2 0xCF3 JUMPI DUP2 PUSH4 0x5F81A57C EQ PUSH2 0xCD4 JUMPI DUP2 PUSH4 0x6FD31A41 EQ PUSH2 0xCAB JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0xC4E JUMPI DUP2 PUSH4 0x73C84D21 EQ PUSH2 0xC25 JUMPI DUP2 PUSH4 0x84CC315B EQ PUSH2 0xBFF JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xBD6 JUMPI DUP2 PUSH4 0xB0D485B3 EQ PUSH2 0xB96 JUMPI DUP2 PUSH4 0xB76D03B2 EQ PUSH2 0xB6D JUMPI DUP2 PUSH4 0xBA46AE72 EQ PUSH2 0xAEA JUMPI DUP2 PUSH4 0xBB8B2B47 EQ PUSH2 0xAB2 JUMPI DUP2 PUSH4 0xC464FE65 EQ PUSH2 0x839 JUMPI DUP2 PUSH4 0xCEA9F4B5 EQ PUSH2 0x60E JUMPI DUP2 PUSH4 0xE9725C21 EQ PUSH2 0x5CE JUMPI DUP2 PUSH4 0xEC8AC4D8 EQ PUSH2 0x31C JUMPI DUP2 PUSH4 0xEFF1D50E EQ PUSH2 0x2DB JUMPI DUP2 PUSH4 0xF2F2C5C4 EQ PUSH2 0x2AB JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x215 JUMPI POP PUSH4 0xF6322A5F EQ PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH32 0x35A172EE9B7BBA49CE50C0BA9B35893A8948F2D53CA31CE2890A07A54E1F548A PUSH2 0x1C7 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0x1DF DUP5 ISZERO ISZERO PUSH2 0x1B9E JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x5 DUP3 DUP7 KECCAK256 PUSH2 0x1FC PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x1BE3 JUMP JUMPDEST ADD SWAP1 DUP1 DUP3 SLOAD SWAP3 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0x230 PUSH2 0x178A JUMP JUMPDEST SWAP2 PUSH2 0x239 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x255 JUMPI DUP4 PUSH2 0x252 DUP5 PUSH2 0x18CF JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2D4 PUSH2 0x2CB PUSH2 0x178A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1D4E JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x319 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI POP PUSH1 0xCE SLOAD PUSH1 0xCF SLOAD PUSH1 0xD0 SLOAD PUSH1 0xD1 SLOAD SWAP4 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0x334 PUSH2 0x178A JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP4 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xC9 DUP8 MSTORE DUP5 DUP3 KECCAK256 PUSH2 0x35B PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x1BE3 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x58B JUMPI PUSH2 0x375 PUSH2 0x36D DUP7 PUSH2 0x1C85 JUMP JUMPDEST SWAP6 CALLVALUE SWAP1 PUSH2 0x1D4E JUMP JUMPDEST SWAP7 DUP8 ISZERO PUSH2 0x536 JUMPI PUSH1 0x3 DUP3 ADD SWAP3 DUP4 SLOAD SWAP4 PUSH2 0x38E DUP11 DUP7 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SLOAD LT PUSH2 0x4F3 JUMPI PUSH2 0x3BB DUP11 PUSH2 0x3B5 PUSH2 0x2710 PUSH2 0x3AE PUSH1 0xD2 SLOAD CALLVALUE PUSH2 0x1C45 JUMP JUMPDEST DIV CALLVALUE PUSH2 0x1C78 JUMP JUMPDEST SWAP7 PUSH2 0x1C22 JUMP JUMPDEST SWAP1 SSTORE DUP6 DUP6 MSTORE PUSH1 0xCA DUP11 MSTORE DUP8 DUP6 KECCAK256 PUSH2 0x3D2 DUP11 DUP3 SLOAD PUSH2 0x1C22 JUMP JUMPDEST SWAP1 SSTORE CALLER DUP6 MSTORE PUSH1 0xCB DUP11 MSTORE DUP8 DUP6 KECCAK256 PUSH2 0x3E9 CALLVALUE DUP3 SLOAD PUSH2 0x1C22 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x3F7 CALLVALUE PUSH1 0xD3 SLOAD PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0xD3 SSTORE DUP6 EXTCODESIZE ISZERO PUSH2 0x4EF JUMPI DUP8 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP11 SWAP1 MSTORE SWAP1 DUP6 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x4E5 JUMPI SWAP1 DUP6 SWAP2 PUSH2 0x4CD JUMPI JUMPDEST POP POP DUP3 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x495 JUMPI JUMPDEST POP POP POP POP POP PUSH32 0x8692CF5BA66ABD64F88CDC1FFA0EE9D9C21EE2D999322A20445AE32393394E3E DUP4 MLOAD DUP1 PUSH2 0x48C CALLER SWAP6 DUP9 CALLVALUE DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP4 DUP5 SWAP4 DUP5 SWAP4 PUSH1 0x1 DUP6 SWAP5 ADD SLOAD AND SWAP1 DUP4 SWAP1 PUSH2 0x4C4 JUMPI JUMPDEST CALL ISZERO PUSH2 0x4B9 JUMPI DUP1 DUP1 DUP1 DUP1 PUSH2 0x445 JUMP JUMPDEST DUP4 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x4D6 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x4E1 JUMPI DUP4 DUP11 PUSH2 0x439 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F756C642065786365656420746F74616C20737570706C7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045544820666F72206D696E696D756D20746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195B88185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI PUSH2 0x5E8 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x5F0 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD4 SLOAD AND OR PUSH1 0xD4 SSTORE DUP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x62A PUSH2 0x178A JUMP JUMPDEST SWAP1 PUSH2 0x633 PUSH2 0x17A5 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 PUSH1 0x33 SLOAD AND CALLER SUB PUSH2 0x7F6 JUMPI DUP6 DUP1 SWAP2 AND SWAP5 PUSH2 0x65E DUP7 ISZERO ISZERO PUSH2 0x1B9E JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP2 ISZERO PUSH2 0x764 JUMPI DUP3 ISZERO PUSH2 0x717 JUMPI SWAP3 DUP7 SWAP3 DUP9 PUSH2 0x252 SWAP8 SWAP7 SWAP4 PUSH1 0x6 SWAP7 DUP3 MLOAD SWAP9 PUSH2 0x68A DUP11 PUSH2 0x17ED JUMP JUMPDEST DUP7 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP2 DUP3 MSTORE DUP4 DUP11 ADD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x60 DUP12 ADD SWAP5 DUP10 DUP7 MSTORE PUSH1 0x80 DUP13 ADD SWAP7 DUP8 MSTORE PUSH1 0xA0 DUP13 ADD SWAP9 PUSH2 0x3E8 DUP11 MSTORE PUSH1 0xC0 DUP14 ADD SWAP11 PUSH1 0x1 DUP13 MSTORE MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE DUP14 KECCAK256 SWAP11 MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP13 SLOAD AND OR DUP12 SSTORE PUSH1 0x1 DUP12 ADD SWAP3 MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP9 ADD SSTORE MLOAD PUSH1 0x3 DUP8 ADD SSTORE MLOAD SWAP1 DUP6 ADD SSTORE MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617365207072696365206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C79206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617374726F6C6F6765722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E20726567697374657220746F6B656E730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0x854 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP7 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP2 SWAP7 PUSH1 0x24 CALLDATALOAD SWAP5 SWAP3 PUSH2 0x883 SWAP1 PUSH1 0xFF AND PUSH2 0x1BE3 JUMP JUMPDEST DUP5 ISZERO PUSH2 0xA6F JUMPI DUP4 DUP2 MSTORE PUSH1 0xCA DUP9 MSTORE DUP5 DUP7 DUP3 KECCAK256 SLOAD LT PUSH2 0xA2C JUMPI PUSH2 0x8AD DUP6 PUSH2 0x8A7 DUP6 PUSH2 0x1C85 JUMP JUMPDEST SWAP5 PUSH2 0x1DC3 JUMP JUMPDEST SWAP7 DUP8 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x3 PUSH2 0x8CF PUSH2 0x2710 PUSH2 0x8C8 PUSH1 0xD2 SLOAD DUP13 PUSH2 0x1C45 JUMP JUMPDEST DIV DUP11 PUSH2 0x1C78 JUMP JUMPDEST SWAP4 ADD PUSH2 0x8DC DUP8 DUP3 SLOAD PUSH2 0x1C78 JUMP JUMPDEST SWAP1 SSTORE DUP5 DUP3 MSTORE PUSH1 0xCA DUP10 MSTORE DUP7 DUP3 KECCAK256 PUSH2 0x8F3 DUP8 DUP3 SLOAD PUSH2 0x1C78 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x901 DUP9 PUSH1 0xD3 SLOAD PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0xD3 SSTORE DUP5 EXTCODESIZE ISZERO PUSH2 0x211 JUMPI DUP7 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP4 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x9CC JUMPI PUSH2 0x9BD JUMPI JUMPDEST POP SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x98D JUMPI JUMPDEST POP POP DUP5 MLOAD SWAP4 DUP5 MSTORE POP PUSH1 0x20 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0x9387A595AC4BE9038BBB9751ABAD8BAA3DCF219DD9E19ABB81552BD521FE3546 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x48C JUMP JUMPDEST DUP3 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 SWAP1 PUSH2 0x9B4 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x9A9 JUMPI DUP1 DUP1 PUSH2 0x94B JUMP JUMPDEST DUP5 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x99A JUMP JUMPDEST PUSH2 0x9C6 SWAP1 PUSH2 0x1809 JUMP JUMPDEST CODESIZE PUSH2 0x940 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E7320666F72206D696E696D756D20 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x11551208185B5BDD5B9D PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656C6C20706F73697469766520616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xADA PUSH2 0x178A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0xE0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP2 SWAP1 DUP5 PUSH2 0xB15 PUSH2 0x178A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP4 DUP3 SLOAD AND SWAP4 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP2 DUP5 ADD SLOAD SWAP3 PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP8 ADD SLOAD SWAP7 ADD SLOAD AND SWAP6 DUP2 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xCD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI PUSH2 0xBB0 PUSH2 0x178A JUMP JUMPDEST PUSH2 0xBB8 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x33 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2D4 PUSH2 0xC20 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1C85 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xD4 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x319 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH2 0xC67 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xCC SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2D4 PUSH2 0xD13 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x319 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xD77 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 DUP1 SWAP2 POP PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0xDF5 PUSH2 0x178A JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4EF JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x4EF JUMPI DUP2 DUP5 ADD CALLDATALOAD PUSH2 0xE21 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xE2D DUP4 MLOAD SWAP2 DUP3 PUSH2 0x1839 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 SWAP5 DUP6 DUP4 ADD SWAP4 CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x2A7 JUMPI DUP1 PUSH1 0x24 DUP9 SWAP4 ADD DUP7 CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP1 PUSH2 0xE88 ADDRESS DUP4 EQ ISZERO PUSH2 0x1918 JUMP JUMPDEST PUSH2 0xEA5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 DUP5 SLOAD AND EQ PUSH2 0x1979 JUMP JUMPDEST PUSH2 0xEAD PUSH2 0x1877 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEE7 JUMPI POP POP POP POP POP POP PUSH2 0x252 SWAP2 POP PUSH2 0x19DA JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 AND SWAP1 DUP6 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP11 DUP2 DUP7 GAS STATICCALL DUP11 SWAP2 DUP2 PUSH2 0x10AA JUMPI JUMPDEST POP PUSH2 0xF69 JUMPI DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP8 SWAP2 SWAP3 SWAP4 SWAP7 SWAP6 SWAP5 SWAP8 SUB PUSH2 0x1055 JUMPI POP PUSH2 0xF80 DUP3 PUSH2 0x19DA JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP8 DUP1 LOG2 DUP6 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x104D JUMPI JUMPDEST PUSH2 0xFBE JUMPI JUMPDEST POP POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x1037 SWAP7 DUP5 MLOAD SWAP7 PUSH2 0xFCF DUP9 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP7 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x1043 JUMPI RETURNDATASIZE PUSH2 0x1029 PUSH2 0x1020 DUP3 PUSH2 0x185B JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1839 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1A6A JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP6 PUSH2 0xFB5 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1A6A JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFB0 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10D6 JUMPI JUMPDEST PUSH2 0x10C2 DUP2 DUP4 PUSH2 0x1839 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10D2 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xF0A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x10B8 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x252 SWAP1 PUSH2 0x10FC PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1104 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1118 DUP2 ISZERO ISZERO PUSH2 0x1B9E JUMP JUMPDEST DUP4 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE DUP3 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0xFF DUP2 DUP2 AND ISZERO AND PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1160 PUSH2 0x178A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI PUSH2 0x118A PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCC SLOAD AND OR PUSH1 0xCC SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x11CA PUSH2 0x1877 JUMP JUMPDEST DUP2 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x11F7 JUMPI JUMPDEST CALL ISZERO PUSH2 0x11ED JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x11E3 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4E1 JUMPI PUSH2 0x121D PUSH2 0x178A JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x1255 ADDRESS DUP3 EQ ISZERO PUSH2 0x1918 JUMP JUMPDEST PUSH2 0x1272 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x127A PUSH2 0x1877 JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x13DF JUMPI DUP4 DUP6 MSTORE DUP9 DUP4 MSTORE PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12D4 JUMPI POP POP POP POP POP POP PUSH2 0x252 SWAP2 POP PUSH2 0x19DA JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 AND SWAP1 DUP6 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP11 DUP2 DUP7 GAS STATICCALL DUP11 SWAP2 DUP2 PUSH2 0x13B0 JUMPI JUMPDEST POP PUSH2 0x1356 JUMPI DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP8 SWAP2 SWAP3 SWAP4 SWAP7 SWAP6 SWAP5 SWAP8 SUB PUSH2 0x1055 JUMPI POP PUSH2 0x136D DUP3 PUSH2 0x19DA JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP8 DUP1 LOG2 DUP6 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x13A9 JUMPI PUSH2 0xFBE JUMPI POP POP POP POP POP POP DUP1 RETURN JUMPDEST POP DUP1 PUSH2 0xFB0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x13D8 JUMPI JUMPDEST PUSH2 0x13C8 DUP2 DUP4 PUSH2 0x1839 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10D2 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x12F7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13BE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A7 JUMPI PUSH1 0xE0 SWAP3 DUP3 PUSH2 0x1430 PUSH2 0x178A JUMP JUMPDEST SWAP2 DUP1 PUSH1 0xC0 DUP4 MLOAD PUSH2 0x143F DUP2 PUSH2 0x17ED JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP4 MLOAD SWAP3 PUSH2 0x1480 DUP5 PUSH2 0x17ED JUMP JUMPDEST DUP2 DUP4 SLOAD AND SWAP5 DUP6 DUP6 MSTORE DUP3 PUSH1 0x1 DUP6 ADD SLOAD AND SWAP3 PUSH1 0x20 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x2 DUP6 ADD SLOAD SWAP1 DUP3 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP7 ADD SLOAD SWAP4 PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE DUP7 ADD SLOAD SWAP5 PUSH1 0x80 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0xC0 PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP11 ADD SLOAD SWAP10 PUSH1 0xA0 DUP13 ADD SWAP11 DUP12 MSTORE ADD SLOAD AND SWAP9 ADD SWAP8 ISZERO ISZERO DUP9 MSTORE DUP4 MLOAD SWAP9 DUP10 MSTORE MLOAD AND PUSH1 0x20 DUP9 ADD MSTORE MLOAD SWAP1 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0x1520 PUSH2 0x178A JUMP JUMPDEST SWAP1 PUSH2 0x1529 PUSH2 0x17A5 JUMP JUMPDEST SWAP2 DUP5 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP3 DUP4 DUP1 SWAP5 PUSH2 0x16B9 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x16A2 JUMPI JUMPDEST ISZERO PUSH2 0x1648 JUMPI POP PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP7 SSTORE DUP3 PUSH2 0x1637 JUMPI JUMPDEST POP PUSH2 0x1574 PUSH1 0xFF DUP7 SLOAD PUSH1 0x8 SHR AND PUSH2 0x156F DUP2 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x157D CALLER PUSH2 0x18CF JUMP JUMPDEST DUP5 SLOAD SWAP3 PUSH2 0x158F PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 AND DUP4 PUSH1 0xCC SLOAD AND OR PUSH1 0xCC SSTORE AND SWAP1 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xD2 SSTORE PUSH1 0x60 DUP4 MLOAD PUSH2 0x15CB DUP2 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x1F4 SWAP2 DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x64 DUP8 DUP3 ADD MSTORE PUSH2 0x1388 SWAP4 DUP5 SWAP2 ADD MSTORE PUSH1 0xCE SSTORE PUSH1 0xCF SSTORE PUSH1 0x64 PUSH1 0xD0 SSTORE PUSH1 0xD1 SSTORE PUSH2 0x15FF JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP3 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP6 SSTORE CODESIZE PUSH2 0x155A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1544 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP4 AND EQ PUSH2 0x1544 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP4 AND LT PUSH2 0x153D JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x16E1 PUSH2 0x1877 JUMP JUMPDEST CALLDATALOAD PUSH1 0xD2 SSTORE DUP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A7 JUMPI PUSH32 0x642A2328272D9E8F7996714D21DAD1230999171AABF9DC477FB696136713EEF8 SWAP2 CALLDATALOAD PUSH2 0x1784 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0x1735 PUSH2 0x1877 JUMP JUMPDEST DUP3 PUSH1 0x60 DUP3 MLOAD PUSH2 0x1743 DUP2 PUSH2 0x17BB JUMP JUMPDEST DUP8 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE DUP5 DUP5 DUP3 ADD MSTORE ADD MSTORE DUP5 PUSH1 0xCE SSTORE DUP6 PUSH1 0xCF SSTORE DUP2 PUSH1 0xD0 SSTORE DUP3 PUSH1 0xD1 SSTORE MLOAD SWAP5 DUP6 SWAP5 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x17A0 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x17A0 JUMPI JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x17D7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x188B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x191F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1980 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1ACC JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1A7E JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1A87 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1ADF JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x1B25 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x1B02 JUMP JUMPDEST ISZERO PUSH2 0x1B45 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081D1BDAD95B8818DBDB9D1C9858DD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BEA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x546F6B656E206E6F7420616374697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1C2F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1C2F JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1C62 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1C2F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1D49 JUMPI PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1CEC PUSH2 0x1CE3 PUSH3 0xF4240 SWAP3 PUSH1 0x2 DUP8 ADD SLOAD SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0xCE SLOAD SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DIV DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D21 JUMPI POP DUP2 PUSH2 0x1D18 PUSH2 0x1D1D SWAP3 PUSH1 0x4 PUSH1 0x5 PUSH9 0x3635C9ADC5DEA00000 SWAP7 ADD SLOAD SWAP4 ADD SLOAD PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1C45 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DBC JUMPI PUSH2 0x1D7B SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1C2F JUMPI PUSH2 0x1DB9 SWAP2 PUSH2 0x1DA3 SWAP2 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1DB2 PUSH1 0xD0 SLOAD DUP4 PUSH2 0x1C45 JUMP JUMPDEST DIV SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1DBC JUMPI PUSH2 0x1E05 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1DFF PUSH2 0x1DB9 SWAP5 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DIV PUSH2 0x2710 PUSH2 0x1DB2 PUSH1 0xD0 SLOAD DUP4 PUSH2 0x1C45 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA26469706673582212206F SWAP10 0xC6 NOT 0xD2 SHR 0x27 SGT SWAP4 0xBD DELEGATECALL BYTE PUSH7 0x432716C9B46220 RETURNDATACOPY CHAINID AND PUSH23 0x4F5BB0D51103474264736F6C6343000811003300000000 ","sourceMap":"484:10761:23:-:0;;;;;;;1332:4:6;1324:13;;6007::5;484:10761:23;;;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;484:10761:23;;;;;;;;1324:13:6;484:10761:23;;;;;;;;;;;;;;;;6074:139:5;484:10761:23;;;;;;6007:13:5;484:10761:23;6174:28:5;484:10761:23;;;;;;6174:28:5;6074:139;;;484:10761:23;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6053,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_19726":{"entryPoint":6026,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_uint256_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":6235,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":7202,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":7256,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":7237,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":7288,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":6201,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_19725":{"entryPoint":6075,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_19731":{"entryPoint":6125,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_19750":{"entryPoint":6153,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_27246":{"entryPoint":6173,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateBuyAmount":{"entryPoint":7502,"id":4370,"parameterSlots":2,"returnSlots":1},"fun_calculateSellAmount":{"entryPoint":7619,"id":4422,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":6263,"id":68,"parameterSlots":0,"returnSlots":0},"fun_getCurrentPrice":{"entryPoint":7301,"id":4318,"parameterSlots":1,"returnSlots":1},"fun_setImplementation":{"entryPoint":6618,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":6351,"id":125,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":6762,"id":2277,"parameterSlots":4,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":7139,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_36e1":{"entryPoint":6424,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":6521,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7da8":{"entryPoint":7070,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":6974,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":3378},{"length":32,"start":3674},{"length":32,"start":4648}]},"linkReferences":{},"object":"6040608081526004908136101561001557600080fd5b600091823560e01c908163078bfd9b146116e85781630f6ca1a814610ab257816312e8e2c3146116c65781631794bb3c146115055781631f69565f1461141157816326224c641461113857816326232a2e146113f25781633659cfe6146112005781633ccfd60b146111b057816344cda4851461117057816347734892146111385781634f1d052d146110dd5781634f1ef28614610ddf57816352d1902d14610d1c578163573a5b6b14610cf35781635f81a57c14610cd45781636fd31a4114610cab578163715018a614610c4e57816373c84d2114610c2557816384cc315b14610bff5781638da5cb5b14610bd6578163b0d485b314610b96578163b76d03b214610b6d578163ba46ae7214610aea578163bb8b2b4714610ab2578163c464fe6514610839578163cea9f4b51461060e578163e9725c21146105ce578163ec8ac4d81461031c578163eff1d50e146102db578163f2f2c5c4146102ab578163f2fde38b14610215575063f6322a5f1461018e57600080fd5b346102115780600319360112610211577f35a172ee9b7bba49ce50c0ba9b35893a8948f2d53ca31ce2890a07a54e1f548a6101c761178a565b6001600160a01b0316916024356101df841515611b9e565b83855260c960205260058286206101fc60ff600683015416611be3565b0190808254925582519182526020820152a280f35b5080fd5b9050346102a75760203660031901126102a75761023061178a565b91610239611877565b6001600160a01b038316156102555783610252846118cf565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346102115780600319360112610211576020906102d46102cb61178a565b60243590611d4e565b9051908152f35b8284346103195780600319360112610319575060ce5460cf5460d05460d1549351928352602083019190915260408201526060810191909152608090f35b80fd5b8383602092836003193601126102a75761033461178a565b9060018060a01b03938483169182825260c9875284822061035b60ff600683015416611be3565b341561058b5761037561036d86611c85565b953490611d4e565b96871561053657600382019283549361038e8a86611c22565b6002850154106104f3576103bb8a6103b56127106103ae60d25434611c45565b0434611c78565b96611c22565b905585855260ca8a528785206103d28a8254611c22565b905533855260cb8a528785206103e9348254611c22565b90556103f73460d354611c22565b60d355853b156104ef5787516340c10f1960e01b815233918101918252602082018a9052908590829081906040010381838a5af180156104e5579085916104cd575b50508215918215610495575b50505050507f8692cf5ba66abd64f88cdc1ffa0ee9d9c21ee2d999322a20445ae32393394e3e83518061048c33958834846040919493926060820195825260208201520152565b0390a351908152f35b849384938493600185940154169083906104c4575bf1156104b95780808080610445565b8351903d90823e3d90fd5b506108fc6104aa565b6104d690611809565b6104e157838a610439565b8380fd5b88513d87823e3d90fd5b8480fd5b885162461bcd60e51b81528083018c9052601960248201527f576f756c642065786365656420746f74616c20737570706c79000000000000006044820152606490fd5b865162461bcd60e51b81528084018a9052602960248201527f496e73756666696369656e742045544820666f72206d696e696d756d20746f6b604482015268195b88185b5bdd5b9d60ba1b6064820152608490fd5b855162461bcd60e51b8152808301899052601b60248201527f4d7573742073656e642045544820746f2062757920746f6b656e7300000000006044820152606490fd5b8334610319576020366003190112610319576105e861178a565b6105f0611877565b60018060a01b03166001600160601b0360a01b60d454161760d45580f35b839150346102115760803660031901126102115761062a61178a565b906106336117a5565b906044356064359060018060a01b0394856033541633036107f657858091169461065e861515611b9e565b1680156107b3578115610764578215610717579286928861025297969360069682519861068a8a6117ed565b868a5260208a01918252838a019283528060608b019489865260808c0196875260a08c01986103e88a5260c08d019a60018c525260c96020528d209a5116906001600160601b0360a01b91828c5416178b5560018b0192511690825416179055516002880155516003870155519085015551600584015551151591019060ff801983541691151516179055565b875162461bcd60e51b8152602081860152602160248201527f42617365207072696365206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b875162461bcd60e51b8152602081860152602360248201527f546f74616c20737570706c79206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b875162461bcd60e51b8152602081860152601a60248201527f496e76616c696420617374726f6c6f67657220616464726573730000000000006044820152606490fd5b875162461bcd60e51b8152602081860152601e60248201527f4f6e6c79206f776e65722063616e20726567697374657220746f6b656e7300006044820152606490fd5b919050346102a757806003193601126102a75761085461178a565b6001600160a01b03811680855260c960209081528386206006810154919660243594926108839060ff16611be3565b8415610a6f5783815260ca8852848682205410610a2c576108ad856108a785611c85565b94611dc3565b9687156109d65760036108cf6127106108c860d2548c611c45565b048a611c78565b93016108dc878254611c78565b905584825260ca89528682206108f3878254611c78565b90556109018860d354611c22565b60d355843b1561021157865163079cc67960e41b8152339181019182526020820187905290829082908190604001038183895af180156109cc576109bd575b50908015801561098d575b505084519384525060208301859052604083015233917f9387a595ac4be9038bbb9751abad8baa3dcf219dd9e19abb81552bd521fe354690806060810161048c565b82808093819382906109b4575b3390f1156109a957808061094b565b8451903d90823e3d90fd5b506108fc61099a565b6109c690611809565b38610940565b87513d84823e3d90fd5b865162461bcd60e51b8152908101899052602a60248201527f496e73756666696369656e7420746f6b656e7320666f72206d696e696d756d2060448201526911551208185b5bdd5b9d60b21b6064820152608490fd5b855162461bcd60e51b8152808801899052601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e63650000000000006044820152606490fd5b855162461bcd60e51b8152808801899052601960248201527f4d7573742073656c6c20706f73697469766520616d6f756e74000000000000006044820152606490fd5b5050346102115760203660031901126102115760209181906001600160a01b03610ada61178a565b16815260cb845220549051908152f35b839150346102115760203660031901126102115760e0926001600160a01b0392819084610b1561178a565b16815260c9602052209083825416936001830154169260028301546003840154918401549260ff600660058701549601541695815197885260208801528601526060850152608084015260a0830152151560c0820152f35b50503461021157816003193601126102115760cd5490516001600160a01b039091168152602090f35b833461031957602036600319011261031957610bb061178a565b610bb8611877565b60018060a01b03166001600160601b0360a01b60cd54161760cd5580f35b50503461021157816003193601126102115760335490516001600160a01b039091168152602090f35b505034610211576020366003190112610211576020906102d4610c2061178a565b611c85565b50503461021157816003193601126102115760d45490516001600160a01b039091168152602090f35b8334610319578060031936011261031957610c67611877565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461021157816003193601126102115760cc5490516001600160a01b039091168152602090f35b50503461021157816003193601126102115760209060d3549051908152f35b5050346102115780600319360112610211576020906102d4610d1361178a565b60243590611dc3565b90508234610319578060031936011261031957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610d775760208251600080516020611e168339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b918091506003193601126102a757610df561178a565b906024359067ffffffffffffffff82116104ef57366023830112156104ef5781840135610e218161185b565b610e2d83519182611839565b818152866020948583019336602482840101116102a7578060248893018637830101526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690610e8830831415611918565b610ea5600080516020611e16833981519152928284541614611979565b610ead611877565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610ee75750505050505061025291506119da565b869293949596169085516352d1902d60e01b815287818a81865afa8a91816110aa575b50610f6957865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9791929396959497036110555750610f80826119da565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a28584511580159061104d575b610fbe575b50505050505080f35b8061103796845196610fcf8861181d565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d15611043573d6110296110208261185b565b92519283611839565b81528681943d92013e611a6a565b50388080808085610fb5565b5060609250611a6a565b506001610fb0565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d83116110d6575b6110c28183611839565b810103126110d257519038610f0a565b8a80fd5b503d6110b8565b50503461021157602036600319011261021157610252906110fc61178a565b611104611877565b6001600160a01b0316611118811515611b9e565b835260c96020528220600601805460ff818116151660ff19909116179055565b5050346102115760203660031901126102115760209181906001600160a01b0361116061178a565b16815260ca845220549051908152f35b83346103195760203660031901126103195761118a61178a565b611192611877565b60018060a01b03166001600160601b0360a01b60cc54161760cc5580f35b5050346102115781600319360112610211576111ca611877565b8180808060018060a01b036033541647908282156111f7575bf1156111ed575080f35b51903d90823e3d90fd5b506108fc6111e3565b919050346102a7576020806003193601126104e15761121d61178a565b916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811661125530821415611918565b611272600080516020611e16833981519152918383541614611979565b61127a611877565b8251908482019282841067ffffffffffffffff8511176113df578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156112d45750505050505061025291506119da565b869293949596169085516352d1902d60e01b815287818a81865afa8a91816113b0575b5061135657865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939695949703611055575061136d826119da565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2858451158015906113a957610fbe5750505050505080f35b5080610fb0565b9091508881813d83116113d8575b6113c88183611839565b810103126110d2575190386112f7565b503d6113be565b634e487b7160e01b895260418852602489fd5b50503461021157816003193601126102115760209060d2549051908152f35b9050346102a75760203660031901126102a75760e0928261143061178a565b918060c0835161143f816117ed565b82815282602082015282858201528260608201528260808201528260a0820152015260018060a01b03809316815260c96020522090835192611480846117ed565b818354169485855282600185015416926020860193845260028501549082870191825260038601549360608801948552860154946080880195865260c060ff600660058a01549960a08c019a8b520154169801971515885283519889525116602088015251908601525160608501525160808401525160a083015251151560c0820152f35b9050346102a75760603660031901126102a75761152061178a565b906115296117a5565b91845460ff8160081c1615928380946116b9575b80156116a2575b15611648575060ff198116600117865582611637575b5061157460ff865460081c1661156f81611b3e565b611b3e565b61157d336118cf565b84549261158f60ff8560081c16611b3e565b60018060a01b0390816001600160601b0360a01b93168360cc54161760cc55169060cd54161760cd5560443560d255606083516115cb816117bb565b6103e88082526101f491826020820152606487820152611388938491015260ce5560cf55606460d05560d1556115ff578280f35b61ff001916825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b61ffff19166101011785553861155a565b608490602087519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156115445750600160ff831614611544565b50600160ff83161061153d565b839034610211576020366003190112610211576116e1611877565b3560d25580f35b919050346102a75760803660031901126102a7577f642a2328272d9e8f7996714d21dad1230999171aabf9dc477fb696136713eef891356117846024359260443560643591611735611877565b8260608251611743816117bb565b878152886020820152848482015201528460ce558560cf558160d0558260d15551948594859094939260609260808301968352602083015260408201520152565b0390a180f35b600435906001600160a01b03821682036117a057565b600080fd5b602435906001600160a01b03821682036117a057565b6080810190811067ffffffffffffffff8211176117d757604052565b634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff8211176117d757604052565b67ffffffffffffffff81116117d757604052565b6060810190811067ffffffffffffffff8211176117d757604052565b90601f8019910116810190811067ffffffffffffffff8211176117d757604052565b67ffffffffffffffff81116117d757601f01601f191660200190565b6033546001600160a01b0316330361188b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561191f57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561198057565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15611a0f57600080516020611e1683398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015611acc5750815115611a7e575090565b3b15611a875790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611adf5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611b25575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611b02565b15611b4557565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b15611ba557565b60405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d1bdad95b8818dbdb9d1c9858dd60521b6044820152606490fd5b15611bea57565b60405162461bcd60e51b815260206004820152601060248201526f546f6b656e206e6f742061637469766560801b6044820152606490fd5b91908201809211611c2f57565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715611c2f57565b8115611c62570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211611c2f57565b6001600160a01b0316600090815260c960205260408120600681015490919060ff1615611d4957600382015490670de0b6b3a76400009182810290808204841490151715611d3557611cec611ce3620f424092600287015490611c58565b60ce5490611c45565b048201809211611d21575081611d18611d1d9260046005683635c9adc5dea00000960154930154611c45565b611c45565b0490565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526011600452602482fd5b905090565b6001600160a01b038116600090815260c9602052604090206006015460ff1615611dbc57611d7b90611c85565b90670de0b6b3a764000090818102918183041490151715611c2f57611db991611da391611c58565b612710611db260d05483611c45565b0490611c78565b90565b5050600090565b9060018060a01b03821660005260c960205260ff6006604060002001541615611dbc57611e05670de0b6b3a764000091611dff611db994611c85565b90611c45565b04612710611db260d05483611c4556fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212206f99c619d21c271393bdf41a66432716c9b462203e4616764f5bb0d51103474264736f6c63430008110033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x78BFD9B EQ PUSH2 0x16E8 JUMPI DUP2 PUSH4 0xF6CA1A8 EQ PUSH2 0xAB2 JUMPI DUP2 PUSH4 0x12E8E2C3 EQ PUSH2 0x16C6 JUMPI DUP2 PUSH4 0x1794BB3C EQ PUSH2 0x1505 JUMPI DUP2 PUSH4 0x1F69565F EQ PUSH2 0x1411 JUMPI DUP2 PUSH4 0x26224C64 EQ PUSH2 0x1138 JUMPI DUP2 PUSH4 0x26232A2E EQ PUSH2 0x13F2 JUMPI DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x1200 JUMPI DUP2 PUSH4 0x3CCFD60B EQ PUSH2 0x11B0 JUMPI DUP2 PUSH4 0x44CDA485 EQ PUSH2 0x1170 JUMPI DUP2 PUSH4 0x47734892 EQ PUSH2 0x1138 JUMPI DUP2 PUSH4 0x4F1D052D EQ PUSH2 0x10DD JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0xDDF JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0xD1C JUMPI DUP2 PUSH4 0x573A5B6B EQ PUSH2 0xCF3 JUMPI DUP2 PUSH4 0x5F81A57C EQ PUSH2 0xCD4 JUMPI DUP2 PUSH4 0x6FD31A41 EQ PUSH2 0xCAB JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0xC4E JUMPI DUP2 PUSH4 0x73C84D21 EQ PUSH2 0xC25 JUMPI DUP2 PUSH4 0x84CC315B EQ PUSH2 0xBFF JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xBD6 JUMPI DUP2 PUSH4 0xB0D485B3 EQ PUSH2 0xB96 JUMPI DUP2 PUSH4 0xB76D03B2 EQ PUSH2 0xB6D JUMPI DUP2 PUSH4 0xBA46AE72 EQ PUSH2 0xAEA JUMPI DUP2 PUSH4 0xBB8B2B47 EQ PUSH2 0xAB2 JUMPI DUP2 PUSH4 0xC464FE65 EQ PUSH2 0x839 JUMPI DUP2 PUSH4 0xCEA9F4B5 EQ PUSH2 0x60E JUMPI DUP2 PUSH4 0xE9725C21 EQ PUSH2 0x5CE JUMPI DUP2 PUSH4 0xEC8AC4D8 EQ PUSH2 0x31C JUMPI DUP2 PUSH4 0xEFF1D50E EQ PUSH2 0x2DB JUMPI DUP2 PUSH4 0xF2F2C5C4 EQ PUSH2 0x2AB JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x215 JUMPI POP PUSH4 0xF6322A5F EQ PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH32 0x35A172EE9B7BBA49CE50C0BA9B35893A8948F2D53CA31CE2890A07A54E1F548A PUSH2 0x1C7 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0x1DF DUP5 ISZERO ISZERO PUSH2 0x1B9E JUMP JUMPDEST DUP4 DUP6 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x5 DUP3 DUP7 KECCAK256 PUSH2 0x1FC PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x1BE3 JUMP JUMPDEST ADD SWAP1 DUP1 DUP3 SLOAD SWAP3 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0x230 PUSH2 0x178A JUMP JUMPDEST SWAP2 PUSH2 0x239 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x255 JUMPI DUP4 PUSH2 0x252 DUP5 PUSH2 0x18CF JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2D4 PUSH2 0x2CB PUSH2 0x178A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1D4E JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x319 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI POP PUSH1 0xCE SLOAD PUSH1 0xCF SLOAD PUSH1 0xD0 SLOAD PUSH1 0xD1 SLOAD SWAP4 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0x334 PUSH2 0x178A JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP4 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xC9 DUP8 MSTORE DUP5 DUP3 KECCAK256 PUSH2 0x35B PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x1BE3 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x58B JUMPI PUSH2 0x375 PUSH2 0x36D DUP7 PUSH2 0x1C85 JUMP JUMPDEST SWAP6 CALLVALUE SWAP1 PUSH2 0x1D4E JUMP JUMPDEST SWAP7 DUP8 ISZERO PUSH2 0x536 JUMPI PUSH1 0x3 DUP3 ADD SWAP3 DUP4 SLOAD SWAP4 PUSH2 0x38E DUP11 DUP7 PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SLOAD LT PUSH2 0x4F3 JUMPI PUSH2 0x3BB DUP11 PUSH2 0x3B5 PUSH2 0x2710 PUSH2 0x3AE PUSH1 0xD2 SLOAD CALLVALUE PUSH2 0x1C45 JUMP JUMPDEST DIV CALLVALUE PUSH2 0x1C78 JUMP JUMPDEST SWAP7 PUSH2 0x1C22 JUMP JUMPDEST SWAP1 SSTORE DUP6 DUP6 MSTORE PUSH1 0xCA DUP11 MSTORE DUP8 DUP6 KECCAK256 PUSH2 0x3D2 DUP11 DUP3 SLOAD PUSH2 0x1C22 JUMP JUMPDEST SWAP1 SSTORE CALLER DUP6 MSTORE PUSH1 0xCB DUP11 MSTORE DUP8 DUP6 KECCAK256 PUSH2 0x3E9 CALLVALUE DUP3 SLOAD PUSH2 0x1C22 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x3F7 CALLVALUE PUSH1 0xD3 SLOAD PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0xD3 SSTORE DUP6 EXTCODESIZE ISZERO PUSH2 0x4EF JUMPI DUP8 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP11 SWAP1 MSTORE SWAP1 DUP6 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x4E5 JUMPI SWAP1 DUP6 SWAP2 PUSH2 0x4CD JUMPI JUMPDEST POP POP DUP3 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x495 JUMPI JUMPDEST POP POP POP POP POP PUSH32 0x8692CF5BA66ABD64F88CDC1FFA0EE9D9C21EE2D999322A20445AE32393394E3E DUP4 MLOAD DUP1 PUSH2 0x48C CALLER SWAP6 DUP9 CALLVALUE DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP4 DUP5 SWAP4 DUP5 SWAP4 PUSH1 0x1 DUP6 SWAP5 ADD SLOAD AND SWAP1 DUP4 SWAP1 PUSH2 0x4C4 JUMPI JUMPDEST CALL ISZERO PUSH2 0x4B9 JUMPI DUP1 DUP1 DUP1 DUP1 PUSH2 0x445 JUMP JUMPDEST DUP4 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x4D6 SWAP1 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x4E1 JUMPI DUP4 DUP11 PUSH2 0x439 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP13 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576F756C642065786365656420746F74616C20737570706C7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045544820666F72206D696E696D756D20746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195B88185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI PUSH2 0x5E8 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x5F0 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD4 SLOAD AND OR PUSH1 0xD4 SSTORE DUP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x62A PUSH2 0x178A JUMP JUMPDEST SWAP1 PUSH2 0x633 PUSH2 0x17A5 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 PUSH1 0x33 SLOAD AND CALLER SUB PUSH2 0x7F6 JUMPI DUP6 DUP1 SWAP2 AND SWAP5 PUSH2 0x65E DUP7 ISZERO ISZERO PUSH2 0x1B9E JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP2 ISZERO PUSH2 0x764 JUMPI DUP3 ISZERO PUSH2 0x717 JUMPI SWAP3 DUP7 SWAP3 DUP9 PUSH2 0x252 SWAP8 SWAP7 SWAP4 PUSH1 0x6 SWAP7 DUP3 MLOAD SWAP9 PUSH2 0x68A DUP11 PUSH2 0x17ED JUMP JUMPDEST DUP7 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP2 DUP3 MSTORE DUP4 DUP11 ADD SWAP3 DUP4 MSTORE DUP1 PUSH1 0x60 DUP12 ADD SWAP5 DUP10 DUP7 MSTORE PUSH1 0x80 DUP13 ADD SWAP7 DUP8 MSTORE PUSH1 0xA0 DUP13 ADD SWAP9 PUSH2 0x3E8 DUP11 MSTORE PUSH1 0xC0 DUP14 ADD SWAP11 PUSH1 0x1 DUP13 MSTORE MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE DUP14 KECCAK256 SWAP11 MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP13 SLOAD AND OR DUP12 SSTORE PUSH1 0x1 DUP12 ADD SWAP3 MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP9 ADD SSTORE MLOAD PUSH1 0x3 DUP8 ADD SSTORE MLOAD SWAP1 DUP6 ADD SSTORE MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617365207072696365206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20737570706C79206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617374726F6C6F6765722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E20726567697374657220746F6B656E730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0x854 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP6 MSTORE PUSH1 0xC9 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP7 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP2 SWAP7 PUSH1 0x24 CALLDATALOAD SWAP5 SWAP3 PUSH2 0x883 SWAP1 PUSH1 0xFF AND PUSH2 0x1BE3 JUMP JUMPDEST DUP5 ISZERO PUSH2 0xA6F JUMPI DUP4 DUP2 MSTORE PUSH1 0xCA DUP9 MSTORE DUP5 DUP7 DUP3 KECCAK256 SLOAD LT PUSH2 0xA2C JUMPI PUSH2 0x8AD DUP6 PUSH2 0x8A7 DUP6 PUSH2 0x1C85 JUMP JUMPDEST SWAP5 PUSH2 0x1DC3 JUMP JUMPDEST SWAP7 DUP8 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x3 PUSH2 0x8CF PUSH2 0x2710 PUSH2 0x8C8 PUSH1 0xD2 SLOAD DUP13 PUSH2 0x1C45 JUMP JUMPDEST DIV DUP11 PUSH2 0x1C78 JUMP JUMPDEST SWAP4 ADD PUSH2 0x8DC DUP8 DUP3 SLOAD PUSH2 0x1C78 JUMP JUMPDEST SWAP1 SSTORE DUP5 DUP3 MSTORE PUSH1 0xCA DUP10 MSTORE DUP7 DUP3 KECCAK256 PUSH2 0x8F3 DUP8 DUP3 SLOAD PUSH2 0x1C78 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x901 DUP9 PUSH1 0xD3 SLOAD PUSH2 0x1C22 JUMP JUMPDEST PUSH1 0xD3 SSTORE DUP5 EXTCODESIZE ISZERO PUSH2 0x211 JUMPI DUP7 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP4 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x9CC JUMPI PUSH2 0x9BD JUMPI JUMPDEST POP SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x98D JUMPI JUMPDEST POP POP DUP5 MLOAD SWAP4 DUP5 MSTORE POP PUSH1 0x20 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0x9387A595AC4BE9038BBB9751ABAD8BAA3DCF219DD9E19ABB81552BD521FE3546 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x48C JUMP JUMPDEST DUP3 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 SWAP1 PUSH2 0x9B4 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x9A9 JUMPI DUP1 DUP1 PUSH2 0x94B JUMP JUMPDEST DUP5 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x99A JUMP JUMPDEST PUSH2 0x9C6 SWAP1 PUSH2 0x1809 JUMP JUMPDEST CODESIZE PUSH2 0x940 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E7320666F72206D696E696D756D20 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x11551208185B5BDD5B9D PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656C6C20706F73697469766520616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xADA PUSH2 0x178A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0xE0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP2 SWAP1 DUP5 PUSH2 0xB15 PUSH2 0x178A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP4 DUP3 SLOAD AND SWAP4 PUSH1 0x1 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP2 DUP5 ADD SLOAD SWAP3 PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP8 ADD SLOAD SWAP7 ADD SLOAD AND SWAP6 DUP2 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xCD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI PUSH2 0xBB0 PUSH2 0x178A JUMP JUMPDEST PUSH2 0xBB8 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x33 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2D4 PUSH2 0xC20 PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1C85 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xD4 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x319 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH2 0xC67 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0xCC SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2D4 PUSH2 0xD13 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x319 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0xD77 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 DUP1 SWAP2 POP PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0xDF5 PUSH2 0x178A JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4EF JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x4EF JUMPI DUP2 DUP5 ADD CALLDATALOAD PUSH2 0xE21 DUP2 PUSH2 0x185B JUMP JUMPDEST PUSH2 0xE2D DUP4 MLOAD SWAP2 DUP3 PUSH2 0x1839 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 SWAP5 DUP6 DUP4 ADD SWAP4 CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x2A7 JUMPI DUP1 PUSH1 0x24 DUP9 SWAP4 ADD DUP7 CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP1 PUSH2 0xE88 ADDRESS DUP4 EQ ISZERO PUSH2 0x1918 JUMP JUMPDEST PUSH2 0xEA5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 DUP5 SLOAD AND EQ PUSH2 0x1979 JUMP JUMPDEST PUSH2 0xEAD PUSH2 0x1877 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEE7 JUMPI POP POP POP POP POP POP PUSH2 0x252 SWAP2 POP PUSH2 0x19DA JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 AND SWAP1 DUP6 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP11 DUP2 DUP7 GAS STATICCALL DUP11 SWAP2 DUP2 PUSH2 0x10AA JUMPI JUMPDEST POP PUSH2 0xF69 JUMPI DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP8 SWAP2 SWAP3 SWAP4 SWAP7 SWAP6 SWAP5 SWAP8 SUB PUSH2 0x1055 JUMPI POP PUSH2 0xF80 DUP3 PUSH2 0x19DA JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP8 DUP1 LOG2 DUP6 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x104D JUMPI JUMPDEST PUSH2 0xFBE JUMPI JUMPDEST POP POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x1037 SWAP7 DUP5 MLOAD SWAP7 PUSH2 0xFCF DUP9 PUSH2 0x181D JUMP JUMPDEST PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP7 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x1043 JUMPI RETURNDATASIZE PUSH2 0x1029 PUSH2 0x1020 DUP3 PUSH2 0x185B JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1839 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1A6A JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP6 PUSH2 0xFB5 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1A6A JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFB0 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10D6 JUMPI JUMPDEST PUSH2 0x10C2 DUP2 DUP4 PUSH2 0x1839 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10D2 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xF0A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x10B8 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x252 SWAP1 PUSH2 0x10FC PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1104 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1118 DUP2 ISZERO ISZERO PUSH2 0x1B9E JUMP JUMPDEST DUP4 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE DUP3 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0xFF DUP2 DUP2 AND ISZERO AND PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1160 PUSH2 0x178A JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI PUSH2 0x118A PUSH2 0x178A JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCC SLOAD AND OR PUSH1 0xCC SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH2 0x11CA PUSH2 0x1877 JUMP JUMPDEST DUP2 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x11F7 JUMPI JUMPDEST CALL ISZERO PUSH2 0x11ED JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x11E3 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4E1 JUMPI PUSH2 0x121D PUSH2 0x178A JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x1255 ADDRESS DUP3 EQ ISZERO PUSH2 0x1918 JUMP JUMPDEST PUSH2 0x1272 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x1979 JUMP JUMPDEST PUSH2 0x127A PUSH2 0x1877 JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x13DF JUMPI DUP4 DUP6 MSTORE DUP9 DUP4 MSTORE PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12D4 JUMPI POP POP POP POP POP POP PUSH2 0x252 SWAP2 POP PUSH2 0x19DA JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 AND SWAP1 DUP6 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP11 DUP2 DUP7 GAS STATICCALL DUP11 SWAP2 DUP2 PUSH2 0x13B0 JUMPI JUMPDEST POP PUSH2 0x1356 JUMPI DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP8 SWAP2 SWAP3 SWAP4 SWAP7 SWAP6 SWAP5 SWAP8 SUB PUSH2 0x1055 JUMPI POP PUSH2 0x136D DUP3 PUSH2 0x19DA JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP8 DUP1 LOG2 DUP6 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x13A9 JUMPI PUSH2 0xFBE JUMPI POP POP POP POP POP POP DUP1 RETURN JUMPDEST POP DUP1 PUSH2 0xFB0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x13D8 JUMPI JUMPDEST PUSH2 0x13C8 DUP2 DUP4 PUSH2 0x1839 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x10D2 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x12F7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13BE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x211 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x211 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A7 JUMPI PUSH1 0xE0 SWAP3 DUP3 PUSH2 0x1430 PUSH2 0x178A JUMP JUMPDEST SWAP2 DUP1 PUSH1 0xC0 DUP4 MLOAD PUSH2 0x143F DUP2 PUSH2 0x17ED JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP4 MLOAD SWAP3 PUSH2 0x1480 DUP5 PUSH2 0x17ED JUMP JUMPDEST DUP2 DUP4 SLOAD AND SWAP5 DUP6 DUP6 MSTORE DUP3 PUSH1 0x1 DUP6 ADD SLOAD AND SWAP3 PUSH1 0x20 DUP7 ADD SWAP4 DUP5 MSTORE PUSH1 0x2 DUP6 ADD SLOAD SWAP1 DUP3 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP7 ADD SLOAD SWAP4 PUSH1 0x60 DUP9 ADD SWAP5 DUP6 MSTORE DUP7 ADD SLOAD SWAP5 PUSH1 0x80 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0xC0 PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP11 ADD SLOAD SWAP10 PUSH1 0xA0 DUP13 ADD SWAP11 DUP12 MSTORE ADD SLOAD AND SWAP9 ADD SWAP8 ISZERO ISZERO DUP9 MSTORE DUP4 MLOAD SWAP9 DUP10 MSTORE MLOAD AND PUSH1 0x20 DUP9 ADD MSTORE MLOAD SWAP1 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A7 JUMPI PUSH2 0x1520 PUSH2 0x178A JUMP JUMPDEST SWAP1 PUSH2 0x1529 PUSH2 0x17A5 JUMP JUMPDEST SWAP2 DUP5 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP3 DUP4 DUP1 SWAP5 PUSH2 0x16B9 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x16A2 JUMPI JUMPDEST ISZERO PUSH2 0x1648 JUMPI POP PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP7 SSTORE DUP3 PUSH2 0x1637 JUMPI JUMPDEST POP PUSH2 0x1574 PUSH1 0xFF DUP7 SLOAD PUSH1 0x8 SHR AND PUSH2 0x156F DUP2 PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x1B3E JUMP JUMPDEST PUSH2 0x157D CALLER PUSH2 0x18CF JUMP JUMPDEST DUP5 SLOAD SWAP3 PUSH2 0x158F PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 AND DUP4 PUSH1 0xCC SLOAD AND OR PUSH1 0xCC SSTORE AND SWAP1 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xD2 SSTORE PUSH1 0x60 DUP4 MLOAD PUSH2 0x15CB DUP2 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x3E8 DUP1 DUP3 MSTORE PUSH2 0x1F4 SWAP2 DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x64 DUP8 DUP3 ADD MSTORE PUSH2 0x1388 SWAP4 DUP5 SWAP2 ADD MSTORE PUSH1 0xCE SSTORE PUSH1 0xCF SSTORE PUSH1 0x64 PUSH1 0xD0 SSTORE PUSH1 0xD1 SSTORE PUSH2 0x15FF JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP3 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP6 SSTORE CODESIZE PUSH2 0x155A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1544 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP4 AND EQ PUSH2 0x1544 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP4 AND LT PUSH2 0x153D JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x211 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x211 JUMPI PUSH2 0x16E1 PUSH2 0x1877 JUMP JUMPDEST CALLDATALOAD PUSH1 0xD2 SSTORE DUP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x2A7 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A7 JUMPI PUSH32 0x642A2328272D9E8F7996714D21DAD1230999171AABF9DC477FB696136713EEF8 SWAP2 CALLDATALOAD PUSH2 0x1784 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0x1735 PUSH2 0x1877 JUMP JUMPDEST DUP3 PUSH1 0x60 DUP3 MLOAD PUSH2 0x1743 DUP2 PUSH2 0x17BB JUMP JUMPDEST DUP8 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE DUP5 DUP5 DUP3 ADD MSTORE ADD MSTORE DUP5 PUSH1 0xCE SSTORE DUP6 PUSH1 0xCF SSTORE DUP2 PUSH1 0xD0 SSTORE DUP3 PUSH1 0xD1 SSTORE MLOAD SWAP5 DUP6 SWAP5 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x17A0 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x17A0 JUMPI JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x17D7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x17D7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x188B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x191F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1980 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1ACC JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x1A7E JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x1A87 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1ADF JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP6 LT PUSH2 0x1B25 JUMPI POP POP PUSH1 0x44 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 ADD DUP3 ADD MLOAD DUP7 DUP7 ADD PUSH1 0x44 ADD MSTORE SWAP4 DUP2 ADD SWAP4 DUP6 SWAP4 POP PUSH2 0x1B02 JUMP JUMPDEST ISZERO PUSH2 0x1B45 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BA5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081D1BDAD95B8818DBDB9D1C9858DD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BEA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x546F6B656E206E6F7420616374697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1C2F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1C2F JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1C62 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1C2F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1D49 JUMPI PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP3 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1CEC PUSH2 0x1CE3 PUSH3 0xF4240 SWAP3 PUSH1 0x2 DUP8 ADD SLOAD SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0xCE SLOAD SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DIV DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D21 JUMPI POP DUP2 PUSH2 0x1D18 PUSH2 0x1D1D SWAP3 PUSH1 0x4 PUSH1 0x5 PUSH9 0x3635C9ADC5DEA00000 SWAP7 ADD SLOAD SWAP4 ADD SLOAD PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1C45 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1DBC JUMPI PUSH2 0x1D7B SWAP1 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1C2F JUMPI PUSH2 0x1DB9 SWAP2 PUSH2 0x1DA3 SWAP2 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1DB2 PUSH1 0xD0 SLOAD DUP4 PUSH2 0x1C45 JUMP JUMPDEST DIV SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1DBC JUMPI PUSH2 0x1E05 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x1DFF PUSH2 0x1DB9 SWAP5 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 PUSH2 0x1C45 JUMP JUMPDEST DIV PUSH2 0x2710 PUSH2 0x1DB2 PUSH1 0xD0 SLOAD DUP4 PUSH2 0x1C45 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA26469706673582212206F SWAP10 0xC6 NOT 0xD2 SHR 0x27 SGT SWAP4 0xBD DELEGATECALL BYTE PUSH7 0x432716C9B46220 RETURNDATACOPY CHAINID AND PUSH23 0x4F5BB0D51103474264736F6C6343000811003300000000 ","sourceMap":"484:10761:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7309:65;484:10761;;:::i;:::-;-1:-1:-1;;;;;484:10761:23;;;;6982:63;6990:28;;;6982:63;:::i;:::-;484:10761;;;7086:10;484:10761;;7204:31;484:10761;;;7122:47;484:10761;7130:18;;;484:10761;;7122:47;:::i;:::-;7204:31;484:10761;;;;;;;;;;;;;;;7309:65;484:10761;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;:::i;:::-;1303:62:0;;;:::i;:::-;-1:-1:-1;;;;;484:10761:23;;2402:22:0;484:10761:23;;2496:8:0;;;;:::i;:::-;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1501:32:23;484:10761;1501:32;484:10761;1501:32;484:10761;1501:32;484:10761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;4295:10;484:10761;;;;;4331:47;484:10761;4339:18;;;484:10761;;4331:47;:::i;:::-;4396:9;:13;484:10761;;4538:45;4475:31;;;:::i;:::-;4396:9;;4538:45;;:::i;:::-;4610:15;;;484:10761;;;4702:27;;484:10761;;;4702:41;;;;;:::i;:::-;4747:21;;;484:10761;-1:-1:-1;484:10761:23;;5018:42;484:10761;4954:29;4912:5;4885:23;4897:11;484:10761;4396:9;4885:23;:::i;:::-;484:10761;4396:9;4954:29;:::i;:::-;5018:42;;:::i;:::-;484:10761;;;;;5070:12;484:10761;;;;;5070:43;484:10761;;;5070:43;:::i;:::-;484:10761;;5141:10;484:10761;;5123:17;484:10761;;;;;5123:42;4396:9;484:10761;;5123:42;:::i;:::-;484:10761;;5175:24;4396:9;5175:24;484:10761;5175:24;:::i;:::-;;484:10761;5242:56;;;;;484:10761;;-1:-1:-1;;;5242:56:23;;5141:10;5242:56;;;484:10761;;;;;;;;;;;;;;;;;;5242:56;;;;;;;;;;;;;;;484:10761;5351:20;;;;;;;5347:107;;484:10761;;;;;;5469:77;484:10761;;5141:10;5469:77;5141:10;4396:9;;;5469:77;484:10761;;;;;;;;;;;;;;;;;;5469:77;;;;484:10761;;;;;5347:107;5395:20;;;;;;484:10761;5395:20;;;484:10761;;5387:56;;;;;5347:107;5387:56;;;;5347:107;;;;;;5387:56;484:10761;;971:66:3;;;;;;;;5387:56:23;;;;;5242;;;;:::i;:::-;484:10761;;5242:56;;;;484:10761;;;;5242:56;484:10761;;971:66:3;484:10761:23;;971:66:3;;;;5242:56:23;484:10761;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;484:10761:23;;;;;;-1:-1:-1;;;;;484:10761:23;;10760:36;484:10761;;;10760:36;484:10761;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;1513:6:0;484:10761:23;;3480:10;:21;484:10761;;;;;;3554:28;3546:63;3554:28;;;3546:63;:::i;:::-;484:10761;3627:25;;484:10761;;3701:16;;484:10761;;3775:14;;484:10761;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3867:297;;484:10761;;;3867:297;;;484:10761;;;3867:297;484:10761;3867:297;;484:10761;;;;;3867:297;;484:10761;;;;3867:297;;484:10761;4102:4;484:10761;;3867:297;;;484:10761;;;;;3838:10;484:10761;;;;;;;;-1:-1:-1;;;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;484:10761:23;;;;;5720:10;484:10761;;;;;;;5764:18;;;484:10761;;;;;;;5756:47;;484:10761;;5756:47;:::i;:::-;5821:16;;484:10761;;;;;5885:12;484:10761;;;;;;;5885:44;484:10761;;6055:49;5994:31;;;;:::i;:::-;6055:49;;:::i;:::-;6131:13;;;484:10761;;;6322:29;6284:5;6257:23;6269:11;484:10761;6257:23;;:::i;:::-;484:10761;6322:29;;:::i;:::-;6386:27;;:43;484:10761;;;6386:43;:::i;:::-;484:10761;;;;;5885:12;484:10761;;;;;6439:44;484:10761;;;6439:44;:::i;:::-;484:10761;;6493:24;484:10761;6493:24;484:10761;6493:24;:::i;:::-;;484:10761;6563:61;;;;;484:10761;;-1:-1:-1;;;6563:61:23;;6599:10;6563:61;;;484:10761;;;;;;;;;;;;;;;;;;6563:61;;;;;;;;;;;;484:10761;6673:16;;;;;;6669:89;;484:10761;-1:-1:-1;;484:10761:23;;;;;-1:-1:-1;484:10761:23;;;;;;;;;;6599:10;;6773:76;;484:10761;;;;6773:76;484:10761;6669:89;6705:42;;;;;;;;;;6669:89;6599:10;6705:42;;;;;6669:89;;;;6705:42;484:10761;;971:66:3;;;;;;;;6705:42:23;;;;;6563:61;;;;:::i;:::-;;;;;484:10761;;971:66:3;484:10761:23;;971:66:3;;;;484:10761:23;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;;;-1:-1:-1;;;;;484:10761:23;;:::i;:::-;;;;9689:17;484:10761;;;;;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;-1:-1:-1;;;;;484:10761:23;;;;;;:::i;:::-;;;;1240:47;484:10761;;;;;;;;1240:47;484:10761;1240:47;;484:10761;;1240:47;;;;484:10761;;1240:47;;484:10761;1240:47;;;484:10761;1240:47;484:10761;1240:47;;;;484:10761;1240:47;;484:10761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:43;484:10761;;;-1:-1:-1;;;;;484:10761:23;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;484:10761:23;;;;;;-1:-1:-1;;;;;484:10761:23;;10602:60;484:10761;;;10602:60;484:10761;;;;;;;;;;;;;;;;;1513:6:0;484:10761:23;;;-1:-1:-1;;;;;484:10761:23;;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;1723:31;484:10761;;;-1:-1:-1;;;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;1303:62:0;;:::i;:::-;2758:6;484:10761:23;;-1:-1:-1;;;;;;484:10761:23;;;;;;;-1:-1:-1;;;;;484:10761:23;2806:40:0;484:10761:23;;2806:40:0;484:10761:23;;;;;;;;;;;;;;;;1409:32;484:10761;;;-1:-1:-1;;;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;1614:26;484:10761;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;2333:6:6;-1:-1:-1;;;;;484:10761:23;2324:4:6;2316:23;484:10761:23;;;;;-1:-1:-1;;;;;;;;;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1898:6:6;484:10761:23;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;484:10761:23;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;971:66:3;484:10761:23;;;;;;3330:17:3;;;;;;;;;;:::i;3232:526::-;484:10761:23;;;;;;;;;;971:66:3;;;3383:63;;;;;;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;484:10761:23;;-1:-1:-1;;;3610:56:3;;;;;971:66;;;;484:10761:23;971:66:3;;484:10761:23;971:66:3;484:10761:23;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;;;;;971:66;;3379:302;2171:17;;;:::i;:::-;2204:27;;;;484:10761:23;;;2523:15:3;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;;484:10761:23;;2519:123:3;484:10761:23;7318:69:13;484:10761:23;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;7276:25:13;;;;;;484:10761:23;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;7318:69:13;:::i;:::-;;2519:123:3;;;;;;;;484:10761:23;-1:-1:-1;484:10761:23;;-1:-1:-1;7318:69:13;:::i;2523:28:3:-;;484:10761:23;2523:28:3;;971:66;484:10761:23;;-1:-1:-1;;;971:66:3;;;;;;;;;484:10761:23;971:66:3;;484:10761:23;971:66:3;484:10761:23;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;484:10761:23;;;3383:63:3;;;;;484:10761:23;;;;;;;;-1:-1:-1;;484:10761:23;;;;10962:74;484:10761;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;484:10761:23;10889:63;10897:28;;;10889:63;:::i;:::-;484:10761;;11001:10;484:10761;;;;11001:35;;484:10761;;;;;;11000:36;484:10761;-1:-1:-1;;484:10761:23;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;;;-1:-1:-1;;;;;484:10761:23;;:::i;:::-;;;;9555:12;484:10761;;;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;484:10761:23;;;;;;-1:-1:-1;;;;;484:10761:23;;10442:38;484:10761;;;10442:38;484:10761;;;;;;;;;;;;;;;;;1303:62:0;;:::i;:::-;484:10761:23;;;;;;;;;1513:6:0;484:10761:23;;11124:21;11098:48;;;;;;484:10761;11098:48;;;;484:10761;;;11098:48;484:10761;971:66:3;;;;;;;;11098:48:23;;;;;484:10761;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1898:6:6;484:10761:23;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;484:10761:23;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;484:10761:23;;;;;;;;;;;;;;;;;;;;;;971:66:3;484:10761:23;;;;;;3330:17:3;;;;;;;;;;:::i;3232:526::-;484:10761:23;;;;;;;;;;971:66:3;;;3383:63;;;;;;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;484:10761:23;;-1:-1:-1;;;3610:56:3;;;;;971:66;;;;;;;484:10761:23;971:66:3;484:10761:23;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;;;;;971:66;;3379:302;2171:17;;;:::i;:::-;2204:27;;;;484:10761:23;;;2523:15:3;;;:28;;;2519:123;;3232:526;;;;;;484:10761:23;;2523:28:3;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;484:10761:23;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;1539:26;484:10761;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9419:10;484:10761;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;3301:14:5;3347:34;;;;;;484:10761:23;3346:108:5;;;;484:10761:23;;;;-1:-1:-1;;;484:10761:23;;;;;;;3562:65:5;;484:10761:23;;5366:69:5;484:10761:23;;;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;1195:12:0;929:10:14;1195:12:0;:::i;:::-;484:10761:23;;;5366:69:5;484:10761:23;;;;;5366:69:5;:::i;:::-;484:10761:23;;;;;;;-1:-1:-1;;;;;484:10761:23;;;;;2772:38;484:10761;;;2772:38;484:10761;;;2820:60;484:10761;;;2820:60;484:10761;;;2890:26;484:10761;;;;;;;:::i;:::-;3027:4;484:10761;;;3115:3;2997:295;;484:10761;2997:295;;484:10761;3172:3;2997:295;;;484:10761;3239:4;2997:295;;;;484:10761;2982:310;484:10761;;;3172:3;484:10761;;;;3647:99:5;;484:10761:23;;;3647:99:5;-1:-1:-1;;484:10761:23;;;;;;;3721:14:5;;484:10761:23;;3721:14:5;3647:99;;484:10761:23;;;3562:65:5;-1:-1:-1;;484:10761:23;;;;;3562:65:5;;;484:10761:23;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;3346:108:5;3426:4;;1713:19:13;:23;3387:66:5;;3346:108;3387:66;484:10761:23;;;;;3436:17:5;3346:108;;3347:34;484:10761:23;;;;;3365:16:5;3347:34;;484:10761:23;;;;;;;;-1:-1:-1;;484:10761:23;;;;1303:62:0;;:::i;:::-;484:10761:23;10316:26;484:10761;;;;;;;;;;;;-1:-1:-1;;484:10761:23;;;;10144:84;484:10761;;10144:84;484:10761;;;;;;;1303:62:0;;;:::i;:::-;484:10761:23;;;;;;;:::i;:::-;;;;9930:198;484:10761;9930:198;;484:10761;9930:198;;;;484:10761;9930:198;484:10761;;9915:213;484:10761;;;;;;;;;;;10144:84;;;;484:10761;;;;;;;;;;;;;;;;;;;;;;;10144:84;;;;484:10761;;;;;;-1:-1:-1;;;;;484:10761:23;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;484:10761:23;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;484:10761:23;;;;:::o;1599:130:0:-;1513:6;484:10761:23;-1:-1:-1;;;;;484:10761:23;929:10:14;1662:23:0;484:10761:23;;1599:130:0:o;484:10761:23:-;;;;;;;;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;484:10761:23;;-1:-1:-1;;;;;484:10761:23;;;-1:-1:-1;;;;;;484:10761:23;;;;;;;;;;2806:40:0;-1:-1:-1;;2806:40:0;2666:187::o;484:10761:23:-;;;;:::o;:::-;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;1699:281:3;1713:19:13;;:23;484:10761:23;;-1:-1:-1;;;;;;;;;;;484:10761:23;;-1:-1:-1;;;;;;484:10761:23;-1:-1:-1;;;;;484:10761:23;;;;;;;;;1699:281:3:o;484:10761:23:-;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;7682:628:13;;;;7886:418;;;484:10761:23;;;7917:22:13;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;484:10761:23;;8212:17:13;:::o;484:10761:23:-;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;;;;7886:418:13;484:10761:23;;;;-1:-1:-1;8991:21:13;:17;;9163:142;;;;;;;8987:379;484:10761:23;;;;;;9335:20:13;;484:10761:23;;9335:20:13;;;;484:10761:23;;;;;;;;;9011:1:13;484:10761:23;;;;;;;;;;;;9011:1:13;484:10761:23;;;;;;;;;;;;;;9335:20:13;;;;484:10761:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;484:10761:23;;;;;;:::o;:::-;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;7387:879::-;-1:-1:-1;;;;;484:10761:23;-1:-1:-1;484:10761:23;;;7506:10;484:10761;;;;;7547:18;;;484:10761;;;-1:-1:-1;484:10761:23;;7546:19;7542:33;;7716:27;;;484:10761;7746:4;;484:10761;;;;;;;;;;;;;;;;7914:28;7715:60;7946:7;7754:21;;;;484:10761;7715:60;;:::i;:::-;7928:12;484:10761;7914:28;;:::i;:::-;484:10761;;;;;;;;8123:31;;8181:38;:61;8123:31;8181:19;8123:31;8247:11;8123:31;;484:10761;8181:19;;484:10761;8181:38;:::i;:::-;:61;:::i;:::-;484:10761;7387:879;:::o;484:10761::-;-1:-1:-1;;;484:10761:23;;;;;;;;;-1:-1:-1;;;484:10761:23;;;;;;;;7542:33;7567:8;;;:::o;8272:516::-;-1:-1:-1;;;;;484:10761:23;;-1:-1:-1;484:10761:23;;;8414:10;484:10761;;;;;8455:18;;484:10761;;;8454:19;8450:33;;8517:31;;;:::i;:::-;8594:4;;484:10761;;;;;;;;;;;;;;;8759:22;8580:34;;;;:::i;:::-;8737:5;8689:44;8703:30;484:10761;8689:44;;:::i;:::-;484:10761;8759:22;;:::i;:::-;8272:516;:::o;8450:33::-;8475:8;;-1:-1:-1;8475:8:23;:::o;8794:515::-;;484:10761;;;;;;;-1:-1:-1;484:10761:23;8939:10;484:10761;;;8980:18;484:10761;-1:-1:-1;484:10761:23;8980:18;484:10761;;8979:19;8975:33;;9104:27;9135:4;9042:31;;9282:20;9042:31;;:::i;:::-;9104:27;;:::i;:::-;484:10761;9260:5;9214:42;9226:30;484:10761;9214:42;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1557400","executionCost":"infinite","totalCost":"infinite"},"external":{"astrologerManager()":"2648","bondingCurve()":"9289","buyTokens(address)":"infinite","calculateBuyAmount(address,uint256)":"infinite","calculateSellAmount(address,uint256)":"infinite","getCurrentPrice(address)":"infinite","getTokenInfo(address)":"infinite","getUserBalance(address)":"2646","getUserContribution(address)":"2954","initialize(address,address,uint256)":"infinite","owner()":"2736","platformFee()":"2407","predictionCredibilityManager()":"2780","proxiableUUID()":"infinite","registerToken(address,address,uint256,uint256)":"147577","renounceOwnership()":"28453","reputationScorer()":"2692","sellTokens(address,uint256)":"infinite","setAstrologerManager(address)":"26832","setBondingCurve(uint256,uint256,uint256,uint256)":"92805","setPlatformFee(uint256)":"24463","setPredictionCredibilityManager(address)":"27096","setReputationScorer(address)":"27228","toggleTokenActive(address)":"27016","tokenInfos(address)":"15722","totalVolume()":"2605","transferOwnership(address)":"28921","updateCredibility(address,uint256)":"29111","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite","userBalances(address)":"2536","userContributions(address)":"2448","withdraw()":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"astrologerManager()":"6fd31a41","bondingCurve()":"eff1d50e","buyTokens(address)":"ec8ac4d8","calculateBuyAmount(address,uint256)":"f2f2c5c4","calculateSellAmount(address,uint256)":"573a5b6b","getCurrentPrice(address)":"84cc315b","getTokenInfo(address)":"1f69565f","getUserBalance(address)":"47734892","getUserContribution(address)":"bb8b2b47","initialize(address,address,uint256)":"1794bb3c","owner()":"8da5cb5b","platformFee()":"26232a2e","predictionCredibilityManager()":"b76d03b2","proxiableUUID()":"52d1902d","registerToken(address,address,uint256,uint256)":"cea9f4b5","renounceOwnership()":"715018a6","reputationScorer()":"73c84d21","sellTokens(address,uint256)":"c464fe65","setAstrologerManager(address)":"44cda485","setBondingCurve(uint256,uint256,uint256,uint256)":"078bfd9b","setPlatformFee(uint256)":"12e8e2c3","setPredictionCredibilityManager(address)":"b0d485b3","setReputationScorer(address)":"e9725c21","toggleTokenActive(address)":"4f1d052d","tokenInfos(address)":"ba46ae72","totalVolume()":"5f81a57c","transferOwnership(address)":"f2fde38b","updateCredibility(address,uint256)":"f6322a5f","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","userBalances(address)":"26224c64","userContributions(address)":"0f6ca1a8","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserveRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slippageTolerance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxReputationMultiplier\",\"type\":\"uint256\"}],\"name\":\"BondingCurveUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMultiplier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"CredibilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"astrologerManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondingCurve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slippageTolerance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxReputationMultiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"calculateBuyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSellAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulatingSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"credibilityMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct BuyTokenContract.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_predictionCredibilityManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predictionCredibilityManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_basePrice\",\"type\":\"uint256\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationScorer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"}],\"name\":\"setAstrologerManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slippageTolerance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxReputationMultiplier\",\"type\":\"uint256\"}],\"name\":\"setBondingCurve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"name\":\"setPlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_predictionCredibilityManager\",\"type\":\"address\"}],\"name\":\"setPredictionCredibilityManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reputationScorer\",\"type\":\"address\"}],\"name\":\"setReputationScorer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"toggleTokenActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulatingSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"credibilityMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateCredibility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyTokenContract.sol\":\"BuyTokenContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\\n    function __ERC20Burnable_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20PermitUpgradeable {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../extensions/IERC20PermitUpgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20Upgradeable token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20Upgradeable token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20Upgradeable token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20PermitUpgradeable token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20Upgradeable token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && AddressUpgradeable.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/AstroToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\n\\ncontract AstroToken is \\n    Initializable, \\n    ERC20Upgradeable, \\n    ERC20BurnableUpgradeable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    address public astrologer;\\n    address public buyContract;\\n    bool public isInitialized;\\n    \\n    event AstroTokenInitialized(\\n        address indexed astrologer,\\n        string name,\\n        string symbol,\\n        uint256 totalSupply\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _totalSupply,\\n        address _astrologer,\\n        address _buyContract\\n    ) public initializer {\\n        require(!isInitialized, \\\"Already initialized\\\");\\n        \\n        __ERC20_init(_name, _symbol);\\n        __ERC20Burnable_init();\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologer = _astrologer;\\n        buyContract = _buyContract;\\n        \\n        // Mint total supply to astrologer\\n        _mint(_astrologer, _totalSupply);\\n        \\n        isInitialized = true;\\n        \\n        emit AstroTokenInitialized(_astrologer, _name, _symbol, _totalSupply);\\n    }\\n\\n    function mint(address to, uint256 amount) external {\\n        require(msg.sender == owner() || msg.sender == buyContract, \\\"Not authorized to mint\\\");\\n        _mint(to, amount);\\n    }\\n\\n    function burnFrom(address account, uint256 amount) public override {\\n        require(msg.sender == owner() || msg.sender == buyContract, \\\"Not authorized to burn\\\");\\n        _burn(account, amount);\\n    }\\n\\n    function setBuyContract(address _buyContract) external onlyOwner {\\n        buyContract = _buyContract;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0xa6c063b2d755749a9463670f43bc6062d6ca2f8b31b717e161dac5134f2ce13c\",\"license\":\"MIT\"},\"contracts/BuyTokenContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"./AstroToken.sol\\\";\\n\\ncontract BuyTokenContract is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    struct TokenInfo {\\n        address tokenContract;\\n        address astrologer;\\n        uint256 totalSupply;\\n        uint256 circulatingSupply;\\n        uint256 basePrice;\\n        uint256 credibilityMultiplier;\\n        bool isActive;\\n    }\\n\\n    struct BondingCurve {\\n        uint256 k; // Bonding curve constant (very low for minimal supply impact)\\n        uint256 reserveRatio; // Reserve ratio (0-1000, where 1000 = 100%)\\n        uint256 slippageTolerance; // Slippage tolerance in basis points\\n        uint256 maxReputationMultiplier; // Maximum reputation multiplier (e.g., 5000 = 5.0x)\\n    }\\n\\n    mapping(address => TokenInfo) public tokenInfos;\\n    mapping(address => uint256) public userBalances;\\n    mapping(address => uint256) public userContributions;\\n    \\n    address public astrologerManager;\\n    address public predictionCredibilityManager;\\n    \\n    BondingCurve public bondingCurve;\\n    uint256 public platformFee; // Platform fee in basis points (100 = 1%)\\n    uint256 public totalVolume;\\n    \\n    // New variables must be added at the end for upgradeable contracts\\n    address public reputationScorer;\\n    \\n    event TokenBought(\\n        address indexed tokenContract,\\n        address indexed buyer,\\n        uint256 ethAmount,\\n        uint256 tokenAmount,\\n        uint256 price\\n    );\\n\\n    event TokenSold(\\n        address indexed tokenContract,\\n        address indexed seller,\\n        uint256 tokenAmount,\\n        uint256 ethAmount,\\n        uint256 price\\n    );\\n\\n    event CredibilityUpdated(\\n        address indexed tokenContract,\\n        uint256 oldMultiplier,\\n        uint256 newMultiplier\\n    );\\n\\n    event BondingCurveUpdated(\\n        uint256 k,\\n        uint256 reserveRatio,\\n        uint256 slippageTolerance,\\n        uint256 maxReputationMultiplier\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _predictionCredibilityManager,\\n        uint256 _platformFee\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        predictionCredibilityManager = _predictionCredibilityManager;\\n        platformFee = _platformFee;\\n        \\n        // Initialize bonding curve parameters\\n        bondingCurve = BondingCurve({\\n            k: 1000, // Very low constant for minimal supply impact (was 1M)\\n            reserveRatio: 500, // 50% reserve ratio\\n            slippageTolerance: 100, // 1% slippage tolerance\\n            maxReputationMultiplier: 5000 // 5.0x maximum reputation multiplier\\n        });\\n    }\\n\\n    function registerToken(\\n        address _tokenContract,\\n        address _astrologer,\\n        uint256 _totalSupply,\\n        uint256 _basePrice\\n    ) external {\\n        require(msg.sender == owner(), \\\"Only owner can register tokens\\\");\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n        require(_astrologer != address(0), \\\"Invalid astrologer address\\\");\\n        require(_totalSupply > 0, \\\"Total supply must be greater than 0\\\");\\n        require(_basePrice > 0, \\\"Base price must be greater than 0\\\");\\n\\n        tokenInfos[_tokenContract] = TokenInfo({\\n            tokenContract: _tokenContract,\\n            astrologer: _astrologer,\\n            totalSupply: _totalSupply,\\n            circulatingSupply: 0,\\n            basePrice: _basePrice,\\n            credibilityMultiplier: 1000, // 1.0x multiplier\\n            isActive: true\\n        });\\n    }\\n\\n    function buyTokens(address _tokenContract) external payable returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n        require(msg.value > 0, \\\"Must send ETH to buy tokens\\\");\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 tokenAmount = calculateBuyAmount(_tokenContract, msg.value);\\n        \\n        require(tokenAmount > 0, \\\"Insufficient ETH for minimum token amount\\\");\\n        require(\\n            tokenInfo.circulatingSupply + tokenAmount <= tokenInfo.totalSupply,\\n            \\\"Would exceed total supply\\\"\\n        );\\n\\n        // Calculate fees\\n        uint256 platformFeeAmount = (msg.value * platformFee) / 10000;\\n        uint256 astrologerAmount = msg.value - platformFeeAmount;\\n\\n        // Update state\\n        tokenInfo.circulatingSupply += tokenAmount;\\n        userBalances[_tokenContract] += tokenAmount;\\n        userContributions[msg.sender] += msg.value;\\n        totalVolume += msg.value;\\n\\n        // Mint tokens to buyer\\n        AstroToken(_tokenContract).mint(msg.sender, tokenAmount);\\n\\n        // Transfer ETH to astrologer\\n        if (astrologerAmount > 0) {\\n            payable(tokenInfo.astrologer).transfer(astrologerAmount);\\n        }\\n\\n        emit TokenBought(_tokenContract, msg.sender, msg.value, tokenAmount, currentPrice);\\n        return tokenAmount;\\n    }\\n\\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n        require(_tokenAmount > 0, \\\"Must sell positive amount\\\");\\n        require(userBalances[_tokenContract] >= _tokenAmount, \\\"Insufficient token balance\\\");\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 ethAmount = calculateSellAmount(_tokenContract, _tokenAmount);\\n        \\n        require(ethAmount > 0, \\\"Insufficient tokens for minimum ETH amount\\\");\\n\\n        // Calculate fees\\n        uint256 platformFeeAmount = (ethAmount * platformFee) / 10000;\\n        uint256 sellerAmount = ethAmount - platformFeeAmount;\\n\\n        // Update state\\n        tokenInfo.circulatingSupply -= _tokenAmount;\\n        userBalances[_tokenContract] -= _tokenAmount;\\n        totalVolume += ethAmount;\\n\\n        // Burn tokens from seller\\n        AstroToken(_tokenContract).burnFrom(msg.sender, _tokenAmount);\\n\\n        // Transfer ETH to seller\\n        if (sellerAmount > 0) {\\n            payable(msg.sender).transfer(sellerAmount);\\n        }\\n\\n        emit TokenSold(_tokenContract, msg.sender, _tokenAmount, ethAmount, currentPrice);\\n        return ethAmount;\\n    }\\n\\n    function updateCredibility(address _tokenContract, uint256 _newMultiplier) external {\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        require(tokenInfo.isActive, \\\"Token not active\\\");\\n\\n        uint256 oldMultiplier = tokenInfo.credibilityMultiplier;\\n        tokenInfo.credibilityMultiplier = _newMultiplier;\\n\\n        emit CredibilityUpdated(_tokenContract, oldMultiplier, _newMultiplier);\\n    }\\n\\n    function getCurrentPrice(address _tokenContract) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        // Very minimal supply impact: price = basePrice * (1 + tiny_supply_effect) * reputationMultiplier\\n        uint256 supplyRatio = (tokenInfo.circulatingSupply * 1e18) / tokenInfo.totalSupply;\\n        \\n        // Very small supply multiplier (k reduced from 1M to 1K for minimal impact)\\n        uint256 supplyMultiplier = 1e18 + (supplyRatio * bondingCurve.k) / 1000000; // Much smaller impact\\n        \\n        // Reputation is the main driver: credibilityMultiplier is in basis points (1000 = 1.0x)\\n        uint256 reputationMultiplier = tokenInfo.credibilityMultiplier;\\n        \\n        return (tokenInfo.basePrice * supplyMultiplier * reputationMultiplier) / (1e18 * 1000);\\n    }\\n\\n    function calculateBuyAmount(address _tokenContract, uint256 _ethAmount) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 tokenAmount = (_ethAmount * 1e18) / currentPrice;\\n        \\n        // Apply slippage tolerance\\n        uint256 slippage = (tokenAmount * bondingCurve.slippageTolerance) / 10000;\\n        return tokenAmount - slippage;\\n    }\\n\\n    function calculateSellAmount(address _tokenContract, uint256 _tokenAmount) public view returns (uint256) {\\n        TokenInfo storage tokenInfo = tokenInfos[_tokenContract];\\n        if (!tokenInfo.isActive) return 0;\\n\\n        uint256 currentPrice = getCurrentPrice(_tokenContract);\\n        uint256 ethAmount = (_tokenAmount * currentPrice) / 1e18;\\n        \\n        // Apply slippage tolerance\\n        uint256 slippage = (ethAmount * bondingCurve.slippageTolerance) / 10000;\\n        return ethAmount - slippage;\\n    }\\n\\n    function getTokenInfo(address _tokenContract) external view returns (TokenInfo memory) {\\n        return tokenInfos[_tokenContract];\\n    }\\n\\n    function getUserBalance(address _tokenContract) external view returns (uint256) {\\n        return userBalances[_tokenContract];\\n    }\\n\\n    function getUserContribution(address _user) external view returns (uint256) {\\n        return userContributions[_user];\\n    }\\n\\n    function setBondingCurve(\\n        uint256 _k,\\n        uint256 _reserveRatio,\\n        uint256 _slippageTolerance,\\n        uint256 _maxReputationMultiplier\\n    ) external onlyOwner {\\n        bondingCurve = BondingCurve({\\n            k: _k,\\n            reserveRatio: _reserveRatio,\\n            slippageTolerance: _slippageTolerance,\\n            maxReputationMultiplier: _maxReputationMultiplier\\n        });\\n\\n        emit BondingCurveUpdated(_k, _reserveRatio, _slippageTolerance, _maxReputationMultiplier);\\n    }\\n\\n    function setPlatformFee(uint256 _platformFee) external onlyOwner {\\n        platformFee = _platformFee;\\n    }\\n\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setPredictionCredibilityManager(address _predictionCredibilityManager) external onlyOwner {\\n        predictionCredibilityManager = _predictionCredibilityManager;\\n    }\\n\\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\\n        reputationScorer = _reputationScorer;\\n    }\\n\\n    function toggleTokenActive(address _tokenContract) external onlyOwner {\\n        require(_tokenContract != address(0), \\\"Invalid token contract\\\");\\n        tokenInfos[_tokenContract].isActive = !tokenInfos[_tokenContract].isActive;\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0x1ca5e1200e34787fb49afc8773bd31c914dc0716c88c77f34eda346a17893127\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":485,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":3767,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"tokenInfos","offset":0,"slot":"201","type":"t_mapping(t_address,t_struct(TokenInfo)3753_storage)"},{"astId":3771,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"userBalances","offset":0,"slot":"202","type":"t_mapping(t_address,t_uint256)"},{"astId":3775,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"userContributions","offset":0,"slot":"203","type":"t_mapping(t_address,t_uint256)"},{"astId":3777,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"astrologerManager","offset":0,"slot":"204","type":"t_address"},{"astId":3779,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"predictionCredibilityManager","offset":0,"slot":"205","type":"t_address"},{"astId":3782,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"bondingCurve","offset":0,"slot":"206","type":"t_struct(BondingCurve)3762_storage"},{"astId":3784,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"platformFee","offset":0,"slot":"210","type":"t_uint256"},{"astId":3786,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"totalVolume","offset":0,"slot":"211","type":"t_uint256"},{"astId":3788,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"reputationScorer","offset":0,"slot":"212","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_struct(TokenInfo)3753_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct BuyTokenContract.TokenInfo)","numberOfBytes":"32","value":"t_struct(TokenInfo)3753_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(BondingCurve)3762_storage":{"encoding":"inplace","label":"struct BuyTokenContract.BondingCurve","members":[{"astId":3755,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"k","offset":0,"slot":"0","type":"t_uint256"},{"astId":3757,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"reserveRatio","offset":0,"slot":"1","type":"t_uint256"},{"astId":3759,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"slippageTolerance","offset":0,"slot":"2","type":"t_uint256"},{"astId":3761,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"maxReputationMultiplier","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_struct(TokenInfo)3753_storage":{"encoding":"inplace","label":"struct BuyTokenContract.TokenInfo","members":[{"astId":3740,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"tokenContract","offset":0,"slot":"0","type":"t_address"},{"astId":3742,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"astrologer","offset":0,"slot":"1","type":"t_address"},{"astId":3744,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":3746,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"circulatingSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":3748,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"basePrice","offset":0,"slot":"4","type":"t_uint256"},{"astId":3750,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"credibilityMultiplier","offset":0,"slot":"5","type":"t_uint256"},{"astId":3752,"contract":"contracts/BuyTokenContract.sol:BuyTokenContract","label":"isActive","offset":0,"slot":"6","type":"t_bool"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PredictionCredibilityManager.sol":{"PredictionCredibilityManager":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"uint256","name":"oldAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newMultiplier","type":"uint256"}],"name":"CredibilityUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"predictionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"uint256","name":"predictionType","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"PredictionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"predictionId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"outcome","type":"bool"},{"indexed":false,"internalType":"bool","name":"wasAccurate","type":"bool"}],"name":"PredictionResolved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"astroTokenLauncher","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"astrologerManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"astrologerPredictions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyTokenContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint256","name":"_predictionType","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"},{"internalType":"uint256","name":"_stakeAmount","type":"uint256"}],"name":"createPrediction","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"credibilityScores","outputs":[{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"accuracyPercentage","type":"uint256"},{"internalType":"uint256","name":"reputationMultiplier","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"credibilityUpdateDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getAstrologerAccuracy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getAstrologerPredictions","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getCredibilityScore","outputs":[{"components":[{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"accuracyPercentage","type":"uint256"},{"internalType":"uint256","name":"reputationMultiplier","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"}],"internalType":"struct PredictionCredibilityManager.CredibilityScore","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"}],"name":"getPrediction","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"predictionType","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"outcome","type":"bool"},{"internalType":"bool","name":"isResolved","type":"bool"},{"internalType":"bool","name":"wasAccurate","type":"bool"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct PredictionCredibilityManager.Prediction","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"},{"internalType":"address","name":"_buyTokenContract","type":"address"},{"internalType":"address","name":"_reputationScorer","type":"address"},{"internalType":"address","name":"_astroTokenLauncher","type":"address"},{"internalType":"uint256","name":"_minStakeAmount","type":"uint256"},{"internalType":"uint256","name":"_maxStakeAmount","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minStakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"predictions","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"predictionType","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"outcome","type":"bool"},{"internalType":"bool","name":"isResolved","type":"bool"},{"internalType":"bool","name":"wasAccurate","type":"bool"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"totalStaked","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reputationScorer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"},{"internalType":"bool","name":"_outcome","type":"bool"}],"name":"resolvePrediction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astroTokenLauncher","type":"address"}],"name":"setAstroTokenLauncher","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"}],"name":"setAstrologerManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_buyTokenContract","type":"address"}],"name":"setBuyTokenContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_delay","type":"uint256"}],"name":"setCredibilityUpdateDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_reputationScorer","type":"address"}],"name":"setReputationScorer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minStakeAmount","type":"uint256"},{"internalType":"uint256","name":"_maxStakeAmount","type":"uint256"}],"name":"setStakeLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b60405161241590816100e28239608051818181611598015281816116980152611a230152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80624fbbb014611ce357806316d54f0914611cba5780632a2fa8c814611c9c5780633659cfe6146119fe57806337562b29146119a85780633ccfd60b1461195857806344cda485146119185780634f1ef2861461164957806352d1902d146115855780635d80ca32146115675780635ddb0e2b146115445780636882fc51146115195780636fd31a41146114f0578063715018a61461149357806373c84d211461146a57806376f3450114610dcd5780637d54f2a514610d675780638c9bd1b514610d3e5780638da5cb5b14610d15578063ab3dcd6a14610cec578063b107e88c14610caf578063bc85818514610c01578063c3a274c214610bc1578063c4faa808146106f5578063d7c41c791461052c578063e2c3538c146104ec578063e9725c21146104ac578063ec88c09b146103f7578063f1887684146103d9578063f2fde38b146103485763fe83bece1461017157600080fd5b346103455760203660031901126103455760409060043581610160845161019781611e16565b82815282602082015282868201526060808201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152015280151580610339575b6101ec906122fd565b815260ca6020522060096040519161020383611e16565b8054835260018101546001600160a01b031660208401526002810154604084015261023060038201611e89565b606084015260048101546080840152600581015460a084015260ff6006820154818116151560c0860152818160081c16151560e086015260101c1615156101008401526007810154610120840152600881015461014084015201546101608201526040518091602082528051602083015260018060a01b0360208201511660408301526040810151606083015260608101516101606102dd610180928360808701526101a0860190611f52565b92608081015160a086015260a081015160c086015260c0810151151560e086015260e081015115156101008601526101008101511515610120860152610120810151610140860152610140810151828601520151908301520390f35b5060c9548111156101e3565b80fd5b503461034557602036600319011261034557610362611f77565b61036a61200d565b6001600160a01b038116156103855761038290612065565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5034610345578060031936011261034557602060d154604051908152f35b503461034557602036600319011261034557604060a091610416611f77565b816080845161042481611e32565b82815282602082015282868201528260608201520152600180851b0316815260cb6020522060405161045581611e32565b81549182825260018101546020830190815260028201549060408401918252608060046003850154946060870195865201549401938452604051948552516020850152516040840152516060830152516080820152f35b5034610345576020366003190112610345576104c6611f77565b6104ce61200d565b60018060a01b03166001600160601b0360a01b60cf54161760cf5580f35b503461034557602036600319011261034557610506611f77565b61050e61200d565b60018060a01b03166001600160601b0360a01b60d054161760d05580f35b50346103455760c036600319011261034557610546611f77565b6001600160a01b039060243582811691908290036106f057604435908382168092036106f057606435918483168093036106f05785549360ff8560081c1615948580966106e3575b80156106cc575b156106705760ff19811660011788558561065f575b506105c460ff885460081c166105bf8161229d565b61229d565b6105cd33612065565b8654956105df60ff8860081c1661229d565b6001600160601b0360a01b93168360cd54161760cd558260ce54161760ce558160cf54161760cf5560d054161760d05560843560d15560a43560d2556201518060d35561062a575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff1916610101178755386105aa565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105955750600160ff821614610595565b50600160ff82161061058e565b600080fd5b506080366003190112610345576004356001600160401b038111610bbd5736602382011215610bbd57610732903690602481600401359101611fd6565b60d1543410610b815760d2543411610b4457426044351115610aff57805115610aba57600260243511610a7557600160c95401908160c95560405161077681611e16565b828152336020820152836040820152816060820152602435608082015260443560a08201528360c08201528360e08201528361010082015234610120820152346101408201524261016082015282845260ca6020526040842090805182556001820160018060a01b036020830151166001600160601b0360a01b8254161790556040810151600283015560608101518051906001600160401b038211610a61576108236003850154611db3565b601f8111610a1c575b50602090601f83116001146109a957918060099492610160948a9261099e575b50508160011b916000199060031b1c19161760038501555b6080810151600485015560a081015160058501556108ce6006850161089b60c08401511515829060ff801983541691151516179055565b60e0830151815461010085015162ffff001990911691151560081b61ff00169190911790151560101b62ff000016179055565b61012081015160078501556101408101516008850155015191015533835260cc602052604083208054936801000000000000000085101561098a575061091d8484926001602097018155611f8d565b819291549060031b600019811b9283911b16911916179055817f37f3edf7ed237f91fd6999d49411c7e10b3602f2e561a5adf21934775659c61a61096c60405193606085526060850190611f52565b926024358682015260443560408201528033940390a3604051908152f35b634e487b7160e01b81526041600452602490fd5b01519050388061084c565b906003850188526020882091885b601f1985168110610a04575092600994926001926101609583601f198116106109eb575b505050811b016003850155610864565b015160001960f88460031b161c191690553880806109db565b919260206001819286850151815501940192016109b7565b60038501885260208820601f840160051c810160208510610a5a575b601f830160051c82018110610a4e57505061082c565b60008155600101610a38565b5080610a38565b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c69642070726564696374696f6e20747970650000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152740a6e8c2d6ca40c2dadeeadce840e8dede40d0d2ced605b1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152735374616b6520616d6f756e7420746f6f206c6f7760601b6044820152606490fd5b5080fd5b503461034557602036600319011261034557610bdb611f77565b610be361200d565b60018060a01b03166001600160601b0360a01b60ce54161760ce5580f35b503461034557602080600319360112610bbd576001600160a01b03610c24611f77565b16825260cc81526040822060405192838383549182815201908193835284832090835b818110610c9b5750505084610c5d910385611e68565b60405193838594850191818652518092526040850193925b828110610c8457505050500390f35b835185528695509381019392810192600101610c75565b825484529286019260019283019201610c47565b5034610345576020366003190112610345576020906003906040906001600160a01b03610cda611f77565b16815260cb8452200154604051908152f35b503461034557806003193601126103455760d0546040516001600160a01b039091168152602090f35b50346103455780600319360112610345576033546040516001600160a01b039091168152602090f35b503461034557604036600319011261034557610d5861200d565b60043560d15560243560d25580f35b50346103455760203660031901126103455760a0906040906001600160a01b03610d8f611f77565b16815260cb60205220805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b503461034557604036600319011261034557602435908115158203610345576033546001600160a01b031633148015611456575b1561142257600435151580611414575b610e1a906122fd565b600435815260ca6020526040812091600683019260ff845460081c166113cf576005810154421061139357835460ff191660ff83151516178455600190845462ffff00191683151560101b62ff00001617610100178555019260018060a01b038454169381549480855260cb602052604085209560ff610e9a8854612341565b9182895560101c1661137e575b60018701548060648102046064148115171561136a5781156113565760640204600287018181559690605a811061130957506105dc60038201555b42600482015560d0546001600160a01b03168061107a575b5060607f6a7ecd478c262bb3ab79078dfdd91746ac4294a080e783fcb6c01647a353d5f7916003889998969798549101546040519180835260208301526040820152a260cd546001600160a01b03169081610f95575b50505060ff905460101c166040519115158252151560208201527fce4539ae54088cf98525b0ed90db8b4271abcb31bd3a4b964aed59895698f72f604060043592a280f35b5460405163656d0c3960e01b81526001600160a01b039091166004820152602081602481855afa90811561106f57839161103d575b508015610f505760ff845460101c16823b156110395760448492836040519586948593631c8fdeb560e31b85526004850152151560248401525af1801561102e57611016575b80610f50565b61101f90611ded565b61102a578238611010565b8280fd5b6040513d84823e3d90fd5b8380fd5b90506020813d602011611067575b8161105860209383611e68565b8101031261102a575138610fca565b3d915061104b565b6040513d85823e3d90fd5b9686602498604051998a809263248bb6cd60e21b82528760048301525afa8088916111ab575b889950979596976110b6575b5096959493610efa565b60408101516001600160a01b03169081151580611195575b80611187575b6110df575b506110ac565b60600151600384015495969495939492936001600160a01b039091169291833b1561102a5760449083604051958694859363f6322a5f60e01b8552600485015260248401525af1801561117c5761113d575b908188959493926110d9565b7f6a7ecd478c262bb3ab79078dfdd91746ac4294a080e783fcb6c01647a353d5f791949392600398611170606093611ded565b98509293949150611131565b6040513d8a823e3d90fd5b5061010081015115156110d4565b5060608101516001600160a01b031615156110ce565b90503d988989823e6111bd8a82611e68565b6020818b810103126113055780516001600160401b0381116112e9576101408183018c840103126112e95760405191826101408101106001600160401b03610140850111176112f1578a9b610140849c9a9b9c01604052828201518452611228602084840101612366565b602085015261123b604084840101612366565b604085015261124e606084840101612366565b6060850152608083830101516001600160401b0381116112ed5761127990828401908585010161237a565b608085015260a083830101516001600160401b0381116112ed576112a3918301908484010161237a565b60a084015280820160c0818101519085015260e08082015190850152610100015180151581036112e95761010084015201610120908101519082015295979695906110a0565b8980fd5b8a80fd5b634e487b7160e01b8b52604160045260248bfd5b8880fd5b6050811061131f57506104b06003820155610ee2565b6046811061133557506103e86003820155610ee2565b603c11611349576103206003820155610ee2565b6101f46003820155610ee2565b634e487b7160e01b87526012600452602487fd5b634e487b7160e01b87526011600452602487fd5b6001870161138c8154612341565b9055610ea7565b60405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f50726564696374696f6e20616c7265616479207265736f6c76656400000000006044820152606490fd5b5060c9546004351115610e11565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b5060cf546001600160a01b03163314610e01565b503461034557806003193601126103455760cf546040516001600160a01b039091168152602090f35b50346103455780600319360112610345576114ac61200d565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461034557806003193601126103455760cd546040516001600160a01b039091168152602090f35b5034610345576020366003190112610345576020906002906040906001600160a01b03610cda611f77565b50346103455760203660031901126103455761155e61200d565b60043560d35580f35b5034610345578060031936011261034557602060d254604051908152f35b50346103455780600319360112610345577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036115de5760206040516000805160206123c08339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b5060403660031901126103455761165e611f77565b6024356001600160401b03811161102a573660238201121561102a5761168e903690602481600401359101611fd6565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291906116c8308514156120ae565b6116e56000805160206123c083398151915294828654161461210f565b6116ed61200d565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156117235750506103829150612170565b8216604051936352d1902d60e01b85526020948581600481865afa8791816118e5575b506117a75760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b949293940361188e576117b984612170565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a2815115801590611886575b6117f3575b50505080f35b6118749284806040519461180686611e4d565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d1561187d573d61185881611fbb565b906118666040519283611e68565b81528681943d92013e612200565b503880806117ed565b60609250612200565b5060016117e8565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d8311611911575b6118fd8183611e68565b8101031261190d57519038611746565b8780fd5b503d6118f3565b503461034557602036600319011261034557611932611f77565b61193a61200d565b60018060a01b03166001600160601b0360a01b60cd54161760cd5580f35b503461034557806003193601126103455761197161200d565b8080808060018060a01b0360335416479082821561199f575bf1156119935780f35b604051903d90823e3d90fd5b506108fc61198a565b5034610345576040366003190112610345576119c2611f77565b6001600160a01b0316815260cc60205260408120805460243592908310156103455760206119f08484611f8d565b90546040519160031b1c8152f35b503461034557602080600319360112610bbd57611a19611f77565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116611a50308214156120ae565b611a6d6000805160206123c083398151915291838354161461210f565b611a7561200d565b60405190848201928284106001600160401b03851117610a61578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014611ad057505050506103829150612170565b8492939416906040516352d1902d60e01b81528681600481865afa889181611c6d575b50611b545760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9593949503611c1657611b6682612170565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a284835115801590611c0f575b611ba3575b505050505080f35b80611c049560405195611bb587611e4d565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d1561187d573d61185881611fbb565b503880808084611b9b565b5080611b96565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d8311611c95575b611c858183611e68565b8101031261130557519038611af3565b503d611c7b565b5034610345578060031936011261034557602060d354604051908152f35b503461034557806003193601126103455760ce546040516001600160a01b039091168152602090f35b503461034557602036600319011261034557604090600435815260ca60205220805460018060a01b03600183015416916002810154611d2460038301611e89565b9160048101549260ff6005830154600684015490611d6f60078601549460096008880154970154976040519b8c9b8c5260208c015260408b01526101808060608c01528a0190611f52565b96608089015260a0880152818116151560c0880152818160081c16151560e088015260101c1615156101008601526101208501526101408401526101608301520390f35b90600182811c92168015611de3575b6020831014611dcd57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611dc2565b6001600160401b038111611e0057604052565b634e487b7160e01b600052604160045260246000fd5b61018081019081106001600160401b03821117611e0057604052565b60a081019081106001600160401b03821117611e0057604052565b606081019081106001600160401b03821117611e0057604052565b90601f801991011681019081106001600160401b03821117611e0057604052565b9060405191826000825492611e9d84611db3565b908184526001948581169081600014611f0c5750600114611ec9575b5050611ec792500383611e68565b565b9093915060005260209081600020936000915b818310611ef4575050611ec793508201013880611eb9565b85548884018501529485019487945091830191611edc565b915050611ec794506020925060ff191682840152151560051b8201013880611eb9565b60005b838110611f425750506000910152565b8181015183820152602001611f32565b90602091611f6b81518092818552858086019101611f2f565b601f01601f1916010190565b600435906001600160a01b03821682036106f057565b8054821015611fa55760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b038111611e0057601f01601f191660200190565b929192611fe282611fbb565b91611ff06040519384611e68565b8294818452818301116106f0578281602093846000960137010152565b6033546001600160a01b0316330361202157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156120b557565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561211657565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156121a5576000805160206123c083398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156122625750815115612214575090565b3b1561221d5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156122755750805190602001fd5b60405162461bcd60e51b815260206004820152908190612299906024830190611f52565b0390fd5b156122a457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561230457565b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1c99591a58dd1a5bdb881251605a1b6044820152606490fd5b60001981146123505760010190565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b03821682036106f057565b81601f820112156106f057805161239081611fbb565b9261239e6040519485611e68565b818452602082840101116106f0576123bc9160208085019101611f2f565b9056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212201d1d809abf756a0d1183a8c27da3bbf771682288cc4360e2e26357f9dba0b48c64736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2415 SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1598 ADD MSTORE DUP2 DUP2 PUSH2 0x1698 ADD MSTORE PUSH2 0x1A23 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x4FBBB0 EQ PUSH2 0x1CE3 JUMPI DUP1 PUSH4 0x16D54F09 EQ PUSH2 0x1CBA JUMPI DUP1 PUSH4 0x2A2FA8C8 EQ PUSH2 0x1C9C JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x19FE JUMPI DUP1 PUSH4 0x37562B29 EQ PUSH2 0x19A8 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1958 JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x1918 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1649 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1585 JUMPI DUP1 PUSH4 0x5D80CA32 EQ PUSH2 0x1567 JUMPI DUP1 PUSH4 0x5DDB0E2B EQ PUSH2 0x1544 JUMPI DUP1 PUSH4 0x6882FC51 EQ PUSH2 0x1519 JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x14F0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1493 JUMPI DUP1 PUSH4 0x73C84D21 EQ PUSH2 0x146A JUMPI DUP1 PUSH4 0x76F34501 EQ PUSH2 0xDCD JUMPI DUP1 PUSH4 0x7D54F2A5 EQ PUSH2 0xD67 JUMPI DUP1 PUSH4 0x8C9BD1B5 EQ PUSH2 0xD3E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD15 JUMPI DUP1 PUSH4 0xAB3DCD6A EQ PUSH2 0xCEC JUMPI DUP1 PUSH4 0xB107E88C EQ PUSH2 0xCAF JUMPI DUP1 PUSH4 0xBC858185 EQ PUSH2 0xC01 JUMPI DUP1 PUSH4 0xC3A274C2 EQ PUSH2 0xBC1 JUMPI DUP1 PUSH4 0xC4FAA808 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xD7C41C79 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xE2C3538C EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xE9725C21 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xEC88C09B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF1887684 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x348 JUMPI PUSH4 0xFE83BECE EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 PUSH2 0x160 DUP5 MLOAD PUSH2 0x197 DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO ISZERO DUP1 PUSH2 0x339 JUMPI JUMPDEST PUSH2 0x1EC SWAP1 PUSH2 0x22FD JUMP JUMPDEST DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x203 DUP4 PUSH2 0x1E16 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x230 PUSH1 0x3 DUP3 ADD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP7 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x160 PUSH2 0x2DD PUSH2 0x180 SWAP3 DUP4 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x1A0 DUP7 ADD SWAP1 PUSH2 0x1F52 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x1E3 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x362 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x385 JUMPI PUSH2 0x382 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 PUSH1 0xD1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x40 PUSH1 0xA0 SWAP2 PUSH2 0x416 PUSH2 0x1F77 JUMP JUMPDEST DUP2 PUSH1 0x80 DUP5 MLOAD PUSH2 0x424 DUP2 PUSH2 0x1E32 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 DUP6 SHL SUB AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x455 DUP2 PUSH2 0x1E32 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x4C6 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x506 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x50E PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x546 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x6F0 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 DUP4 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x6F0 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 DUP5 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x6F0 JUMPI DUP6 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0x6E3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x6CC JUMPI JUMPDEST ISZERO PUSH2 0x670 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP9 SSTORE DUP6 PUSH2 0x65F JUMPI JUMPDEST POP PUSH2 0x5C4 PUSH1 0xFF DUP9 SLOAD PUSH1 0x8 SHR AND PUSH2 0x5BF DUP2 PUSH2 0x229D JUMP JUMPDEST PUSH2 0x229D JUMP JUMPDEST PUSH2 0x5CD CALLER PUSH2 0x2065 JUMP JUMPDEST DUP7 SLOAD SWAP6 PUSH2 0x5DF PUSH1 0xFF DUP9 PUSH1 0x8 SHR AND PUSH2 0x229D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 AND DUP4 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP3 PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP2 PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD1 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xD2 SSTORE PUSH3 0x15180 PUSH1 0xD3 SSTORE PUSH2 0x62A JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP8 SSTORE CODESIZE PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x595 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x58E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xBBD JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xBBD JUMPI PUSH2 0x732 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0xD1 SLOAD CALLVALUE LT PUSH2 0xB81 JUMPI PUSH1 0xD2 SLOAD CALLVALUE GT PUSH2 0xB44 JUMPI TIMESTAMP PUSH1 0x44 CALLDATALOAD GT ISZERO PUSH2 0xAFF JUMPI DUP1 MLOAD ISZERO PUSH2 0xABA JUMPI PUSH1 0x2 PUSH1 0x24 CALLDATALOAD GT PUSH2 0xA75 JUMPI PUSH1 0x1 PUSH1 0xC9 SLOAD ADD SWAP1 DUP2 PUSH1 0xC9 SSTORE PUSH1 0x40 MLOAD PUSH2 0x776 DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP3 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE DUP4 PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH2 0x100 DUP3 ADD MSTORE CALLVALUE PUSH2 0x120 DUP3 ADD MSTORE CALLVALUE PUSH2 0x140 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x160 DUP3 ADD MSTORE DUP3 DUP5 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA61 JUMPI PUSH2 0x823 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA1C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x9A9 JUMPI SWAP2 DUP1 PUSH1 0x9 SWAP5 SWAP3 PUSH2 0x160 SWAP5 DUP11 SWAP3 PUSH2 0x99E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x8CE PUSH1 0x6 DUP6 ADD PUSH2 0x89B PUSH1 0xC0 DUP5 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MLOAD DUP2 SLOAD PUSH2 0x100 DUP6 ADD MLOAD PUSH3 0xFFFF00 NOT SWAP1 SWAP2 AND SWAP2 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND SWAP2 SWAP1 SWAP2 OR SWAP1 ISZERO ISZERO PUSH1 0x10 SHL PUSH3 0xFF0000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER DUP4 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP4 PUSH9 0x10000000000000000 DUP6 LT ISZERO PUSH2 0x98A JUMPI POP PUSH2 0x91D DUP5 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x20 SWAP8 ADD DUP2 SSTORE PUSH2 0x1F8D JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE DUP2 PUSH32 0x37F3EDF7ED237F91FD6999D49411C7E10B3602F2E561A5ADF21934775659C61A PUSH2 0x96C PUSH1 0x40 MLOAD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1F52 JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD DUP7 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x84C JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP6 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 SWAP2 DUP9 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xA04 JUMPI POP SWAP3 PUSH1 0x9 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x160 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x9EB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x864 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x9DB JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xA5A JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xA4E JUMPI POP POP PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA38 JUMP JUMPDEST POP DUP1 PUSH2 0xA38 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726564696374696F6E2074797065000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446561646C696E65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xA6E8C2D6CA40C2DADEEADCE840E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5374616B6520616D6F756E7420746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0xBDB PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC24 PUSH2 0x1F77 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0xCC DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xC9B JUMPI POP POP POP DUP5 PUSH2 0xC5D SWAP2 SUB DUP6 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xC84 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xC75 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xC47 JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCDA PUSH2 0x1F77 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0xD0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0xD58 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD1 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xD2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0xA0 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD8F PUSH2 0x1F77 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x345 JUMPI PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1456 JUMPI JUMPDEST ISZERO PUSH2 0x1422 JUMPI PUSH1 0x4 CALLDATALOAD ISZERO ISZERO DUP1 PUSH2 0x1414 JUMPI JUMPDEST PUSH2 0xE1A SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH1 0x6 DUP4 ADD SWAP3 PUSH1 0xFF DUP5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x13CF JUMPI PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0x1393 JUMPI DUP4 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 ISZERO ISZERO AND OR DUP5 SSTORE PUSH1 0x1 SWAP1 DUP5 SLOAD PUSH3 0xFFFF00 NOT AND DUP4 ISZERO ISZERO PUSH1 0x10 SHL PUSH3 0xFF0000 AND OR PUSH2 0x100 OR DUP6 SSTORE ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND SWAP4 DUP2 SLOAD SWAP5 DUP1 DUP6 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP6 PUSH1 0xFF PUSH2 0xE9A DUP9 SLOAD PUSH2 0x2341 JUMP JUMPDEST SWAP2 DUP3 DUP10 SSTORE PUSH1 0x10 SHR AND PUSH2 0x137E JUMPI JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD DUP1 PUSH1 0x64 DUP2 MUL DIV PUSH1 0x64 EQ DUP2 ISZERO OR ISZERO PUSH2 0x136A JUMPI DUP2 ISZERO PUSH2 0x1356 JUMPI PUSH1 0x64 MUL DIV PUSH1 0x2 DUP8 ADD DUP2 DUP2 SSTORE SWAP7 SWAP1 PUSH1 0x5A DUP2 LT PUSH2 0x1309 JUMPI POP PUSH2 0x5DC PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST TIMESTAMP PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x107A JUMPI JUMPDEST POP PUSH1 0x60 PUSH32 0x6A7ECD478C262BB3AB79078DFDD91746AC4294A080E783FCB6C01647A353D5F7 SWAP2 PUSH1 0x3 DUP9 SWAP10 SWAP9 SWAP7 SWAP8 SWAP9 SLOAD SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH1 0xCD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH2 0xF95 JUMPI JUMPDEST POP POP POP PUSH1 0xFF SWAP1 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCE4539AE54088CF98525B0ED90DB8B4271ABCB31BD3A4B964AED59895698F72F PUSH1 0x40 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 DUP1 RETURN JUMPDEST SLOAD PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x106F JUMPI DUP4 SWAP2 PUSH2 0x103D JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xF50 JUMPI PUSH1 0xFF DUP5 SLOAD PUSH1 0x10 SHR AND DUP3 EXTCODESIZE ISZERO PUSH2 0x1039 JUMPI PUSH1 0x44 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x1C8FDEB5 PUSH1 0xE3 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x102E JUMPI PUSH2 0x1016 JUMPI JUMPDEST DUP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x101F SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x102A JUMPI DUP3 CODESIZE PUSH2 0x1010 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1067 JUMPI JUMPDEST DUP2 PUSH2 0x1058 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1E68 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x102A JUMPI MLOAD CODESIZE PUSH2 0xFCA JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP7 DUP7 PUSH1 0x24 SWAP9 PUSH1 0x40 MLOAD SWAP10 DUP11 DUP1 SWAP3 PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 DUP9 SWAP2 PUSH2 0x11AB JUMPI JUMPDEST DUP9 SWAP10 POP SWAP8 SWAP6 SWAP7 SWAP8 PUSH2 0x10B6 JUMPI JUMPDEST POP SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x1195 JUMPI JUMPDEST DUP1 PUSH2 0x1187 JUMPI JUMPDEST PUSH2 0x10DF JUMPI JUMPDEST POP PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x102A JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x117C JUMPI PUSH2 0x113D JUMPI JUMPDEST SWAP1 DUP2 DUP9 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x10D9 JUMP JUMPDEST PUSH32 0x6A7ECD478C262BB3AB79078DFDD91746AC4294A080E783FCB6C01647A353D5F7 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x3 SWAP9 PUSH2 0x1170 PUSH1 0x60 SWAP4 PUSH2 0x1DED JUMP JUMPDEST SWAP9 POP SWAP3 SWAP4 SWAP5 SWAP2 POP PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x10D4 JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP RETURNDATASIZE SWAP9 DUP10 DUP10 DUP3 RETURNDATACOPY PUSH2 0x11BD DUP11 DUP3 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP12 DUP2 ADD SUB SLT PUSH2 0x1305 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12E9 JUMPI PUSH2 0x140 DUP2 DUP4 ADD DUP13 DUP5 ADD SUB SLT PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x140 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x140 DUP6 ADD GT OR PUSH2 0x12F1 JUMPI DUP11 SWAP12 PUSH2 0x140 DUP5 SWAP13 SWAP11 SWAP12 SWAP13 ADD PUSH1 0x40 MSTORE DUP3 DUP3 ADD MLOAD DUP5 MSTORE PUSH2 0x1228 PUSH1 0x20 DUP5 DUP5 ADD ADD PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x123B PUSH1 0x40 DUP5 DUP5 ADD ADD PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x124E PUSH1 0x60 DUP5 DUP5 ADD ADD PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 DUP4 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12ED JUMPI PUSH2 0x1279 SWAP1 DUP3 DUP5 ADD SWAP1 DUP6 DUP6 ADD ADD PUSH2 0x237A JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 DUP4 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12ED JUMPI PUSH2 0x12A3 SWAP2 DUP4 ADD SWAP1 DUP5 DUP5 ADD ADD PUSH2 0x237A JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE DUP1 DUP3 ADD PUSH1 0xC0 DUP2 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x12E9 JUMPI PUSH2 0x100 DUP5 ADD MSTORE ADD PUSH2 0x120 SWAP1 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP6 SWAP8 SWAP7 SWAP6 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH1 0x50 DUP2 LT PUSH2 0x131F JUMPI POP PUSH2 0x4B0 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x46 DUP2 LT PUSH2 0x1335 JUMPI POP PUSH2 0x3E8 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x3C GT PUSH2 0x1349 JUMPI PUSH2 0x320 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x1F4 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xEE2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x138C DUP2 SLOAD PUSH2 0x2341 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726564696374696F6E20616C7265616479207265736F6C7665640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE01 JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH2 0x14AC PUSH2 0x200D JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCDA PUSH2 0x1F77 JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x155E PUSH2 0x200D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 PUSH1 0xD2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x15DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x165E PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x102A JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x102A JUMPI PUSH2 0x168E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x16C8 ADDRESS DUP6 EQ ISZERO PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x16E5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x210F JUMP JUMPDEST PUSH2 0x16ED PUSH2 0x200D JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1723 JUMPI POP POP PUSH2 0x382 SWAP2 POP PUSH2 0x2170 JUMP JUMPDEST DUP3 AND PUSH1 0x40 MLOAD SWAP4 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP8 SWAP2 DUP2 PUSH2 0x18E5 JUMPI JUMPDEST POP PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP3 SWAP4 SWAP5 SUB PUSH2 0x188E JUMPI PUSH2 0x17B9 DUP5 PUSH2 0x2170 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP6 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1886 JUMPI JUMPDEST PUSH2 0x17F3 JUMPI JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH2 0x1874 SWAP3 DUP5 DUP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1806 DUP7 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP6 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP5 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x187D JUMPI RETURNDATASIZE PUSH2 0x1858 DUP2 PUSH2 0x1FBB JUMP JUMPDEST SWAP1 PUSH2 0x1866 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1E68 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2200 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2200 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1911 JUMPI JUMPDEST PUSH2 0x18FD DUP2 DUP4 PUSH2 0x1E68 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x190D JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1746 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x18F3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x1932 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x193A PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH2 0x1971 PUSH2 0x200D JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x199F JUMPI JUMPDEST CALL ISZERO PUSH2 0x1993 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x198A JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x19C2 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x20 PUSH2 0x19F0 DUP5 DUP5 PUSH2 0x1F8D JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBBD JUMPI PUSH2 0x1A19 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x1A50 ADDRESS DUP3 EQ ISZERO PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x1A6D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x210F JUMP JUMPDEST PUSH2 0x1A75 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0xA61 JUMPI DUP4 PUSH1 0x40 MSTORE DUP7 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1AD0 JUMPI POP POP POP POP PUSH2 0x382 SWAP2 POP PUSH2 0x2170 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x1C6D JUMPI JUMPDEST POP PUSH2 0x1B54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1C16 JUMPI PUSH2 0x1B66 DUP3 PUSH2 0x2170 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C0F JUMPI JUMPDEST PUSH2 0x1BA3 JUMPI JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x1C04 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x1BB5 DUP8 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x187D JUMPI RETURNDATASIZE PUSH2 0x1858 DUP2 PUSH2 0x1FBB JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP5 PUSH2 0x1B9B JUMP JUMPDEST POP DUP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C95 JUMPI JUMPDEST PUSH2 0x1C85 DUP2 DUP4 PUSH2 0x1E68 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1305 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1AF3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C7B JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 PUSH1 0xD3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x1D24 PUSH1 0x3 DUP4 ADD PUSH2 0x1E89 JUMP JUMPDEST SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD SWAP1 PUSH2 0x1D6F PUSH1 0x7 DUP7 ADD SLOAD SWAP5 PUSH1 0x9 PUSH1 0x8 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x180 DUP1 PUSH1 0x60 DUP13 ADD MSTORE DUP11 ADD SWAP1 PUSH2 0x1F52 JUMP JUMPDEST SWAP7 PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1DE3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1DCD JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1E9D DUP5 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1F0C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EC9 JUMPI JUMPDEST POP POP PUSH2 0x1EC7 SWAP3 POP SUB DUP4 PUSH2 0x1E68 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1EF4 JUMPI POP POP PUSH2 0x1EC7 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1EB9 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1EDC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EC7 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1F42 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F32 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1F6B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6F0 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1FA5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E00 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1FE2 DUP3 PUSH2 0x1FBB JUMP JUMPDEST SWAP2 PUSH2 0x1FF0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1E68 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x6F0 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2021 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x20B5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2116 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2262 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2214 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x221D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2275 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x2299 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1F52 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22A4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2304 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081C1C99591A58DD1A5BDB881251 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2350 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6F0 JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x6F0 JUMPI DUP1 MLOAD PUSH2 0x2390 DUP2 PUSH2 0x1FBB JUMP JUMPDEST SWAP3 PUSH2 0x239E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1E68 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x6F0 JUMPI PUSH2 0x23BC SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP1 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA26469706673582212201D SAR DUP1 SWAP11 0xBF PUSH22 0x6A0D1183A8C27DA3BBF771682288CC4360E2E26357F9 0xDB LOG0 0xB4 DUP13 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"502:9151:24:-:0;;;;;;;1332:4:6;1324:13;;6007::5;502:9151:24;;;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;502:9151:24;;;;;;;;1324:13:6;502:9151:24;;;;;;;;;;;;;;;;6074:139:5;502:9151:24;;;;;;6007:13:5;502:9151:24;6174:28:5;502:9151:24;;;;;;6174:28:5;6074:139;;;502:9151:24;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8055,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":9062,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":8150,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":9082,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":8018,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":8123,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":7817,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7983,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7603,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7784,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_25757":{"entryPoint":7661,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25763":{"entryPoint":7702,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25772":{"entryPoint":7730,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_34462":{"entryPoint":7757,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":8205,"id":68,"parameterSlots":0,"returnSlots":0},"fun_setImplementation":{"entryPoint":8560,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":8293,"id":125,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":8704,"id":2277,"parameterSlots":4,"returnSlots":1},"increment_uint256":{"entryPoint":9025,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_36e1":{"entryPoint":8366,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":8463,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa20":{"entryPoint":8957,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":8861,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":8077,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offset_0t_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":5528},{"length":32,"start":5784},{"length":32,"start":6691}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b6000803560e01c80624fbbb014611ce357806316d54f0914611cba5780632a2fa8c814611c9c5780633659cfe6146119fe57806337562b29146119a85780633ccfd60b1461195857806344cda485146119185780634f1ef2861461164957806352d1902d146115855780635d80ca32146115675780635ddb0e2b146115445780636882fc51146115195780636fd31a41146114f0578063715018a61461149357806373c84d211461146a57806376f3450114610dcd5780637d54f2a514610d675780638c9bd1b514610d3e5780638da5cb5b14610d15578063ab3dcd6a14610cec578063b107e88c14610caf578063bc85818514610c01578063c3a274c214610bc1578063c4faa808146106f5578063d7c41c791461052c578063e2c3538c146104ec578063e9725c21146104ac578063ec88c09b146103f7578063f1887684146103d9578063f2fde38b146103485763fe83bece1461017157600080fd5b346103455760203660031901126103455760409060043581610160845161019781611e16565b82815282602082015282868201526060808201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152015280151580610339575b6101ec906122fd565b815260ca6020522060096040519161020383611e16565b8054835260018101546001600160a01b031660208401526002810154604084015261023060038201611e89565b606084015260048101546080840152600581015460a084015260ff6006820154818116151560c0860152818160081c16151560e086015260101c1615156101008401526007810154610120840152600881015461014084015201546101608201526040518091602082528051602083015260018060a01b0360208201511660408301526040810151606083015260608101516101606102dd610180928360808701526101a0860190611f52565b92608081015160a086015260a081015160c086015260c0810151151560e086015260e081015115156101008601526101008101511515610120860152610120810151610140860152610140810151828601520151908301520390f35b5060c9548111156101e3565b80fd5b503461034557602036600319011261034557610362611f77565b61036a61200d565b6001600160a01b038116156103855761038290612065565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5034610345578060031936011261034557602060d154604051908152f35b503461034557602036600319011261034557604060a091610416611f77565b816080845161042481611e32565b82815282602082015282868201528260608201520152600180851b0316815260cb6020522060405161045581611e32565b81549182825260018101546020830190815260028201549060408401918252608060046003850154946060870195865201549401938452604051948552516020850152516040840152516060830152516080820152f35b5034610345576020366003190112610345576104c6611f77565b6104ce61200d565b60018060a01b03166001600160601b0360a01b60cf54161760cf5580f35b503461034557602036600319011261034557610506611f77565b61050e61200d565b60018060a01b03166001600160601b0360a01b60d054161760d05580f35b50346103455760c036600319011261034557610546611f77565b6001600160a01b039060243582811691908290036106f057604435908382168092036106f057606435918483168093036106f05785549360ff8560081c1615948580966106e3575b80156106cc575b156106705760ff19811660011788558561065f575b506105c460ff885460081c166105bf8161229d565b61229d565b6105cd33612065565b8654956105df60ff8860081c1661229d565b6001600160601b0360a01b93168360cd54161760cd558260ce54161760ce558160cf54161760cf5560d054161760d05560843560d15560a43560d2556201518060d35561062a575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff1916610101178755386105aa565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105955750600160ff821614610595565b50600160ff82161061058e565b600080fd5b506080366003190112610345576004356001600160401b038111610bbd5736602382011215610bbd57610732903690602481600401359101611fd6565b60d1543410610b815760d2543411610b4457426044351115610aff57805115610aba57600260243511610a7557600160c95401908160c95560405161077681611e16565b828152336020820152836040820152816060820152602435608082015260443560a08201528360c08201528360e08201528361010082015234610120820152346101408201524261016082015282845260ca6020526040842090805182556001820160018060a01b036020830151166001600160601b0360a01b8254161790556040810151600283015560608101518051906001600160401b038211610a61576108236003850154611db3565b601f8111610a1c575b50602090601f83116001146109a957918060099492610160948a9261099e575b50508160011b916000199060031b1c19161760038501555b6080810151600485015560a081015160058501556108ce6006850161089b60c08401511515829060ff801983541691151516179055565b60e0830151815461010085015162ffff001990911691151560081b61ff00169190911790151560101b62ff000016179055565b61012081015160078501556101408101516008850155015191015533835260cc602052604083208054936801000000000000000085101561098a575061091d8484926001602097018155611f8d565b819291549060031b600019811b9283911b16911916179055817f37f3edf7ed237f91fd6999d49411c7e10b3602f2e561a5adf21934775659c61a61096c60405193606085526060850190611f52565b926024358682015260443560408201528033940390a3604051908152f35b634e487b7160e01b81526041600452602490fd5b01519050388061084c565b906003850188526020882091885b601f1985168110610a04575092600994926001926101609583601f198116106109eb575b505050811b016003850155610864565b015160001960f88460031b161c191690553880806109db565b919260206001819286850151815501940192016109b7565b60038501885260208820601f840160051c810160208510610a5a575b601f830160051c82018110610a4e57505061082c565b60008155600101610a38565b5080610a38565b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c69642070726564696374696f6e20747970650000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152740a6e8c2d6ca40c2dadeeadce840e8dede40d0d2ced605b1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152735374616b6520616d6f756e7420746f6f206c6f7760601b6044820152606490fd5b5080fd5b503461034557602036600319011261034557610bdb611f77565b610be361200d565b60018060a01b03166001600160601b0360a01b60ce54161760ce5580f35b503461034557602080600319360112610bbd576001600160a01b03610c24611f77565b16825260cc81526040822060405192838383549182815201908193835284832090835b818110610c9b5750505084610c5d910385611e68565b60405193838594850191818652518092526040850193925b828110610c8457505050500390f35b835185528695509381019392810192600101610c75565b825484529286019260019283019201610c47565b5034610345576020366003190112610345576020906003906040906001600160a01b03610cda611f77565b16815260cb8452200154604051908152f35b503461034557806003193601126103455760d0546040516001600160a01b039091168152602090f35b50346103455780600319360112610345576033546040516001600160a01b039091168152602090f35b503461034557604036600319011261034557610d5861200d565b60043560d15560243560d25580f35b50346103455760203660031901126103455760a0906040906001600160a01b03610d8f611f77565b16815260cb60205220805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b503461034557604036600319011261034557602435908115158203610345576033546001600160a01b031633148015611456575b1561142257600435151580611414575b610e1a906122fd565b600435815260ca6020526040812091600683019260ff845460081c166113cf576005810154421061139357835460ff191660ff83151516178455600190845462ffff00191683151560101b62ff00001617610100178555019260018060a01b038454169381549480855260cb602052604085209560ff610e9a8854612341565b9182895560101c1661137e575b60018701548060648102046064148115171561136a5781156113565760640204600287018181559690605a811061130957506105dc60038201555b42600482015560d0546001600160a01b03168061107a575b5060607f6a7ecd478c262bb3ab79078dfdd91746ac4294a080e783fcb6c01647a353d5f7916003889998969798549101546040519180835260208301526040820152a260cd546001600160a01b03169081610f95575b50505060ff905460101c166040519115158252151560208201527fce4539ae54088cf98525b0ed90db8b4271abcb31bd3a4b964aed59895698f72f604060043592a280f35b5460405163656d0c3960e01b81526001600160a01b039091166004820152602081602481855afa90811561106f57839161103d575b508015610f505760ff845460101c16823b156110395760448492836040519586948593631c8fdeb560e31b85526004850152151560248401525af1801561102e57611016575b80610f50565b61101f90611ded565b61102a578238611010565b8280fd5b6040513d84823e3d90fd5b8380fd5b90506020813d602011611067575b8161105860209383611e68565b8101031261102a575138610fca565b3d915061104b565b6040513d85823e3d90fd5b9686602498604051998a809263248bb6cd60e21b82528760048301525afa8088916111ab575b889950979596976110b6575b5096959493610efa565b60408101516001600160a01b03169081151580611195575b80611187575b6110df575b506110ac565b60600151600384015495969495939492936001600160a01b039091169291833b1561102a5760449083604051958694859363f6322a5f60e01b8552600485015260248401525af1801561117c5761113d575b908188959493926110d9565b7f6a7ecd478c262bb3ab79078dfdd91746ac4294a080e783fcb6c01647a353d5f791949392600398611170606093611ded565b98509293949150611131565b6040513d8a823e3d90fd5b5061010081015115156110d4565b5060608101516001600160a01b031615156110ce565b90503d988989823e6111bd8a82611e68565b6020818b810103126113055780516001600160401b0381116112e9576101408183018c840103126112e95760405191826101408101106001600160401b03610140850111176112f1578a9b610140849c9a9b9c01604052828201518452611228602084840101612366565b602085015261123b604084840101612366565b604085015261124e606084840101612366565b6060850152608083830101516001600160401b0381116112ed5761127990828401908585010161237a565b608085015260a083830101516001600160401b0381116112ed576112a3918301908484010161237a565b60a084015280820160c0818101519085015260e08082015190850152610100015180151581036112e95761010084015201610120908101519082015295979695906110a0565b8980fd5b8a80fd5b634e487b7160e01b8b52604160045260248bfd5b8880fd5b6050811061131f57506104b06003820155610ee2565b6046811061133557506103e86003820155610ee2565b603c11611349576103206003820155610ee2565b6101f46003820155610ee2565b634e487b7160e01b87526012600452602487fd5b634e487b7160e01b87526011600452602487fd5b6001870161138c8154612341565b9055610ea7565b60405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b6044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f50726564696374696f6e20616c7265616479207265736f6c76656400000000006044820152606490fd5b5060c9546004351115610e11565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b5060cf546001600160a01b03163314610e01565b503461034557806003193601126103455760cf546040516001600160a01b039091168152602090f35b50346103455780600319360112610345576114ac61200d565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461034557806003193601126103455760cd546040516001600160a01b039091168152602090f35b5034610345576020366003190112610345576020906002906040906001600160a01b03610cda611f77565b50346103455760203660031901126103455761155e61200d565b60043560d35580f35b5034610345578060031936011261034557602060d254604051908152f35b50346103455780600319360112610345577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036115de5760206040516000805160206123c08339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b5060403660031901126103455761165e611f77565b6024356001600160401b03811161102a573660238201121561102a5761168e903690602481600401359101611fd6565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291906116c8308514156120ae565b6116e56000805160206123c083398151915294828654161461210f565b6116ed61200d565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156117235750506103829150612170565b8216604051936352d1902d60e01b85526020948581600481865afa8791816118e5575b506117a75760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b949293940361188e576117b984612170565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a2815115801590611886575b6117f3575b50505080f35b6118749284806040519461180686611e4d565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d1561187d573d61185881611fbb565b906118666040519283611e68565b81528681943d92013e612200565b503880806117ed565b60609250612200565b5060016117e8565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d8311611911575b6118fd8183611e68565b8101031261190d57519038611746565b8780fd5b503d6118f3565b503461034557602036600319011261034557611932611f77565b61193a61200d565b60018060a01b03166001600160601b0360a01b60cd54161760cd5580f35b503461034557806003193601126103455761197161200d565b8080808060018060a01b0360335416479082821561199f575bf1156119935780f35b604051903d90823e3d90fd5b506108fc61198a565b5034610345576040366003190112610345576119c2611f77565b6001600160a01b0316815260cc60205260408120805460243592908310156103455760206119f08484611f8d565b90546040519160031b1c8152f35b503461034557602080600319360112610bbd57611a19611f77565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116611a50308214156120ae565b611a6d6000805160206123c083398151915291838354161461210f565b611a7561200d565b60405190848201928284106001600160401b03851117610a61578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014611ad057505050506103829150612170565b8492939416906040516352d1902d60e01b81528681600481865afa889181611c6d575b50611b545760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9593949503611c1657611b6682612170565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a284835115801590611c0f575b611ba3575b505050505080f35b80611c049560405195611bb587611e4d565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d1561187d573d61185881611fbb565b503880808084611b9b565b5080611b96565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d8311611c95575b611c858183611e68565b8101031261130557519038611af3565b503d611c7b565b5034610345578060031936011261034557602060d354604051908152f35b503461034557806003193601126103455760ce546040516001600160a01b039091168152602090f35b503461034557602036600319011261034557604090600435815260ca60205220805460018060a01b03600183015416916002810154611d2460038301611e89565b9160048101549260ff6005830154600684015490611d6f60078601549460096008880154970154976040519b8c9b8c5260208c015260408b01526101808060608c01528a0190611f52565b96608089015260a0880152818116151560c0880152818160081c16151560e088015260101c1615156101008601526101208501526101408401526101608301520390f35b90600182811c92168015611de3575b6020831014611dcd57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611dc2565b6001600160401b038111611e0057604052565b634e487b7160e01b600052604160045260246000fd5b61018081019081106001600160401b03821117611e0057604052565b60a081019081106001600160401b03821117611e0057604052565b606081019081106001600160401b03821117611e0057604052565b90601f801991011681019081106001600160401b03821117611e0057604052565b9060405191826000825492611e9d84611db3565b908184526001948581169081600014611f0c5750600114611ec9575b5050611ec792500383611e68565b565b9093915060005260209081600020936000915b818310611ef4575050611ec793508201013880611eb9565b85548884018501529485019487945091830191611edc565b915050611ec794506020925060ff191682840152151560051b8201013880611eb9565b60005b838110611f425750506000910152565b8181015183820152602001611f32565b90602091611f6b81518092818552858086019101611f2f565b601f01601f1916010190565b600435906001600160a01b03821682036106f057565b8054821015611fa55760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b038111611e0057601f01601f191660200190565b929192611fe282611fbb565b91611ff06040519384611e68565b8294818452818301116106f0578281602093846000960137010152565b6033546001600160a01b0316330361202157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156120b557565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561211657565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156121a5576000805160206123c083398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156122625750815115612214575090565b3b1561221d5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156122755750805190602001fd5b60405162461bcd60e51b815260206004820152908190612299906024830190611f52565b0390fd5b156122a457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561230457565b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1c99591a58dd1a5bdb881251605a1b6044820152606490fd5b60001981146123505760010190565b634e487b7160e01b600052601160045260246000fd5b51906001600160a01b03821682036106f057565b81601f820112156106f057805161239081611fbb565b9261239e6040519485611e68565b818452602082840101116106f0576123bc9160208085019101611f2f565b9056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212201d1d809abf756a0d1183a8c27da3bbf771682288cc4360e2e26357f9dba0b48c64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x4FBBB0 EQ PUSH2 0x1CE3 JUMPI DUP1 PUSH4 0x16D54F09 EQ PUSH2 0x1CBA JUMPI DUP1 PUSH4 0x2A2FA8C8 EQ PUSH2 0x1C9C JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x19FE JUMPI DUP1 PUSH4 0x37562B29 EQ PUSH2 0x19A8 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1958 JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x1918 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1649 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1585 JUMPI DUP1 PUSH4 0x5D80CA32 EQ PUSH2 0x1567 JUMPI DUP1 PUSH4 0x5DDB0E2B EQ PUSH2 0x1544 JUMPI DUP1 PUSH4 0x6882FC51 EQ PUSH2 0x1519 JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x14F0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1493 JUMPI DUP1 PUSH4 0x73C84D21 EQ PUSH2 0x146A JUMPI DUP1 PUSH4 0x76F34501 EQ PUSH2 0xDCD JUMPI DUP1 PUSH4 0x7D54F2A5 EQ PUSH2 0xD67 JUMPI DUP1 PUSH4 0x8C9BD1B5 EQ PUSH2 0xD3E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD15 JUMPI DUP1 PUSH4 0xAB3DCD6A EQ PUSH2 0xCEC JUMPI DUP1 PUSH4 0xB107E88C EQ PUSH2 0xCAF JUMPI DUP1 PUSH4 0xBC858185 EQ PUSH2 0xC01 JUMPI DUP1 PUSH4 0xC3A274C2 EQ PUSH2 0xBC1 JUMPI DUP1 PUSH4 0xC4FAA808 EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0xD7C41C79 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xE2C3538C EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xE9725C21 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xEC88C09B EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF1887684 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x348 JUMPI PUSH4 0xFE83BECE EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 PUSH2 0x160 DUP5 MLOAD PUSH2 0x197 DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE DUP1 ISZERO ISZERO DUP1 PUSH2 0x339 JUMPI JUMPDEST PUSH2 0x1EC SWAP1 PUSH2 0x22FD JUMP JUMPDEST DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x9 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x203 DUP4 PUSH2 0x1E16 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x230 PUSH1 0x3 DUP3 ADD PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP7 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x160 PUSH2 0x2DD PUSH2 0x180 SWAP3 DUP4 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x1A0 DUP7 ADD SWAP1 PUSH2 0x1F52 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x1E3 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x362 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x36A PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x385 JUMPI PUSH2 0x382 SWAP1 PUSH2 0x2065 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 PUSH1 0xD1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x40 PUSH1 0xA0 SWAP2 PUSH2 0x416 PUSH2 0x1F77 JUMP JUMPDEST DUP2 PUSH1 0x80 DUP5 MLOAD PUSH2 0x424 DUP2 PUSH2 0x1E32 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 DUP6 SHL SUB AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x455 DUP2 PUSH2 0x1E32 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x4C6 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x506 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x50E PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x546 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x6F0 JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 DUP4 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x6F0 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 DUP5 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x6F0 JUMPI DUP6 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0x6E3 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x6CC JUMPI JUMPDEST ISZERO PUSH2 0x670 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP9 SSTORE DUP6 PUSH2 0x65F JUMPI JUMPDEST POP PUSH2 0x5C4 PUSH1 0xFF DUP9 SLOAD PUSH1 0x8 SHR AND PUSH2 0x5BF DUP2 PUSH2 0x229D JUMP JUMPDEST PUSH2 0x229D JUMP JUMPDEST PUSH2 0x5CD CALLER PUSH2 0x2065 JUMP JUMPDEST DUP7 SLOAD SWAP6 PUSH2 0x5DF PUSH1 0xFF DUP9 PUSH1 0x8 SHR AND PUSH2 0x229D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 AND DUP4 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP3 PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP2 PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD1 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xD2 SSTORE PUSH3 0x15180 PUSH1 0xD3 SSTORE PUSH2 0x62A JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP8 SSTORE CODESIZE PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x595 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x58E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xBBD JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xBBD JUMPI PUSH2 0x732 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0xD1 SLOAD CALLVALUE LT PUSH2 0xB81 JUMPI PUSH1 0xD2 SLOAD CALLVALUE GT PUSH2 0xB44 JUMPI TIMESTAMP PUSH1 0x44 CALLDATALOAD GT ISZERO PUSH2 0xAFF JUMPI DUP1 MLOAD ISZERO PUSH2 0xABA JUMPI PUSH1 0x2 PUSH1 0x24 CALLDATALOAD GT PUSH2 0xA75 JUMPI PUSH1 0x1 PUSH1 0xC9 SLOAD ADD SWAP1 DUP2 PUSH1 0xC9 SSTORE PUSH1 0x40 MLOAD PUSH2 0x776 DUP2 PUSH2 0x1E16 JUMP JUMPDEST DUP3 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE DUP4 PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH2 0x100 DUP3 ADD MSTORE CALLVALUE PUSH2 0x120 DUP3 ADD MSTORE CALLVALUE PUSH2 0x140 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x160 DUP3 ADD MSTORE DUP3 DUP5 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xA61 JUMPI PUSH2 0x823 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x1DB3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA1C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x9A9 JUMPI SWAP2 DUP1 PUSH1 0x9 SWAP5 SWAP3 PUSH2 0x160 SWAP5 DUP11 SWAP3 PUSH2 0x99E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x8CE PUSH1 0x6 DUP6 ADD PUSH2 0x89B PUSH1 0xC0 DUP5 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MLOAD DUP2 SLOAD PUSH2 0x100 DUP6 ADD MLOAD PUSH3 0xFFFF00 NOT SWAP1 SWAP2 AND SWAP2 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND SWAP2 SWAP1 SWAP2 OR SWAP1 ISZERO ISZERO PUSH1 0x10 SHL PUSH3 0xFF0000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER DUP4 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP4 PUSH9 0x10000000000000000 DUP6 LT ISZERO PUSH2 0x98A JUMPI POP PUSH2 0x91D DUP5 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x20 SWAP8 ADD DUP2 SSTORE PUSH2 0x1F8D JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE DUP2 PUSH32 0x37F3EDF7ED237F91FD6999D49411C7E10B3602F2E561A5ADF21934775659C61A PUSH2 0x96C PUSH1 0x40 MLOAD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1F52 JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD DUP7 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x84C JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP6 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 SWAP2 DUP9 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xA04 JUMPI POP SWAP3 PUSH1 0x9 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x160 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x9EB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x864 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x9DB JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xA5A JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xA4E JUMPI POP POP PUSH2 0x82C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA38 JUMP JUMPDEST POP DUP1 PUSH2 0xA38 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726564696374696F6E2074797065000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446561646C696E65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xA6E8C2D6CA40C2DADEEADCE840E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5374616B6520616D6F756E7420746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0xBDB PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBBD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC24 PUSH2 0x1F77 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0xCC DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xC9B JUMPI POP POP POP DUP5 PUSH2 0xC5D SWAP2 SUB DUP6 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xC84 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xC75 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xC47 JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCDA PUSH2 0x1F77 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0xD0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0xD58 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD1 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xD2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0xA0 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD8F PUSH2 0x1F77 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x345 JUMPI PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1456 JUMPI JUMPDEST ISZERO PUSH2 0x1422 JUMPI PUSH1 0x4 CALLDATALOAD ISZERO ISZERO DUP1 PUSH2 0x1414 JUMPI JUMPDEST PUSH2 0xE1A SWAP1 PUSH2 0x22FD JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH1 0x6 DUP4 ADD SWAP3 PUSH1 0xFF DUP5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x13CF JUMPI PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0x1393 JUMPI DUP4 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 ISZERO ISZERO AND OR DUP5 SSTORE PUSH1 0x1 SWAP1 DUP5 SLOAD PUSH3 0xFFFF00 NOT AND DUP4 ISZERO ISZERO PUSH1 0x10 SHL PUSH3 0xFF0000 AND OR PUSH2 0x100 OR DUP6 SSTORE ADD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND SWAP4 DUP2 SLOAD SWAP5 DUP1 DUP6 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP6 PUSH1 0xFF PUSH2 0xE9A DUP9 SLOAD PUSH2 0x2341 JUMP JUMPDEST SWAP2 DUP3 DUP10 SSTORE PUSH1 0x10 SHR AND PUSH2 0x137E JUMPI JUMPDEST PUSH1 0x1 DUP8 ADD SLOAD DUP1 PUSH1 0x64 DUP2 MUL DIV PUSH1 0x64 EQ DUP2 ISZERO OR ISZERO PUSH2 0x136A JUMPI DUP2 ISZERO PUSH2 0x1356 JUMPI PUSH1 0x64 MUL DIV PUSH1 0x2 DUP8 ADD DUP2 DUP2 SSTORE SWAP7 SWAP1 PUSH1 0x5A DUP2 LT PUSH2 0x1309 JUMPI POP PUSH2 0x5DC PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST TIMESTAMP PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x107A JUMPI JUMPDEST POP PUSH1 0x60 PUSH32 0x6A7ECD478C262BB3AB79078DFDD91746AC4294A080E783FCB6C01647A353D5F7 SWAP2 PUSH1 0x3 DUP9 SWAP10 SWAP9 SWAP7 SWAP8 SWAP9 SLOAD SWAP2 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH1 0xCD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH2 0xF95 JUMPI JUMPDEST POP POP POP PUSH1 0xFF SWAP1 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xCE4539AE54088CF98525B0ED90DB8B4271ABCB31BD3A4B964AED59895698F72F PUSH1 0x40 PUSH1 0x4 CALLDATALOAD SWAP3 LOG2 DUP1 RETURN JUMPDEST SLOAD PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x106F JUMPI DUP4 SWAP2 PUSH2 0x103D JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xF50 JUMPI PUSH1 0xFF DUP5 SLOAD PUSH1 0x10 SHR AND DUP3 EXTCODESIZE ISZERO PUSH2 0x1039 JUMPI PUSH1 0x44 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x1C8FDEB5 PUSH1 0xE3 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x102E JUMPI PUSH2 0x1016 JUMPI JUMPDEST DUP1 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x101F SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x102A JUMPI DUP3 CODESIZE PUSH2 0x1010 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1067 JUMPI JUMPDEST DUP2 PUSH2 0x1058 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1E68 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x102A JUMPI MLOAD CODESIZE PUSH2 0xFCA JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP7 DUP7 PUSH1 0x24 SWAP9 PUSH1 0x40 MLOAD SWAP10 DUP11 DUP1 SWAP3 PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 DUP9 SWAP2 PUSH2 0x11AB JUMPI JUMPDEST DUP9 SWAP10 POP SWAP8 SWAP6 SWAP7 SWAP8 PUSH2 0x10B6 JUMPI JUMPDEST POP SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x1195 JUMPI JUMPDEST DUP1 PUSH2 0x1187 JUMPI JUMPDEST PUSH2 0x10DF JUMPI JUMPDEST POP PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x102A JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x117C JUMPI PUSH2 0x113D JUMPI JUMPDEST SWAP1 DUP2 DUP9 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x10D9 JUMP JUMPDEST PUSH32 0x6A7ECD478C262BB3AB79078DFDD91746AC4294A080E783FCB6C01647A353D5F7 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x3 SWAP9 PUSH2 0x1170 PUSH1 0x60 SWAP4 PUSH2 0x1DED JUMP JUMPDEST SWAP9 POP SWAP3 SWAP4 SWAP5 SWAP2 POP PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x10D4 JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP RETURNDATASIZE SWAP9 DUP10 DUP10 DUP3 RETURNDATACOPY PUSH2 0x11BD DUP11 DUP3 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP12 DUP2 ADD SUB SLT PUSH2 0x1305 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12E9 JUMPI PUSH2 0x140 DUP2 DUP4 ADD DUP13 DUP5 ADD SUB SLT PUSH2 0x12E9 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x140 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x140 DUP6 ADD GT OR PUSH2 0x12F1 JUMPI DUP11 SWAP12 PUSH2 0x140 DUP5 SWAP13 SWAP11 SWAP12 SWAP13 ADD PUSH1 0x40 MSTORE DUP3 DUP3 ADD MLOAD DUP5 MSTORE PUSH2 0x1228 PUSH1 0x20 DUP5 DUP5 ADD ADD PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x123B PUSH1 0x40 DUP5 DUP5 ADD ADD PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x124E PUSH1 0x60 DUP5 DUP5 ADD ADD PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 DUP4 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12ED JUMPI PUSH2 0x1279 SWAP1 DUP3 DUP5 ADD SWAP1 DUP6 DUP6 ADD ADD PUSH2 0x237A JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 DUP4 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12ED JUMPI PUSH2 0x12A3 SWAP2 DUP4 ADD SWAP1 DUP5 DUP5 ADD ADD PUSH2 0x237A JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE DUP1 DUP3 ADD PUSH1 0xC0 DUP2 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x12E9 JUMPI PUSH2 0x100 DUP5 ADD MSTORE ADD PUSH2 0x120 SWAP1 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP6 SWAP8 SWAP7 SWAP6 SWAP1 PUSH2 0x10A0 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH1 0x50 DUP2 LT PUSH2 0x131F JUMPI POP PUSH2 0x4B0 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x46 DUP2 LT PUSH2 0x1335 JUMPI POP PUSH2 0x3E8 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x3C GT PUSH2 0x1349 JUMPI PUSH2 0x320 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x1F4 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0xEE2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x1 DUP8 ADD PUSH2 0x138C DUP2 SLOAD PUSH2 0x2341 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111958591B1A5B99481B9BDD081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726564696374696F6E20616C7265616479207265736F6C7665640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE01 JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH2 0x14AC PUSH2 0x200D JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCDA PUSH2 0x1F77 JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x155E PUSH2 0x200D JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 PUSH1 0xD2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x15DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x165E PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x102A JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x102A JUMPI PUSH2 0x168E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x16C8 ADDRESS DUP6 EQ ISZERO PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x16E5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x210F JUMP JUMPDEST PUSH2 0x16ED PUSH2 0x200D JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1723 JUMPI POP POP PUSH2 0x382 SWAP2 POP PUSH2 0x2170 JUMP JUMPDEST DUP3 AND PUSH1 0x40 MLOAD SWAP4 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP8 SWAP2 DUP2 PUSH2 0x18E5 JUMPI JUMPDEST POP PUSH2 0x17A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP3 SWAP4 SWAP5 SUB PUSH2 0x188E JUMPI PUSH2 0x17B9 DUP5 PUSH2 0x2170 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP6 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1886 JUMPI JUMPDEST PUSH2 0x17F3 JUMPI JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH2 0x1874 SWAP3 DUP5 DUP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1806 DUP7 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP6 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP5 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x187D JUMPI RETURNDATASIZE PUSH2 0x1858 DUP2 PUSH2 0x1FBB JUMP JUMPDEST SWAP1 PUSH2 0x1866 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1E68 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2200 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2200 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1911 JUMPI JUMPDEST PUSH2 0x18FD DUP2 DUP4 PUSH2 0x1E68 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x190D JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1746 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x18F3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x1932 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x193A PUSH2 0x200D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH2 0x1971 PUSH2 0x200D JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x199F JUMPI JUMPDEST CALL ISZERO PUSH2 0x1993 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x198A JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH2 0x19C2 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x20 PUSH2 0x19F0 DUP5 DUP5 PUSH2 0x1F8D JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBBD JUMPI PUSH2 0x1A19 PUSH2 0x1F77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x1A50 ADDRESS DUP3 EQ ISZERO PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x1A6D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x210F JUMP JUMPDEST PUSH2 0x1A75 PUSH2 0x200D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0xA61 JUMPI DUP4 PUSH1 0x40 MSTORE DUP7 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1AD0 JUMPI POP POP POP POP PUSH2 0x382 SWAP2 POP PUSH2 0x2170 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x1C6D JUMPI JUMPDEST POP PUSH2 0x1B54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1C16 JUMPI PUSH2 0x1B66 DUP3 PUSH2 0x2170 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C0F JUMPI JUMPDEST PUSH2 0x1BA3 JUMPI JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x1C04 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x1BB5 DUP8 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x187D JUMPI RETURNDATASIZE PUSH2 0x1858 DUP2 PUSH2 0x1FBB JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP5 PUSH2 0x1B9B JUMP JUMPDEST POP DUP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C95 JUMPI JUMPDEST PUSH2 0x1C85 DUP2 DUP4 PUSH2 0x1E68 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1305 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1AF3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C7B JUMP JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0x20 PUSH1 0xD3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x345 JUMPI PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x345 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x345 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x1D24 PUSH1 0x3 DUP4 ADD PUSH2 0x1E89 JUMP JUMPDEST SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD SWAP1 PUSH2 0x1D6F PUSH1 0x7 DUP7 ADD SLOAD SWAP5 PUSH1 0x9 PUSH1 0x8 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x180 DUP1 PUSH1 0x60 DUP13 ADD MSTORE DUP11 ADD SWAP1 PUSH2 0x1F52 JUMP JUMPDEST SWAP7 PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1DE3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1DCD JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1E00 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1E9D DUP5 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1F0C JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EC9 JUMPI JUMPDEST POP POP PUSH2 0x1EC7 SWAP3 POP SUB DUP4 PUSH2 0x1E68 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1EF4 JUMPI POP POP PUSH2 0x1EC7 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1EB9 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1EDC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EC7 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1F42 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F32 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1F6B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6F0 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1FA5 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E00 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1FE2 DUP3 PUSH2 0x1FBB JUMP JUMPDEST SWAP2 PUSH2 0x1FF0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1E68 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x6F0 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2021 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x20B5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2116 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x21A5 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x23C0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2262 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2214 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x221D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2275 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x2299 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1F52 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22A4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2304 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081C1C99591A58DD1A5BDB881251 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2350 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6F0 JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x6F0 JUMPI DUP1 MLOAD PUSH2 0x2390 DUP2 PUSH2 0x1FBB JUMP JUMPDEST SWAP3 PUSH2 0x239E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1E68 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x6F0 JUMPI PUSH2 0x23BC SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1F2F JUMP JUMPDEST SWAP1 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA26469706673582212201D SAR DUP1 SWAP11 0xBF PUSH22 0x6A0D1183A8C27DA3BBF771682288CC4360E2E26357F9 0xDB LOG0 0xB4 DUP13 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"502:9151:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7803:17;;;:62;;;502:9151;7795:96;;;:::i;:::-;502:9151;;7908:11;502:9151;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7803:62;-1:-1:-1;7841:14:24;502:9151;7824:41;;;7803:62;;502:9151;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;502:9151:24;;2402:22:0;502:9151:24;;2496:8:0;;;:::i;:::-;502:9151:24;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;1688:29;502:9151;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8222:17;502:9151;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:9151:24;;;;;;-1:-1:-1;;;;;502:9151:24;;8952:36;502:9151;;;8952:36;502:9151;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:9151:24;;;;;;-1:-1:-1;;;;;502:9151:24;;9090:40;502:9151;;;9090:40;502:9151;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;:::i;:::-;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:14:5;3347:34;;;;;;502:9151:24;3346:108:5;;;;502:9151:24;;;;-1:-1:-1;;502:9151:24;;;;;;;3562:65:5;;502:9151:24;;5366:69:5;502:9151:24;;;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;1195:12:0;929:10:14;1195:12:0;:::i;:::-;502:9151:24;;;5366:69:5;502:9151:24;;;;;5366:69:5;:::i;:::-;-1:-1:-1;;;;;502:9151:24;;;;;2732:38;502:9151;;;2732:38;502:9151;;2780:36;502:9151;;;2780:36;502:9151;;2826:36;502:9151;;;2826:36;502:9151;2872:40;502:9151;;;2872:40;502:9151;;;2922:32;502:9151;;;2964:32;502:9151;3031:6;3006:31;502:9151;3647:99:5;;502:9151:24;;;3647:99:5;502:9151:24;;;;;3721:14:5;502:9151:24;;;;;;3721:14:5;502:9151:24;;3562:65:5;-1:-1:-1;;502:9151:24;;;;;3562:65:5;;;502:9151:24;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;3346:108:5;3426:4;;1713:19:13;:23;3387:66:5;;3346:108;3387:66;502:9151:24;;;;;3436:17:5;3346:108;;3347:34;502:9151:24;;;;;3365:16:5;3347:34;;502:9151:24;;;;;-1:-1:-1;502:9151:24;;-1:-1:-1;;502:9151:24;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3274:14;502:9151;3261:9;:27;502:9151;;3344:14;502:9151;3261:9;3331:27;502:9151;;3414:15;502:9151;;3402:27;502:9151;;;;;3482:30;502:9151;;3581:1;502:9151;;3562:20;502:9151;;;3621:14;502:9151;;;;3621:14;502:9151;;;;;;:::i;:::-;;;;3810:10;502:9151;3743:474;;502:9151;3743:474;502:9151;3743:474;;502:9151;3743:474;502:9151;3743:474;;502:9151;;;;3743:474;;502:9151;;;3743:474;;;502:9151;3743:474;;;;502:9151;3743:474;502:9151;3743:474;;502:9151;3743:474;;;;502:9151;3261:9;3743:474;;;502:9151;3261:9;3743:474;;;502:9151;3414:15;3743:474;;;502:9151;;;;3715:11;502:9151;;;;;;;;;;;;;;;;;;;3743:474;;502:9151;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;3743:474;;502:9151;3581:1;502:9151;;;;3743:474;;502:9151;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3743:474;502:9151;;;;;;;;;;;;;;;;;;;;;;;;;;;3743:474;;502:9151;;;;;3743:474;;;502:9151;;;;;;;;;;3743:474;;;502:9151;;;;;;;;;;;;;;;;;;;;;3743:474;;502:9151;;;3743:474;;;502:9151;-1:-1:-1;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;;;3743:474;;;502:9151;;;;;3743:474;;;502:9151;;;;;3743:474;502:9151;;;;3810:10;502:9151;;4228:21;502:9151;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4296:85;502:9151;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3810:10;;4296:85;;;;502:9151;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;-1:-1:-1;502:9151:24;;;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;;;;;;;;3743:474;502:9151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:9151:24;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:9151:24;;;;;;-1:-1:-1;;;;;502:9151:24;;8818:36;502:9151;;;8818:36;502:9151;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;:::i;:::-;;;;8060:21;502:9151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;:::i;:::-;;;;8531:17;502:9151;;;8531:51;502:9151;;;;;;;;;;;;;;;;;;;;1644:33;502:9151;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;1513:6:0;502:9151:24;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;1303:62:0;;:::i;:::-;502:9151:24;;9246:32;502:9151;;;9288:32;502:9151;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;;;-1:-1:-1;;;;;502:9151:24;;:::i;:::-;;;;1396:61;502:9151;;;;;1396:61;502:9151;1396:61;;502:9151;1396:61;;;;502:9151;;;1396:61;;502:9151;1396:61;;502:9151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;;;;;;;;;1513:6:0;502:9151:24;-1:-1:-1;;;;;502:9151:24;4515:10;:21;:55;;;;502:9151;;;;;;4605:17;;:62;;;502:9151;4597:96;;;:::i;:::-;502:9151;;;;4744:11;502:9151;;;;;4789:21;;;;502:9151;;;;;;;;;4879:19;;;502:9151;4860:15;:38;502:9151;;;;-1:-1:-1;;502:9151:24;;;;;;;;;-1:-1:-1;;502:9151:24;;-1:-1:-1;;502:9151:24;;;;;;;;;;;;;5267:21;502:9151;;;;;;;;;;;;;;;;5922:17;502:9151;;;;;;;5971:24;502:9151;;5971:24;:::i;:::-;502:9151;;;;;;;6005:70;;502:9151;;6121:25;;502:9151;;6149:3;502:9151;;;6149:3;502:9151;;;;;;;;;;;6149:3;502:9151;;6093:24;;;502:9151;;;6093:24;;6290:2;6262:30;;6290:2;;6308:26;6337:4;502:9151;6308:26;;502:9151;6258:496;4860:15;502:9151;6772:17;;502:9151;6882:18;502:9151;-1:-1:-1;;;;;502:9151:24;;6878:680;;6258:496;502:9151;;7573:111;502:9151;;;;;;;;;7657:26;;502:9151;;;;;;;;;;;;;;;7573:111;5375:17;502:9151;-1:-1:-1;;;;;502:9151:24;;;5371:327;;6258:496;502:9151;;;;;;;;;;;;;;;;;;;;;;5713:67;502:9151;;;5713:67;;502:9151;;5371:327;502:9151;;;-1:-1:-1;;;5445:76:24;;-1:-1:-1;;;;;502:9151:24;;;;5445:76;;502:9151;;;;;5445:76;;;;;;;;;;;;5371:327;5539:16;;5535:153;5371:327;5535:153;502:9151;;;;;;5575:98;;;;;502:9151;;;;;;971:66:3;;;;;;;;5575:98:24;;502:9151;5575:98;;502:9151;;;;;;;5575:98;;;;;;;;5535:153;;5371:327;;5575:98;;;;:::i;:::-;502:9151;;5575:98;;;;502:9151;;;;5575:98;502:9151;;971:66:3;502:9151:24;;971:66:3;;;;5575:98:24;502:9151;;;5445:76;;;502:9151;5445:76;;502:9151;5445:76;;;;;;502:9151;5445:76;;;:::i;:::-;;;502:9151;;;;;5445:76;;;;;;-1:-1:-1;5445:76:24;;;502:9151;;971:66:3;502:9151:24;;971:66:3;;;;6878:680:24;502:9151;;;;;;971:66:3;;;;;;;6934:73:24;;;502:9151;6934:73;;502:9151;6934:73;;;;;;;6878:680;6930:618;;;;;;;;;6878:680;;;;;;;;6930:618;502:9151;7087:23;;502:9151;-1:-1:-1;;;;;502:9151:24;;7087:37;;;;:76;;6930:618;7087:98;;;6930:618;7083:363;;6930:618;;;;7083:363;7334:21;;502:9151;;7400:26;;502:9151;;;;;7400:26;;502:9151;;-1:-1:-1;;;;;502:9151:24;;;;;7316:111;;;;;502:9151;;;;;971:66:3;;;;;;;;7316:111:24;;502:9151;7316:111;;502:9151;;;;;7316:111;;;;;;;;7083:363;;;;;;;;;;7316:111;7573;7316;;;;502:9151;7316:111;;502:9151;7316:111;;:::i;:::-;;;;;;;;;;;502:9151;;971:66:3;502:9151:24;;971:66:3;;;;7087:98:24;7167:18;502:9151;7167:18;;502:9151;;;7087:98;;:76;-1:-1:-1;7128:21:24;;;502:9151;-1:-1:-1;;;;;502:9151:24;7128:35;;7087:76;;6934:73;;;;;;;;;;;;;:::i;:::-;502:9151;6934:73;;;;502:9151;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;6934:73;;;502:9151;;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;6934:73;;;;502:9151;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;6934:73;;;502:9151;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:73;;;;502:9151;6934:73;;502:9151;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;6258:496;6398:2;6370:30;;6398:2;;6416:26;6445:4;502:9151;6416:26;;502:9151;6258:496;;6366:388;6506:2;6478:30;;6506:2;;6524:26;6553:4;502:9151;6524:26;;502:9151;6258:496;;6474:280;6614:2;-1:-1:-1;6614:2:24;;6661:3;502:9151;6632:26;;502:9151;6258:496;;6582:172;6732:3;502:9151;6703:26;;502:9151;6258:496;;502:9151;-1:-1:-1;;;502:9151:24;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;6005:70;502:9151;6037:25;;:27;502:9151;;6037:27;:::i;:::-;502:9151;;6005:70;;502:9151;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;;;;4605:62;-1:-1:-1;4643:14:24;502:9151;;;4626:41;;4605:62;;502:9151;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;4515:55;-1:-1:-1;4554:16:24;502:9151;-1:-1:-1;;;;;502:9151:24;4515:10;4540:30;4515:55;;502:9151;;;;;;;;;;;;;1607:31;502:9151;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;1303:62:0;;:::i;:::-;2758:6;502:9151:24;;-1:-1:-1;;;;;;502:9151:24;;;;;;;-1:-1:-1;;;;;502:9151:24;2806:40:0;502:9151:24;;2806:40:0;502:9151:24;;;;;;;;;;;;;;;1532:32;502:9151;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;8366:49;;502:9151;;-1:-1:-1;;;;;502:9151:24;;:::i;:::-;;;;;;;-1:-1:-1;;502:9151:24;;;;1303:62:0;;:::i;:::-;502:9151:24;;9413:31;502:9151;;;;;;;;;;;;;;;;;1723:29;502:9151;;;;;;;;;;;;;;;;;;;;2333:6:6;-1:-1:-1;;;;;502:9151:24;2324:4:6;2316:23;502:9151:24;;;;;-1:-1:-1;;;;;;;;;;;502:9151:24;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:9151:24;;-1:-1:-1;;502:9151:24;;;;;;:::i;:::-;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;502:9151:24;;;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;502:9151:24;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;971:66:3;502:9151:24;;;;;;3330:17:3;;;;;;:::i;3232:526::-;502:9151:24;;;;971:66:3;;;;3383:63;;;;;;502:9151:24;3383:63:3;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;502:9151:24;;-1:-1:-1;;;3610:56:3;;502:9151:24;3610:56:3;;971:66;;;;502:9151:24;971:66:3;;502:9151:24;971:66:3;502:9151:24;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;;;;502:9151:24;;2523:15:3;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;502:9151:24;;2519:123:3;7318:69:13;502:9151:24;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;7276:25:13;;;;;;;;;502:9151:24;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;7318:69:13;:::i;:::-;;2519:123:3;;;;;502:9151:24;;;-1:-1:-1;7318:69:13;:::i;2523:28:3:-;;502:9151:24;2523:28:3;;971:66;502:9151:24;;-1:-1:-1;;;971:66:3;;502:9151:24;971:66:3;;;;;;502:9151:24;971:66:3;;502:9151:24;971:66:3;502:9151:24;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;502:9151:24;;;3383:63:3;;;;;502:9151:24;;;;;;;-1:-1:-1;;502:9151:24;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:9151:24;;;;;;-1:-1:-1;;;;;502:9151:24;;8682:38;502:9151;;;8682:38;502:9151;;;;;;;;;;;;;;;;1303:62:0;;:::i;:::-;502:9151:24;;;;;;;;;1513:6:0;502:9151:24;;9532:21;9506:48;;;;;;502:9151;9506:48;;;;502:9151;;9506:48;502:9151;;971:66:3;;;;;;;;9506:48:24;;;;;502:9151;;;;;;;-1:-1:-1;;502:9151:24;;;;;;:::i;:::-;-1:-1:-1;;;;;502:9151:24;;;1463:58;502:9151;;;;;;;;;;;1463:58;;;;;502:9151;1463:58;;;;:::i;:::-;502:9151;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;502:9151:24;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;502:9151:24;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;502:9151:24;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;971:66:3;502:9151:24;;3232:526:3;502:9151:24;;;3330:17:3;;;;;;;;:::i;3232:526::-;502:9151:24;;;;;;;;971:66:3;;;3383:63;;;;502:9151:24;3383:63:3;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;502:9151:24;;-1:-1:-1;;;3610:56:3;;502:9151:24;3610:56:3;;971:66;;;;;;;502:9151:24;971:66:3;502:9151:24;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;;;;502:9151:24;;;2523:15:3;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;502:9151:24;;2519:123:3;502:9151:24;7318:69:13;502:9151:24;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;7276:25:13;;;;;;502:9151:24;;;;;;;;:::i;7318:69:13:-;;2519:123:3;;;;;;;2523:28;;;;;971:66;502:9151:24;;-1:-1:-1;;;971:66:3;;502:9151:24;971:66:3;;;;;;;;;502:9151:24;971:66:3;502:9151:24;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;502:9151:24;;;;;;;;;;;;;;1758:37;502:9151;;;;;;;;;;;;;;;;;;;;1570:31;502:9151;;;-1:-1:-1;;;;;502:9151:24;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;;;;;1341:49;502:9151;;;;;;;;;;;1341:49;;502:9151;;1341:49;;;;502:9151;1341:49;502:9151;1341:49;;;:::i;:::-;;502:9151;1341:49;;502:9151;1341:49;502:9151;1341:49;;;502:9151;1341:49;;;502:9151;1341:49;502:9151;1341:49;;;502:9151;1341:49;;502:9151;1341:49;;502:9151;1341:49;;502:9151;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;;:::o;:::-;;;;;;-1:-1:-1;502:9151:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;502:9151:24;;;;-1:-1:-1;502:9151:24;;-1:-1:-1;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:9151:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:9151:24;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;502:9151:24;;;;:::o;:::-;;;;-1:-1:-1;;;;;502:9151:24;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;502:9151:24;;-1:-1:-1;502:9151:24;;;-1:-1:-1;502:9151:24;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;-1:-1:-1;;502:9151:24;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;502:9151:24;;;;;;:::o;1599:130:0:-;1513:6;502:9151:24;-1:-1:-1;;;;;502:9151:24;929:10:14;1662:23:0;502:9151:24;;1599:130:0:o;502:9151:24:-;;;;971:66:3;;;502:9151:24;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;502:9151:24;;-1:-1:-1;;;;;502:9151:24;;;-1:-1:-1;;;;;;502:9151:24;;;;;;;;;;2806:40:0;-1:-1:-1;;2806:40:0;2666:187::o;502:9151:24:-;;;;:::o;:::-;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;1699:281:3;1713:19:13;;:23;502:9151:24;;-1:-1:-1;;;;;;;;;;;502:9151:24;;-1:-1:-1;;;;;;502:9151:24;-1:-1:-1;;;;;502:9151:24;;;;;;;;;1699:281:3:o;502:9151:24:-;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;7682:628:13;;;;7886:418;;;502:9151:24;;;7917:22:13;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;502:9151:24;;8212:17:13;:::o;502:9151:24:-;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;;;;7886:418:13;502:9151:24;;;;-1:-1:-1;8991:21:13;:17;;9163:142;;;;;;;8987:379;502:9151:24;;-1:-1:-1;;;9335:20:13;;502:9151:24;9335:20:13;;;502:9151:24;;;;;;;;;;;:::i;:::-;9335:20:13;;;502:9151:24;;;;:::o;:::-;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:9151:24;;;;;;;;;;;;-1:-1:-1;;;502:9151:24;;;;;;;;-1:-1:-1;;502:9151:24;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:9151:24;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1847400","executionCost":"infinite","totalCost":"infinite"},"external":{"astroTokenLauncher()":"2697","astrologerManager()":"2543","astrologerPredictions(address,uint256)":"6858","buyTokenContract()":"2301","createPrediction(string,uint256,uint256,uint256)":"infinite","credibilityScores(address)":"11269","credibilityUpdateDelay()":"2299","getAstrologerAccuracy(address)":"2660","getAstrologerPredictions(address)":"infinite","getCredibilityScore(address)":"infinite","getPrediction(uint256)":"infinite","getReputationMultiplier(address)":"2858","initialize(address,address,address,address,uint256,uint256)":"infinite","maxStakeAmount()":"2453","minStakeAmount()":"2871","owner()":"2675","predictions(uint256)":"infinite","proxiableUUID()":"infinite","renounceOwnership()":"28349","reputationScorer()":"2587","resolvePrediction(uint256,bool)":"infinite","setAstroTokenLauncher(address)":"27168","setAstrologerManager(address)":"26750","setBuyTokenContract(address)":"27102","setCredibilityUpdateDelay(uint256)":"24623","setReputationScorer(address)":"27190","setStakeLimits(uint256,uint256)":"46886","transferOwnership(address)":"28853","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite","withdraw()":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","updateAstrologerCredibility(address,bool)":"infinite"}},"methodIdentifiers":{"astroTokenLauncher()":"ab3dcd6a","astrologerManager()":"6fd31a41","astrologerPredictions(address,uint256)":"37562b29","buyTokenContract()":"16d54f09","createPrediction(string,uint256,uint256,uint256)":"c4faa808","credibilityScores(address)":"7d54f2a5","credibilityUpdateDelay()":"2a2fa8c8","getAstrologerAccuracy(address)":"6882fc51","getAstrologerPredictions(address)":"bc858185","getCredibilityScore(address)":"ec88c09b","getPrediction(uint256)":"fe83bece","getReputationMultiplier(address)":"b107e88c","initialize(address,address,address,address,uint256,uint256)":"d7c41c79","maxStakeAmount()":"5d80ca32","minStakeAmount()":"f1887684","owner()":"8da5cb5b","predictions(uint256)":"004fbbb0","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","reputationScorer()":"73c84d21","resolvePrediction(uint256,bool)":"76f34501","setAstroTokenLauncher(address)":"e2c3538c","setAstrologerManager(address)":"44cda485","setBuyTokenContract(address)":"c3a274c2","setCredibilityUpdateDelay(uint256)":"5ddb0e2b","setReputationScorer(address)":"e9725c21","setStakeLimits(uint256,uint256)":"8c9bd1b5","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"CredibilityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"predictionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"predictionType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"PredictionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"predictionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"wasAccurate\",\"type\":\"bool\"}],\"name\":\"PredictionResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"astroTokenLauncher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astrologerManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"astrologerPredictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_predictionType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakeAmount\",\"type\":\"uint256\"}],\"name\":\"createPrediction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"credibilityScores\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"credibilityUpdateDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getAstrologerAccuracy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getAstrologerPredictions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getCredibilityScore\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"}],\"internalType\":\"struct PredictionCredibilityManager.CredibilityScore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"}],\"name\":\"getPrediction\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"predictionType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isResolved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"wasAccurate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct PredictionCredibilityManager.Prediction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyTokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reputationScorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_astroTokenLauncher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxStakeAmount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"predictionType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isResolved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"wasAccurate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationScorer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_outcome\",\"type\":\"bool\"}],\"name\":\"resolvePrediction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astroTokenLauncher\",\"type\":\"address\"}],\"name\":\"setAstroTokenLauncher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"}],\"name\":\"setAstrologerManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyTokenContract\",\"type\":\"address\"}],\"name\":\"setBuyTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"setCredibilityUpdateDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reputationScorer\",\"type\":\"address\"}],\"name\":\"setReputationScorer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxStakeAmount\",\"type\":\"uint256\"}],\"name\":\"setStakeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PredictionCredibilityManager.sol\":\"PredictionCredibilityManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary CountersUpgradeable {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/PredictionCredibilityManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"./interfaces/IAstrologerManager.sol\\\";\\nimport \\\"./interfaces/IBuyTokenContract.sol\\\";\\nimport \\\"./interfaces/IAstroTokenLauncher.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\\\";\\n\\ncontract PredictionCredibilityManager is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using CountersUpgradeable for CountersUpgradeable.Counter;\\n\\n    CountersUpgradeable.Counter private _predictionIds;\\n    \\n    struct Prediction {\\n        uint256 id;\\n        address astrologer;\\n        uint256 astrologerId;\\n        string description;\\n        uint256 predictionType; // 0: Market, 1: Daily, 2: OneToOne\\n        uint256 deadline;\\n        bool outcome;\\n        bool isResolved;\\n        bool wasAccurate;\\n        uint256 stakeAmount;\\n        uint256 totalStaked;\\n        uint256 createdAt;\\n    }\\n\\n    struct CredibilityScore {\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 accuracyPercentage;\\n        uint256 reputationMultiplier;\\n        uint256 lastUpdated;\\n    }\\n\\n    mapping(uint256 => Prediction) public predictions;\\n    mapping(address => CredibilityScore) public credibilityScores;\\n    mapping(address => uint256[]) public astrologerPredictions;\\n    \\n    address public astrologerManager;\\n    address public buyTokenContract;\\n    address public reputationScorer;\\n    address public astroTokenLauncher;\\n    \\n    uint256 public minStakeAmount;\\n    uint256 public maxStakeAmount;\\n    uint256 public credibilityUpdateDelay;\\n    \\n    event PredictionCreated(\\n        uint256 indexed predictionId,\\n        address indexed astrologer,\\n        string description,\\n        uint256 predictionType,\\n        uint256 deadline\\n    );\\n\\n    event PredictionResolved(\\n        uint256 indexed predictionId,\\n        bool outcome,\\n        bool wasAccurate\\n    );\\n\\n    event CredibilityUpdated(\\n        address indexed astrologer,\\n        uint256 oldAccuracy,\\n        uint256 newAccuracy,\\n        uint256 newMultiplier\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _buyTokenContract,\\n        address _reputationScorer,\\n        address _astroTokenLauncher,\\n        uint256 _minStakeAmount,\\n        uint256 _maxStakeAmount\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        buyTokenContract = _buyTokenContract;\\n        reputationScorer = _reputationScorer;\\n        astroTokenLauncher = _astroTokenLauncher;\\n        minStakeAmount = _minStakeAmount;\\n        maxStakeAmount = _maxStakeAmount;\\n        credibilityUpdateDelay = 1 days;\\n    }\\n\\n    function createPrediction(\\n        string memory _description,\\n        uint256 _predictionType,\\n        uint256 _deadline,\\n        uint256 _stakeAmount\\n    ) external payable returns (uint256) {\\n        require(msg.value >= minStakeAmount, \\\"Stake amount too low\\\");\\n        require(msg.value <= maxStakeAmount, \\\"Stake amount too high\\\");\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\n        require(bytes(_description).length > 0, \\\"Description cannot be empty\\\");\\n        require(_predictionType <= 2, \\\"Invalid prediction type\\\");\\n\\n        _predictionIds.increment();\\n        uint256 predictionId = _predictionIds.current();\\n\\n        predictions[predictionId] = Prediction({\\n            id: predictionId,\\n            astrologer: msg.sender,\\n            astrologerId: 0, // Will be set by astrologer manager\\n            description: _description,\\n            predictionType: _predictionType,\\n            deadline: _deadline,\\n            outcome: false,\\n            isResolved: false,\\n            wasAccurate: false,\\n            stakeAmount: msg.value,\\n            totalStaked: msg.value,\\n            createdAt: block.timestamp\\n        });\\n\\n        astrologerPredictions[msg.sender].push(predictionId);\\n\\n        emit PredictionCreated(predictionId, msg.sender, _description, _predictionType, _deadline);\\n        return predictionId;\\n    }\\n\\n    function resolvePrediction(uint256 _predictionId, bool _outcome) external {\\n        require(msg.sender == owner() || msg.sender == reputationScorer, \\\"Unauthorized\\\");\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        Prediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(block.timestamp >= prediction.deadline, \\\"Deadline not reached\\\");\\n\\n        prediction.outcome = _outcome;\\n        prediction.isResolved = true;\\n\\n        // Determine if prediction was accurate\\n        // This logic would depend on the specific prediction type and outcome\\n        prediction.wasAccurate = _outcome; // Simplified logic\\n\\n        // Update credibility score\\n        updateAstrologerCredibility(prediction.astrologer, prediction.wasAccurate);\\n\\n        // Record result in astrologer manager\\n        if (astrologerManager != address(0)) {\\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(prediction.astrologer);\\n            if (astrologerId > 0) {\\n                IAstrologerManager(astrologerManager).recordPredictionResult(astrologerId, prediction.wasAccurate);\\n            }\\n        }\\n\\n        emit PredictionResolved(_predictionId, _outcome, prediction.wasAccurate);\\n    }\\n\\n    function updateAstrologerCredibility(address _astrologer, bool _wasAccurate) internal {\\n        CredibilityScore storage score = credibilityScores[_astrologer];\\n        \\n        score.totalPredictions++;\\n        if (_wasAccurate) {\\n            score.accuratePredictions++;\\n        }\\n        \\n        score.accuracyPercentage = (score.accuratePredictions * 100) / score.totalPredictions;\\n        \\n        // Calculate reputation multiplier based on accuracy\\n        if (score.accuracyPercentage >= 90) {\\n            score.reputationMultiplier = 1500; // 1.5x\\n        } else if (score.accuracyPercentage >= 80) {\\n            score.reputationMultiplier = 1200; // 1.2x\\n        } else if (score.accuracyPercentage >= 70) {\\n            score.reputationMultiplier = 1000; // 1.0x\\n        } else if (score.accuracyPercentage >= 60) {\\n            score.reputationMultiplier = 800; // 0.8x\\n        } else {\\n            score.reputationMultiplier = 500; // 0.5x\\n        }\\n        \\n        score.lastUpdated = block.timestamp;\\n\\n        // Update buy token contract credibility multiplier\\n        if (astroTokenLauncher != address(0)) {\\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.buyContract != address(0) && tokenInfo.isActive) {\\n                    // Update the credibility multiplier in the token's specific BuyTokenContract instance\\n                    IBuyTokenContract(tokenInfo.buyContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\\n                }\\n            } catch {\\n                // Token not found or error occurred, skip update\\n            }\\n        }\\n\\n        emit CredibilityUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\\n    }\\n\\n    function getPrediction(uint256 _predictionId) external view returns (Prediction memory) {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        return predictions[_predictionId];\\n    }\\n\\n    function getAstrologerPredictions(address _astrologer) external view returns (uint256[] memory) {\\n        return astrologerPredictions[_astrologer];\\n    }\\n\\n    function getCredibilityScore(address _astrologer) external view returns (CredibilityScore memory) {\\n        return credibilityScores[_astrologer];\\n    }\\n\\n    function getAstrologerAccuracy(address _astrologer) external view returns (uint256) {\\n        return credibilityScores[_astrologer].accuracyPercentage;\\n    }\\n\\n    function getReputationMultiplier(address _astrologer) external view returns (uint256) {\\n        return credibilityScores[_astrologer].reputationMultiplier;\\n    }\\n\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setBuyTokenContract(address _buyTokenContract) external onlyOwner {\\n        buyTokenContract = _buyTokenContract;\\n    }\\n\\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\\n        reputationScorer = _reputationScorer;\\n    }\\n\\n    function setAstroTokenLauncher(address _astroTokenLauncher) external onlyOwner {\\n        astroTokenLauncher = _astroTokenLauncher;\\n    }\\n\\n    function setStakeLimits(uint256 _minStakeAmount, uint256 _maxStakeAmount) external onlyOwner {\\n        minStakeAmount = _minStakeAmount;\\n        maxStakeAmount = _maxStakeAmount;\\n    }\\n\\n    function setCredibilityUpdateDelay(uint256 _delay) external onlyOwner {\\n        credibilityUpdateDelay = _delay;\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0xa803164056959745f3d3e9aa13330fbd51a43fdc2afbc63df7f797e2b3f12372\",\"license\":\"MIT\"},\"contracts/interfaces/IAstroTokenLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstroTokenLauncher {\\n    struct TokenInfo {\\n        uint256 id;\\n        address astrologer;\\n        address tokenContract;\\n        address buyContract;\\n        string name;\\n        string symbol;\\n        uint256 totalSupply;\\n        uint256 initialPrice;\\n        bool isActive;\\n        uint256 createdAt;\\n    }\\n\\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory);\\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory);\\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory);\\n    function astrologerToTokenId(address astrologer) external view returns (uint256);\\n    function tokenContractToId(address tokenContract) external view returns (uint256);\\n} \",\"keccak256\":\"0x751a36414a4235dd498afd5a3e9309f3586fc81b8340fb85f6db72555629ccb7\",\"license\":\"MIT\"},\"contracts/interfaces/IAstrologerManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstrologerManager {\\n    struct Astrologer {\\n        uint256 id;\\n        address wallet;\\n        string name;\\n        string description;\\n        string specialty;\\n        uint256 experience;\\n        uint256 reputation;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 tokenContract;\\n        bool isVerified;\\n        bool isActive;\\n        uint256 registeredAt;\\n        uint256 lastActive;\\n    }\\n\\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\\n    function isAstrologerVerified(address wallet) external view returns (bool);\\n    function getAstrologerId(address wallet) external view returns (uint256);\\n} \",\"keccak256\":\"0x11ca9cb820c6a6cec9a66342e9d644365a1c256aff7fc4cca46964dbcdae6e64\",\"license\":\"MIT\"},\"contracts/interfaces/IBuyTokenContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IBuyTokenContract {\\n    function registerToken(\\n        address _tokenContract,\\n        address _astrologer,\\n        uint256 _totalSupply,\\n        uint256 _basePrice\\n    ) external;\\n    \\n    function updateCredibility(address _tokenContract, uint256 _credibilityMultiplier) external;\\n    function getCurrentPrice(address _tokenContract) external view returns (uint256);\\n    function buyTokens(address _tokenContract) external payable;\\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external;\\n} \",\"keccak256\":\"0xce9205cb618a8e74f30eea7d43c134dfeed5b87ee80ff94138a2adf385018c68\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":485,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":4617,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"_predictionIds","offset":0,"slot":"201","type":"t_struct(Counter)2370_storage"},{"astId":4658,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"predictions","offset":0,"slot":"202","type":"t_mapping(t_uint256,t_struct(Prediction)4642_storage)"},{"astId":4663,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"credibilityScores","offset":0,"slot":"203","type":"t_mapping(t_address,t_struct(CredibilityScore)4653_storage)"},{"astId":4668,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"astrologerPredictions","offset":0,"slot":"204","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":4670,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"astrologerManager","offset":0,"slot":"205","type":"t_address"},{"astId":4672,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"buyTokenContract","offset":0,"slot":"206","type":"t_address"},{"astId":4674,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"reputationScorer","offset":0,"slot":"207","type":"t_address"},{"astId":4676,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"astroTokenLauncher","offset":0,"slot":"208","type":"t_address"},{"astId":4678,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"minStakeAmount","offset":0,"slot":"209","type":"t_uint256"},{"astId":4680,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"maxStakeAmount","offset":0,"slot":"210","type":"t_uint256"},{"astId":4682,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"credibilityUpdateDelay","offset":0,"slot":"211","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_struct(CredibilityScore)4653_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct PredictionCredibilityManager.CredibilityScore)","numberOfBytes":"32","value":"t_struct(CredibilityScore)4653_storage"},"t_mapping(t_uint256,t_struct(Prediction)4642_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct PredictionCredibilityManager.Prediction)","numberOfBytes":"32","value":"t_struct(Prediction)4642_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)2370_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2369,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(CredibilityScore)4653_storage":{"encoding":"inplace","label":"struct PredictionCredibilityManager.CredibilityScore","members":[{"astId":4644,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"totalPredictions","offset":0,"slot":"0","type":"t_uint256"},{"astId":4646,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"accuratePredictions","offset":0,"slot":"1","type":"t_uint256"},{"astId":4648,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"accuracyPercentage","offset":0,"slot":"2","type":"t_uint256"},{"astId":4650,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"reputationMultiplier","offset":0,"slot":"3","type":"t_uint256"},{"astId":4652,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"lastUpdated","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_struct(Prediction)4642_storage":{"encoding":"inplace","label":"struct PredictionCredibilityManager.Prediction","members":[{"astId":4619,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":4621,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"astrologer","offset":0,"slot":"1","type":"t_address"},{"astId":4623,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"astrologerId","offset":0,"slot":"2","type":"t_uint256"},{"astId":4625,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"description","offset":0,"slot":"3","type":"t_string_storage"},{"astId":4627,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"predictionType","offset":0,"slot":"4","type":"t_uint256"},{"astId":4629,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"deadline","offset":0,"slot":"5","type":"t_uint256"},{"astId":4631,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"outcome","offset":0,"slot":"6","type":"t_bool"},{"astId":4633,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"isResolved","offset":1,"slot":"6","type":"t_bool"},{"astId":4635,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"wasAccurate","offset":2,"slot":"6","type":"t_bool"},{"astId":4637,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"stakeAmount","offset":0,"slot":"7","type":"t_uint256"},{"astId":4639,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"totalStaked","offset":0,"slot":"8","type":"t_uint256"},{"astId":4641,"contract":"contracts/PredictionCredibilityManager.sol:PredictionCredibilityManager","label":"createdAt","offset":0,"slot":"9","type":"t_uint256"}],"numberOfBytes":"320"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ReputationScorer.sol":{"ReputationScorer":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"moduleId","type":"uint256"},{"indexed":false,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"}],"name":"PredictionModuleAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"uint256","name":"oldAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newMultiplier","type":"uint256"}],"name":"ReputationScoreUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"uint256","name":"marketAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"dailyAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oneToOneAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weightedScore","type":"uint256"}],"name":"ScoreBreakdownUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"address","name":"_contractAddress","type":"address"},{"internalType":"uint256","name":"_weight","type":"uint256"}],"name":"addPredictionModule","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"astroTokenLauncher","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"astrologerManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyTokenContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReputationMultiplierRange","outputs":[{"internalType":"uint256","name":"max","type":"uint256"},{"internalType":"uint256","name":"min","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationScore","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"accuracyPercentage","type":"uint256"},{"internalType":"uint256","name":"reputationMultiplier","type":"uint256"},{"internalType":"uint256","name":"marketPredictions","type":"uint256"},{"internalType":"uint256","name":"dailyPredictions","type":"uint256"},{"internalType":"uint256","name":"oneToOnePredictions","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct ReputationScorer.ReputationScore","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getScoreBreakdown","outputs":[{"components":[{"internalType":"uint256","name":"marketAccuracy","type":"uint256"},{"internalType":"uint256","name":"dailyAccuracy","type":"uint256"},{"internalType":"uint256","name":"oneToOneAccuracy","type":"uint256"},{"internalType":"uint256","name":"weightedScore","type":"uint256"},{"internalType":"uint256","name":"reputationTier","type":"uint256"}],"internalType":"struct ReputationScorer.ScoreBreakdown","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_limit","type":"uint256"}],"name":"getTopAstrologers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"},{"internalType":"address","name":"_buyTokenContract","type":"address"},{"internalType":"address","name":"_zodiacDAO","type":"address"},{"internalType":"uint256","name":"_minPredictionsForScore","type":"uint256"},{"internalType":"uint256","name":"_scoreUpdateDelay","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxReputationMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minPredictionsForScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minReputationMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"predictionModules","outputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"lastUpdate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reputationDecayRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reputationScores","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"accuracyPercentage","type":"uint256"},{"internalType":"uint256","name":"reputationMultiplier","type":"uint256"},{"internalType":"uint256","name":"marketPredictions","type":"uint256"},{"internalType":"uint256","name":"dailyPredictions","type":"uint256"},{"internalType":"uint256","name":"oneToOnePredictions","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"scoreBreakdowns","outputs":[{"internalType":"uint256","name":"marketAccuracy","type":"uint256"},{"internalType":"uint256","name":"dailyAccuracy","type":"uint256"},{"internalType":"uint256","name":"oneToOneAccuracy","type":"uint256"},{"internalType":"uint256","name":"weightedScore","type":"uint256"},{"internalType":"uint256","name":"reputationTier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"scoreUpdateDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astroTokenLauncher","type":"address"}],"name":"setAstroTokenLauncher","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"}],"name":"setAstrologerManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_buyTokenContract","type":"address"}],"name":"setBuyTokenContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minPredictions","type":"uint256"}],"name":"setMinPredictionsForScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_decayRate","type":"uint256"}],"name":"setReputationDecayRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxMultiplier","type":"uint256"},{"internalType":"uint256","name":"_minMultiplier","type":"uint256"}],"name":"setReputationMultipliers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_delay","type":"uint256"}],"name":"setScoreUpdateDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_worldPredictionMarket","type":"address"}],"name":"setWorldPredictionMarket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_zodiacDAO","type":"address"}],"name":"setZodiacDAO","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_moduleId","type":"uint256"}],"name":"togglePredictionModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalModules","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_moduleId","type":"uint256"},{"internalType":"uint256","name":"_newWeight","type":"uint256"}],"name":"updateModuleWeight","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"bool","name":"_wasCorrect","type":"bool"}],"name":"updateReputationFromWorldPrediction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"uint256","name":"_marketPredictions","type":"uint256"},{"internalType":"uint256","name":"_marketAccurate","type":"uint256"},{"internalType":"uint256","name":"_dailyPredictions","type":"uint256"},{"internalType":"uint256","name":"_dailyAccurate","type":"uint256"},{"internalType":"uint256","name":"_oneToOnePredictions","type":"uint256"},{"internalType":"uint256","name":"_oneToOneAccurate","type":"uint256"}],"name":"updateReputationScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"worldPredictionMarket","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"zodiacDAO","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b60405161266e90816100e282396080518181816114430152818161177d0152611ae70152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816302bc7f4a14611e2657508063106bdcf514611de657806310d4f37414611d8e57806316d54f0914611d655780632c27750a14611cb05780633659cfe614611ac25780633d9617be14611a9d578063430cd57a14611a7f57806344cda48514611a3f578063450f144214611a215780634cba103e146119fe5780634f1ef2861461170257806351131876146115845780635245420d146114f457806352d1902d1461143057806358bd9b931461130f5780635df4d161146112f157806365af67bd146112b15780636be2cefb146112745780636fd31a411461124b578063715018a6146111ee57806375a67d5c1461107557806378bbd70114611057578063893849de14610fef5780638da5cb5b14610fc6578063960e6f8814610fa85780639754cfd114610f555780639f68871d14610f325780639f7c468814610bff578063a6b63eb814610a3a578063ab3dcd6a14610a11578063ab76c9ed146109e8578063adcbcde51461048c578063b107e88c1461044f578063c3a274c21461040f578063dc0a40bd146103a9578063e2c3538c14610369578063e6f9558314610346578063f2fde38b146102b5578063f92eadf6146102975763fe0438b2146101e457600080fd5b3461029457602036600319011261029457610160906001600160a01b03906040908261020e611e4b565b16815260ca6020522080549160018201541690600281015460038201546004830154600584015460068501549160078601549360088701549560ff600a60098a015499015416986040519a8b5260208b015260408a01526060890152608088015260a087015260c086015260e08501526101008401526101208301521515610140820152f35b80fd5b5034610294578060031936011261029457602060d454604051908152f35b5034610294576020366003190112610294576102cf611e4b565b6102d7611f34565b6001600160a01b038116156102f2576102ef90611f8c565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461029457602036600319011261029457610360611f34565b60043560d45580f35b503461029457602036600319011261029457610383611e4b565b61038b611f34565b60018060a01b03166001600160601b0360a01b60d054161760d05580f35b50346102945760203660031901126102945760a0906040906001600160a01b036103d1611e4b565b16815260cb60205220805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b503461029457602036600319011261029457610429611e4b565b610431611f34565b60018060a01b03166001600160601b0360a01b60ce54161760ce5580f35b5034610294576020366003190112610294576020906005906040906001600160a01b0361047a611e4b565b16815260ca8452200154604051908152f35b50346102945760e0366003190112610294576104a6611e4b565b602435604435916084359260018060a01b0360335416331480156109d4575b6104ce906122ce565b6104e26001600160a01b0383161515612309565b60018060a01b038216855260ca602052604085209260cb60205260408620948160068601556064359283600787015560a435600887015561052e60a43561052986866124b4565b6124b4565b600287015582156109cc57606481029080820460641490151715610940578261055691612355565b905b81875583156109c557606481029080820460641490151715610940578361057e91612355565b6001870181905560a435156109be5760c43580606481020460641481151715610987576105b190606460a4359102612355565b905b600288019482865589938a9561099b575b50610954575b5060a4356108fb575b5080156108f3576105e391612355565b6003850190808255600a6105fd60048701928084556124c1565b956005810196875561060f8454612507565b600489015542600982015501805460ff1916600117905560cd5487906001600160a01b03168061081d575b5060d0546001600160a01b0316806106eb575b50505493546040805186815260208101969096528501527fad4434fdebadb9d3b07e14eaea89a4f564780aca2d11dbf1d7fcd70d921a5d64936080939291906001600160a01b038416907f518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac24490606090a260018654960154915490549160405196875260208701526040860152606085015260018060a01b031692a280f35b60405163248bb6cd60e21b81526001600160a01b0387166004820152908290829060249082905afa8291816107f9575b501561064d5760408101516001600160a01b031690811515806107e3575b806107d5575b61074a575b5061064d565b6060015187546001600160a01b039091169190823b156107d15760405163f6322a5f60e01b81526001600160a01b0392909216600483015260248201529082908290604490829084905af180156107c6576107a6575b80610744565b6107b4909594939295611eb0565b6107c25790919286386107a0565b8680fd5b6040513d84823e3d90fd5b8380fd5b50610100810151151561073f565b5060608101516001600160a01b03161515610739565b6108169192503d8085833e61080e8183611ee0565b8101906123ce565b903861071b565b60405163656d0c3960e01b81526001600160a01b0387166004820152602081602481855afa9081156108e85783916108ae575b508061085d575b5061063a565b8754823b156107d15760448492836040519586948593630675f76360e01b8552600485015260248401525af180156107c65761089a575b80610857565b6108a390611eb0565b6107c2578638610894565b9250506020823d6020116108e0575b816108ca60209383611ee0565b810103126108db5788915138610850565b600080fd5b3d91506108bd565b6040513d85823e3d90fd5b5050846105e3565b90918160021b9180830460041490151715610940579061091a916124b4565b906004810180911161092c57386105d3565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b9091928160011b91808304600214901517156109875790610974916124b4565b91600281018091116109405790386105ca565b634e487b7160e01b89526011600452602489fd5b8092955060039194500290808204600314901517156109875792600392386105c4565b87906105b3565b508661057e565b508690610558565b506104ce6109e13361256d565b90506104c5565b503461029457806003193601126102945760cf546040516001600160a01b039091168152602090f35b503461029457806003193601126102945760d0546040516001600160a01b039091168152602090f35b50346102945760a036600319011261029457610a54611e4b565b6001600160a01b039060243582811691908290036108db576044358381168091036108db5784549260ff8460081c161593848095610bf2575b8015610bdb575b15610b7f5760ff198116600117875584610b6e575b50610ac360ff875460081c16610abe816121fd565b6121fd565b610acc33611f8c565b855494610ade60ff8760081c166121fd565b6001600160601b0360a01b93168360cd54161760cd558260ce54161760ce558160cf54161760cf558060d0541660d05560d1541660d15560643560d35560843560d455600560d55561138860d65560c860d755610b39575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117865538610aa9565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610a945750600160ff821614610a94565b50600160ff821610610a8d565b503461029457604036600319011261029457610c19611e4b565b602435908115158203610eb85760d1546001600160a01b03918291821633148015610f25575b610c48906122ce565b1691610c55831515612309565b82845260ca602052604084209060068201610c7081546122a9565b90556002820190610c8182546122a9565b809255610f10575b6003820154606481029080820460641490151715610efc578591610cac91612355565b92610cbd60048401948086556124c1565b600a600585019482865542600982015501600160ff198254161790558160cd54169081610e21575b50508060d0541680610d34575b5050915490546040805183815260208101939093528201527f518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac2449150606090a280f35b90826024926040519384809263248bb6cd60e21b82528a60048301525afa839281610e05575b5015610cf257806040830151169182151580610df6575b80610de8575b610d82575b50610cf2565b6060015116908354823b156107d15760405163f6322a5f60e01b81526001600160a01b0392909216600483015260248201529082908290604490829084905af180156107c657610dd4575b8080610d7c565b610ddd90611eb0565b6107d1578338610dcd565b506101008101511515610d77565b50816060820151161515610d71565b610e1a9193503d8086833e61080e8183611ee0565b9138610d5a565b60405163656d0c3960e01b815260048101889052602081602481865afa908115610ef1578591610ebc575b5080610e59575b50610ce5565b829394923b15610eb857604490836040519586948593630675f76360e01b8552600485015260248401525af18015610ead57610e9a575b9081808793610e53565b610ea690959195611eb0565b9338610e90565b6040513d88823e3d90fd5b8280fd5b90506020813d8211610ee9575b81610ed660209383611ee0565b81010312610ee5575138610e4c565b8480fd5b3d9150610ec9565b6040513d87823e3d90fd5b634e487b7160e01b86526011600452602486fd5b60038201610f1e81546122a9565b9055610c89565b5060335482163314610c3f565b503461029457602036600319011261029457610f4c611f34565b60043560d35580f35b503461029457610f6436611f1e565b90610f6d611f34565b80151580610f9c575b610f7f906125d8565b610f8a82151561225d565b825260cc602052600160408320015580f35b5060d254811115610f76565b5034610294578060031936011261029457602060d554604051908152f35b50346102945780600319360112610294576033546040516001600160a01b039091168152602090f35b50346102945760203660031901126102945760043561100c611f34565b8015158061104b575b61101e906125d8565b815260cc60205260408120805460ff60a01b19811660a091821c60ff161590911b60ff60a01b1617905580f35b5060d254811115611015565b5034610294578060031936011261029457602060d254604051908152f35b503461029457602036600319011261029457604061016091611095611e4b565b8161014084516110a481611e93565b82815282602082015282868201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152015260018060a01b0316815260ca602052206101406040516110ff81611e93565b60ff600a84549485845260018060a01b036001820154166020850152600281015460408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501526008810154610100850152600981015461012085015201541615158282015260405192835260018060a01b03602082015116602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015160e084015261010081015161010084015261012081015161012084015201511515610140820152f35b5034610294578060031936011261029457611207611f34565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461029457806003193601126102945760cd546040516001600160a01b039091168152602090f35b5034610294576020366003190112610294576020906004906040906001600160a01b0361129f611e4b565b16815260cb8452200154604051908152f35b5034610294576020366003190112610294576112cb611e4b565b6112d3611f34565b60018060a01b03166001600160601b0360a01b60cf54161760cf5580f35b5034610294578060031936011261029457602060d754604051908152f35b50346102945761131e36611f1e565b90611327611f34565b818111156113eb576064821061139a5761271081116113495760d65560d75580f35b60405162461bcd60e51b8152602060048201526024808201527f4d6178206d756c7469706c696572206d757374206265206174206d6f737420316044820152630605c60f60e31b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f4d696e206d756c7469706c696572206d757374206265206174206c65617374206044820152630605c62f60e31b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4d6178206d7573742062652067726561746572207468616e206d696e000000006044820152606490fd5b50346102945780600319360112610294577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036114895760206040516000805160206126198339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b503461029457602080600319360112611580576004359161152d61151784612555565b936115256040519586611ee0565b808552612555565b8383019190601f190136833760405193838594850191818652518092526040850193925b82811061156057505050500390f35b83516001600160a01b031685528695509381019392810192600101611551565b5080fd5b50346102945760403660031901126102945761159e611e4b565b6024356115a9611f34565b6001600160a01b039180831680156116bd576115c683151561225d565b6115d160d2546122a9565b938460d255604051916080830183811067ffffffffffffffff8211176116a9576020977faf31016049a06640f36fa55e20d2a8c9809bbdadf9fd3327a7763e5aa652346e959388979593600293604052845261167c8a8501600181526040860192888452604060608801954287528c815260cc8f52209651166001600160601b0360a01b875416178655511515859081549060ff60a01b90151560a01b169060ff60a01b1916179055565b51600184015551910155604080516001600160a01b039290921682526020820192909252a2604051908152f35b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e7472616374206164647265737300000000000000006044820152606490fd5b50604036600319011261029457611717611e4b565b6024359067ffffffffffffffff8211610eb85736602383011215610eb857816004013561174381611f02565b6117506040519182611ee0565b81815284602094858301933660248284010111610eb8578060248893018637830101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906117ab30831415611fd5565b6117c8600080516020612619833981519152928284541614612036565b6117d0611f34565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561180857505050506102ef9150612097565b8492939416906040516352d1902d60e01b81528681600481865afa8891816119cb575b5061188c5760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b95939495036119745761189e82612097565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a28483511580159061196c575b6118db575b505050505080f35b8061195895604051956118ed87611ec4565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15611963573d61193c81611f02565b9061194a6040519283611ee0565b81528681943d92013e612127565b5038808080846118d3565b60609250612127565b5060016118ce565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d83116119f7575b6119e38183611ee0565b810103126119f35751903861182b565b8880fd5b503d6119d9565b503461029457602036600319011261029457611a18611f34565b60043560d55580f35b5034610294578060031936011261029457602060d354604051908152f35b503461029457602036600319011261029457611a59611e4b565b611a61611f34565b60018060a01b03166001600160601b0360a01b60cd54161760cd5580f35b5034610294578060031936011261029457602060d654604051908152f35b5034610294578060031936011261029457604060d65460d75482519182526020820152f35b50346102945760208060031936011261158057611add611e4b565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116611b1430821415611fd5565b611b31600080516020612619833981519152918383541614612036565b611b39611f34565b604051908482019282841067ffffffffffffffff851117611c9c578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014611b9557505050506102ef9150612097565b8492939416906040516352d1902d60e01b81528681600481865afa889181611c6d575b50611c195760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959394950361197457611c2b82612097565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a284835115801590611c66576118db57505050505080f35b50806118ce565b9091508781813d8311611c95575b611c858183611ee0565b810103126119f357519038611bb8565b503d611c7b565b634e487b7160e01b87526041600452602487fd5b503461029457602036600319011261029457604060a091611ccf611e4b565b8160808451611cdd81611e61565b82815282602082015282868201528260608201520152600180851b0316815260cb60205220604051611d0e81611e61565b81549182825260018101546020830190815260028201549060408401918252608060046003850154946060870195865201549401938452604051948552516020850152516040840152516060830152516080820152f35b503461029457806003193601126102945760ce546040516001600160a01b039091168152602090f35b5034610294576020366003190112610294576040608091600435815260cc60205220805490600260018201549101549060ff6040519360018060a01b038116855260a01c161515602084015260408301526060820152f35b503461029457602036600319011261029457611e00611e4b565b611e08611f34565b60018060a01b03166001600160601b0360a01b60d154161760d15580f35b90503461158057816003193601126115805760d1546001600160a01b03168152602090f35b600435906001600160a01b03821682036108db57565b60a0810190811067ffffffffffffffff821117611e7d57604052565b634e487b7160e01b600052604160045260246000fd5b610160810190811067ffffffffffffffff821117611e7d57604052565b67ffffffffffffffff8111611e7d57604052565b6060810190811067ffffffffffffffff821117611e7d57604052565b90601f8019910116810190811067ffffffffffffffff821117611e7d57604052565b67ffffffffffffffff8111611e7d57601f01601f191660200190565b60409060031901126108db576004359060243590565b6033546001600160a01b03163303611f4857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611fdc57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561203d57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156120cc5760008051602061261983398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015612189575081511561213b575090565b3b156121445790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561219c5750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526121cc81518092816024860152602086860191016121da565b601f01601f19168101030190fd5b60005b8381106121ed5750506000910152565b81810151838201526020016121dd565b1561220457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561226457565b60405162461bcd60e51b815260206004820152601d60248201527f576569676874206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60001981146122b85760010190565b634e487b7160e01b600052601160045260246000fd5b156122d557565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b1561231057565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420617374726f6c6f67657220616464726573730000000000006044820152606490fd5b811561235f570490565b634e487b7160e01b600052601260045260246000fd5b51906001600160a01b03821682036108db57565b81601f820112156108db57805161239f81611f02565b926123ad6040519485611ee0565b818452602082840101116108db576123cb91602080850191016121da565b90565b6020818303126108db57805167ffffffffffffffff918282116108db5701906101409283838203126108db5760405193840184811083821117611e7d576040528251845261241e60208401612375565b602085015261242f60408401612375565b604085015261244060608401612375565b606085015260808301518281116108db578161245d918501612389565b608085015260a08301519182116108db57612479918301612389565b60a083015260c081015160c083015260e081015160e0830152610100808201519081151582036108db57830152610120809101519082015290565b919082018092116122b857565b60648110156125005780156124f95760d65460d754908181039081116122b857808302928304036122b85760646123cb9204906124b4565b5060d75490565b5060d65490565b605f81101561254f57605a81101561254957605581101561254357605081101561253d57604b111561253857600090565b600190565b50600290565b50600390565b50600490565b50600590565b67ffffffffffffffff8111611e7d5760051b60200190565b6001809160d254925b838111156125875750505050600090565b600081815260cc6020526040808220546001600160a01b0385811691161491826125c7575b50506125c0576125bb906122a9565b612576565b5050905090565b60ff9250205460a01c1638806125ac565b156125df57565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5bd91d5b19481251607a1b6044820152606490fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122043bed1963b0c510484afd30c03b2c3daf447d08be926fd799d0044a76171486c64736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266E SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1443 ADD MSTORE DUP2 DUP2 PUSH2 0x177D ADD MSTORE PUSH2 0x1AE7 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2BC7F4A EQ PUSH2 0x1E26 JUMPI POP DUP1 PUSH4 0x106BDCF5 EQ PUSH2 0x1DE6 JUMPI DUP1 PUSH4 0x10D4F374 EQ PUSH2 0x1D8E JUMPI DUP1 PUSH4 0x16D54F09 EQ PUSH2 0x1D65 JUMPI DUP1 PUSH4 0x2C27750A EQ PUSH2 0x1CB0 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1AC2 JUMPI DUP1 PUSH4 0x3D9617BE EQ PUSH2 0x1A9D JUMPI DUP1 PUSH4 0x430CD57A EQ PUSH2 0x1A7F JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x1A3F JUMPI DUP1 PUSH4 0x450F1442 EQ PUSH2 0x1A21 JUMPI DUP1 PUSH4 0x4CBA103E EQ PUSH2 0x19FE JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1702 JUMPI DUP1 PUSH4 0x51131876 EQ PUSH2 0x1584 JUMPI DUP1 PUSH4 0x5245420D EQ PUSH2 0x14F4 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1430 JUMPI DUP1 PUSH4 0x58BD9B93 EQ PUSH2 0x130F JUMPI DUP1 PUSH4 0x5DF4D161 EQ PUSH2 0x12F1 JUMPI DUP1 PUSH4 0x65AF67BD EQ PUSH2 0x12B1 JUMPI DUP1 PUSH4 0x6BE2CEFB EQ PUSH2 0x1274 JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x124B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11EE JUMPI DUP1 PUSH4 0x75A67D5C EQ PUSH2 0x1075 JUMPI DUP1 PUSH4 0x78BBD701 EQ PUSH2 0x1057 JUMPI DUP1 PUSH4 0x893849DE EQ PUSH2 0xFEF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFC6 JUMPI DUP1 PUSH4 0x960E6F88 EQ PUSH2 0xFA8 JUMPI DUP1 PUSH4 0x9754CFD1 EQ PUSH2 0xF55 JUMPI DUP1 PUSH4 0x9F68871D EQ PUSH2 0xF32 JUMPI DUP1 PUSH4 0x9F7C4688 EQ PUSH2 0xBFF JUMPI DUP1 PUSH4 0xA6B63EB8 EQ PUSH2 0xA3A JUMPI DUP1 PUSH4 0xAB3DCD6A EQ PUSH2 0xA11 JUMPI DUP1 PUSH4 0xAB76C9ED EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0xADCBCDE5 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xB107E88C EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xC3A274C2 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xDC0A40BD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xE2C3538C EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xE6F95583 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF92EADF6 EQ PUSH2 0x297 JUMPI PUSH4 0xFE0438B2 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x160 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP3 PUSH2 0x20E PUSH2 0x1E4B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP2 PUSH1 0x7 DUP7 ADD SLOAD SWAP4 PUSH1 0x8 DUP8 ADD SLOAD SWAP6 PUSH1 0xFF PUSH1 0xA PUSH1 0x9 DUP11 ADD SLOAD SWAP10 ADD SLOAD AND SWAP9 PUSH1 0x40 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x2CF PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2EF SWAP1 PUSH2 0x1F8C JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x360 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD4 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x383 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0xA0 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3D1 PUSH2 0x1E4B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x429 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x431 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x47A PUSH2 0x1E4B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x4A6 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x9D4 JUMPI JUMPDEST PUSH2 0x4CE SWAP1 PUSH2 0x22CE JUMP JUMPDEST PUSH2 0x4E2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x2309 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND DUP6 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP3 PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP5 DUP2 PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x64 CALLDATALOAD SWAP3 DUP4 PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 DUP8 ADD SSTORE PUSH2 0x52E PUSH1 0xA4 CALLDATALOAD PUSH2 0x529 DUP7 DUP7 PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE DUP3 ISZERO PUSH2 0x9CC JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x940 JUMPI DUP3 PUSH2 0x556 SWAP2 PUSH2 0x2355 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 DUP8 SSTORE DUP4 ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x940 JUMPI DUP4 PUSH2 0x57E SWAP2 PUSH2 0x2355 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD DUP2 SWAP1 SSTORE PUSH1 0xA4 CALLDATALOAD ISZERO PUSH2 0x9BE JUMPI PUSH1 0xC4 CALLDATALOAD DUP1 PUSH1 0x64 DUP2 MUL DIV PUSH1 0x64 EQ DUP2 ISZERO OR ISZERO PUSH2 0x987 JUMPI PUSH2 0x5B1 SWAP1 PUSH1 0x64 PUSH1 0xA4 CALLDATALOAD SWAP2 MUL PUSH2 0x2355 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x2 DUP9 ADD SWAP5 DUP3 DUP7 SSTORE DUP10 SWAP4 DUP11 SWAP6 PUSH2 0x99B JUMPI JUMPDEST POP PUSH2 0x954 JUMPI JUMPDEST POP PUSH1 0xA4 CALLDATALOAD PUSH2 0x8FB JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x5E3 SWAP2 PUSH2 0x2355 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SWAP1 DUP1 DUP3 SSTORE PUSH1 0xA PUSH2 0x5FD PUSH1 0x4 DUP8 ADD SWAP3 DUP1 DUP5 SSTORE PUSH2 0x24C1 JUMP JUMPDEST SWAP6 PUSH1 0x5 DUP2 ADD SWAP7 DUP8 SSTORE PUSH2 0x60F DUP5 SLOAD PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x4 DUP10 ADD SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x81D JUMPI JUMPDEST POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x6EB JUMPI JUMPDEST POP POP SLOAD SWAP4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP6 ADD MSTORE PUSH32 0xAD4434FDEBADB9D3B07E14EAEA89A4F564780ACA2D11DBF1D7FCD70D921A5D64 SWAP4 PUSH1 0x80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x518D384EC8D284E293CFE22999E2961FCB70FAE686352F14179033225F2AC244 SWAP1 PUSH1 0x60 SWAP1 LOG2 PUSH1 0x1 DUP7 SLOAD SWAP7 ADD SLOAD SWAP2 SLOAD SWAP1 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP3 SWAP2 DUP2 PUSH2 0x7F9 JUMPI JUMPDEST POP ISZERO PUSH2 0x64D JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x7E3 JUMPI JUMPDEST DUP1 PUSH2 0x7D5 JUMPI JUMPDEST PUSH2 0x74A JUMPI JUMPDEST POP PUSH2 0x64D JUMP JUMPDEST PUSH1 0x60 ADD MLOAD DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH2 0x7A6 JUMPI JUMPDEST DUP1 PUSH2 0x744 JUMP JUMPDEST PUSH2 0x7B4 SWAP1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP6 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x7C2 JUMPI SWAP1 SWAP2 SWAP3 DUP7 CODESIZE PUSH2 0x7A0 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x73F JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x739 JUMP JUMPDEST PUSH2 0x816 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x80E DUP2 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x23CE JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8E8 JUMPI DUP4 SWAP2 PUSH2 0x8AE JUMPI JUMPDEST POP DUP1 PUSH2 0x85D JUMPI JUMPDEST POP PUSH2 0x63A JUMP JUMPDEST DUP8 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x44 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x675F763 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH2 0x89A JUMPI JUMPDEST DUP1 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x8A3 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x7C2 JUMPI DUP7 CODESIZE PUSH2 0x894 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8E0 JUMPI JUMPDEST DUP2 PUSH2 0x8CA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8DB JUMPI DUP9 SWAP2 MLOAD CODESIZE PUSH2 0x850 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP DUP5 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 SWAP2 DUP2 PUSH1 0x2 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x4 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x940 JUMPI SWAP1 PUSH2 0x91A SWAP2 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x92C JUMPI CODESIZE PUSH2 0x5D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x987 JUMPI SWAP1 PUSH2 0x974 SWAP2 PUSH2 0x24B4 JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x940 JUMPI SWAP1 CODESIZE PUSH2 0x5CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP1 SWAP3 SWAP6 POP PUSH1 0x3 SWAP2 SWAP5 POP MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x987 JUMPI SWAP3 PUSH1 0x3 SWAP3 CODESIZE PUSH2 0x5C4 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST POP DUP7 PUSH2 0x57E JUMP JUMPDEST POP DUP7 SWAP1 PUSH2 0x558 JUMP JUMPDEST POP PUSH2 0x4CE PUSH2 0x9E1 CALLER PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH2 0x4C5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xD0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xA54 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x8DB JUMPI PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x8DB JUMPI DUP5 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0xBF2 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xBDB JUMPI JUMPDEST ISZERO PUSH2 0xB7F JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP8 SSTORE DUP5 PUSH2 0xB6E JUMPI JUMPDEST POP PUSH2 0xAC3 PUSH1 0xFF DUP8 SLOAD PUSH1 0x8 SHR AND PUSH2 0xABE DUP2 PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x21FD JUMP JUMPDEST PUSH2 0xACC CALLER PUSH2 0x1F8C JUMP JUMPDEST DUP6 SLOAD SWAP5 PUSH2 0xADE PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 AND DUP4 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP3 PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP2 PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 PUSH1 0xD0 SLOAD AND PUSH1 0xD0 SSTORE PUSH1 0xD1 SLOAD AND PUSH1 0xD1 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xD3 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD4 SSTORE PUSH1 0x5 PUSH1 0xD5 SSTORE PUSH2 0x1388 PUSH1 0xD6 SSTORE PUSH1 0xC8 PUSH1 0xD7 SSTORE PUSH2 0xB39 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP7 SSTORE CODESIZE PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA94 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0xA94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0xA8D JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xC19 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0xEB8 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 SWAP2 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0xF25 JUMPI JUMPDEST PUSH2 0xC48 SWAP1 PUSH2 0x22CE JUMP JUMPDEST AND SWAP2 PUSH2 0xC55 DUP4 ISZERO ISZERO PUSH2 0x2309 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD PUSH2 0xC70 DUP2 SLOAD PUSH2 0x22A9 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xC81 DUP3 SLOAD PUSH2 0x22A9 JUMP JUMPDEST DUP1 SWAP3 SSTORE PUSH2 0xF10 JUMPI JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xEFC JUMPI DUP6 SWAP2 PUSH2 0xCAC SWAP2 PUSH2 0x2355 JUMP JUMPDEST SWAP3 PUSH2 0xCBD PUSH1 0x4 DUP5 ADD SWAP5 DUP1 DUP7 SSTORE PUSH2 0x24C1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x5 DUP6 ADD SWAP5 DUP3 DUP7 SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 PUSH1 0xCD SLOAD AND SWAP1 DUP2 PUSH2 0xE21 JUMPI JUMPDEST POP POP DUP1 PUSH1 0xD0 SLOAD AND DUP1 PUSH2 0xD34 JUMPI JUMPDEST POP POP SWAP2 SLOAD SWAP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x518D384EC8D284E293CFE22999E2961FCB70FAE686352F14179033225F2AC244 SWAP2 POP PUSH1 0x60 SWAP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 DUP3 PUSH1 0x24 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP3 MSTORE DUP11 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP4 SWAP3 DUP2 PUSH2 0xE05 JUMPI JUMPDEST POP ISZERO PUSH2 0xCF2 JUMPI DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0xDF6 JUMPI JUMPDEST DUP1 PUSH2 0xDE8 JUMPI JUMPDEST PUSH2 0xD82 JUMPI JUMPDEST POP PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x60 ADD MLOAD AND SWAP1 DUP4 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH2 0xDD4 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xDDD SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x7D1 JUMPI DUP4 CODESIZE PUSH2 0xDCD JUMP JUMPDEST POP PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0xD77 JUMP JUMPDEST POP DUP2 PUSH1 0x60 DUP3 ADD MLOAD AND ISZERO ISZERO PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xE1A SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x80E DUP2 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEF1 JUMPI DUP6 SWAP2 PUSH2 0xEBC JUMPI JUMPDEST POP DUP1 PUSH2 0xE59 JUMPI JUMPDEST POP PUSH2 0xCE5 JUMP JUMPDEST DUP3 SWAP4 SWAP5 SWAP3 EXTCODESIZE ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x675F763 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xEAD JUMPI PUSH2 0xE9A JUMPI JUMPDEST SWAP1 DUP2 DUP1 DUP8 SWAP4 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xEA6 SWAP1 SWAP6 SWAP2 SWAP6 PUSH2 0x1EB0 JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xEE9 JUMPI JUMPDEST DUP2 PUSH2 0xED6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEE5 JUMPI MLOAD CODESIZE PUSH2 0xE4C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD PUSH2 0xF1E DUP2 SLOAD PUSH2 0x22A9 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x33 SLOAD DUP3 AND CALLER EQ PUSH2 0xC3F JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xF4C PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH2 0xF64 CALLDATASIZE PUSH2 0x1F1E JUMP JUMPDEST SWAP1 PUSH2 0xF6D PUSH2 0x1F34 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xF9C JUMPI JUMPDEST PUSH2 0xF7F SWAP1 PUSH2 0x25D8 JUMP JUMPDEST PUSH2 0xF8A DUP3 ISZERO ISZERO PUSH2 0x225D JUMP JUMPDEST DUP3 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0xF76 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x100C PUSH2 0x1F34 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x104B JUMPI JUMPDEST PUSH2 0x101E SWAP1 PUSH2 0x25D8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0xA0 SWAP2 DUP3 SHR PUSH1 0xFF AND ISZERO SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0x1015 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH2 0x160 SWAP2 PUSH2 0x1095 PUSH2 0x1E4B JUMP JUMPDEST DUP2 PUSH2 0x140 DUP5 MLOAD PUSH2 0x10A4 DUP2 PUSH2 0x1E93 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x10FF DUP2 PUSH2 0x1E93 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA DUP5 SLOAD SWAP5 DUP6 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO DUP3 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1207 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x129F PUSH2 0x1E4B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x12CB PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x12D3 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH2 0x131E CALLDATASIZE PUSH2 0x1F1E JUMP JUMPDEST SWAP1 PUSH2 0x1327 PUSH2 0x1F34 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x13EB JUMPI PUSH1 0x64 DUP3 LT PUSH2 0x139A JUMPI PUSH2 0x2710 DUP2 GT PUSH2 0x1349 JUMPI PUSH1 0xD6 SSTORE PUSH1 0xD7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D6178206D756C7469706C696572206D757374206265206174206D6F73742031 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x605C60F PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D696E206D756C7469706C696572206D757374206265206174206C6561737420 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x605C62F PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178206D7573742062652067726561746572207468616E206D696E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1489 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2619 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1580 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH2 0x152D PUSH2 0x1517 DUP5 PUSH2 0x2555 JUMP JUMPDEST SWAP4 PUSH2 0x1525 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1EE0 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x2555 JUMP JUMPDEST DUP4 DUP4 ADD SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1560 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1551 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x159E PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x15A9 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND DUP1 ISZERO PUSH2 0x16BD JUMPI PUSH2 0x15C6 DUP4 ISZERO ISZERO PUSH2 0x225D JUMP JUMPDEST PUSH2 0x15D1 PUSH1 0xD2 SLOAD PUSH2 0x22A9 JUMP JUMPDEST SWAP4 DUP5 PUSH1 0xD2 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x80 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A9 JUMPI PUSH1 0x20 SWAP8 PUSH32 0xAF31016049A06640F36FA55E20D2A8C9809BBDADF9FD3327A7763E5AA652346E SWAP6 SWAP4 DUP9 SWAP8 SWAP6 SWAP4 PUSH1 0x2 SWAP4 PUSH1 0x40 MSTORE DUP5 MSTORE PUSH2 0x167C DUP11 DUP6 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD SWAP3 DUP9 DUP5 MSTORE PUSH1 0x40 PUSH1 0x60 DUP9 ADD SWAP6 TIMESTAMP DUP8 MSTORE DUP13 DUP2 MSTORE PUSH1 0xCC DUP16 MSTORE KECCAK256 SWAP7 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE MLOAD ISZERO ISZERO DUP6 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1717 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEB8 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xEB8 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1743 DUP2 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x1750 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 SWAP5 DUP6 DUP4 ADD SWAP4 CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0xEB8 JUMPI DUP1 PUSH1 0x24 DUP9 SWAP4 ADD DUP7 CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP1 PUSH2 0x17AB ADDRESS DUP4 EQ ISZERO PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x17C8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2619 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 DUP5 SLOAD AND EQ PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x17D0 PUSH2 0x1F34 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1808 JUMPI POP POP POP POP PUSH2 0x2EF SWAP2 POP PUSH2 0x2097 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x19CB JUMPI JUMPDEST POP PUSH2 0x188C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1974 JUMPI PUSH2 0x189E DUP3 PUSH2 0x2097 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x196C JUMPI JUMPDEST PUSH2 0x18DB JUMPI JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x1958 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x18ED DUP8 PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1963 JUMPI RETURNDATASIZE PUSH2 0x193C DUP2 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 PUSH2 0x194A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2127 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP5 PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2127 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x19F7 JUMPI JUMPDEST PUSH2 0x19E3 DUP2 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19F3 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x182B JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x19D9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1A18 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD5 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1A59 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x1A61 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0xD6 SLOAD PUSH1 0xD7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1580 JUMPI PUSH2 0x1ADD PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x1B14 ADDRESS DUP3 EQ ISZERO PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x1B31 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2619 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x1B39 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x1C9C JUMPI DUP4 PUSH1 0x40 MSTORE DUP7 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1B95 JUMPI POP POP POP POP PUSH2 0x2EF SWAP2 POP PUSH2 0x2097 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x1C6D JUMPI JUMPDEST POP PUSH2 0x1C19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1974 JUMPI PUSH2 0x1C2B DUP3 PUSH2 0x2097 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C66 JUMPI PUSH2 0x18DB JUMPI POP POP POP POP POP DUP1 RETURN JUMPDEST POP DUP1 PUSH2 0x18CE JUMP JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C95 JUMPI JUMPDEST PUSH2 0x1C85 DUP2 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19F3 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1BB8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C7B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0xA0 SWAP2 PUSH2 0x1CCF PUSH2 0x1E4B JUMP JUMPDEST DUP2 PUSH1 0x80 DUP5 MLOAD PUSH2 0x1CDD DUP2 PUSH2 0x1E61 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 DUP6 SHL SUB AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1D0E DUP2 PUSH2 0x1E61 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP6 MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1E00 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x1E08 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD1 SLOAD AND OR PUSH1 0xD1 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1580 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1580 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8DB JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x8DB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F48 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x1FDC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x203D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x20CC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2619 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2189 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x213B JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2144 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x219C JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x21CC DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21ED JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21DD JUMP JUMPDEST ISZERO PUSH2 0x2204 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2264 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576569676874206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x22B8 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x22D5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2310 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617374726F6C6F6765722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x235F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8DB JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x8DB JUMPI DUP1 MLOAD PUSH2 0x239F DUP2 PUSH2 0x1F02 JUMP JUMPDEST SWAP3 PUSH2 0x23AD PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x8DB JUMPI PUSH2 0x23CB SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x21DA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x8DB JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x8DB JUMPI ADD SWAP1 PUSH2 0x140 SWAP3 DUP4 DUP4 DUP3 SUB SLT PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD SWAP4 DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE DUP3 MLOAD DUP5 MSTORE PUSH2 0x241E PUSH1 0x20 DUP5 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x242F PUSH1 0x40 DUP5 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2440 PUSH1 0x60 DUP5 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP3 DUP2 GT PUSH2 0x8DB JUMPI DUP2 PUSH2 0x245D SWAP2 DUP6 ADD PUSH2 0x2389 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x8DB JUMPI PUSH2 0x2479 SWAP2 DUP4 ADD PUSH2 0x2389 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x8DB JUMPI DUP4 ADD MSTORE PUSH2 0x120 DUP1 SWAP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x22B8 JUMPI JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x2500 JUMPI DUP1 ISZERO PUSH2 0x24F9 JUMPI PUSH1 0xD6 SLOAD PUSH1 0xD7 SLOAD SWAP1 DUP2 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x22B8 JUMPI DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x22B8 JUMPI PUSH1 0x64 PUSH2 0x23CB SWAP3 DIV SWAP1 PUSH2 0x24B4 JUMP JUMPDEST POP PUSH1 0xD7 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0xD6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5F DUP2 LT ISZERO PUSH2 0x254F JUMPI PUSH1 0x5A DUP2 LT ISZERO PUSH2 0x2549 JUMPI PUSH1 0x55 DUP2 LT ISZERO PUSH2 0x2543 JUMPI PUSH1 0x50 DUP2 LT ISZERO PUSH2 0x253D JUMPI PUSH1 0x4B GT ISZERO PUSH2 0x2538 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SWAP2 PUSH1 0xD2 SLOAD SWAP3 JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2587 JUMPI POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ SWAP2 DUP3 PUSH2 0x25C7 JUMPI JUMPDEST POP POP PUSH2 0x25C0 JUMPI PUSH2 0x25BB SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x2576 JUMP JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 POP KECCAK256 SLOAD PUSH1 0xA0 SHR AND CODESIZE DUP1 PUSH2 0x25AC JUMP JUMPDEST ISZERO PUSH2 0x25DF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081B5BD91D5B19481251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122043 0xBE 0xD1 SWAP7 EXTCODESIZE 0xC MLOAD DIV DUP5 0xAF 0xD3 0xC SUB 0xB2 0xC3 0xDA DELEGATECALL SELFBALANCE 0xD0 DUP12 0xE9 0x26 REVERT PUSH26 0x9D0044A76171486C64736F6C6343000811003300000000000000 ","sourceMap":"502:14555:25:-:0;;;;;;;1332:4:6;1324:13;;6007::5;502:14555:25;;;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;502:14555:25;;;;;;;;1324:13:6;502:14555:25;;;;;;;;;;;;;;;;6074:139:5;502:14555:25;;;;;;6007:13:5;502:14555:25;6174:28:5;502:14555:25;;;;;;6174:28:5;6074:139;;;502:14555:25;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7755,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":9077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":9097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_TokenInfo_fromMemory":{"entryPoint":9166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":7966,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":9557,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":7938,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":9396,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":9045,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8666,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":7904,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_25773":{"entryPoint":7777,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25789":{"entryPoint":7827,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25793":{"entryPoint":7856,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_34816":{"entryPoint":7876,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateReputationMultiplier":{"entryPoint":9409,"id":6193,"parameterSlots":1,"returnSlots":1},"fun_calculateReputationTier":{"entryPoint":9479,"id":6233,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":7988,"id":68,"parameterSlots":0,"returnSlots":0},"fun_isPredictionModule":{"entryPoint":9581,"id":6348,"parameterSlots":1,"returnSlots":1},"fun_setImplementation":{"entryPoint":8343,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":8076,"id":125,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":8487,"id":2277,"parameterSlots":4,"returnSlots":1},"increment_uint256":{"entryPoint":8873,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":9688,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0b23":{"entryPoint":8969,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1b26":{"entryPoint":8910,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_36e1":{"entryPoint":8149,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":8246,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9e0c":{"entryPoint":8797,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":8701,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":5187},{"length":32,"start":6013},{"length":32,"start":6887}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816302bc7f4a14611e2657508063106bdcf514611de657806310d4f37414611d8e57806316d54f0914611d655780632c27750a14611cb05780633659cfe614611ac25780633d9617be14611a9d578063430cd57a14611a7f57806344cda48514611a3f578063450f144214611a215780634cba103e146119fe5780634f1ef2861461170257806351131876146115845780635245420d146114f457806352d1902d1461143057806358bd9b931461130f5780635df4d161146112f157806365af67bd146112b15780636be2cefb146112745780636fd31a411461124b578063715018a6146111ee57806375a67d5c1461107557806378bbd70114611057578063893849de14610fef5780638da5cb5b14610fc6578063960e6f8814610fa85780639754cfd114610f555780639f68871d14610f325780639f7c468814610bff578063a6b63eb814610a3a578063ab3dcd6a14610a11578063ab76c9ed146109e8578063adcbcde51461048c578063b107e88c1461044f578063c3a274c21461040f578063dc0a40bd146103a9578063e2c3538c14610369578063e6f9558314610346578063f2fde38b146102b5578063f92eadf6146102975763fe0438b2146101e457600080fd5b3461029457602036600319011261029457610160906001600160a01b03906040908261020e611e4b565b16815260ca6020522080549160018201541690600281015460038201546004830154600584015460068501549160078601549360088701549560ff600a60098a015499015416986040519a8b5260208b015260408a01526060890152608088015260a087015260c086015260e08501526101008401526101208301521515610140820152f35b80fd5b5034610294578060031936011261029457602060d454604051908152f35b5034610294576020366003190112610294576102cf611e4b565b6102d7611f34565b6001600160a01b038116156102f2576102ef90611f8c565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461029457602036600319011261029457610360611f34565b60043560d45580f35b503461029457602036600319011261029457610383611e4b565b61038b611f34565b60018060a01b03166001600160601b0360a01b60d054161760d05580f35b50346102945760203660031901126102945760a0906040906001600160a01b036103d1611e4b565b16815260cb60205220805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b503461029457602036600319011261029457610429611e4b565b610431611f34565b60018060a01b03166001600160601b0360a01b60ce54161760ce5580f35b5034610294576020366003190112610294576020906005906040906001600160a01b0361047a611e4b565b16815260ca8452200154604051908152f35b50346102945760e0366003190112610294576104a6611e4b565b602435604435916084359260018060a01b0360335416331480156109d4575b6104ce906122ce565b6104e26001600160a01b0383161515612309565b60018060a01b038216855260ca602052604085209260cb60205260408620948160068601556064359283600787015560a435600887015561052e60a43561052986866124b4565b6124b4565b600287015582156109cc57606481029080820460641490151715610940578261055691612355565b905b81875583156109c557606481029080820460641490151715610940578361057e91612355565b6001870181905560a435156109be5760c43580606481020460641481151715610987576105b190606460a4359102612355565b905b600288019482865589938a9561099b575b50610954575b5060a4356108fb575b5080156108f3576105e391612355565b6003850190808255600a6105fd60048701928084556124c1565b956005810196875561060f8454612507565b600489015542600982015501805460ff1916600117905560cd5487906001600160a01b03168061081d575b5060d0546001600160a01b0316806106eb575b50505493546040805186815260208101969096528501527fad4434fdebadb9d3b07e14eaea89a4f564780aca2d11dbf1d7fcd70d921a5d64936080939291906001600160a01b038416907f518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac24490606090a260018654960154915490549160405196875260208701526040860152606085015260018060a01b031692a280f35b60405163248bb6cd60e21b81526001600160a01b0387166004820152908290829060249082905afa8291816107f9575b501561064d5760408101516001600160a01b031690811515806107e3575b806107d5575b61074a575b5061064d565b6060015187546001600160a01b039091169190823b156107d15760405163f6322a5f60e01b81526001600160a01b0392909216600483015260248201529082908290604490829084905af180156107c6576107a6575b80610744565b6107b4909594939295611eb0565b6107c25790919286386107a0565b8680fd5b6040513d84823e3d90fd5b8380fd5b50610100810151151561073f565b5060608101516001600160a01b03161515610739565b6108169192503d8085833e61080e8183611ee0565b8101906123ce565b903861071b565b60405163656d0c3960e01b81526001600160a01b0387166004820152602081602481855afa9081156108e85783916108ae575b508061085d575b5061063a565b8754823b156107d15760448492836040519586948593630675f76360e01b8552600485015260248401525af180156107c65761089a575b80610857565b6108a390611eb0565b6107c2578638610894565b9250506020823d6020116108e0575b816108ca60209383611ee0565b810103126108db5788915138610850565b600080fd5b3d91506108bd565b6040513d85823e3d90fd5b5050846105e3565b90918160021b9180830460041490151715610940579061091a916124b4565b906004810180911161092c57386105d3565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b9091928160011b91808304600214901517156109875790610974916124b4565b91600281018091116109405790386105ca565b634e487b7160e01b89526011600452602489fd5b8092955060039194500290808204600314901517156109875792600392386105c4565b87906105b3565b508661057e565b508690610558565b506104ce6109e13361256d565b90506104c5565b503461029457806003193601126102945760cf546040516001600160a01b039091168152602090f35b503461029457806003193601126102945760d0546040516001600160a01b039091168152602090f35b50346102945760a036600319011261029457610a54611e4b565b6001600160a01b039060243582811691908290036108db576044358381168091036108db5784549260ff8460081c161593848095610bf2575b8015610bdb575b15610b7f5760ff198116600117875584610b6e575b50610ac360ff875460081c16610abe816121fd565b6121fd565b610acc33611f8c565b855494610ade60ff8760081c166121fd565b6001600160601b0360a01b93168360cd54161760cd558260ce54161760ce558160cf54161760cf558060d0541660d05560d1541660d15560643560d35560843560d455600560d55561138860d65560c860d755610b39575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117865538610aa9565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610a945750600160ff821614610a94565b50600160ff821610610a8d565b503461029457604036600319011261029457610c19611e4b565b602435908115158203610eb85760d1546001600160a01b03918291821633148015610f25575b610c48906122ce565b1691610c55831515612309565b82845260ca602052604084209060068201610c7081546122a9565b90556002820190610c8182546122a9565b809255610f10575b6003820154606481029080820460641490151715610efc578591610cac91612355565b92610cbd60048401948086556124c1565b600a600585019482865542600982015501600160ff198254161790558160cd54169081610e21575b50508060d0541680610d34575b5050915490546040805183815260208101939093528201527f518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac2449150606090a280f35b90826024926040519384809263248bb6cd60e21b82528a60048301525afa839281610e05575b5015610cf257806040830151169182151580610df6575b80610de8575b610d82575b50610cf2565b6060015116908354823b156107d15760405163f6322a5f60e01b81526001600160a01b0392909216600483015260248201529082908290604490829084905af180156107c657610dd4575b8080610d7c565b610ddd90611eb0565b6107d1578338610dcd565b506101008101511515610d77565b50816060820151161515610d71565b610e1a9193503d8086833e61080e8183611ee0565b9138610d5a565b60405163656d0c3960e01b815260048101889052602081602481865afa908115610ef1578591610ebc575b5080610e59575b50610ce5565b829394923b15610eb857604490836040519586948593630675f76360e01b8552600485015260248401525af18015610ead57610e9a575b9081808793610e53565b610ea690959195611eb0565b9338610e90565b6040513d88823e3d90fd5b8280fd5b90506020813d8211610ee9575b81610ed660209383611ee0565b81010312610ee5575138610e4c565b8480fd5b3d9150610ec9565b6040513d87823e3d90fd5b634e487b7160e01b86526011600452602486fd5b60038201610f1e81546122a9565b9055610c89565b5060335482163314610c3f565b503461029457602036600319011261029457610f4c611f34565b60043560d35580f35b503461029457610f6436611f1e565b90610f6d611f34565b80151580610f9c575b610f7f906125d8565b610f8a82151561225d565b825260cc602052600160408320015580f35b5060d254811115610f76565b5034610294578060031936011261029457602060d554604051908152f35b50346102945780600319360112610294576033546040516001600160a01b039091168152602090f35b50346102945760203660031901126102945760043561100c611f34565b8015158061104b575b61101e906125d8565b815260cc60205260408120805460ff60a01b19811660a091821c60ff161590911b60ff60a01b1617905580f35b5060d254811115611015565b5034610294578060031936011261029457602060d254604051908152f35b503461029457602036600319011261029457604061016091611095611e4b565b8161014084516110a481611e93565b82815282602082015282868201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152015260018060a01b0316815260ca602052206101406040516110ff81611e93565b60ff600a84549485845260018060a01b036001820154166020850152600281015460408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501526008810154610100850152600981015461012085015201541615158282015260405192835260018060a01b03602082015116602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015160e084015261010081015161010084015261012081015161012084015201511515610140820152f35b5034610294578060031936011261029457611207611f34565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461029457806003193601126102945760cd546040516001600160a01b039091168152602090f35b5034610294576020366003190112610294576020906004906040906001600160a01b0361129f611e4b565b16815260cb8452200154604051908152f35b5034610294576020366003190112610294576112cb611e4b565b6112d3611f34565b60018060a01b03166001600160601b0360a01b60cf54161760cf5580f35b5034610294578060031936011261029457602060d754604051908152f35b50346102945761131e36611f1e565b90611327611f34565b818111156113eb576064821061139a5761271081116113495760d65560d75580f35b60405162461bcd60e51b8152602060048201526024808201527f4d6178206d756c7469706c696572206d757374206265206174206d6f737420316044820152630605c60f60e31b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f4d696e206d756c7469706c696572206d757374206265206174206c65617374206044820152630605c62f60e31b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4d6178206d7573742062652067726561746572207468616e206d696e000000006044820152606490fd5b50346102945780600319360112610294577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036114895760206040516000805160206126198339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b503461029457602080600319360112611580576004359161152d61151784612555565b936115256040519586611ee0565b808552612555565b8383019190601f190136833760405193838594850191818652518092526040850193925b82811061156057505050500390f35b83516001600160a01b031685528695509381019392810192600101611551565b5080fd5b50346102945760403660031901126102945761159e611e4b565b6024356115a9611f34565b6001600160a01b039180831680156116bd576115c683151561225d565b6115d160d2546122a9565b938460d255604051916080830183811067ffffffffffffffff8211176116a9576020977faf31016049a06640f36fa55e20d2a8c9809bbdadf9fd3327a7763e5aa652346e959388979593600293604052845261167c8a8501600181526040860192888452604060608801954287528c815260cc8f52209651166001600160601b0360a01b875416178655511515859081549060ff60a01b90151560a01b169060ff60a01b1916179055565b51600184015551910155604080516001600160a01b039290921682526020820192909252a2604051908152f35b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e7472616374206164647265737300000000000000006044820152606490fd5b50604036600319011261029457611717611e4b565b6024359067ffffffffffffffff8211610eb85736602383011215610eb857816004013561174381611f02565b6117506040519182611ee0565b81815284602094858301933660248284010111610eb8578060248893018637830101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906117ab30831415611fd5565b6117c8600080516020612619833981519152928284541614612036565b6117d0611f34565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561180857505050506102ef9150612097565b8492939416906040516352d1902d60e01b81528681600481865afa8891816119cb575b5061188c5760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b95939495036119745761189e82612097565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a28483511580159061196c575b6118db575b505050505080f35b8061195895604051956118ed87611ec4565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15611963573d61193c81611f02565b9061194a6040519283611ee0565b81528681943d92013e612127565b5038808080846118d3565b60609250612127565b5060016118ce565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d83116119f7575b6119e38183611ee0565b810103126119f35751903861182b565b8880fd5b503d6119d9565b503461029457602036600319011261029457611a18611f34565b60043560d55580f35b5034610294578060031936011261029457602060d354604051908152f35b503461029457602036600319011261029457611a59611e4b565b611a61611f34565b60018060a01b03166001600160601b0360a01b60cd54161760cd5580f35b5034610294578060031936011261029457602060d654604051908152f35b5034610294578060031936011261029457604060d65460d75482519182526020820152f35b50346102945760208060031936011261158057611add611e4b565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116611b1430821415611fd5565b611b31600080516020612619833981519152918383541614612036565b611b39611f34565b604051908482019282841067ffffffffffffffff851117611c9c578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014611b9557505050506102ef9150612097565b8492939416906040516352d1902d60e01b81528681600481865afa889181611c6d575b50611c195760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959394950361197457611c2b82612097565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a284835115801590611c66576118db57505050505080f35b50806118ce565b9091508781813d8311611c95575b611c858183611ee0565b810103126119f357519038611bb8565b503d611c7b565b634e487b7160e01b87526041600452602487fd5b503461029457602036600319011261029457604060a091611ccf611e4b565b8160808451611cdd81611e61565b82815282602082015282868201528260608201520152600180851b0316815260cb60205220604051611d0e81611e61565b81549182825260018101546020830190815260028201549060408401918252608060046003850154946060870195865201549401938452604051948552516020850152516040840152516060830152516080820152f35b503461029457806003193601126102945760ce546040516001600160a01b039091168152602090f35b5034610294576020366003190112610294576040608091600435815260cc60205220805490600260018201549101549060ff6040519360018060a01b038116855260a01c161515602084015260408301526060820152f35b503461029457602036600319011261029457611e00611e4b565b611e08611f34565b60018060a01b03166001600160601b0360a01b60d154161760d15580f35b90503461158057816003193601126115805760d1546001600160a01b03168152602090f35b600435906001600160a01b03821682036108db57565b60a0810190811067ffffffffffffffff821117611e7d57604052565b634e487b7160e01b600052604160045260246000fd5b610160810190811067ffffffffffffffff821117611e7d57604052565b67ffffffffffffffff8111611e7d57604052565b6060810190811067ffffffffffffffff821117611e7d57604052565b90601f8019910116810190811067ffffffffffffffff821117611e7d57604052565b67ffffffffffffffff8111611e7d57601f01601f191660200190565b60409060031901126108db576004359060243590565b6033546001600160a01b03163303611f4857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611fdc57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561203d57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156120cc5760008051602061261983398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015612189575081511561213b575090565b3b156121445790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561219c5750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526121cc81518092816024860152602086860191016121da565b601f01601f19168101030190fd5b60005b8381106121ed5750506000910152565b81810151838201526020016121dd565b1561220457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561226457565b60405162461bcd60e51b815260206004820152601d60248201527f576569676874206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60001981146122b85760010190565b634e487b7160e01b600052601160045260246000fd5b156122d557565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b1561231057565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420617374726f6c6f67657220616464726573730000000000006044820152606490fd5b811561235f570490565b634e487b7160e01b600052601260045260246000fd5b51906001600160a01b03821682036108db57565b81601f820112156108db57805161239f81611f02565b926123ad6040519485611ee0565b818452602082840101116108db576123cb91602080850191016121da565b90565b6020818303126108db57805167ffffffffffffffff918282116108db5701906101409283838203126108db5760405193840184811083821117611e7d576040528251845261241e60208401612375565b602085015261242f60408401612375565b604085015261244060608401612375565b606085015260808301518281116108db578161245d918501612389565b608085015260a08301519182116108db57612479918301612389565b60a083015260c081015160c083015260e081015160e0830152610100808201519081151582036108db57830152610120809101519082015290565b919082018092116122b857565b60648110156125005780156124f95760d65460d754908181039081116122b857808302928304036122b85760646123cb9204906124b4565b5060d75490565b5060d65490565b605f81101561254f57605a81101561254957605581101561254357605081101561253d57604b111561253857600090565b600190565b50600290565b50600390565b50600490565b50600590565b67ffffffffffffffff8111611e7d5760051b60200190565b6001809160d254925b838111156125875750505050600090565b600081815260cc6020526040808220546001600160a01b0385811691161491826125c7575b50506125c0576125bb906122a9565b612576565b5050905090565b60ff9250205460a01c1638806125ac565b156125df57565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5bd91d5b19481251607a1b6044820152606490fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122043bed1963b0c510484afd30c03b2c3daf447d08be926fd799d0044a76171486c64736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2BC7F4A EQ PUSH2 0x1E26 JUMPI POP DUP1 PUSH4 0x106BDCF5 EQ PUSH2 0x1DE6 JUMPI DUP1 PUSH4 0x10D4F374 EQ PUSH2 0x1D8E JUMPI DUP1 PUSH4 0x16D54F09 EQ PUSH2 0x1D65 JUMPI DUP1 PUSH4 0x2C27750A EQ PUSH2 0x1CB0 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1AC2 JUMPI DUP1 PUSH4 0x3D9617BE EQ PUSH2 0x1A9D JUMPI DUP1 PUSH4 0x430CD57A EQ PUSH2 0x1A7F JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x1A3F JUMPI DUP1 PUSH4 0x450F1442 EQ PUSH2 0x1A21 JUMPI DUP1 PUSH4 0x4CBA103E EQ PUSH2 0x19FE JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1702 JUMPI DUP1 PUSH4 0x51131876 EQ PUSH2 0x1584 JUMPI DUP1 PUSH4 0x5245420D EQ PUSH2 0x14F4 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1430 JUMPI DUP1 PUSH4 0x58BD9B93 EQ PUSH2 0x130F JUMPI DUP1 PUSH4 0x5DF4D161 EQ PUSH2 0x12F1 JUMPI DUP1 PUSH4 0x65AF67BD EQ PUSH2 0x12B1 JUMPI DUP1 PUSH4 0x6BE2CEFB EQ PUSH2 0x1274 JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x124B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11EE JUMPI DUP1 PUSH4 0x75A67D5C EQ PUSH2 0x1075 JUMPI DUP1 PUSH4 0x78BBD701 EQ PUSH2 0x1057 JUMPI DUP1 PUSH4 0x893849DE EQ PUSH2 0xFEF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFC6 JUMPI DUP1 PUSH4 0x960E6F88 EQ PUSH2 0xFA8 JUMPI DUP1 PUSH4 0x9754CFD1 EQ PUSH2 0xF55 JUMPI DUP1 PUSH4 0x9F68871D EQ PUSH2 0xF32 JUMPI DUP1 PUSH4 0x9F7C4688 EQ PUSH2 0xBFF JUMPI DUP1 PUSH4 0xA6B63EB8 EQ PUSH2 0xA3A JUMPI DUP1 PUSH4 0xAB3DCD6A EQ PUSH2 0xA11 JUMPI DUP1 PUSH4 0xAB76C9ED EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0xADCBCDE5 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xB107E88C EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xC3A274C2 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xDC0A40BD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xE2C3538C EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xE6F95583 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF92EADF6 EQ PUSH2 0x297 JUMPI PUSH4 0xFE0438B2 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x160 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP3 PUSH2 0x20E PUSH2 0x1E4B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP2 PUSH1 0x7 DUP7 ADD SLOAD SWAP4 PUSH1 0x8 DUP8 ADD SLOAD SWAP6 PUSH1 0xFF PUSH1 0xA PUSH1 0x9 DUP11 ADD SLOAD SWAP10 ADD SLOAD AND SWAP9 PUSH1 0x40 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x2CF PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2EF SWAP1 PUSH2 0x1F8C JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x360 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD4 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x383 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0xA0 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3D1 PUSH2 0x1E4B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x429 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x431 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x47A PUSH2 0x1E4B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x4A6 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x9D4 JUMPI JUMPDEST PUSH2 0x4CE SWAP1 PUSH2 0x22CE JUMP JUMPDEST PUSH2 0x4E2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x2309 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND DUP6 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP3 PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP5 DUP2 PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x64 CALLDATALOAD SWAP3 DUP4 PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 DUP8 ADD SSTORE PUSH2 0x52E PUSH1 0xA4 CALLDATALOAD PUSH2 0x529 DUP7 DUP7 PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE DUP3 ISZERO PUSH2 0x9CC JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x940 JUMPI DUP3 PUSH2 0x556 SWAP2 PUSH2 0x2355 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 DUP8 SSTORE DUP4 ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x940 JUMPI DUP4 PUSH2 0x57E SWAP2 PUSH2 0x2355 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD DUP2 SWAP1 SSTORE PUSH1 0xA4 CALLDATALOAD ISZERO PUSH2 0x9BE JUMPI PUSH1 0xC4 CALLDATALOAD DUP1 PUSH1 0x64 DUP2 MUL DIV PUSH1 0x64 EQ DUP2 ISZERO OR ISZERO PUSH2 0x987 JUMPI PUSH2 0x5B1 SWAP1 PUSH1 0x64 PUSH1 0xA4 CALLDATALOAD SWAP2 MUL PUSH2 0x2355 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x2 DUP9 ADD SWAP5 DUP3 DUP7 SSTORE DUP10 SWAP4 DUP11 SWAP6 PUSH2 0x99B JUMPI JUMPDEST POP PUSH2 0x954 JUMPI JUMPDEST POP PUSH1 0xA4 CALLDATALOAD PUSH2 0x8FB JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x5E3 SWAP2 PUSH2 0x2355 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SWAP1 DUP1 DUP3 SSTORE PUSH1 0xA PUSH2 0x5FD PUSH1 0x4 DUP8 ADD SWAP3 DUP1 DUP5 SSTORE PUSH2 0x24C1 JUMP JUMPDEST SWAP6 PUSH1 0x5 DUP2 ADD SWAP7 DUP8 SSTORE PUSH2 0x60F DUP5 SLOAD PUSH2 0x2507 JUMP JUMPDEST PUSH1 0x4 DUP10 ADD SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x81D JUMPI JUMPDEST POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x6EB JUMPI JUMPDEST POP POP SLOAD SWAP4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP6 ADD MSTORE PUSH32 0xAD4434FDEBADB9D3B07E14EAEA89A4F564780ACA2D11DBF1D7FCD70D921A5D64 SWAP4 PUSH1 0x80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x518D384EC8D284E293CFE22999E2961FCB70FAE686352F14179033225F2AC244 SWAP1 PUSH1 0x60 SWAP1 LOG2 PUSH1 0x1 DUP7 SLOAD SWAP7 ADD SLOAD SWAP2 SLOAD SWAP1 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP3 SWAP2 DUP2 PUSH2 0x7F9 JUMPI JUMPDEST POP ISZERO PUSH2 0x64D JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x7E3 JUMPI JUMPDEST DUP1 PUSH2 0x7D5 JUMPI JUMPDEST PUSH2 0x74A JUMPI JUMPDEST POP PUSH2 0x64D JUMP JUMPDEST PUSH1 0x60 ADD MLOAD DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH2 0x7A6 JUMPI JUMPDEST DUP1 PUSH2 0x744 JUMP JUMPDEST PUSH2 0x7B4 SWAP1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP6 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x7C2 JUMPI SWAP1 SWAP2 SWAP3 DUP7 CODESIZE PUSH2 0x7A0 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x73F JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x739 JUMP JUMPDEST PUSH2 0x816 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x80E DUP2 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x23CE JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8E8 JUMPI DUP4 SWAP2 PUSH2 0x8AE JUMPI JUMPDEST POP DUP1 PUSH2 0x85D JUMPI JUMPDEST POP PUSH2 0x63A JUMP JUMPDEST DUP8 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x44 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x675F763 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH2 0x89A JUMPI JUMPDEST DUP1 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x8A3 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x7C2 JUMPI DUP7 CODESIZE PUSH2 0x894 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8E0 JUMPI JUMPDEST DUP2 PUSH2 0x8CA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8DB JUMPI DUP9 SWAP2 MLOAD CODESIZE PUSH2 0x850 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP DUP5 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 SWAP2 DUP2 PUSH1 0x2 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x4 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x940 JUMPI SWAP1 PUSH2 0x91A SWAP2 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x92C JUMPI CODESIZE PUSH2 0x5D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x987 JUMPI SWAP1 PUSH2 0x974 SWAP2 PUSH2 0x24B4 JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x940 JUMPI SWAP1 CODESIZE PUSH2 0x5CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP1 SWAP3 SWAP6 POP PUSH1 0x3 SWAP2 SWAP5 POP MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x987 JUMPI SWAP3 PUSH1 0x3 SWAP3 CODESIZE PUSH2 0x5C4 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST POP DUP7 PUSH2 0x57E JUMP JUMPDEST POP DUP7 SWAP1 PUSH2 0x558 JUMP JUMPDEST POP PUSH2 0x4CE PUSH2 0x9E1 CALLER PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH2 0x4C5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xD0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xA54 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x8DB JUMPI PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x8DB JUMPI DUP5 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0xBF2 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xBDB JUMPI JUMPDEST ISZERO PUSH2 0xB7F JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP8 SSTORE DUP5 PUSH2 0xB6E JUMPI JUMPDEST POP PUSH2 0xAC3 PUSH1 0xFF DUP8 SLOAD PUSH1 0x8 SHR AND PUSH2 0xABE DUP2 PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x21FD JUMP JUMPDEST PUSH2 0xACC CALLER PUSH2 0x1F8C JUMP JUMPDEST DUP6 SLOAD SWAP5 PUSH2 0xADE PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x21FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 AND DUP4 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP3 PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP2 PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 PUSH1 0xD0 SLOAD AND PUSH1 0xD0 SSTORE PUSH1 0xD1 SLOAD AND PUSH1 0xD1 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xD3 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD4 SSTORE PUSH1 0x5 PUSH1 0xD5 SSTORE PUSH2 0x1388 PUSH1 0xD6 SSTORE PUSH1 0xC8 PUSH1 0xD7 SSTORE PUSH2 0xB39 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP7 SSTORE CODESIZE PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA94 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0xA94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0xA8D JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xC19 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0xEB8 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 SWAP2 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0xF25 JUMPI JUMPDEST PUSH2 0xC48 SWAP1 PUSH2 0x22CE JUMP JUMPDEST AND SWAP2 PUSH2 0xC55 DUP4 ISZERO ISZERO PUSH2 0x2309 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD PUSH2 0xC70 DUP2 SLOAD PUSH2 0x22A9 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xC81 DUP3 SLOAD PUSH2 0x22A9 JUMP JUMPDEST DUP1 SWAP3 SSTORE PUSH2 0xF10 JUMPI JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xEFC JUMPI DUP6 SWAP2 PUSH2 0xCAC SWAP2 PUSH2 0x2355 JUMP JUMPDEST SWAP3 PUSH2 0xCBD PUSH1 0x4 DUP5 ADD SWAP5 DUP1 DUP7 SSTORE PUSH2 0x24C1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x5 DUP6 ADD SWAP5 DUP3 DUP7 SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 PUSH1 0xCD SLOAD AND SWAP1 DUP2 PUSH2 0xE21 JUMPI JUMPDEST POP POP DUP1 PUSH1 0xD0 SLOAD AND DUP1 PUSH2 0xD34 JUMPI JUMPDEST POP POP SWAP2 SLOAD SWAP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x518D384EC8D284E293CFE22999E2961FCB70FAE686352F14179033225F2AC244 SWAP2 POP PUSH1 0x60 SWAP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 DUP3 PUSH1 0x24 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP3 MSTORE DUP11 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP4 SWAP3 DUP2 PUSH2 0xE05 JUMPI JUMPDEST POP ISZERO PUSH2 0xCF2 JUMPI DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0xDF6 JUMPI JUMPDEST DUP1 PUSH2 0xDE8 JUMPI JUMPDEST PUSH2 0xD82 JUMPI JUMPDEST POP PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x60 ADD MLOAD AND SWAP1 DUP4 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH2 0xDD4 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xDDD SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH2 0x7D1 JUMPI DUP4 CODESIZE PUSH2 0xDCD JUMP JUMPDEST POP PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0xD77 JUMP JUMPDEST POP DUP2 PUSH1 0x60 DUP3 ADD MLOAD AND ISZERO ISZERO PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xE1A SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x80E DUP2 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEF1 JUMPI DUP6 SWAP2 PUSH2 0xEBC JUMPI JUMPDEST POP DUP1 PUSH2 0xE59 JUMPI JUMPDEST POP PUSH2 0xCE5 JUMP JUMPDEST DUP3 SWAP4 SWAP5 SWAP3 EXTCODESIZE ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x675F763 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xEAD JUMPI PUSH2 0xE9A JUMPI JUMPDEST SWAP1 DUP2 DUP1 DUP8 SWAP4 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xEA6 SWAP1 SWAP6 SWAP2 SWAP6 PUSH2 0x1EB0 JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0xE90 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xEE9 JUMPI JUMPDEST DUP2 PUSH2 0xED6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEE5 JUMPI MLOAD CODESIZE PUSH2 0xE4C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD PUSH2 0xF1E DUP2 SLOAD PUSH2 0x22A9 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x33 SLOAD DUP3 AND CALLER EQ PUSH2 0xC3F JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xF4C PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH2 0xF64 CALLDATASIZE PUSH2 0x1F1E JUMP JUMPDEST SWAP1 PUSH2 0xF6D PUSH2 0x1F34 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xF9C JUMPI JUMPDEST PUSH2 0xF7F SWAP1 PUSH2 0x25D8 JUMP JUMPDEST PUSH2 0xF8A DUP3 ISZERO ISZERO PUSH2 0x225D JUMP JUMPDEST DUP3 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0xF76 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x100C PUSH2 0x1F34 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x104B JUMPI JUMPDEST PUSH2 0x101E SWAP1 PUSH2 0x25D8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0xA0 SWAP2 DUP3 SHR PUSH1 0xFF AND ISZERO SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0x1015 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH2 0x160 SWAP2 PUSH2 0x1095 PUSH2 0x1E4B JUMP JUMPDEST DUP2 PUSH2 0x140 DUP5 MLOAD PUSH2 0x10A4 DUP2 PUSH2 0x1E93 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x10FF DUP2 PUSH2 0x1E93 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA DUP5 SLOAD SWAP5 DUP6 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO DUP3 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1207 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x129F PUSH2 0x1E4B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x12CB PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x12D3 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH2 0x131E CALLDATASIZE PUSH2 0x1F1E JUMP JUMPDEST SWAP1 PUSH2 0x1327 PUSH2 0x1F34 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x13EB JUMPI PUSH1 0x64 DUP3 LT PUSH2 0x139A JUMPI PUSH2 0x2710 DUP2 GT PUSH2 0x1349 JUMPI PUSH1 0xD6 SSTORE PUSH1 0xD7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D6178206D756C7469706C696572206D757374206265206174206D6F73742031 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x605C60F PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D696E206D756C7469706C696572206D757374206265206174206C6561737420 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x605C62F PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178206D7573742062652067726561746572207468616E206D696E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1489 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2619 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1580 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH2 0x152D PUSH2 0x1517 DUP5 PUSH2 0x2555 JUMP JUMPDEST SWAP4 PUSH2 0x1525 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1EE0 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x2555 JUMP JUMPDEST DUP4 DUP4 ADD SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x1560 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1551 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x159E PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x15A9 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND DUP1 ISZERO PUSH2 0x16BD JUMPI PUSH2 0x15C6 DUP4 ISZERO ISZERO PUSH2 0x225D JUMP JUMPDEST PUSH2 0x15D1 PUSH1 0xD2 SLOAD PUSH2 0x22A9 JUMP JUMPDEST SWAP4 DUP5 PUSH1 0xD2 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x80 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A9 JUMPI PUSH1 0x20 SWAP8 PUSH32 0xAF31016049A06640F36FA55E20D2A8C9809BBDADF9FD3327A7763E5AA652346E SWAP6 SWAP4 DUP9 SWAP8 SWAP6 SWAP4 PUSH1 0x2 SWAP4 PUSH1 0x40 MSTORE DUP5 MSTORE PUSH2 0x167C DUP11 DUP6 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD SWAP3 DUP9 DUP5 MSTORE PUSH1 0x40 PUSH1 0x60 DUP9 ADD SWAP6 TIMESTAMP DUP8 MSTORE DUP13 DUP2 MSTORE PUSH1 0xCC DUP16 MSTORE KECCAK256 SWAP7 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE MLOAD ISZERO ISZERO DUP6 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1717 PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEB8 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xEB8 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1743 DUP2 PUSH2 0x1F02 JUMP JUMPDEST PUSH2 0x1750 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 SWAP5 DUP6 DUP4 ADD SWAP4 CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0xEB8 JUMPI DUP1 PUSH1 0x24 DUP9 SWAP4 ADD DUP7 CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP1 PUSH2 0x17AB ADDRESS DUP4 EQ ISZERO PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x17C8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2619 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 DUP5 SLOAD AND EQ PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x17D0 PUSH2 0x1F34 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1808 JUMPI POP POP POP POP PUSH2 0x2EF SWAP2 POP PUSH2 0x2097 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x19CB JUMPI JUMPDEST POP PUSH2 0x188C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1974 JUMPI PUSH2 0x189E DUP3 PUSH2 0x2097 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x196C JUMPI JUMPDEST PUSH2 0x18DB JUMPI JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x1958 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x18ED DUP8 PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1963 JUMPI RETURNDATASIZE PUSH2 0x193C DUP2 PUSH2 0x1F02 JUMP JUMPDEST SWAP1 PUSH2 0x194A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2127 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP5 PUSH2 0x18D3 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2127 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x19F7 JUMPI JUMPDEST PUSH2 0x19E3 DUP2 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19F3 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x182B JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x19D9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1A18 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD5 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1A59 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x1A61 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0xD6 SLOAD PUSH1 0xD7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1580 JUMPI PUSH2 0x1ADD PUSH2 0x1E4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x1B14 ADDRESS DUP3 EQ ISZERO PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x1B31 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2619 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x2036 JUMP JUMPDEST PUSH2 0x1B39 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x1C9C JUMPI DUP4 PUSH1 0x40 MSTORE DUP7 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1B95 JUMPI POP POP POP POP PUSH2 0x2EF SWAP2 POP PUSH2 0x2097 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x1C6D JUMPI JUMPDEST POP PUSH2 0x1C19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1974 JUMPI PUSH2 0x1C2B DUP3 PUSH2 0x2097 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C66 JUMPI PUSH2 0x18DB JUMPI POP POP POP POP POP DUP1 RETURN JUMPDEST POP DUP1 PUSH2 0x18CE JUMP JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C95 JUMPI JUMPDEST PUSH2 0x1C85 DUP2 DUP4 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19F3 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1BB8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C7B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0xA0 SWAP2 PUSH2 0x1CCF PUSH2 0x1E4B JUMP JUMPDEST DUP2 PUSH1 0x80 DUP5 MLOAD PUSH2 0x1CDD DUP2 PUSH2 0x1E61 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 DUP6 SHL SUB AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1D0E DUP2 PUSH2 0x1E61 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP6 MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1E00 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x1E08 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD1 SLOAD AND OR PUSH1 0xD1 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1580 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1580 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8DB JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x8DB JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F48 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x1FDC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x203D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x20CC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2619 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2189 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x213B JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2144 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x219C JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x21CC DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21ED JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21DD JUMP JUMPDEST ISZERO PUSH2 0x2204 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2264 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576569676874206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x22B8 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x22D5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2310 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617374726F6C6F6765722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x235F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8DB JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x8DB JUMPI DUP1 MLOAD PUSH2 0x239F DUP2 PUSH2 0x1F02 JUMP JUMPDEST SWAP3 PUSH2 0x23AD PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1EE0 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x8DB JUMPI PUSH2 0x23CB SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x21DA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x8DB JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x8DB JUMPI ADD SWAP1 PUSH2 0x140 SWAP3 DUP4 DUP4 DUP3 SUB SLT PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD SWAP4 DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x1E7D JUMPI PUSH1 0x40 MSTORE DUP3 MLOAD DUP5 MSTORE PUSH2 0x241E PUSH1 0x20 DUP5 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x242F PUSH1 0x40 DUP5 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2440 PUSH1 0x60 DUP5 ADD PUSH2 0x2375 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP3 DUP2 GT PUSH2 0x8DB JUMPI DUP2 PUSH2 0x245D SWAP2 DUP6 ADD PUSH2 0x2389 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x8DB JUMPI PUSH2 0x2479 SWAP2 DUP4 ADD PUSH2 0x2389 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x8DB JUMPI DUP4 ADD MSTORE PUSH2 0x120 DUP1 SWAP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x22B8 JUMPI JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x2500 JUMPI DUP1 ISZERO PUSH2 0x24F9 JUMPI PUSH1 0xD6 SLOAD PUSH1 0xD7 SLOAD SWAP1 DUP2 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x22B8 JUMPI DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x22B8 JUMPI PUSH1 0x64 PUSH2 0x23CB SWAP3 DIV SWAP1 PUSH2 0x24B4 JUMP JUMPDEST POP PUSH1 0xD7 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0xD6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5F DUP2 LT ISZERO PUSH2 0x254F JUMPI PUSH1 0x5A DUP2 LT ISZERO PUSH2 0x2549 JUMPI PUSH1 0x55 DUP2 LT ISZERO PUSH2 0x2543 JUMPI PUSH1 0x50 DUP2 LT ISZERO PUSH2 0x253D JUMPI PUSH1 0x4B GT ISZERO PUSH2 0x2538 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SWAP2 PUSH1 0xD2 SLOAD SWAP3 JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2587 JUMPI POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ SWAP2 DUP3 PUSH2 0x25C7 JUMPI JUMPDEST POP POP PUSH2 0x25C0 JUMPI PUSH2 0x25BB SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x2576 JUMP JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 POP KECCAK256 SLOAD PUSH1 0xA0 SHR AND CODESIZE DUP1 PUSH2 0x25AC JUMP JUMPDEST ISZERO PUSH2 0x25DF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081B5BD91D5B19481251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122043 0xBE 0xD1 SWAP7 EXTCODESIZE 0xC MLOAD DIV DUP5 0xAF 0xD3 0xC SUB 0xB2 0xC3 0xDA DELEGATECALL SELFBALANCE 0xD0 DUP12 0xE9 0x26 REVERT PUSH26 0x9D0044A76171486C64736F6C6343000811003300000000000000 ","sourceMap":"502:14555:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;-1:-1:-1;;;;;502:14555:25;;;;;;:::i;:::-;;;;1451:59;502:14555;;;;;1451:59;502:14555;1451:59;;502:14555;;1451:59;;;;502:14555;;1451:59;;502:14555;;1451:59;;502:14555;1451:59;;;502:14555;1451:59;;;502:14555;1451:59;;;;502:14555;1451:59;;;;502:14555;1451:59;502:14555;1451:59;;;;502:14555;1451:59;;502:14555;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:31;502:14555;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;502:14555:25;;2402:22:0;502:14555:25;;2496:8:0;;;:::i;:::-;502:14555:25;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;1303:62:0;;:::i;:::-;502:14555:25;;13613:25;502:14555;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14555:25;;;;;;-1:-1:-1;;;;;502:14555:25;;13084:40;502:14555;;;13084:40;502:14555;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;;;-1:-1:-1;;;;;502:14555:25;;:::i;:::-;;;;1516:57;502:14555;;;;;1516:57;502:14555;1516:57;;502:14555;1516:57;;;;502:14555;;;1516:57;;502:14555;1516:57;;502:14555;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14555:25;;;;;;-1:-1:-1;;;;;502:14555:25;;12946:36;502:14555;;;12946:36;502:14555;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;11906:50;;502:14555;;-1:-1:-1;;;;;502:14555:25;;:::i;:::-;;;;11906:16;502:14555;;;11906:50;502:14555;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;;;;;;;;;;;;;;1513:6:0;502:14555:25;;6824:10;:21;:55;;;;502:14555;6816:80;;;:::i;:::-;6906:64;-1:-1:-1;;;;;502:14555:25;;6914:25;;6906:64;:::i;:::-;502:14555;;;;;;;;;7013:16;502:14555;;;;;;7087:15;502:14555;;;;;7162:23;;;;;502:14555;;;7216:22;;;;;502:14555;;;7268:25;;;502:14555;7351:61;502:14555;;7351:38;;;;:::i;:::-;:61;:::i;:::-;7326:22;;;502:14555;7482:22;;;;502:14555;;;;;;;;;;;;;;;7507:44;;;;:::i;:::-;7482:73;;502:14555;;;7591:21;;502:14555;;;;;;;;;;;;;;;;;7615:42;;;;:::i;:::-;502:14555;7565:23;;502:14555;;;;;7700:24;502:14555;;;;;;;;;;;;;;;;;7727:48;502:14555;;;;;;7727:48;:::i;:::-;7700:79;;7326:22;7671:26;;502:14555;;;;7826:23;7859;;7482:22;7893:158;;7700:79;7591:21;8060:155;;7700:79;502:14555;;;8224:166;;7700:79;-1:-1:-1;8426:15:25;;;;8444:25;;;:::i;:::-;502:14555;8400:23;;502:14555;;;;8867:14;8634:54;502:14555;8483:24;;502:14555;;;;8634:54;:::i;:::-;8605:26;;;;502:14555;;;8763:48;502:14555;;8763:48;:::i;:::-;502:14555;8736:24;;502:14555;8842:15;8822:17;;;502:14555;8867:14;502:14555;;-1:-1:-1;;502:14555:25;;;;;8940:17;502:14555;;;-1:-1:-1;;;;;502:14555:25;;8936:315;;8426:47;-1:-1:-1;9302:18:25;502:14555;-1:-1:-1;;;;;502:14555:25;;9298:680;;8426:47;-1:-1:-1;;502:14555:25;;;;;;;;;;;;;;;;;;;10123:138;;502:14555;;;;;-1:-1:-1;;;;;502:14555:25;;;9993:115;;502:14555;;9993:115;502:14555;;;7565:23;;502:14555;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10123:138;;502:14555;;9298:680;502:14555;;-1:-1:-1;;;9354:73:25;;-1:-1:-1;;;;;502:14555:25;;;9354:73;;502:14555;;;;;;;;;;9354:73;;;;;;;9298:680;9350:618;;9298:680;9350:618;502:14555;9507:23;;502:14555;-1:-1:-1;;;;;502:14555:25;;9507:37;;;;:76;;9350:618;9507:98;;;9350:618;9503:363;;9350:618;;9298:680;;9503:363;502:14555;9754:21;502:14555;;;-1:-1:-1;;;;;502:14555:25;;;;;9736:111;;;;;502:14555;;-1:-1:-1;;;9736:111:25;;-1:-1:-1;;;;;502:14555:25;;;;;9736:111;;502:14555;;;;;;;;;;;;;;;;9736:111;;;;;;;;9503:363;;;;9736:111;;;;;;;;;:::i;:::-;502:14555;;9736:111;;;;;;;502:14555;;;;9736:111;502:14555;;971:66:3;502:14555:25;;971:66:3;;;;9736:111:25;502:14555;;;9507:98;9587:18;;;;502:14555;;;9507:98;;:76;-1:-1:-1;502:14555:25;9548:21;;502:14555;-1:-1:-1;;;;;502:14555:25;9548:35;;9507:76;;9354:73;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;8936:315;502:14555;;-1:-1:-1;;;9010:66:25;;-1:-1:-1;;;;;502:14555:25;;;9010:66;;502:14555;;;;;9010:66;;;;;;;;;;;;8936:315;9094:16;;9090:151;;8936:315;;;;9090:151;502:14555;;9130:96;;;;;502:14555;;;;;;971:66:3;;;;;;;;9130:96:25;;502:14555;9130:96;;502:14555;;;;;9130:96;;;;;;;;9090:151;;;;9130:96;;;;:::i;:::-;502:14555;;9130:96;;;;9010:66;;;;502:14555;9010:66;;502:14555;9010:66;;;;;;502:14555;9010:66;;;:::i;:::-;;;502:14555;;;;;;;9010:66;;;502:14555;;;;9010:66;;;-1:-1:-1;9010:66:25;;;502:14555;;971:66:3;502:14555:25;;971:66:3;;;;8426:47:25;;;;;;8224:166;502:14555;;;7326:22;502:14555;;;;;;;;;;;;;8268:45;;;;:::i;:::-;502:14555;;;;;;;;;8224:166;;;502:14555;-1:-1:-1;;;502:14555:25;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;8060:155;502:14555;;;;;;;;;;7326:22;502:14555;;;;;;;8101:42;;;;:::i;:::-;502:14555;7326:22;502:14555;;;;;;;8060:155;;;;502:14555;-1:-1:-1;;;502:14555:25;;;;;;;;7893:158;502:14555;;;;;;;;;;;;;;;;;;;;;8024:16;502:14555;7893:158;;;;7700:79;;;;;7591:70;;;;;7482:73;;;;;;6824:55;:10;6816:80;6849:30;6824:10;6849:30;:::i;:::-;6824:55;;;;502:14555;;;;;;;;;;;;;1726:24;502:14555;;;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;;;;;;;;;;;;1756:33;502:14555;;;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:14:5;3347:34;;;;;;502:14555:25;3346:108:5;;;;502:14555:25;;;;-1:-1:-1;;502:14555:25;;;;;;;3562:65:5;;502:14555:25;;5366:69:5;502:14555:25;;;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;1195:12:0;929:10:14;1195:12:0;:::i;:::-;502:14555:25;;;5366:69:5;502:14555:25;;;;;5366:69:5;:::i;:::-;-1:-1:-1;;;;;502:14555:25;;;;;3105:38;502:14555;;;3105:38;502:14555;;3153:36;502:14555;;;3153:36;502:14555;;3199:22;502:14555;;;3199:22;502:14555;;3231:31;502:14555;;3231:31;502:14555;3298:34;502:14555;;3298:34;502:14555;;;3368:48;502:14555;;;3426:36;502:14555;3494:1;3472:23;502:14555;3553:4;3527:30;502:14555;3620:3;3594:29;502:14555;3647:99:5;;502:14555:25;;;3647:99:5;502:14555:25;;;;;3721:14:5;502:14555:25;;;;;;3721:14:5;502:14555:25;;3562:65:5;-1:-1:-1;;502:14555:25;;;;;3562:65:5;;;502:14555:25;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;3346:108:5;3426:4;;1713:19:13;:23;3387:66:5;;3346:108;3387:66;502:14555:25;;;;;3436:17:5;3346:108;;3347:34;502:14555:25;;;;;3365:16:5;3347:34;;502:14555:25;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;;;;;;;;;;;4473:21;502:14555;-1:-1:-1;;;;;502:14555:25;;;;;4459:10;:35;:60;;;;502:14555;4451:85;;;:::i;:::-;502:14555;4554:25;4546:64;4554:25;;;4546:64;:::i;:::-;502:14555;;;4653:16;502:14555;;;;;4743:23;;;;:25;502:14555;;4743:25;:::i;:::-;502:14555;;4827:22;;;502:14555;4827:24;502:14555;;4827:24;:::i;:::-;502:14555;;;4870:69;;502:14555;;5028:25;;502:14555;5056:3;502:14555;;;;;;5056:3;502:14555;;;;;;;5027:58;;;;;:::i;:::-;5000:24;5173:55;502:14555;5000:24;;502:14555;;;;5173:55;:::i;:::-;5283:14;5144:26;;;502:14555;;;;5258:15;5238:17;;;502:14555;5283:14;502:14555;;;;;;;;;;5356:17;502:14555;;5356:31;;5352:315;;502:14555;;;;5718:18;502:14555;;5718:32;5714:665;;502:14555;-1:-1:-1;;502:14555:25;;;;;;;;;;;;;;;;;;;;6394:115;;-1:-1:-1;502:14555:25;;6394:115;502:14555;;5714:665;502:14555;;;;;;971:66:3;;;;;;;5770:73:25;;;502:14555;5770:73;;502:14555;5770:73;;;;;;;5714:665;5766:603;;5714:665;5766:603;5923:23;502:14555;5923:23;;502:14555;;5923:37;;;;:76;;;5766:603;5923:98;;;5766:603;5919:348;;5766:603;;5714:665;;5919:348;6155:21;;502:14555;;;;;6137:111;;;;;502:14555;;-1:-1:-1;;;6137:111:25;;-1:-1:-1;;;;;502:14555:25;;;;;6137:111;;502:14555;;;;;;;;;;;;;;;;6137:111;;;;;;;;5919:348;;;;;6137:111;;;;:::i;:::-;502:14555;;6137:111;;;;5923:98;6003:18;;;;502:14555;;;5923:98;;:76;5964:21;;;;;502:14555;;5964:35;;5923:76;;5770:73;;;;;;;;;;;;;;:::i;:::-;;;;;5352:315;502:14555;;-1:-1:-1;;;5426:66:25;;502:14555;5426:66;;502:14555;;;;;;;5426:66;;;;;;;;;;;;5352:315;5510:16;;5506:151;;5352:315;;;;5506:151;5546:96;;;;;;;;502:14555;;;;;971:66:3;;;;;;;;5546:96:25;;502:14555;5546:96;;502:14555;;;;;5546:96;;;;;;;;5506:151;;;;;;;;5546:96;;;;;;;:::i;:::-;;;;;;502:14555;;971:66:3;502:14555:25;;971:66:3;;;;5546:96:25;502:14555;;;5426:66;;;502:14555;5426:66;;;;;;;;;502:14555;5426:66;;;:::i;:::-;;;502:14555;;;;;5426:66;;;502:14555;;;;5426:66;;;-1:-1:-1;5426:66:25;;;502:14555;;971:66:3;502:14555:25;;971:66:3;;;;502:14555:25;-1:-1:-1;;;502:14555:25;;;;;;;;4870:69;502:14555;4901:25;;:27;502:14555;;4901:27;:::i;:::-;502:14555;;4870:69;;4459:60;-1:-1:-1;1513:6:0;502:14555:25;;;4459:10;4498:21;4459:60;;502:14555;;;;;;;-1:-1:-1;;502:14555:25;;;;1303:62:0;;:::i;:::-;502:14555:25;;13486:40;502:14555;;;;;;;;;;;:::i;:::-;1303:62:0;;;:::i;:::-;14134:13:25;;;:42;;;502:14555;14126:72;;;:::i;:::-;14208:56;14216:14;;;14208:56;:::i;:::-;502:14555;;14274:17;502:14555;;14274:35;502:14555;;;14274:35;502:14555;;;14134:42;-1:-1:-1;14164:12:25;502:14555;14151:25;;;14134:42;;502:14555;;;;;;;;;;;;;;1955:34;502:14555;;;;;;;;;;;;;;;;;;;;1513:6:0;502:14555:25;;;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;1303:62:0;;:::i;:::-;13865:13:25;;;:42;;;502:14555;13857:72;;;:::i;:::-;502:14555;;13980:17;502:14555;;;;;;;-1:-1:-1;;;;502:14555:25;;;;;;;;13979:38;502:14555;;;-1:-1:-1;;;502:14555:25;;;;;;13865:42;-1:-1:-1;13895:12:25;502:14555;13882:25;;;13865:42;;502:14555;;;;;;;;;;;;;;1842:27;502:14555;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11609:16;502:14555;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:62:0;;:::i;:::-;2758:6;502:14555:25;;-1:-1:-1;;;;;;502:14555:25;;;;;;;-1:-1:-1;;;;;502:14555:25;2806:40:0;502:14555:25;;2806:40:0;502:14555:25;;;;;;;;;;;;;;;1651:32;502:14555;;;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;;;;;-1:-1:-1;;;;;502:14555:25;;:::i;:::-;;;;12066:15;502:14555;;;12066:43;502:14555;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14555:25;;;;;;-1:-1:-1;;;;;502:14555:25;;13208:22;502:14555;;;13208:22;502:14555;;;;;;;;;;;;;;;;;2092:38;502:14555;;;;;;;;;;;;;;;:::i;:::-;1303:62:0;;;:::i;:::-;14454:31:25;;;502:14555;;;14554:3;14536:21;;502:14555;;14634:5;14616:23;;502:14555;;14699:40;502:14555;14749:40;502:14555;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;14554:3:25;502:14555;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;14554:3:25;502:14555;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2333:6:6;-1:-1:-1;;;;;502:14555:25;2324:4:6;2316:23;502:14555:25;;;;;-1:-1:-1;;;;;;;;;;;502:14555:25;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;502:14555:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:14555:25;;;;;-1:-1:-1;502:14555:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;;;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;502:14555:25;;;;3812:30;;502:14555;;3881:53;3889:11;;;3881:53;:::i;:::-;3945:14;;502:14555;3945:14;:::i;:::-;502:14555;;3945:14;502:14555;;;;;;;;;;;;;;;;;;4230:58;502:14555;;;;;;;;;;;;;4041:173;;;502:14555;;;;4041:173;;502:14555;;;;;4041:173;;;4188:15;;502:14555;;;;;4011:17;502:14555;;;;;;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;;;;4230:58;502:14555;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:14555:25;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1898:6:6;502:14555:25;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;502:14555:25;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;971:66:3;502:14555:25;;;;;;3330:17:3;;;;;;;;:::i;3232:526::-;502:14555:25;;;;;;;;971:66:3;;;3383:63;;;;502:14555:25;3383:63:3;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;502:14555:25;;-1:-1:-1;;;3610:56:3;;502:14555:25;3610:56:3;;971:66;;;;502:14555:25;971:66:3;;502:14555:25;971:66:3;502:14555:25;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;;;;502:14555:25;;;2523:15:3;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;502:14555:25;;2519:123:3;502:14555:25;7318:69:13;502:14555:25;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;7276:25:13;;;;;;502:14555:25;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;7318:69:13;:::i;:::-;;2519:123:3;;;;;;;502:14555:25;;;-1:-1:-1;7318:69:13;:::i;2523:28:3:-;;502:14555:25;2523:28:3;;971:66;502:14555:25;;-1:-1:-1;;;971:66:3;;502:14555:25;971:66:3;;;;;;502:14555:25;971:66:3;;502:14555:25;971:66:3;502:14555:25;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;502:14555:25;;;3383:63:3;;;;;502:14555:25;;;;;;;-1:-1:-1;;502:14555:25;;;;1303:62:0;;:::i;:::-;502:14555:25;;13732:32;502:14555;;;;;;;;;;;;;;;;;1875:37;502:14555;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14555:25;;;;;;-1:-1:-1;;;;;502:14555:25;;12810:38;502:14555;;;12810:38;502:14555;;;;;;;;;;;;;;;;;1995:38;502:14555;;;;;;;;;;;;;;;;;;;;;14909:23;502:14555;14934:23;502:14555;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;502:14555:25;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;502:14555:25;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;502:14555:25;;;;;;;;;;;;;;;;;;;;;;;971:66:3;502:14555:25;;3232:526:3;502:14555:25;;;3330:17:3;;;;;;;;:::i;3232:526::-;502:14555:25;;;;;;;;971:66:3;;;3383:63;;;;502:14555:25;3383:63:3;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;502:14555:25;;-1:-1:-1;;;3610:56:3;;502:14555:25;3610:56:3;;971:66;;;;;;;502:14555:25;971:66:3;502:14555:25;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;;;;502:14555:25;;;2523:15:3;;;:28;;;2519:123;;3232:526;;;;;502:14555:25;;2523:28:3;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;502:14555:25;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11762:15;502:14555;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:31;502:14555;;;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;;;;;;1579:61;502:14555;;;;;1579:61;;502:14555;1579:61;;502:14555;1579:61;;502:14555;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14555:25;;;;;;-1:-1:-1;;;;;502:14555:25;;13338:46;502:14555;;;13338:46;502:14555;;;;;;;;;;;;;;;;;1795:36;502:14555;-1:-1:-1;;;;;502:14555:25;;;;;;;;;;-1:-1:-1;;;;;502:14555:25;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;502:14555:25;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;1599:130:0:-;1513:6;502:14555:25;-1:-1:-1;;;;;502:14555:25;929:10:14;1662:23:0;502:14555:25;;1599:130:0:o;502:14555:25:-;;;;971:66:3;;;502:14555:25;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;502:14555:25;;-1:-1:-1;;;;;502:14555:25;;;-1:-1:-1;;;;;;502:14555:25;;;;;;;;;;2806:40:0;-1:-1:-1;;2806:40:0;2666:187::o;502:14555:25:-;;;;:::o;:::-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;1699:281:3;1713:19:13;;:23;502:14555:25;;-1:-1:-1;;;;;;;;;;;502:14555:25;;-1:-1:-1;;;;;;502:14555:25;-1:-1:-1;;;;;502:14555:25;;;;;;;;;1699:281:3:o;502:14555:25:-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;7682:628:13;;;;7886:418;;;502:14555:25;;;7917:22:13;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;502:14555:25;;8212:17:13;:::o;502:14555:25:-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;;;;7886:418:13;502:14555:25;;;;-1:-1:-1;8991:21:13;:17;;9163:142;;;;;;;8987:379;502:14555:25;;;971:66:3;;;;;9335:20:13;;502:14555:25;9335:20:13;;;502:14555:25;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;502:14555:25;;;9335:20:13;;;;502:14555:25;;;;;;;;-1:-1:-1;;502:14555:25;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14555:25;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:14555:25;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;10274:781::-;10546:3;10533:16;;;10529:95;;10646:14;;10642:95;;10851:23;502:14555;10877:23;502:14555;;;;;;;;;;;;;;;;;;;10546:3;11002:46;502:14555;;11002:46;;:::i;10642:95::-;502:14555;10683:23;502:14555;10676:30;:::o;10529:95::-;502:14555;10572:23;502:14555;10565:30;:::o;11061:429::-;11172:2;11159:15;;;11155:29;;11232:2;11219:15;;;11215:29;;11292:2;11279:15;;;11275:29;;11354:2;11341:15;;;11337:29;;11420:2;-1:-1:-1;11407:15:25;11403:29;;11472:1;11061:429;:::o;11403:29::-;11431:1;11424:8;:::o;11337:29::-;11358:8;11365:1;11358:8;:::o;11275:29::-;11296:8;11303:1;11296:8;:::o;11215:29::-;11236:8;11243:1;11236:8;:::o;11155:29::-;11176:8;11183:1;11176:8;:::o;502:14555::-;;;;;;;;;;;:::o;12407:310::-;12508:1;12496:13;502:14555;12516:12;502:14555;12491:198;12511:17;;;;;;;12698:12;;;;-1:-1:-1;12407:310:25;:::o;12530:3::-;-1:-1:-1;502:14555:25;;;12553:17;502:14555;;;;;;;-1:-1:-1;;;;;502:14555:25;;;;;12553:47;;;:80;;12530:3;12549:130;;;;12530:3;;;:::i;:::-;12496:13;;12549:130;12653:11;;;;;:::o;12553:80::-;502:14555;;;;;;;;12553:80;;;;502:14555;;;;:::o;:::-;;;-1:-1:-1;;;502:14555:25;;;;;;;;;;;;-1:-1:-1;;;502:14555:25;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1967600","executionCost":"infinite","totalCost":"infinite"},"external":{"addPredictionModule(address,uint256)":"121712","astroTokenLauncher()":"2950","astrologerManager()":"2708","buyTokenContract()":"2356","getReputationMultiplier(address)":"3155","getReputationMultiplierRange()":"4516","getReputationScore(address)":"infinite","getReputationTier(address)":"2825","getScoreBreakdown(address)":"infinite","getTopAstrologers(uint256)":"infinite","initialize(address,address,address,uint256,uint256)":"infinite","maxReputationMultiplier()":"2420","minPredictionsForScore()":"2464","minReputationMultiplier()":"2618","owner()":"2818","predictionModules(uint256)":"6687","proxiableUUID()":"infinite","renounceOwnership()":"28514","reputationDecayRate()":"2816","reputationScores(address)":"24577","scoreBreakdowns(address)":"11698","scoreUpdateDelay()":"3124","setAstroTokenLauncher(address)":"27421","setAstrologerManager(address)":"26805","setBuyTokenContract(address)":"27377","setMinPredictionsForScore(uint256)":"25008","setReputationDecayRate(uint256)":"24634","setReputationMultipliers(uint256,uint256)":"46958","setScoreUpdateDelay(uint256)":"25228","setWorldPredictionMarket(address)":"26651","setZodiacDAO(address)":"27003","togglePredictionModule(uint256)":"29344","totalModules()":"2750","transferOwnership(address)":"29062","updateModuleWeight(uint256,uint256)":"27338","updateReputationFromWorldPrediction(address,bool)":"infinite","updateReputationScore(address,uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite","worldPredictionMarket()":"2279","zodiacDAO()":"2972"},"internal":{"_authorizeUpgrade(address)":"infinite","calculateReputationMultiplier(uint256)":"4423","calculateReputationTier(uint256)":"138","isPredictionModule(address)":"infinite"}},"methodIdentifiers":{"addPredictionModule(address,uint256)":"51131876","astroTokenLauncher()":"ab3dcd6a","astrologerManager()":"6fd31a41","buyTokenContract()":"16d54f09","getReputationMultiplier(address)":"b107e88c","getReputationMultiplierRange()":"3d9617be","getReputationScore(address)":"75a67d5c","getReputationTier(address)":"6be2cefb","getScoreBreakdown(address)":"2c27750a","getTopAstrologers(uint256)":"5245420d","initialize(address,address,address,uint256,uint256)":"a6b63eb8","maxReputationMultiplier()":"430cd57a","minPredictionsForScore()":"450f1442","minReputationMultiplier()":"5df4d161","owner()":"8da5cb5b","predictionModules(uint256)":"10d4f374","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","reputationDecayRate()":"960e6f88","reputationScores(address)":"fe0438b2","scoreBreakdowns(address)":"dc0a40bd","scoreUpdateDelay()":"f92eadf6","setAstroTokenLauncher(address)":"e2c3538c","setAstrologerManager(address)":"44cda485","setBuyTokenContract(address)":"c3a274c2","setMinPredictionsForScore(uint256)":"9f68871d","setReputationDecayRate(uint256)":"4cba103e","setReputationMultipliers(uint256,uint256)":"58bd9b93","setScoreUpdateDelay(uint256)":"e6f95583","setWorldPredictionMarket(address)":"106bdcf5","setZodiacDAO(address)":"65af67bd","togglePredictionModule(uint256)":"893849de","totalModules()":"78bbd701","transferOwnership(address)":"f2fde38b","updateModuleWeight(uint256,uint256)":"9754cfd1","updateReputationFromWorldPrediction(address,bool)":"9f7c4688","updateReputationScore(address,uint256,uint256,uint256,uint256,uint256,uint256)":"adcbcde5","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","worldPredictionMarket()":"02bc7f4a","zodiacDAO()":"ab76c9ed"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"moduleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"PredictionModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"ReputationScoreUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dailyAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oneToOneAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weightedScore\",\"type\":\"uint256\"}],\"name\":\"ScoreBreakdownUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"addPredictionModule\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astroTokenLauncher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astrologerManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReputationMultiplierRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationScore\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOnePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct ReputationScorer.ReputationScore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationTier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getScoreBreakdown\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"marketAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOneAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightedScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationTier\",\"type\":\"uint256\"}],\"internalType\":\"struct ReputationScorer.ScoreBreakdown\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"getTopAstrologers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyTokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zodiacDAO\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPredictionsForScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scoreUpdateDelay\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReputationMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPredictionsForScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minReputationMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictionModules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationDecayRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reputationScores\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOnePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"scoreBreakdowns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marketAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOneAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightedScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationTier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scoreUpdateDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astroTokenLauncher\",\"type\":\"address\"}],\"name\":\"setAstroTokenLauncher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"}],\"name\":\"setAstrologerManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyTokenContract\",\"type\":\"address\"}],\"name\":\"setBuyTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minPredictions\",\"type\":\"uint256\"}],\"name\":\"setMinPredictionsForScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_decayRate\",\"type\":\"uint256\"}],\"name\":\"setReputationDecayRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minMultiplier\",\"type\":\"uint256\"}],\"name\":\"setReputationMultipliers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"setScoreUpdateDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_worldPredictionMarket\",\"type\":\"address\"}],\"name\":\"setWorldPredictionMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zodiacDAO\",\"type\":\"address\"}],\"name\":\"setZodiacDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_moduleId\",\"type\":\"uint256\"}],\"name\":\"togglePredictionModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalModules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_moduleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newWeight\",\"type\":\"uint256\"}],\"name\":\"updateModuleWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_wasCorrect\",\"type\":\"bool\"}],\"name\":\"updateReputationFromWorldPrediction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_marketPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketAccurate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dailyPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dailyAccurate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oneToOnePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oneToOneAccurate\",\"type\":\"uint256\"}],\"name\":\"updateReputationScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"worldPredictionMarket\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zodiacDAO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReputationScorer.sol\":\"ReputationScorer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary CountersUpgradeable {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/ReputationScorer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"./interfaces/IAstrologerManager.sol\\\";\\nimport \\\"./interfaces/IBuyTokenContract.sol\\\";\\nimport \\\"./interfaces/IAstroTokenLauncher.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\\\";\\n\\ncontract ReputationScorer is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using CountersUpgradeable for CountersUpgradeable.Counter;\\n\\n    CountersUpgradeable.Counter private _scoreIds;\\n    \\n    struct ReputationScore {\\n        uint256 id;\\n        address astrologer;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 accuracyPercentage;\\n        uint256 reputationMultiplier;\\n        uint256 marketPredictions;\\n        uint256 dailyPredictions;\\n        uint256 oneToOnePredictions;\\n        uint256 lastUpdated;\\n        bool isActive;\\n    }\\n\\n    struct ScoreBreakdown {\\n        uint256 marketAccuracy;\\n        uint256 dailyAccuracy;\\n        uint256 oneToOneAccuracy;\\n        uint256 weightedScore;\\n        uint256 reputationTier;\\n    }\\n\\n    struct PredictionModule {\\n        address contractAddress;\\n        bool isActive;\\n        uint256 weight;\\n        uint256 lastUpdate;\\n    }\\n\\n    mapping(address => ReputationScore) public reputationScores;\\n    mapping(address => ScoreBreakdown) public scoreBreakdowns;\\n    mapping(uint256 => PredictionModule) public predictionModules;\\n    \\n    address public astrologerManager;\\n    address public buyTokenContract;\\n    address public zodiacDAO;\\n    address public astroTokenLauncher;\\n    address public worldPredictionMarket;\\n    \\n    uint256 public totalModules;\\n    uint256 public minPredictionsForScore;\\n    uint256 public scoreUpdateDelay;\\n    uint256 public reputationDecayRate;\\n    uint256 public maxReputationMultiplier; // Maximum reputation multiplier (e.g., 5000 = 5.0x)\\n    uint256 public minReputationMultiplier; // Minimum reputation multiplier (e.g., 200 = 0.2x)\\n    \\n    event ReputationScoreUpdated(\\n        address indexed astrologer,\\n        uint256 oldAccuracy,\\n        uint256 newAccuracy,\\n        uint256 newMultiplier\\n    );\\n\\n    event PredictionModuleAdded(\\n        uint256 indexed moduleId,\\n        address contractAddress,\\n        uint256 weight\\n    );\\n\\n    event ScoreBreakdownUpdated(\\n        address indexed astrologer,\\n        uint256 marketAccuracy,\\n        uint256 dailyAccuracy,\\n        uint256 oneToOneAccuracy,\\n        uint256 weightedScore\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _buyTokenContract,\\n        address _zodiacDAO,\\n        uint256 _minPredictionsForScore,\\n        uint256 _scoreUpdateDelay\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        buyTokenContract = _buyTokenContract;\\n        zodiacDAO = _zodiacDAO;\\n        astroTokenLauncher = address(0); // Will be set separately\\n        worldPredictionMarket = address(0); // Will be set separately\\n        minPredictionsForScore = _minPredictionsForScore;\\n        scoreUpdateDelay = _scoreUpdateDelay;\\n        reputationDecayRate = 5; // 5% decay per month\\n        maxReputationMultiplier = 5000; // 5.0x maximum multiplier\\n        minReputationMultiplier = 200; // 0.2x minimum multiplier\\n    }\\n\\n    function addPredictionModule(\\n        address _contractAddress,\\n        uint256 _weight\\n    ) external onlyOwner returns (uint256) {\\n        require(_contractAddress != address(0), \\\"Invalid contract address\\\");\\n        require(_weight > 0, \\\"Weight must be greater than 0\\\");\\n\\n        totalModules++;\\n        uint256 moduleId = totalModules;\\n\\n        predictionModules[moduleId] = PredictionModule({\\n            contractAddress: _contractAddress,\\n            isActive: true,\\n            weight: _weight,\\n            lastUpdate: block.timestamp\\n        });\\n\\n        emit PredictionModuleAdded(moduleId, _contractAddress, _weight);\\n        return moduleId;\\n    }\\n\\n    function updateReputationFromWorldPrediction(\\n        address _astrologer,\\n        bool _wasCorrect\\n    ) external {\\n        require(msg.sender == worldPredictionMarket || msg.sender == owner(), \\\"Unauthorized\\\");\\n        require(_astrologer != address(0), \\\"Invalid astrologer address\\\");\\n\\n        ReputationScore storage score = reputationScores[_astrologer];\\n        \\n        // Update world prediction counts\\n        score.marketPredictions++; // World predictions count as market predictions\\n        score.totalPredictions++;\\n        \\n        if (_wasCorrect) {\\n            score.accuratePredictions++;\\n        }\\n        \\n        // Recalculate accuracy percentage\\n        score.accuracyPercentage = (score.accuratePredictions * 100) / score.totalPredictions;\\n        \\n        // Update reputation multiplier\\n        score.reputationMultiplier = calculateReputationMultiplier(score.accuracyPercentage);\\n        score.lastUpdated = block.timestamp;\\n        score.isActive = true;\\n\\n        // Update astrologer manager\\n        if (astrologerManager != address(0)) {\\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(_astrologer);\\n            if (astrologerId > 0) {\\n                IAstrologerManager(astrologerManager).updateReputation(astrologerId, score.reputationMultiplier);\\n            }\\n        }\\n\\n        // Update buy token contract\\n        if (astroTokenLauncher != address(0)) {\\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.buyContract != address(0) && tokenInfo.isActive) {\\n                    // Use the token's specific BuyTokenContract instance, not the main one\\n                    IBuyTokenContract(tokenInfo.buyContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\\n                }\\n            } catch {\\n                // Token not found or error occurred, skip update\\n            }\\n        }\\n\\n        emit ReputationScoreUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\\n    }\\n\\n    function updateReputationScore(\\n        address _astrologer,\\n        uint256 _marketPredictions,\\n        uint256 _marketAccurate,\\n        uint256 _dailyPredictions,\\n        uint256 _dailyAccurate,\\n        uint256 _oneToOnePredictions,\\n        uint256 _oneToOneAccurate\\n    ) external {\\n        require(msg.sender == owner() || isPredictionModule(msg.sender), \\\"Unauthorized\\\");\\n        require(_astrologer != address(0), \\\"Invalid astrologer address\\\");\\n\\n        ReputationScore storage score = reputationScores[_astrologer];\\n        ScoreBreakdown storage breakdown = scoreBreakdowns[_astrologer];\\n\\n        // Update prediction counts\\n        score.marketPredictions = _marketPredictions;\\n        score.dailyPredictions = _dailyPredictions;\\n        score.oneToOnePredictions = _oneToOnePredictions;\\n        score.totalPredictions = _marketPredictions + _dailyPredictions + _oneToOnePredictions;\\n\\n        // Calculate accuracies\\n        breakdown.marketAccuracy = _marketPredictions > 0 ? (_marketAccurate * 100) / _marketPredictions : 0;\\n        breakdown.dailyAccuracy = _dailyPredictions > 0 ? (_dailyAccurate * 100) / _dailyPredictions : 0;\\n        breakdown.oneToOneAccuracy = _oneToOnePredictions > 0 ? (_oneToOneAccurate * 100) / _oneToOnePredictions : 0;\\n\\n        // Calculate weighted score\\n        uint256 totalWeight = 0;\\n        uint256 weightedSum = 0;\\n\\n        if (_marketPredictions > 0) {\\n            weightedSum += breakdown.marketAccuracy * 3; // Market predictions weight: 3\\n            totalWeight += 3;\\n        }\\n        if (_dailyPredictions > 0) {\\n            weightedSum += breakdown.dailyAccuracy * 2; // Daily predictions weight: 2\\n            totalWeight += 2;\\n        }\\n        if (_oneToOnePredictions > 0) {\\n            weightedSum += breakdown.oneToOneAccuracy * 4; // One-to-one predictions weight: 4\\n            totalWeight += 4;\\n        }\\n\\n        breakdown.weightedScore = totalWeight > 0 ? weightedSum / totalWeight : 0;\\n        score.accuracyPercentage = breakdown.weightedScore;\\n\\n        // Calculate reputation multiplier based on accuracy\\n        score.reputationMultiplier = calculateReputationMultiplier(breakdown.weightedScore);\\n\\n        // Determine reputation tier\\n        breakdown.reputationTier = calculateReputationTier(breakdown.weightedScore);\\n\\n        score.lastUpdated = block.timestamp;\\n        score.isActive = true;\\n\\n        // Update astrologer manager\\n        if (astrologerManager != address(0)) {\\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(_astrologer);\\n            if (astrologerId > 0) {\\n                IAstrologerManager(astrologerManager).updateReputation(astrologerId, score.reputationMultiplier);\\n            }\\n        }\\n\\n        // Update buy token contract\\n        if (astroTokenLauncher != address(0)) {\\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.buyContract != address(0) && tokenInfo.isActive) {\\n                    // Update the credibility multiplier in the token's specific BuyTokenContract instance\\n                    IBuyTokenContract(tokenInfo.buyContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\\n                }\\n            } catch {\\n                // Token not found or error occurred, skip update\\n            }\\n        }\\n\\n        emit ReputationScoreUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\\n        emit ScoreBreakdownUpdated(_astrologer, breakdown.marketAccuracy, breakdown.dailyAccuracy, breakdown.oneToOneAccuracy, breakdown.weightedScore);\\n    }\\n\\n    function calculateReputationMultiplier(uint256 _accuracy) internal view returns (uint256) {\\n        // Dynamic multiplier based on accuracy percentage\\n        // Formula: minMultiplier + (accuracy * (maxMultiplier - minMultiplier)) / 100\\n        \\n        if (_accuracy >= 100) {\\n            return maxReputationMultiplier; // Cap at maximum\\n        }\\n        \\n        if (_accuracy <= 0) {\\n            return minReputationMultiplier; // Floor at minimum\\n        }\\n        \\n        // Linear interpolation between min and max based on accuracy\\n        uint256 multiplierRange = maxReputationMultiplier - minReputationMultiplier;\\n        uint256 accuracyContribution = (_accuracy * multiplierRange) / 100;\\n        \\n        return minReputationMultiplier + accuracyContribution;\\n    }\\n\\n    function calculateReputationTier(uint256 _accuracy) internal pure returns (uint256) {\\n        if (_accuracy >= 95) return 5; // Master Astrologer\\n        if (_accuracy >= 90) return 4; // Expert Astrologer\\n        if (_accuracy >= 85) return 3; // Advanced Astrologer\\n        if (_accuracy >= 80) return 2; // Intermediate Astrologer\\n        if (_accuracy >= 75) return 1; // Beginner Astrologer\\n        return 0; // Novice\\n    }\\n\\n    function getReputationScore(address _astrologer) external view returns (ReputationScore memory) {\\n        return reputationScores[_astrologer];\\n    }\\n\\n    function getScoreBreakdown(address _astrologer) external view returns (ScoreBreakdown memory) {\\n        return scoreBreakdowns[_astrologer];\\n    }\\n\\n    function getReputationMultiplier(address _astrologer) external view returns (uint256) {\\n        return reputationScores[_astrologer].reputationMultiplier;\\n    }\\n\\n    function getReputationTier(address _astrologer) external view returns (uint256) {\\n        return scoreBreakdowns[_astrologer].reputationTier;\\n    }\\n\\n    function getTopAstrologers(uint256 _limit) external view returns (address[] memory) {\\n        address[] memory topAstrologers = new address[](_limit);\\n        uint256 count = 0;\\n        \\n        // This is a simplified implementation\\n        \\n        return topAstrologers;\\n    }\\n\\n    function isPredictionModule(address _module) internal view returns (bool) {\\n        for (uint256 i = 1; i <= totalModules; i++) {\\n            if (predictionModules[i].contractAddress == _module && predictionModules[i].isActive) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setBuyTokenContract(address _buyTokenContract) external onlyOwner {\\n        buyTokenContract = _buyTokenContract;\\n    }\\n\\n    function setAstroTokenLauncher(address _astroTokenLauncher) external onlyOwner {\\n        astroTokenLauncher = _astroTokenLauncher;\\n    }\\n\\n    function setZodiacDAO(address _zodiacDAO) external onlyOwner {\\n        zodiacDAO = _zodiacDAO;\\n    }\\n\\n    function setWorldPredictionMarket(address _worldPredictionMarket) external onlyOwner {\\n        worldPredictionMarket = _worldPredictionMarket;\\n    }\\n\\n    function setMinPredictionsForScore(uint256 _minPredictions) external onlyOwner {\\n        minPredictionsForScore = _minPredictions;\\n    }\\n\\n    function setScoreUpdateDelay(uint256 _delay) external onlyOwner {\\n        scoreUpdateDelay = _delay;\\n    }\\n\\n    function setReputationDecayRate(uint256 _decayRate) external onlyOwner {\\n        reputationDecayRate = _decayRate;\\n    }\\n\\n    function togglePredictionModule(uint256 _moduleId) external onlyOwner {\\n        require(_moduleId > 0 && _moduleId <= totalModules, \\\"Invalid module ID\\\");\\n        predictionModules[_moduleId].isActive = !predictionModules[_moduleId].isActive;\\n    }\\n\\n    function updateModuleWeight(uint256 _moduleId, uint256 _newWeight) external onlyOwner {\\n        require(_moduleId > 0 && _moduleId <= totalModules, \\\"Invalid module ID\\\");\\n        require(_newWeight > 0, \\\"Weight must be greater than 0\\\");\\n        predictionModules[_moduleId].weight = _newWeight;\\n    }\\n\\n    function setReputationMultipliers(uint256 _maxMultiplier, uint256 _minMultiplier) external onlyOwner {\\n        require(_maxMultiplier > _minMultiplier, \\\"Max must be greater than min\\\");\\n        require(_minMultiplier >= 100, \\\"Min multiplier must be at least 0.1x\\\");\\n        require(_maxMultiplier <= 10000, \\\"Max multiplier must be at most 10.0x\\\");\\n        \\n        maxReputationMultiplier = _maxMultiplier;\\n        minReputationMultiplier = _minMultiplier;\\n    }\\n\\n    function getReputationMultiplierRange() external view returns (uint256 max, uint256 min) {\\n        return (maxReputationMultiplier, minReputationMultiplier);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0x90d41548a3d41520b157979905d165c942f4f4a3c1c2ecce7fb95b429537f0c3\",\"license\":\"MIT\"},\"contracts/interfaces/IAstroTokenLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstroTokenLauncher {\\n    struct TokenInfo {\\n        uint256 id;\\n        address astrologer;\\n        address tokenContract;\\n        address buyContract;\\n        string name;\\n        string symbol;\\n        uint256 totalSupply;\\n        uint256 initialPrice;\\n        bool isActive;\\n        uint256 createdAt;\\n    }\\n\\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory);\\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory);\\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory);\\n    function astrologerToTokenId(address astrologer) external view returns (uint256);\\n    function tokenContractToId(address tokenContract) external view returns (uint256);\\n} \",\"keccak256\":\"0x751a36414a4235dd498afd5a3e9309f3586fc81b8340fb85f6db72555629ccb7\",\"license\":\"MIT\"},\"contracts/interfaces/IAstrologerManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstrologerManager {\\n    struct Astrologer {\\n        uint256 id;\\n        address wallet;\\n        string name;\\n        string description;\\n        string specialty;\\n        uint256 experience;\\n        uint256 reputation;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 tokenContract;\\n        bool isVerified;\\n        bool isActive;\\n        uint256 registeredAt;\\n        uint256 lastActive;\\n    }\\n\\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\\n    function isAstrologerVerified(address wallet) external view returns (bool);\\n    function getAstrologerId(address wallet) external view returns (uint256);\\n} \",\"keccak256\":\"0x11ca9cb820c6a6cec9a66342e9d644365a1c256aff7fc4cca46964dbcdae6e64\",\"license\":\"MIT\"},\"contracts/interfaces/IBuyTokenContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IBuyTokenContract {\\n    function registerToken(\\n        address _tokenContract,\\n        address _astrologer,\\n        uint256 _totalSupply,\\n        uint256 _basePrice\\n    ) external;\\n    \\n    function updateCredibility(address _tokenContract, uint256 _credibilityMultiplier) external;\\n    function getCurrentPrice(address _tokenContract) external view returns (uint256);\\n    function buyTokens(address _tokenContract) external payable;\\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external;\\n} \",\"keccak256\":\"0xce9205cb618a8e74f30eea7d43c134dfeed5b87ee80ff94138a2adf385018c68\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2363,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":485,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":5377,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_scoreIds","offset":0,"slot":"201","type":"t_struct(Counter)2370_storage"},{"astId":5425,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"reputationScores","offset":0,"slot":"202","type":"t_mapping(t_address,t_struct(ReputationScore)5400_storage)"},{"astId":5430,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"scoreBreakdowns","offset":0,"slot":"203","type":"t_mapping(t_address,t_struct(ScoreBreakdown)5411_storage)"},{"astId":5435,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"predictionModules","offset":0,"slot":"204","type":"t_mapping(t_uint256,t_struct(PredictionModule)5420_storage)"},{"astId":5437,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"astrologerManager","offset":0,"slot":"205","type":"t_address"},{"astId":5439,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"buyTokenContract","offset":0,"slot":"206","type":"t_address"},{"astId":5441,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"zodiacDAO","offset":0,"slot":"207","type":"t_address"},{"astId":5443,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"astroTokenLauncher","offset":0,"slot":"208","type":"t_address"},{"astId":5445,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"worldPredictionMarket","offset":0,"slot":"209","type":"t_address"},{"astId":5447,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"totalModules","offset":0,"slot":"210","type":"t_uint256"},{"astId":5449,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"minPredictionsForScore","offset":0,"slot":"211","type":"t_uint256"},{"astId":5451,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"scoreUpdateDelay","offset":0,"slot":"212","type":"t_uint256"},{"astId":5453,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"reputationDecayRate","offset":0,"slot":"213","type":"t_uint256"},{"astId":5455,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"maxReputationMultiplier","offset":0,"slot":"214","type":"t_uint256"},{"astId":5457,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"minReputationMultiplier","offset":0,"slot":"215","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_struct(ReputationScore)5400_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ReputationScorer.ReputationScore)","numberOfBytes":"32","value":"t_struct(ReputationScore)5400_storage"},"t_mapping(t_address,t_struct(ScoreBreakdown)5411_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ReputationScorer.ScoreBreakdown)","numberOfBytes":"32","value":"t_struct(ScoreBreakdown)5411_storage"},"t_mapping(t_uint256,t_struct(PredictionModule)5420_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ReputationScorer.PredictionModule)","numberOfBytes":"32","value":"t_struct(PredictionModule)5420_storage"},"t_struct(Counter)2370_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":2369,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(PredictionModule)5420_storage":{"encoding":"inplace","label":"struct ReputationScorer.PredictionModule","members":[{"astId":5413,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"contractAddress","offset":0,"slot":"0","type":"t_address"},{"astId":5415,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"isActive","offset":20,"slot":"0","type":"t_bool"},{"astId":5417,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"weight","offset":0,"slot":"1","type":"t_uint256"},{"astId":5419,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"lastUpdate","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(ReputationScore)5400_storage":{"encoding":"inplace","label":"struct ReputationScorer.ReputationScore","members":[{"astId":5379,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":5381,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"astrologer","offset":0,"slot":"1","type":"t_address"},{"astId":5383,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"totalPredictions","offset":0,"slot":"2","type":"t_uint256"},{"astId":5385,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"accuratePredictions","offset":0,"slot":"3","type":"t_uint256"},{"astId":5387,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"accuracyPercentage","offset":0,"slot":"4","type":"t_uint256"},{"astId":5389,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"reputationMultiplier","offset":0,"slot":"5","type":"t_uint256"},{"astId":5391,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"marketPredictions","offset":0,"slot":"6","type":"t_uint256"},{"astId":5393,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"dailyPredictions","offset":0,"slot":"7","type":"t_uint256"},{"astId":5395,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"oneToOnePredictions","offset":0,"slot":"8","type":"t_uint256"},{"astId":5397,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"lastUpdated","offset":0,"slot":"9","type":"t_uint256"},{"astId":5399,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"isActive","offset":0,"slot":"10","type":"t_bool"}],"numberOfBytes":"352"},"t_struct(ScoreBreakdown)5411_storage":{"encoding":"inplace","label":"struct ReputationScorer.ScoreBreakdown","members":[{"astId":5402,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"marketAccuracy","offset":0,"slot":"0","type":"t_uint256"},{"astId":5404,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"dailyAccuracy","offset":0,"slot":"1","type":"t_uint256"},{"astId":5406,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"oneToOneAccuracy","offset":0,"slot":"2","type":"t_uint256"},{"astId":5408,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"weightedScore","offset":0,"slot":"3","type":"t_uint256"},{"astId":5410,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"reputationTier","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IAstroTokenLauncher.sol":{"IAstroTokenLauncher":{"abi":[{"inputs":[{"internalType":"address","name":"astrologer","type":"address"}],"name":"astrologerToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"astrologer","type":"address"}],"name":"getTokenByAstrologer","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct IAstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenContract","type":"address"}],"name":"getTokenByContract","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct IAstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenInfo","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct IAstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenContract","type":"address"}],"name":"tokenContractToId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"astrologerToTokenId(address)":"21dd6760","getTokenByAstrologer(address)":"922edb34","getTokenByContract(address)":"8d84289e","getTokenInfo(uint256)":"8c7a63ae","tokenContractToId(address)":"36203131"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"}],\"name\":\"astrologerToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"}],\"name\":\"getTokenByAstrologer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"getTokenByContract\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"tokenContractToId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAstroTokenLauncher.sol\":\"IAstroTokenLauncher\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAstroTokenLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstroTokenLauncher {\\n    struct TokenInfo {\\n        uint256 id;\\n        address astrologer;\\n        address tokenContract;\\n        address buyContract;\\n        string name;\\n        string symbol;\\n        uint256 totalSupply;\\n        uint256 initialPrice;\\n        bool isActive;\\n        uint256 createdAt;\\n    }\\n\\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory);\\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory);\\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory);\\n    function astrologerToTokenId(address astrologer) external view returns (uint256);\\n    function tokenContractToId(address tokenContract) external view returns (uint256);\\n} \",\"keccak256\":\"0x751a36414a4235dd498afd5a3e9309f3586fc81b8340fb85f6db72555629ccb7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IAstrologerManager.sol":{"IAstrologerManager":{"abi":[{"inputs":[{"internalType":"uint256","name":"astrologerId","type":"uint256"}],"name":"getAstrologer","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"specialty","type":"string"},{"internalType":"uint256","name":"experience","type":"uint256"},{"internalType":"uint256","name":"reputation","type":"uint256"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"tokenContract","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"registeredAt","type":"uint256"},{"internalType":"uint256","name":"lastActive","type":"uint256"}],"internalType":"struct IAstrologerManager.Astrologer","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getAstrologerByWallet","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"specialty","type":"string"},{"internalType":"uint256","name":"experience","type":"uint256"},{"internalType":"uint256","name":"reputation","type":"uint256"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"tokenContract","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"registeredAt","type":"uint256"},{"internalType":"uint256","name":"lastActive","type":"uint256"}],"internalType":"struct IAstrologerManager.Astrologer","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getAstrologerId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"isAstrologerVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"bool","name":"wasAccurate","type":"bool"}],"name":"recordPredictionResult","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"uint256","name":"tokenContract","type":"uint256"}],"name":"setTokenContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"uint256","name":"newReputation","type":"uint256"}],"name":"updateReputation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAstrologer(uint256)":"b56faf11","getAstrologerByWallet(address)":"61cb82ba","getAstrologerId(address)":"656d0c39","isAstrologerVerified(address)":"30a7d32a","recordPredictionResult(uint256,bool)":"e47ef5a8","setTokenContract(uint256,uint256)":"5273496a","updateReputation(uint256,uint256)":"0675f763"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"}],\"name\":\"getAstrologer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenContract\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registeredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastActive\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstrologerManager.Astrologer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getAstrologerByWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenContract\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registeredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastActive\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstrologerManager.Astrologer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getAstrologerId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"isAstrologerVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wasAccurate\",\"type\":\"bool\"}],\"name\":\"recordPredictionResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenContract\",\"type\":\"uint256\"}],\"name\":\"setTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newReputation\",\"type\":\"uint256\"}],\"name\":\"updateReputation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAstrologerManager.sol\":\"IAstrologerManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAstrologerManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstrologerManager {\\n    struct Astrologer {\\n        uint256 id;\\n        address wallet;\\n        string name;\\n        string description;\\n        string specialty;\\n        uint256 experience;\\n        uint256 reputation;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 tokenContract;\\n        bool isVerified;\\n        bool isActive;\\n        uint256 registeredAt;\\n        uint256 lastActive;\\n    }\\n\\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\\n    function isAstrologerVerified(address wallet) external view returns (bool);\\n    function getAstrologerId(address wallet) external view returns (uint256);\\n} \",\"keccak256\":\"0x11ca9cb820c6a6cec9a66342e9d644365a1c256aff7fc4cca46964dbcdae6e64\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBuyTokenContract.sol":{"IBuyTokenContract":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"buyTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"uint256","name":"_basePrice","type":"uint256"}],"name":"registerToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_tokenAmount","type":"uint256"}],"name":"sellTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_credibilityMultiplier","type":"uint256"}],"name":"updateCredibility","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"buyTokens(address)":"ec8ac4d8","getCurrentPrice(address)":"84cc315b","registerToken(address,address,uint256,uint256)":"cea9f4b5","sellTokens(address,uint256)":"c464fe65","updateCredibility(address,uint256)":"f6322a5f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_basePrice\",\"type\":\"uint256\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_credibilityMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateCredibility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBuyTokenContract.sol\":\"IBuyTokenContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBuyTokenContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IBuyTokenContract {\\n    function registerToken(\\n        address _tokenContract,\\n        address _astrologer,\\n        uint256 _totalSupply,\\n        uint256 _basePrice\\n    ) external;\\n    \\n    function updateCredibility(address _tokenContract, uint256 _credibilityMultiplier) external;\\n    function getCurrentPrice(address _tokenContract) external view returns (uint256);\\n    function buyTokens(address _tokenContract) external payable;\\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external;\\n} \",\"keccak256\":\"0xce9205cb618a8e74f30eea7d43c134dfeed5b87ee80ff94138a2adf385018c68\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}