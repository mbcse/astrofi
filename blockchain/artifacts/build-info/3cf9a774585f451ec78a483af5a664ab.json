{"id":"3cf9a774585f451ec78a483af5a664ab","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/interfaces/IAstrologerManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IAstrologerManager {\n    struct Astrologer {\n        uint256 id;\n        address wallet;\n        string name;\n        string description;\n        string specialty;\n        uint256 experience;\n        uint256 reputation;\n        uint256 totalPredictions;\n        uint256 accuratePredictions;\n        uint256 tokenContract;\n        bool isVerified;\n        bool isActive;\n        uint256 registeredAt;\n        uint256 lastActive;\n    }\n\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\n    function isAstrologerVerified(address wallet) external view returns (bool);\n    function getAstrologerId(address wallet) external view returns (uint256);\n} "},"contracts/interfaces/IAstroTokenLauncher.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IAstroTokenLauncher {\n    struct TokenInfo {\n        uint256 id;\n        address astrologer;\n        address tokenContract;\n        address buyContract;\n        string name;\n        string symbol;\n        uint256 totalSupply;\n        uint256 initialPrice;\n        bool isActive;\n        uint256 createdAt;\n    }\n\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory);\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory);\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory);\n    function astrologerToTokenId(address astrologer) external view returns (uint256);\n    function tokenContractToId(address tokenContract) external view returns (uint256);\n} "},"contracts/interfaces/IBuyTokenContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IBuyTokenContract {\n    function registerToken(\n        address _tokenContract,\n        address _astrologer,\n        uint256 _totalSupply,\n        uint256 _basePrice\n    ) external;\n    \n    function updateCredibility(address _tokenContract, uint256 _credibilityMultiplier) external;\n    function getCurrentPrice(address _tokenContract) external view returns (uint256);\n    function buyTokens(address _tokenContract) external payable;\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external;\n} "},"contracts/interfaces/IReputationScorer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IReputationScorer {\n    function updateReputationFromWorldPrediction(\n        address _astrologer,\n        bool _wasCorrect\n    ) external;\n\n    function getReputationMultiplier(address _astrologer) external view returns (uint256);\n    \n    function getReputationScore(address _astrologer) external view returns (\n        uint256 id,\n        address astrologer,\n        uint256 totalPredictions,\n        uint256 accuratePredictions,\n        uint256 accuracyPercentage,\n        uint256 reputationMultiplier,\n        uint256 marketPredictions,\n        uint256 dailyPredictions,\n        uint256 oneToOnePredictions,\n        uint256 lastUpdated,\n        bool isActive\n    );\n} "},"contracts/ReputationScorer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"./interfaces/IAstrologerManager.sol\";\nimport \"./interfaces/IBuyTokenContract.sol\";\nimport \"./interfaces/IAstroTokenLauncher.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\n\ncontract ReputationScorer is \n    Initializable, \n    OwnableUpgradeable, \n    UUPSUpgradeable \n{\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    CountersUpgradeable.Counter private _scoreIds;\n    \n    struct ReputationScore {\n        uint256 id;\n        address astrologer;\n        uint256 totalPredictions;\n        uint256 accuratePredictions;\n        uint256 accuracyPercentage;\n        uint256 reputationMultiplier;\n        uint256 marketPredictions;\n        uint256 dailyPredictions;\n        uint256 oneToOnePredictions;\n        uint256 lastUpdated;\n        bool isActive;\n    }\n\n    struct ScoreBreakdown {\n        uint256 marketAccuracy;\n        uint256 dailyAccuracy;\n        uint256 oneToOneAccuracy;\n        uint256 weightedScore;\n        uint256 reputationTier;\n    }\n\n    struct PredictionModule {\n        address contractAddress;\n        bool isActive;\n        uint256 weight;\n        uint256 lastUpdate;\n    }\n\n    mapping(address => ReputationScore) public reputationScores;\n    mapping(address => ScoreBreakdown) public scoreBreakdowns;\n    mapping(uint256 => PredictionModule) public predictionModules;\n    \n    address public astrologerManager;\n    address public buyTokenContract;\n    address public zodiacDAO;\n    address public astroTokenLauncher;\n    address public worldPredictionMarket;\n    \n    uint256 public totalModules;\n    uint256 public minPredictionsForScore;\n    uint256 public scoreUpdateDelay;\n    uint256 public reputationDecayRate;\n    uint256 public maxReputationMultiplier; // Maximum reputation multiplier (e.g., 5000 = 5.0x)\n    uint256 public minReputationMultiplier; // Minimum reputation multiplier (e.g., 200 = 0.2x)\n    \n    event ReputationScoreUpdated(\n        address indexed astrologer,\n        uint256 oldAccuracy,\n        uint256 newAccuracy,\n        uint256 newMultiplier\n    );\n\n    event PredictionModuleAdded(\n        uint256 indexed moduleId,\n        address contractAddress,\n        uint256 weight\n    );\n\n    event ScoreBreakdownUpdated(\n        address indexed astrologer,\n        uint256 marketAccuracy,\n        uint256 dailyAccuracy,\n        uint256 oneToOneAccuracy,\n        uint256 weightedScore\n    );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _astrologerManager,\n        address _buyTokenContract,\n        address _zodiacDAO,\n        uint256 _minPredictionsForScore,\n        uint256 _scoreUpdateDelay\n    ) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n        \n        astrologerManager = _astrologerManager;\n        buyTokenContract = _buyTokenContract;\n        zodiacDAO = _zodiacDAO;\n        astroTokenLauncher = address(0); // Will be set separately\n        worldPredictionMarket = address(0); // Will be set separately\n        minPredictionsForScore = _minPredictionsForScore;\n        scoreUpdateDelay = _scoreUpdateDelay;\n        reputationDecayRate = 5; // 5% decay per month\n        maxReputationMultiplier = 5000; // 5.0x maximum multiplier\n        minReputationMultiplier = 200; // 0.2x minimum multiplier\n    }\n\n    function addPredictionModule(\n        address _contractAddress,\n        uint256 _weight\n    ) external onlyOwner returns (uint256) {\n        require(_contractAddress != address(0), \"Invalid contract address\");\n        require(_weight > 0, \"Weight must be greater than 0\");\n\n        totalModules++;\n        uint256 moduleId = totalModules;\n\n        predictionModules[moduleId] = PredictionModule({\n            contractAddress: _contractAddress,\n            isActive: true,\n            weight: _weight,\n            lastUpdate: block.timestamp\n        });\n\n        emit PredictionModuleAdded(moduleId, _contractAddress, _weight);\n        return moduleId;\n    }\n\n    function updateReputationFromWorldPrediction(\n        address _astrologer,\n        bool _wasCorrect\n    ) external {\n        require(msg.sender == worldPredictionMarket || msg.sender == owner(), \"Unauthorized\");\n        require(_astrologer != address(0), \"Invalid astrologer address\");\n\n        ReputationScore storage score = reputationScores[_astrologer];\n        \n        // Update world prediction counts\n        score.marketPredictions++; // World predictions count as market predictions\n        score.totalPredictions++;\n        \n        if (_wasCorrect) {\n            score.accuratePredictions++;\n        }\n        \n        // Recalculate accuracy percentage\n        score.accuracyPercentage = (score.accuratePredictions * 100) / score.totalPredictions;\n        \n        // Update reputation multiplier\n        score.reputationMultiplier = calculateReputationMultiplier(score.accuracyPercentage);\n        score.lastUpdated = block.timestamp;\n        score.isActive = true;\n\n        // Update astrologer manager\n        if (astrologerManager != address(0)) {\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(_astrologer);\n            if (astrologerId > 0) {\n                IAstrologerManager(astrologerManager).updateReputation(astrologerId, score.reputationMultiplier);\n            }\n        }\n\n        // Update buy token contract\n        if (buyTokenContract != address(0) && astroTokenLauncher != address(0)) {\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.isActive) {\n                    IBuyTokenContract(buyTokenContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\n                }\n            } catch {\n                // Token not found or error occurred, skip update\n            }\n        }\n\n        emit ReputationScoreUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\n    }\n\n    function updateReputationScore(\n        address _astrologer,\n        uint256 _marketPredictions,\n        uint256 _marketAccurate,\n        uint256 _dailyPredictions,\n        uint256 _dailyAccurate,\n        uint256 _oneToOnePredictions,\n        uint256 _oneToOneAccurate\n    ) external {\n        require(msg.sender == owner() || isPredictionModule(msg.sender), \"Unauthorized\");\n        require(_astrologer != address(0), \"Invalid astrologer address\");\n\n        ReputationScore storage score = reputationScores[_astrologer];\n        ScoreBreakdown storage breakdown = scoreBreakdowns[_astrologer];\n\n        // Update prediction counts\n        score.marketPredictions = _marketPredictions;\n        score.dailyPredictions = _dailyPredictions;\n        score.oneToOnePredictions = _oneToOnePredictions;\n        score.totalPredictions = _marketPredictions + _dailyPredictions + _oneToOnePredictions;\n\n        // Calculate accuracies\n        breakdown.marketAccuracy = _marketPredictions > 0 ? (_marketAccurate * 100) / _marketPredictions : 0;\n        breakdown.dailyAccuracy = _dailyPredictions > 0 ? (_dailyAccurate * 100) / _dailyPredictions : 0;\n        breakdown.oneToOneAccuracy = _oneToOnePredictions > 0 ? (_oneToOneAccurate * 100) / _oneToOnePredictions : 0;\n\n        // Calculate weighted score\n        uint256 totalWeight = 0;\n        uint256 weightedSum = 0;\n\n        if (_marketPredictions > 0) {\n            weightedSum += breakdown.marketAccuracy * 3; // Market predictions weight: 3\n            totalWeight += 3;\n        }\n        if (_dailyPredictions > 0) {\n            weightedSum += breakdown.dailyAccuracy * 2; // Daily predictions weight: 2\n            totalWeight += 2;\n        }\n        if (_oneToOnePredictions > 0) {\n            weightedSum += breakdown.oneToOneAccuracy * 4; // One-to-one predictions weight: 4\n            totalWeight += 4;\n        }\n\n        breakdown.weightedScore = totalWeight > 0 ? weightedSum / totalWeight : 0;\n        score.accuracyPercentage = breakdown.weightedScore;\n\n        // Calculate reputation multiplier based on accuracy\n        score.reputationMultiplier = calculateReputationMultiplier(breakdown.weightedScore);\n\n        // Determine reputation tier\n        breakdown.reputationTier = calculateReputationTier(breakdown.weightedScore);\n\n        score.lastUpdated = block.timestamp;\n        score.isActive = true;\n\n        // Update astrologer manager\n        if (astrologerManager != address(0)) {\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(_astrologer);\n            if (astrologerId > 0) {\n                IAstrologerManager(astrologerManager).updateReputation(astrologerId, score.reputationMultiplier);\n            }\n        }\n\n        // Update buy token contract\n        if (buyTokenContract != address(0) && astroTokenLauncher != address(0)) {\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.isActive) {\n                    // Update the credibility multiplier in BuyTokenContract\n                    IBuyTokenContract(buyTokenContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\n                }\n            } catch {\n                // Token not found or error occurred, skip update\n            }\n        }\n\n        emit ReputationScoreUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\n        emit ScoreBreakdownUpdated(_astrologer, breakdown.marketAccuracy, breakdown.dailyAccuracy, breakdown.oneToOneAccuracy, breakdown.weightedScore);\n    }\n\n    function calculateReputationMultiplier(uint256 _accuracy) internal view returns (uint256) {\n        // Dynamic multiplier based on accuracy percentage\n        // Formula: minMultiplier + (accuracy * (maxMultiplier - minMultiplier)) / 100\n        \n        if (_accuracy >= 100) {\n            return maxReputationMultiplier; // Cap at maximum\n        }\n        \n        if (_accuracy <= 0) {\n            return minReputationMultiplier; // Floor at minimum\n        }\n        \n        // Linear interpolation between min and max based on accuracy\n        uint256 multiplierRange = maxReputationMultiplier - minReputationMultiplier;\n        uint256 accuracyContribution = (_accuracy * multiplierRange) / 100;\n        \n        return minReputationMultiplier + accuracyContribution;\n    }\n\n    function calculateReputationTier(uint256 _accuracy) internal pure returns (uint256) {\n        if (_accuracy >= 95) return 5; // Master Astrologer\n        if (_accuracy >= 90) return 4; // Expert Astrologer\n        if (_accuracy >= 85) return 3; // Advanced Astrologer\n        if (_accuracy >= 80) return 2; // Intermediate Astrologer\n        if (_accuracy >= 75) return 1; // Beginner Astrologer\n        return 0; // Novice\n    }\n\n    function getReputationScore(address _astrologer) external view returns (ReputationScore memory) {\n        return reputationScores[_astrologer];\n    }\n\n    function getScoreBreakdown(address _astrologer) external view returns (ScoreBreakdown memory) {\n        return scoreBreakdowns[_astrologer];\n    }\n\n    function getReputationMultiplier(address _astrologer) external view returns (uint256) {\n        return reputationScores[_astrologer].reputationMultiplier;\n    }\n\n    function getReputationTier(address _astrologer) external view returns (uint256) {\n        return scoreBreakdowns[_astrologer].reputationTier;\n    }\n\n    function getTopAstrologers(uint256 _limit) external view returns (address[] memory) {\n        address[] memory topAstrologers = new address[](_limit);\n        uint256 count = 0;\n        \n        // This is a simplified implementation\n        \n        return topAstrologers;\n    }\n\n    function isPredictionModule(address _module) internal view returns (bool) {\n        for (uint256 i = 1; i <= totalModules; i++) {\n            if (predictionModules[i].contractAddress == _module && predictionModules[i].isActive) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\n        astrologerManager = _astrologerManager;\n    }\n\n    function setBuyTokenContract(address _buyTokenContract) external onlyOwner {\n        buyTokenContract = _buyTokenContract;\n    }\n\n    function setAstroTokenLauncher(address _astroTokenLauncher) external onlyOwner {\n        astroTokenLauncher = _astroTokenLauncher;\n    }\n\n    function setZodiacDAO(address _zodiacDAO) external onlyOwner {\n        zodiacDAO = _zodiacDAO;\n    }\n\n    function setWorldPredictionMarket(address _worldPredictionMarket) external onlyOwner {\n        worldPredictionMarket = _worldPredictionMarket;\n    }\n\n    function setMinPredictionsForScore(uint256 _minPredictions) external onlyOwner {\n        minPredictionsForScore = _minPredictions;\n    }\n\n    function setScoreUpdateDelay(uint256 _delay) external onlyOwner {\n        scoreUpdateDelay = _delay;\n    }\n\n    function setReputationDecayRate(uint256 _decayRate) external onlyOwner {\n        reputationDecayRate = _decayRate;\n    }\n\n    function togglePredictionModule(uint256 _moduleId) external onlyOwner {\n        require(_moduleId > 0 && _moduleId <= totalModules, \"Invalid module ID\");\n        predictionModules[_moduleId].isActive = !predictionModules[_moduleId].isActive;\n    }\n\n    function updateModuleWeight(uint256 _moduleId, uint256 _newWeight) external onlyOwner {\n        require(_moduleId > 0 && _moduleId <= totalModules, \"Invalid module ID\");\n        require(_newWeight > 0, \"Weight must be greater than 0\");\n        predictionModules[_moduleId].weight = _newWeight;\n    }\n\n    function setReputationMultipliers(uint256 _maxMultiplier, uint256 _minMultiplier) external onlyOwner {\n        require(_maxMultiplier > _minMultiplier, \"Max must be greater than min\");\n        require(_minMultiplier >= 100, \"Min multiplier must be at least 0.1x\");\n        require(_maxMultiplier <= 10000, \"Max multiplier must be at most 10.0x\");\n        \n        maxReputationMultiplier = _maxMultiplier;\n        minReputationMultiplier = _minMultiplier;\n    }\n\n    function getReputationMultiplierRange() external view returns (uint256 max, uint256 min) {\n        return (maxReputationMultiplier, minReputationMultiplier);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n} "},"contracts/WorldPredictionMarket.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\";\nimport \"./interfaces/IAstrologerManager.sol\";\nimport \"./interfaces/IReputationScorer.sol\";\n\ncontract WorldPredictionMarket is \n    Initializable, \n    OwnableUpgradeable, \n    UUPSUpgradeable \n{\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    CountersUpgradeable.Counter private _predictionIds;\n    \n    struct WorldPrediction {\n        uint256 id;\n        address astrologer;\n        uint256 astrologerId;\n        string title;\n        string description;\n        uint256 deadline;\n        uint256 astrologerStake;\n        uint256 totalVoterStake;\n        uint256 yesVoterStake;\n        uint256 noVoterStake;\n        uint256 totalVoters;\n        bool isResolved;\n        bool outcome;\n        bool daoVotingActive;\n        uint256 createdAt;\n        uint256 resolvedAt;\n    }\n\n    struct Vote {\n        bool hasVoted;\n        bool vote; // true = YES, false = NO\n        uint256 stakeAmount;\n        bool rewardClaimed;\n    }\n\n    struct DAOVote {\n        bool hasVoted;\n        bool vote; // true = YES (correct), false = NO (incorrect)\n        uint256 tokenId;\n    }\n\n    struct PredictionStats {\n        uint256 totalPredictions;\n        uint256 activePredictions;\n        uint256 resolvedPredictions;\n        uint256 totalVolume;\n    }\n\n    mapping(uint256 => WorldPrediction) public predictions;\n    mapping(uint256 => mapping(address => Vote)) public votes;\n    mapping(uint256 => mapping(address => DAOVote)) public daoVotes;\n    mapping(uint256 => uint256) public daoYesVotes;\n    mapping(uint256 => uint256) public daoNoVotes;\n    mapping(address => uint256[]) public astrologerPredictions;\n    mapping(address => uint256[]) public userVotes;\n    \n    address public astrologerManager;\n    address public astroChartNFT;\n    address public zodiacDAO;\n    address public reputationScorer;\n    \n    uint256 public minAstrologerStake;\n    uint256 public minVoterStake;\n    uint256 public maxVoterStake;\n    uint256 public daoVotingDuration;\n    uint256 public astrologerRewardPercentage; // 500 = 5%\n    uint256 public platformFeePercentage; // 200 = 2%\n    \n    PredictionStats public predictionStats;\n    \n    event PredictionCreated(\n        uint256 indexed predictionId,\n        address indexed astrologer,\n        string title,\n        uint256 deadline,\n        uint256 astrologerStake\n    );\n\n    event VoteCast(\n        uint256 indexed predictionId,\n        address indexed voter,\n        bool vote,\n        uint256 stakeAmount\n    );\n\n    event DAOVoteCast(\n        uint256 indexed predictionId,\n        address indexed daoMember,\n        bool vote,\n        uint256 tokenId\n    );\n\n    event PredictionResolved(\n        uint256 indexed predictionId,\n        bool outcome,\n        uint256 totalStake,\n        uint256 astrologerReward\n    );\n\n    event RewardClaimed(\n        uint256 indexed predictionId,\n        address indexed claimer,\n        uint256 rewardAmount\n    );\n\n    event DAOVotingStarted(\n        uint256 indexed predictionId,\n        uint256 endTime\n    );\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _astrologerManager,\n        address _astroChartNFT,\n        address _zodiacDAO,\n        address _reputationScorer,\n        uint256 _minAstrologerStake,\n        uint256 _minVoterStake,\n        uint256 _maxVoterStake\n    ) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n        \n        astrologerManager = _astrologerManager;\n        astroChartNFT = _astroChartNFT;\n        zodiacDAO = _zodiacDAO;\n        reputationScorer = _reputationScorer;\n        minAstrologerStake = _minAstrologerStake;\n        minVoterStake = _minVoterStake;\n        maxVoterStake = _maxVoterStake;\n        daoVotingDuration = 7 days;\n        astrologerRewardPercentage = 500; // 5%\n        platformFeePercentage = 200; // 2%\n    }\n\n    /**\n     * @notice Create a world prediction by staking FLOW\n     * @param _title The title of the prediction\n     * @param _description The detailed description\n     * @param _deadline The deadline for the prediction\n     */\n    function createPrediction(\n        string memory _title,\n        string memory _description,\n        uint256 _deadline\n    ) external payable returns (uint256) {\n        require(msg.value >= minAstrologerStake, \"Insufficient astrologer stake\");\n        require(bytes(_title).length > 0, \"Title cannot be empty\");\n        require(bytes(_description).length > 0, \"Description cannot be empty\");\n        require(_deadline > block.timestamp, \"Deadline must be in the future\");\n\n        // Verify astrologer is registered\n        if (astrologerManager != address(0)) {\n            require(IAstrologerManager(astrologerManager).isAstrologerVerified(msg.sender), \"Astrologer not verified\");\n        }\n\n        _predictionIds.increment();\n        uint256 predictionId = _predictionIds.current();\n\n        predictions[predictionId] = WorldPrediction({\n            id: predictionId,\n            astrologer: msg.sender,\n            astrologerId: IAstrologerManager(astrologerManager).getAstrologerId(msg.sender),\n            title: _title,\n            description: _description,\n            deadline: _deadline,\n            astrologerStake: msg.value,\n            totalVoterStake: 0,\n            yesVoterStake: 0,\n            noVoterStake: 0,\n            totalVoters: 0,\n            isResolved: false,\n            outcome: false,\n            daoVotingActive: false,\n            createdAt: block.timestamp,\n            resolvedAt: 0\n        });\n\n        astrologerPredictions[msg.sender].push(predictionId);\n        predictionStats.totalPredictions++;\n        predictionStats.activePredictions++;\n\n        emit PredictionCreated(predictionId, msg.sender, _title, _deadline, msg.value);\n        return predictionId;\n    }\n\n    /**\n     * @notice Vote on a prediction (requires AstroChart NFT)\n     * @param _predictionId The prediction ID\n     * @param _vote True for YES, false for NO\n     */\n    function voteOnPrediction(uint256 _predictionId, bool _vote) external payable {\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \"Invalid prediction ID\");\n        require(msg.value >= minVoterStake, \"Insufficient voter stake\");\n        require(msg.value <= maxVoterStake, \"Stake amount too high\");\n        \n        WorldPrediction storage prediction = predictions[_predictionId];\n        require(!prediction.isResolved, \"Prediction already resolved\");\n        require(block.timestamp < prediction.deadline, \"Voting period ended\");\n        require(!votes[_predictionId][msg.sender].hasVoted, \"Already voted\");\n        \n        // Verify voter has minted AstroChart NFT\n        require(hasAstroChartNFT(msg.sender), \"Must own AstroChart NFT to vote\");\n        \n        // Verify voter stake is >= astrologer stake\n        require(msg.value >= prediction.astrologerStake, \"Voter stake must be >= astrologer stake\");\n\n        votes[_predictionId][msg.sender] = Vote({\n            hasVoted: true,\n            vote: _vote,\n            stakeAmount: msg.value,\n            rewardClaimed: false\n        });\n\n        prediction.totalVoterStake += msg.value;\n        prediction.totalVoters++;\n        \n        if (_vote) {\n            prediction.yesVoterStake += msg.value;\n        } else {\n            prediction.noVoterStake += msg.value;\n        }\n        \n        userVotes[msg.sender].push(_predictionId);\n        predictionStats.totalVolume += msg.value;\n\n        emit VoteCast(_predictionId, msg.sender, _vote, msg.value);\n    }\n\n    /**\n     * @notice Start DAO voting after prediction deadline\n     * @param _predictionId The prediction ID\n     */\n    function startDAOVoting(uint256 _predictionId) external {\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \"Invalid prediction ID\");\n        \n        WorldPrediction storage prediction = predictions[_predictionId];\n        require(!prediction.isResolved, \"Prediction already resolved\");\n        require(block.timestamp >= prediction.deadline, \"Prediction deadline not reached\");\n        require(!prediction.daoVotingActive, \"DAO voting already active\");\n\n        prediction.daoVotingActive = true;\n        \n        emit DAOVotingStarted(_predictionId, block.timestamp + daoVotingDuration);\n    }\n\n    /**\n     * @notice DAO members vote on prediction outcome\n     * @param _predictionId The prediction ID\n     * @param _outcome True if prediction was correct, false if incorrect\n     * @param _tokenId The DAO token ID for voting\n     */\n    function castDAOVote(uint256 _predictionId, bool _outcome, uint256 _tokenId) external {\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \"Invalid prediction ID\");\n        \n        WorldPrediction storage prediction = predictions[_predictionId];\n        require(!prediction.isResolved, \"Prediction already resolved\");\n        require(prediction.daoVotingActive, \"DAO voting not active\");\n        require(!daoVotes[_predictionId][msg.sender].hasVoted, \"Already voted\");\n        \n        // Verify DAO membership\n        require(isDAOMember(msg.sender, _tokenId), \"Not a DAO member\");\n\n        daoVotes[_predictionId][msg.sender] = DAOVote({\n            hasVoted: true,\n            vote: _outcome,\n            tokenId: _tokenId\n        });\n\n        if (_outcome) {\n            daoYesVotes[_predictionId]++;\n        } else {\n            daoNoVotes[_predictionId]++;\n        }\n\n        emit DAOVoteCast(_predictionId, msg.sender, _outcome, _tokenId);\n    }\n\n    /**\n     * @notice Resolve prediction based on DAO votes\n     * @param _predictionId The prediction ID\n     */\n    function resolvePrediction(uint256 _predictionId) external {\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \"Invalid prediction ID\");\n        \n        WorldPrediction storage prediction = predictions[_predictionId];\n        require(!prediction.isResolved, \"Prediction already resolved\");\n        require(prediction.daoVotingActive, \"DAO voting not started\");\n        require(block.timestamp >= prediction.deadline + daoVotingDuration, \"DAO voting period not ended\");\n\n        // Determine outcome based on DAO votes\n        uint256 totalDAOVotes = daoYesVotes[_predictionId] + daoNoVotes[_predictionId];\n        require(totalDAOVotes > 0, \"No DAO votes cast\");\n        \n        bool outcome = daoYesVotes[_predictionId] > daoNoVotes[_predictionId];\n        \n        prediction.isResolved = true;\n        prediction.outcome = outcome;\n        prediction.resolvedAt = block.timestamp;\n        \n        predictionStats.activePredictions--;\n        predictionStats.resolvedPredictions++;\n\n        // Calculate and distribute rewards\n        uint256 astrologerReward = distributeRewards(_predictionId, outcome);\n        \n        // Update reputation\n        updateAstrologerReputation(prediction.astrologer, prediction.astrologerId, outcome);\n\n        emit PredictionResolved(_predictionId, outcome, prediction.totalVoterStake + prediction.astrologerStake, astrologerReward);\n    }\n\n    /**\n     * @notice Claim rewards for correct predictions\n     * @param _predictionId The prediction ID\n     */\n    function claimReward(uint256 _predictionId) external {\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \"Invalid prediction ID\");\n        \n        WorldPrediction storage prediction = predictions[_predictionId];\n        require(prediction.isResolved, \"Prediction not resolved\");\n        \n        Vote storage vote = votes[_predictionId][msg.sender];\n        require(vote.hasVoted, \"No vote found\");\n        require(!vote.rewardClaimed, \"Reward already claimed\");\n\n        uint256 rewardAmount = calculateVoterReward(_predictionId, msg.sender);\n        if (rewardAmount > 0) {\n            vote.rewardClaimed = true;\n            payable(msg.sender).transfer(rewardAmount);\n            emit RewardClaimed(_predictionId, msg.sender, rewardAmount);\n        }\n    }\n\n    /**\n     * @notice Distribute rewards after prediction resolution\n     */\n    function distributeRewards(uint256 _predictionId, bool outcome) internal returns (uint256) {\n        WorldPrediction storage prediction = predictions[_predictionId];\n        \n        uint256 totalPot = prediction.totalVoterStake + prediction.astrologerStake;\n        uint256 platformFee = (totalPot * platformFeePercentage) / 10000;\n        uint256 distributablePot = totalPot - platformFee;\n        \n        uint256 astrologerReward = 0;\n        \n        if (outcome) {\n            // Astrologer was correct - gets 5% of total pot\n            astrologerReward = (distributablePot * astrologerRewardPercentage) / 10000;\n            payable(prediction.astrologer).transfer(astrologerReward);\n        } else {\n            // Astrologer was wrong - stake is redistributed to winning voters\n            // Reputation will be penalized by updateAstrologerReputation\n        }\n        \n        return astrologerReward;\n    }\n\n    /**\n     * @notice Calculate voter reward amount\n     */\n    function calculateVoterReward(uint256 _predictionId, address _voter) public view returns (uint256) {\n        WorldPrediction storage prediction = predictions[_predictionId];\n        Vote storage vote = votes[_predictionId][_voter];\n        \n        if (!prediction.isResolved || !vote.hasVoted || vote.rewardClaimed) {\n            return 0;\n        }\n\n        // Only winning voters get rewards\n        if (vote.vote != prediction.outcome) {\n            return 0;\n        }\n\n        uint256 totalPot = prediction.totalVoterStake + prediction.astrologerStake;\n        uint256 platformFee = (totalPot * platformFeePercentage) / 10000;\n        uint256 distributablePot = totalPot - platformFee;\n        \n        uint256 astrologerReward = 0;\n        if (prediction.outcome) {\n            astrologerReward = (distributablePot * astrologerRewardPercentage) / 10000;\n        }\n        \n        uint256 voterRewardPool = distributablePot - astrologerReward;\n        uint256 winningStake = prediction.outcome ? prediction.yesVoterStake : prediction.noVoterStake;\n        \n        if (winningStake > 0) {\n            return (vote.stakeAmount * voterRewardPool) / winningStake;\n        }\n        \n        return 0;\n    }\n\n    /**\n     * @notice Update astrologer reputation based on prediction outcome\n     */\n    function updateAstrologerReputation(address _astrologer, uint256 _astrologerId, bool _wasCorrect) internal {\n        if (reputationScorer != address(0)) {\n            IReputationScorer(reputationScorer).updateReputationFromWorldPrediction(_astrologer, _wasCorrect);\n        }\n        \n        if (astrologerManager != address(0) && _astrologerId > 0) {\n            IAstrologerManager(astrologerManager).recordPredictionResult(_astrologerId, _wasCorrect);\n        }\n    }\n\n    /**\n     * @notice Check if user has AstroChart NFT\n     */\n    function hasAstroChartNFT(address _user) internal view returns (bool) {\n        if (astroChartNFT == address(0)) return true; // For testing\n        \n        // Check if user has at least one AstroChart NFT\n        try IERC721(astroChartNFT).balanceOf(_user) returns (uint256 balance) {\n            return balance > 0;\n        } catch {\n            return false;\n        }\n    }\n\n    /**\n     * @notice Check if user is DAO member\n     */\n    function isDAOMember(address _user, uint256 _tokenId) internal view returns (bool) {\n        if (zodiacDAO == address(0)) return msg.sender == owner(); // For testing, only owner can vote\n        \n        // Check if user owns the DAO token\n        try IERC721(zodiacDAO).ownerOf(_tokenId) returns (address owner) {\n            return owner == _user;\n        } catch {\n            return false;\n        }\n    }\n\n    // View functions\n    function getPrediction(uint256 _predictionId) external view returns (WorldPrediction memory) {\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \"Invalid prediction ID\");\n        return predictions[_predictionId];\n    }\n\n    function getVote(uint256 _predictionId, address _voter) external view returns (Vote memory) {\n        return votes[_predictionId][_voter];\n    }\n\n    function getDAOVote(uint256 _predictionId, address _voter) external view returns (DAOVote memory) {\n        return daoVotes[_predictionId][_voter];\n    }\n\n    function getAstrologerPredictions(address _astrologer) external view returns (uint256[] memory) {\n        return astrologerPredictions[_astrologer];\n    }\n\n    function getUserVotes(address _user) external view returns (uint256[] memory) {\n        return userVotes[_user];\n    }\n\n    function getActivePredictions() external view returns (uint256[] memory) {\n        uint256[] memory activeIds = new uint256[](predictionStats.activePredictions);\n        uint256 count = 0;\n        \n        for (uint256 i = 1; i <= _predictionIds.current(); i++) {\n            if (!predictions[i].isResolved) {\n                activeIds[count] = i;\n                count++;\n            }\n        }\n        \n        return activeIds;\n    }\n\n    function getDAOVoteCounts(uint256 _predictionId) external view returns (uint256 yesVotes, uint256 noVotes) {\n        return (daoYesVotes[_predictionId], daoNoVotes[_predictionId]);\n    }\n\n    // Admin functions\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\n        astrologerManager = _astrologerManager;\n    }\n\n    function setAstroChartNFT(address _astroChartNFT) external onlyOwner {\n        astroChartNFT = _astroChartNFT;\n    }\n\n    function setZodiacDAO(address _zodiacDAO) external onlyOwner {\n        zodiacDAO = _zodiacDAO;\n    }\n\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\n        reputationScorer = _reputationScorer;\n    }\n\n    function setStakeLimits(uint256 _minAstrologerStake, uint256 _minVoterStake, uint256 _maxVoterStake) external onlyOwner {\n        minAstrologerStake = _minAstrologerStake;\n        minVoterStake = _minVoterStake;\n        maxVoterStake = _maxVoterStake;\n    }\n\n    function setDAOVotingDuration(uint256 _duration) external onlyOwner {\n        daoVotingDuration = _duration;\n    }\n\n    function setRewardPercentages(uint256 _astrologerRewardPercentage, uint256 _platformFeePercentage) external onlyOwner {\n        require(_astrologerRewardPercentage + _platformFeePercentage <= 1000, \"Total percentages cannot exceed 10%\");\n        astrologerRewardPercentage = _astrologerRewardPercentage;\n        platformFeePercentage = _platformFeePercentage;\n    }\n\n    function withdraw() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n}\n\n// Interface for ERC721 (for NFT checks)\ninterface IERC721 {\n    function balanceOf(address owner) external view returns (uint256 balance);\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/ReputationScorer.sol:308:9:\n    |\n308 |         uint256 count = 0;\n    |         ^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":12152,"file":"contracts/ReputationScorer.sol","start":12139},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/ReputationScorer.sol:306:5:\n    |\n306 |     function getTopAstrologers(uint256 _limit) external view returns (address[] memory) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":12259,"file":"contracts/ReputationScorer.sol","start":11980},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1131],"ContextUpgradeable":[1173],"Initializable":[665],"OwnableUpgradeable":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":1174,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":132,"sourceUnit":666,"src":"169:42:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Initializable","nameLocations":["748:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"748:13:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"748:13:0"},{"baseName":{"id":7,"name":"ContextUpgradeable","nameLocations":["763:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1173,"src":"763:18:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"763:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"213:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":131,"linearizedBaseContracts":[131,1173,665],"name":"OwnableUpgradeable","nameLocation":"726:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10,"mutability":"mutable","name":"_owner","nameLocation":"804:6:0","nodeType":"VariableDeclaration","scope":131,"src":"788:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":16,"name":"OwnershipTransferred","nameLocation":"823:20:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"860:13:0","nodeType":"VariableDeclaration","scope":16,"src":"844:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"891:8:0","nodeType":"VariableDeclaration","scope":16,"src":"875:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"843:57:0"},"src":"817:84:0"},{"body":{"id":25,"nodeType":"Block","src":"1055:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":22,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1065:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"1065:26:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"907:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":26,"implemented":true,"kind":"function","modifiers":[{"id":20,"kind":"modifierInvocation","modifierName":{"id":19,"name":"onlyInitializing","nameLocations":["1038:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1038:16:0"},"nodeType":"ModifierInvocation","src":"1038:16:0"}],"name":"__Ownable_init","nameLocation":"1012:14:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1026:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[],"src":"1055:0:0"},"scope":131,"src":"1003:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":36,"nodeType":"Block","src":"1166:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":32,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"1176:32:0"}]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":29,"kind":"modifierInvocation","modifierName":{"id":28,"name":"onlyInitializing","nameLocations":["1149:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1149:16:0"},"nodeType":"ModifierInvocation","src":"1149:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1113:24:0","nodeType":"FunctionDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"1137:2:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1166:0:0"},"scope":131,"src":"1104:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"1324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":40,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"ExpressionStatement","src":"1334:13:0"},{"id":43,"nodeType":"PlaceholderStatement","src":"1357:1:0"}]},"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"1221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":45,"name":"onlyOwner","nameLocation":"1312:9:0","nodeType":"ModifierDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1321:2:0"},"src":"1303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1496:30:0","statements":[{"expression":{"id":51,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1513:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1506:13:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1450:5:0","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1455:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1486:9:0"},"scope":131,"src":"1441:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1644:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1662:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1673:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1662:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1687:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":58,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1654:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1654:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1654:68:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1532:62:0","text":" @dev Throws if the sender is not the owner."},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1608:11:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1619:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1644:0:0"},"scope":131,"src":"1599:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":81,"nodeType":"Block","src":"2118:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":76,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":74,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2128:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2128:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"ExpressionStatement","src":"2128:30:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1735:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":82,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nameLocations":["2108:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2108:9:0"},"nodeType":"ModifierInvocation","src":"2108:9:0"}],"name":"renounceOwnership","nameLocation":"2073:17:0","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2090:2:0"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2118:0:0"},"scope":131,"src":"2064:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"2384:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":91,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2402:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2422:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":93,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:0","typeDescriptions":{}}},"id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2414:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2402:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":90,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2394:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2394:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2394:73:0"},{"expression":{"arguments":[{"id":101,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2496:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2477:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2477:28:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2171:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":105,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2374:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"2374:9:0"},"nodeType":"ModifierInvocation","src":"2374:9:0"}],"name":"transferOwnership","nameLocation":"2323:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"newOwner","nameLocation":"2349:8:0","nodeType":"VariableDeclaration","scope":105,"src":"2341:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2340:18:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2384:0:0"},"scope":131,"src":"2314:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"2729:124:0","statements":[{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"oldOwner","nameLocation":"2747:8:0","nodeType":"VariableDeclaration","scope":124,"src":"2739:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":114,"initialValue":{"id":113,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2758:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2739:25:0"},{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":115,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2774:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":116,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2783:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2774:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":118,"nodeType":"ExpressionStatement","src":"2774:17:0"},{"eventCall":{"arguments":[{"id":120,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2827:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":121,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"2837:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2806:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"EmitStatement","src":"2801:45:0"}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2518:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":125,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2675:18:0","nodeType":"FunctionDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"newOwner","nameLocation":"2702:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2694:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2694:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:18:0"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[],"src":"2729:0:0"},"scope":131,"src":"2666:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"2859:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":130,"mutability":"mutable","name":"__gap","nameLocation":"3138:5:0","nodeType":"VariableDeclaration","scope":131,"src":"3118:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"length":{"hexValue":"3439","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3126:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3118:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":132,"src":"708:2438:0","usedErrors":[]}],"src":"102:3045:0"},"id":0},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[152]},"id":153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"132:133:1","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":152,"linearizedBaseContracts":[152],"name":"IERC1967Upgradeable","nameLocation":"276:19:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"302:68:1","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":139,"name":"Upgraded","nameLocation":"381:8:1","nodeType":"EventDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:1","nodeType":"VariableDeclaration","scope":139,"src":"390:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:1"},"src":"375:47:1"},{"anonymous":false,"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"428:67:1","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":146,"name":"AdminChanged","nameLocation":"506:12:1","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:1","nodeType":"VariableDeclaration","scope":146,"src":"519:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:1","nodeType":"VariableDeclaration","scope":146,"src":"542:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:1"},"src":"500:60:1"},{"anonymous":false,"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"566:59:1","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":151,"name":"BeaconUpgraded","nameLocation":"636:14:1","nodeType":"EventDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:1","nodeType":"VariableDeclaration","scope":151,"src":"651:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:1"},"src":"630:45:1"}],"scope":153,"src":"266:411:1","usedErrors":[]}],"src":"107:571:1"},"id":1},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[162]},"id":163,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":154,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"138:203:2","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":162,"linearizedBaseContracts":[162],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"387:438:2","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:2","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"852:2:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":161,"src":"878:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:2"},"scope":162,"src":"830:57:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":163,"src":"342:547:2","usedErrors":[]}],"src":"113:777:2"},"id":2},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1131],"ERC1967UpgradeUpgradeable":[486],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"StorageSlotUpgradeable":[1357]},"id":487,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":164,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":497,"src":"141:42:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":166,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":153,"src":"184:50:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":163,"src":"235:56:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":1132,"src":"292:44:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":1358,"src":"337:48:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":487,"sourceUnit":666,"src":"386:36:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":172,"name":"Initializable","nameLocations":["656:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"656:13:3"},"id":173,"nodeType":"InheritanceSpecifier","src":"656:13:3"},{"baseName":{"id":174,"name":"IERC1967Upgradeable","nameLocations":["671:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":152,"src":"671:19:3"},"id":175,"nodeType":"InheritanceSpecifier","src":"671:19:3"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"424:184:3","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":486,"linearizedBaseContracts":[486,152,665],"name":"ERC1967UpgradeUpgradeable","nameLocation":"627:25:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":180,"nodeType":"Block","src":"756:7:3","statements":[]},"id":181,"implemented":true,"kind":"function","modifiers":[{"id":178,"kind":"modifierInvocation","modifierName":{"id":177,"name":"onlyInitializing","nameLocations":["739:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"739:16:3"},"nodeType":"ModifierInvocation","src":"739:16:3"}],"name":"__ERC1967Upgrade_init","nameLocation":"706:21:3","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"727:2:3"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"756:0:3"},"scope":486,"src":"697:66:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"838:7:3","statements":[]},"id":187,"implemented":true,"kind":"function","modifiers":[{"id":184,"kind":"modifierInvocation","modifierName":{"id":183,"name":"onlyInitializing","nameLocations":["821:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"821:16:3"},"nodeType":"ModifierInvocation","src":"821:16:3"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"778:31:3","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"809:2:3"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"838:0:3"},"scope":486,"src":"769:76:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":190,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"954:14:3","nodeType":"VariableDeclaration","scope":486,"src":"929:108:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"929:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:66:3","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"1044:214:3","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":194,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1289:20:3","nodeType":"VariableDeclaration","scope":486,"src":"1263:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:66:3","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":206,"nodeType":"Block","src":"1519:89:3","statements":[{"expression":{"expression":{"arguments":[{"id":202,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1574:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":200,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"1536:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1357_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"1536:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1253_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1253_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1596:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1252,"src":"1536:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":199,"id":205,"nodeType":"Return","src":"1529:72:3"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1385:67:3","text":" @dev Returns the current implementation address."},"id":207,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1466:18:3","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"1484:2:3"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1510:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:9:3"},"scope":486,"src":"1457:151:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":230,"nodeType":"Block","src":"1762:218:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":216,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1810:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":214,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1780:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1131_$","typeString":"type(library AddressUpgradeable)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":819,"src":"1780:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1830:47:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:106:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"1772:106:3"},{"expression":{"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":224,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1926:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":221,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"1888:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1357_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"1888:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1253_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1253_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1948:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1252,"src":"1888:65:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":227,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1956:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:85:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":229,"nodeType":"ExpressionStatement","src":"1888:85:3"}]},"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"1614:80:3","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":231,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1708:18:3","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"newImplementation","nameLocation":"1735:17:3","nodeType":"VariableDeclaration","scope":231,"src":"1727:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:27:3"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"1762:0:3"},"scope":486,"src":"1699:281:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":245,"nodeType":"Block","src":"2142:96:3","statements":[{"expression":{"arguments":[{"id":238,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2171:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":237,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2152:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"2152:37:3"},{"eventCall":{"arguments":[{"id":242,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2213:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"2204:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"EmitStatement","src":"2199:32:3"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"1986:95:3","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":246,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2095:10:3","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"newImplementation","nameLocation":"2114:17:3","nodeType":"VariableDeclaration","scope":246,"src":"2106:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:27:3"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"2142:0:3"},"scope":486,"src":"2086:152:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"2470:178:3","statements":[{"expression":{"arguments":[{"id":257,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2491:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":256,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2480:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"2480:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2523:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:3","memberName":"length","nodeType":"MemberAccess","src":"2523:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":264,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2542:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2523:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"IfStatement","src":"2519:123:3","trueBody":{"id":273,"nodeType":"Block","src":"2553:89:3","statements":[{"expression":{"arguments":[{"id":269,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2607:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2626:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":266,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"2567:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1131_$","typeString":"type(library AddressUpgradeable)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1018,"src":"2567:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":272,"nodeType":"ExpressionStatement","src":"2567:64:3"}]}}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2244:123:3","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2381:17:3","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"newImplementation","nameLocation":"2407:17:3","nodeType":"VariableDeclaration","scope":276,"src":"2399:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"data","nameLocation":"2439:4:3","nodeType":"VariableDeclaration","scope":276,"src":"2426:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":250,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"forceCall","nameLocation":"2450:9:3","nodeType":"VariableDeclaration","scope":276,"src":"2445:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":252,"name":"bool","nodeType":"ElementaryTypeName","src":"2445:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:62:3"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"2470:0:3"},"scope":486,"src":"2372:276:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":328,"nodeType":"Block","src":"2922:842:3","statements":[{"condition":{"expression":{"arguments":[{"id":288,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3274:14:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":286,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"3236:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1357_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:14:3","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1290,"src":"3236:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1256_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1256_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3290:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1255,"src":"3236:59:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":326,"nodeType":"Block","src":"3365:393:3","statements":[{"clauses":[{"block":{"id":311,"nodeType":"Block","src":"3470:115:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3496:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":306,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"3504:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3496:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3526:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"ExpressionStatement","src":"3488:82:3"}]},"errorName":"","id":312,"nodeType":"TryCatchClause","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"slot","nameLocation":"3464:4:3","nodeType":"VariableDeclaration","scope":312,"src":"3456:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:14:3"},"src":"3447:138:3"},{"block":{"id":317,"nodeType":"Block","src":"3592:89:3","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":313,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3610:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":316,"nodeType":"ExpressionStatement","src":"3610:56:3"}]},"errorName":"","id":318,"nodeType":"TryCatchClause","src":"3586:95:3"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":297,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3412:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3383:28:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$162_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$162","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:13:3","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":161,"src":"3383:61:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:63:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":319,"nodeType":"TryStatement","src":"3379:302:3"},{"expression":{"arguments":[{"id":321,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3712:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3731:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":323,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3737:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":320,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3694:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":325,"nodeType":"ExpressionStatement","src":"3694:53:3"}]},"id":327,"nodeType":"IfStatement","src":"3232:526:3","trueBody":{"id":295,"nodeType":"Block","src":"3297:62:3","statements":[{"expression":{"arguments":[{"id":292,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3330:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3311:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"3311:37:3"}]}}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"2654:161:3","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":329,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2829:21:3","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"newImplementation","nameLocation":"2859:17:3","nodeType":"VariableDeclaration","scope":329,"src":"2851:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"data","nameLocation":"2891:4:3","nodeType":"VariableDeclaration","scope":329,"src":"2878:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":280,"name":"bytes","nodeType":"ElementaryTypeName","src":"2878:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"forceCall","nameLocation":"2902:9:3","nodeType":"VariableDeclaration","scope":329,"src":"2897:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":282,"name":"bool","nodeType":"ElementaryTypeName","src":"2897:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2850:62:3"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"2922:0:3"},"scope":486,"src":"2820:944:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3770:189:3","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":333,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3990:11:3","nodeType":"VariableDeclaration","scope":486,"src":"3964:106:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3964:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:66:3","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":345,"nodeType":"Block","src":"4185:80:3","statements":[{"expression":{"expression":{"arguments":[{"id":341,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4240:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":339,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"4202:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1357_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"4202:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1253_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1253_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4253:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1252,"src":"4202:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":338,"id":344,"nodeType":"Return","src":"4195:63:3"}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"4077:50:3","text":" @dev Returns the current admin."},"id":346,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4141:9:3","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"4150:2:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"4176:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:9:3"},"scope":486,"src":"4132:133:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":371,"nodeType":"Block","src":"4392:167:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":353,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4410:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:3","typeDescriptions":{}}},"id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4410:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4434:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4402:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":361,"nodeType":"ExpressionStatement","src":"4402:73:3"},{"expression":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":365,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4523:11:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":362,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"4485:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1357_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"4485:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1253_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1253_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4536:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1252,"src":"4485:56:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":368,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4544:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4485:67:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":370,"nodeType":"ExpressionStatement","src":"4485:67:3"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"4271:71:3","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":372,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4356:9:3","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"newAdmin","nameLocation":"4374:8:3","nodeType":"VariableDeclaration","scope":372,"src":"4366:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:18:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"4392:0:3"},"scope":486,"src":"4347:212:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":388,"nodeType":"Block","src":"4719:86:3","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":379,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"4747:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":381,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4760:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":378,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4734:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"EmitStatement","src":"4729:40:3"},{"expression":{"arguments":[{"id":385,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"4789:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":384,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4779:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"4779:19:3"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"4565:100:3","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4679:12:3","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"newAdmin","nameLocation":"4700:8:3","nodeType":"VariableDeclaration","scope":389,"src":"4692:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:3"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"4719:0:3"},"scope":486,"src":"4670:135:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"4811:232:3","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":393,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5074:12:3","nodeType":"VariableDeclaration","scope":486,"src":"5048:107:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:66:3","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"5272:81:3","statements":[{"expression":{"expression":{"arguments":[{"id":401,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5327:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":399,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5289:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1357_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"5289:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1253_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1253_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5341:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1252,"src":"5289:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":398,"id":404,"nodeType":"Return","src":"5282:64:3"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"5162:51:3","text":" @dev Returns the current beacon."},"id":406,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5227:10:3","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"5237:2:3"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"5263:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5262:9:3"},"scope":486,"src":"5218:135:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"5482:368:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":415,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5530:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":413,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"5500:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1131_$","typeString":"type(library AddressUpgradeable)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5519:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":819,"src":"5500:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"ExpressionStatement","src":"5492:90:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":424,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5662:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":423,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"5643:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$496_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$496","typeString":"contract IBeaconUpgradeable"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":495,"src":"5643:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":421,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"5613:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1131_$","typeString":"type(library AddressUpgradeable)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:10:3","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":819,"src":"5613:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:50:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5592:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:172:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"5592:172:3"},{"expression":{"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":435,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5812:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":432,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5774:22:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1357_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:14:3","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1279,"src":"5774:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1253_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1253_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:5:3","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1252,"src":"5774:57:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":438,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5834:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:69:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":440,"nodeType":"ExpressionStatement","src":"5774:69:3"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"5359:71:3","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5444:10:3","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"newBeacon","nameLocation":"5463:9:3","nodeType":"VariableDeclaration","scope":442,"src":"5455:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5454:19:3"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"5482:0:3"},"scope":486,"src":"5435:415:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":479,"nodeType":"Block","src":"6249:239:3","statements":[{"expression":{"arguments":[{"id":453,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6270:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":452,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6259:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"6259:21:3"},{"eventCall":{"arguments":[{"id":457,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6310:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"6295:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"EmitStatement","src":"6290:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":460,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6334:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:3","memberName":"length","nodeType":"MemberAccess","src":"6334:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6334:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":464,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6353:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6334:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":478,"nodeType":"IfStatement","src":"6330:152:3","trueBody":{"id":477,"nodeType":"Block","src":"6364:118:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":470,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"6437:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"6418:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$496_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$496","typeString":"contract IBeaconUpgradeable"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:14:3","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":495,"src":"6418:44:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":474,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6466:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":466,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"6378:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1131_$","typeString":"type(library AddressUpgradeable)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:20:3","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1018,"src":"6378:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:93:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":476,"nodeType":"ExpressionStatement","src":"6378:93:3"}]}}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"5856:292:3","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":480,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6162:23:3","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"newBeacon","nameLocation":"6194:9:3","nodeType":"VariableDeclaration","scope":480,"src":"6186:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"data","nameLocation":"6218:4:3","nodeType":"VariableDeclaration","scope":480,"src":"6205:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":446,"name":"bytes","nodeType":"ElementaryTypeName","src":"6205:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"forceCall","nameLocation":"6229:9:3","nodeType":"VariableDeclaration","scope":480,"src":"6224:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":448,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6185:54:3"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"6249:0:3"},"scope":486,"src":"6153:335:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"6494:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":485,"mutability":"mutable","name":"__gap","nameLocation":"6773:5:3","nodeType":"VariableDeclaration","scope":486,"src":"6753:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"6753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":484,"length":{"hexValue":"3530","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6761:2:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6753:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":487,"src":"609:6172:3","usedErrors":[]}],"src":"116:6666:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[496]},"id":497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":488,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"118:79:4","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":496,"linearizedBaseContracts":[496],"name":"IBeaconUpgradeable","nameLocation":"208:18:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"233:162:4","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":495,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:4","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"423:2:4"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":495,"src":"449:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:4"},"scope":496,"src":"400:58:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":497,"src":"198:262:4","usedErrors":[]}],"src":"93:368:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1131],"Initializable":[665]},"id":666,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":498,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":666,"sourceUnit":1132,"src":"138:44:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"184:2209:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":665,"linearizedBaseContracts":[665],"name":"Initializable","nameLocation":"2412:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2432:109:5","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":503,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:5","nodeType":"VariableDeclaration","scope":665,"src":"2546:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":502,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"2579:91:5","text":" @dev Indicates that the contract is in the process of being initialized."},"id":506,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:5","nodeType":"VariableDeclaration","scope":665,"src":"2675:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2708:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":511,"name":"Initialized","nameLocation":"2809:11:5","nodeType":"EventDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:5","nodeType":"VariableDeclaration","scope":511,"src":"2821:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":508,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:5"},"src":"2803:33:5"},{"body":{"id":566,"nodeType":"Block","src":"3269:483:5","statements":[{"assignments":[515],"declarations":[{"constant":false,"id":515,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:5","nodeType":"VariableDeclaration","scope":566,"src":"3279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":514,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":518,"initialValue":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:5","subExpression":{"id":516,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3302:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":520,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3347:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":521,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3365:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:5","subExpression":{"arguments":[{"arguments":[{"id":530,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$665","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$665","typeString":"contract Initializable"}],"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:5","typeDescriptions":{}}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":526,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"3388:18:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1131_$","typeString":"type(library AddressUpgradeable)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":819,"src":"3388:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3436:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"3325:201:5"},{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":543,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3536:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":546,"nodeType":"ExpressionStatement","src":"3536:16:5"},{"condition":{"id":547,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3566:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":553,"nodeType":"IfStatement","src":"3562:65:5","trueBody":{"id":552,"nodeType":"Block","src":"3582:45:5","statements":[{"expression":{"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":548,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3596:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"ExpressionStatement","src":"3596:20:5"}]}},{"id":554,"nodeType":"PlaceholderStatement","src":"3636:1:5"},{"condition":{"id":555,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3651:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":565,"nodeType":"IfStatement","src":"3647:99:5","trueBody":{"id":564,"nodeType":"Block","src":"3667:79:5","statements":[{"expression":{"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":556,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3681:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":559,"nodeType":"ExpressionStatement","src":"3681:21:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":560,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3721:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"EmitStatement","src":"3716:19:5"}]}}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"2842:399:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":567,"name":"initializer","nameLocation":"3255:11:5","nodeType":"ModifierDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[],"src":"3266:2:5"},"src":"3246:506:5","virtual":false,"visibility":"internal"},{"body":{"id":599,"nodeType":"Block","src":"4863:255:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:5","subExpression":{"id":573,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4882:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":575,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4899:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":576,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4914:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"4873:99:5"},{"expression":{"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":582,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4982:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":583,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4997:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":585,"nodeType":"ExpressionStatement","src":"4982:22:5"},{"expression":{"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":586,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5014:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"ExpressionStatement","src":"5014:20:5"},{"id":590,"nodeType":"PlaceholderStatement","src":"5044:1:5"},{"expression":{"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":591,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5055:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":594,"nodeType":"ExpressionStatement","src":"5055:21:5"},{"eventCall":{"arguments":[{"id":596,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"5103:7:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":595,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"5091:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"5086:25:5"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"3758:1062:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":600,"name":"reinitializer","nameLocation":"4834:13:5","nodeType":"ModifierDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"version","nameLocation":"4854:7:5","nodeType":"VariableDeclaration","scope":600,"src":"4848:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":569,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:5"},"src":"4825:293:5","virtual":false,"visibility":"internal"},{"body":{"id":609,"nodeType":"Block","src":"5356:97:5","statements":[{"expression":{"arguments":[{"id":604,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5374:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"5366:69:5"},{"id":608,"nodeType":"PlaceholderStatement","src":"5445:1:5"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"5124:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":610,"name":"onlyInitializing","nameLocation":"5337:16:5","nodeType":"ModifierDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"5353:2:5"},"src":"5328:125:5","virtual":false,"visibility":"internal"},{"body":{"id":645,"nodeType":"Block","src":"5988:231:5","statements":[{"expression":{"arguments":[{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:5","subExpression":{"id":615,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6007:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"5998:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6078:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":622,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":621,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:5","memberName":"max","nodeType":"MemberAccess","src":"6094:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"IfStatement","src":"6074:139:5","trueBody":{"id":643,"nodeType":"Block","src":"6111:102:5","statements":[{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":627,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6125:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":629,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:5","memberName":"max","nodeType":"MemberAccess","src":"6140:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":634,"nodeType":"ExpressionStatement","src":"6125:30:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":637,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:5","memberName":"max","nodeType":"MemberAccess","src":"6186:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":635,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6174:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"EmitStatement","src":"6169:33:5"}]}}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"5459:475:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":646,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:5","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"5968:2:5"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"5988:0:5"},"scope":665,"src":"5939:280:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":654,"nodeType":"Block","src":"6393:36:5","statements":[{"expression":{"id":652,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6410:12:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":651,"id":653,"nodeType":"Return","src":"6403:19:5"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"6225:99:5","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:5","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"6360:2:5"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"6386:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":649,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:5"},"scope":665,"src":"6329:100:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"6601:37:5","statements":[{"expression":{"id":661,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"6618:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":660,"id":662,"nodeType":"Return","src":"6611:20:5"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"6435:105:5","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:5","nodeType":"FunctionDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[],"src":"6569:2:5"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":664,"src":"6595:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":658,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:5"},"scope":665,"src":"6545:93:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":666,"src":"2394:4246:5","usedErrors":[]}],"src":"113:6528:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1131],"ERC1967UpgradeUpgradeable":[486],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"StorageSlotUpgradeable":[1357],"UUPSUpgradeable":[801]},"id":802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":667,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":163,"src":"140:56:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":487,"src":"197:50:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":802,"sourceUnit":666,"src":"248:29:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":672,"name":"Initializable","nameLocations":["965:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"965:13:6"},"id":673,"nodeType":"InheritanceSpecifier","src":"965:13:6"},{"baseName":{"id":674,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:6"],"nodeType":"IdentifierPath","referencedDeclaration":162,"src":"980:28:6"},"id":675,"nodeType":"InheritanceSpecifier","src":"980:28:6"},{"baseName":{"id":676,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:6"],"nodeType":"IdentifierPath","referencedDeclaration":486,"src":"1010:25:6"},"id":677,"nodeType":"InheritanceSpecifier","src":"1010:25:6"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"279:648:6","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":801,"linearizedBaseContracts":[801,486,152,162,665],"name":"UUPSUpgradeable","nameLocation":"946:15:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":682,"nodeType":"Block","src":"1102:7:6","statements":[]},"id":683,"implemented":true,"kind":"function","modifiers":[{"id":680,"kind":"modifierInvocation","modifierName":{"id":679,"name":"onlyInitializing","nameLocations":["1085:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1085:16:6"},"nodeType":"ModifierInvocation","src":"1085:16:6"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:6","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"1073:2:6"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"1102:0:6"},"scope":801,"src":"1042:67:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"1185:7:6","statements":[]},"id":689,"implemented":true,"kind":"function","modifiers":[{"id":686,"kind":"modifierInvocation","modifierName":{"id":685,"name":"onlyInitializing","nameLocations":["1168:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1168:16:6"},"nodeType":"ModifierInvocation","src":"1168:16:6"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:6","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"1156:2:6"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"1185:0:6"},"scope":801,"src":"1115:77:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"1197:87:6","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":696,"mutability":"immutable","name":"__self","nameLocation":"1315:6:6","nodeType":"VariableDeclaration","scope":801,"src":"1289:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":694,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:6","typeDescriptions":{}}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":718,"nodeType":"Block","src":"1863:205:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":702,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:6","typeDescriptions":{}}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":704,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1898:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"1873:80:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1971:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":712,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1995:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"1963:87:6"},{"id":717,"nodeType":"PlaceholderStatement","src":"2060:1:6"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1344:493:6","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":719,"name":"onlyProxy","nameLocation":"1851:9:6","nodeType":"ModifierDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"1860:2:6"},"src":"1842:226:6","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"2298:120:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":725,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$801","typeString":"contract UUPSUpgradeable"}],"id":724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:6","typeDescriptions":{}}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":727,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2333:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":731,"nodeType":"ExpressionStatement","src":"2308:92:6"},{"id":732,"nodeType":"PlaceholderStatement","src":"2410:1:6"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"2074:195:6","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":734,"name":"notDelegated","nameLocation":"2283:12:6","nodeType":"ModifierDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"2295:2:6"},"src":"2274:144:6","virtual":false,"visibility":"internal"},{"baseFunctions":[161],"body":{"id":745,"nodeType":"Block","src":"3093:44:6","statements":[{"expression":{"id":743,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"3110:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":742,"id":744,"nodeType":"Return","src":"3103:27:6"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2424:577:6","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":746,"implemented":true,"kind":"function","modifiers":[{"id":739,"kind":"modifierInvocation","modifierName":{"id":738,"name":"notDelegated","nameLocations":["3062:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":734,"src":"3062:12:6"},"nodeType":"ModifierInvocation","src":"3062:12:6"}],"name":"proxiableUUID","nameLocation":"3015:13:6","nodeType":"FunctionDefinition","overrides":{"id":737,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:6"},"parameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"3028:2:6"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"3084:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:6"},"scope":801,"src":"3006:131:6","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":767,"nodeType":"Block","src":"3458:124:6","statements":[{"expression":{"arguments":[{"id":755,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3486:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":754,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3468:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"ExpressionStatement","src":"3468:36:6"},{"expression":{"arguments":[{"id":759,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"3536:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3555:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":760,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3569:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":758,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3514:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"3514:61:6"}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"3143:239:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":768,"implemented":true,"kind":"function","modifiers":[{"id":752,"kind":"modifierInvocation","modifierName":{"id":751,"name":"onlyProxy","nameLocations":["3448:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"3448:9:6"},"nodeType":"ModifierInvocation","src":"3448:9:6"}],"name":"upgradeTo","nameLocation":"3396:9:6","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"newImplementation","nameLocation":"3414:17:6","nodeType":"VariableDeclaration","scope":768,"src":"3406:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3405:27:6"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[],"src":"3458:0:6"},"scope":801,"src":"3387:195:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":788,"nodeType":"Block","src":"4006:115:6","statements":[{"expression":{"arguments":[{"id":779,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4034:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"4016:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"4016:36:6"},{"expression":{"arguments":[{"id":783,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"4084:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":784,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"4103:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4109:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":782,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"4062:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"ExpressionStatement","src":"4062:52:6"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"3588:308:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":789,"implemented":true,"kind":"function","modifiers":[{"id":776,"kind":"modifierInvocation","modifierName":{"id":775,"name":"onlyProxy","nameLocations":["3996:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":719,"src":"3996:9:6"},"nodeType":"ModifierInvocation","src":"3996:9:6"}],"name":"upgradeToAndCall","nameLocation":"3910:16:6","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"newImplementation","nameLocation":"3935:17:6","nodeType":"VariableDeclaration","scope":789,"src":"3927:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"data","nameLocation":"3967:4:6","nodeType":"VariableDeclaration","scope":789,"src":"3954:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3926:46:6"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"4006:0:6"},"scope":801,"src":"3901:220:6","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"4127:397:6","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":795,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4538:17:6","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"newImplementation","nameLocation":"4564:17:6","nodeType":"VariableDeclaration","scope":795,"src":"4556:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4555:27:6"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"4599:0:6"},"scope":801,"src":"4529:71:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"4606:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":800,"mutability":"mutable","name":"__gap","nameLocation":"4885:5:6","nodeType":"VariableDeclaration","scope":801,"src":"4865:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"length":{"hexValue":"3530","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4865:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":802,"src":"928:3965:6","usedErrors":[]}],"src":"115:4779:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1131]},"id":1132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":803,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"126:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1131,"linearizedBaseContracts":[1131],"name":"AddressUpgradeable","nameLocation":"202:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":818,"nodeType":"Block","src":"1489:254:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":812,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"1713:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:7","memberName":"code","nodeType":"MemberAccess","src":"1713:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:7","memberName":"length","nodeType":"MemberAccess","src":"1713:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":811,"id":817,"nodeType":"Return","src":"1706:30:7"}]},"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"227:1191:7","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:7","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"account","nameLocation":"1451:7:7","nodeType":"VariableDeclaration","scope":819,"src":"1443:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:7"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":819,"src":"1483:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":809,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:7"},"scope":1131,"src":"1423:320:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":852,"nodeType":"Block","src":"2729:241:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":830,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1131","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1131","typeString":"library AddressUpgradeable"}],"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:7","typeDescriptions":{}}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:7","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":833,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2772:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":837,"nodeType":"ExpressionStatement","src":"2739:73:7"},{"assignments":[839,null],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"success","nameLocation":"2829:7:7","nodeType":"VariableDeclaration","scope":852,"src":"2824:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":838,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":846,"initialValue":{"arguments":[{"hexValue":"","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":840,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"2842:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:7","memberName":"call","nodeType":"MemberAccess","src":"2842:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":842,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2864:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:7"},{"expression":{"arguments":[{"id":848,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2893:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"ExpressionStatement","src":"2885:78:7"}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"1749:904:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":853,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:7","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:7","nodeType":"VariableDeclaration","scope":853,"src":"2677:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"amount","nameLocation":"2712:6:7","nodeType":"VariableDeclaration","scope":853,"src":"2704:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:7"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"2729:0:7"},"scope":1131,"src":"2658:312:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"3801:96:7","statements":[{"expression":{"arguments":[{"id":864,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"3840:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"3848:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":863,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[911,955],"referencedDeclaration":955,"src":"3818:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":862,"id":869,"nodeType":"Return","src":"3811:79:7"}]},"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"2976:731:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:7","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"target","nameLocation":"3742:6:7","nodeType":"VariableDeclaration","scope":871,"src":"3734:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"data","nameLocation":"3763:4:7","nodeType":"VariableDeclaration","scope":871,"src":"3750:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":857,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:7"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":871,"src":"3787:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":860,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:7"},"scope":1131,"src":"3712:185:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":890,"nodeType":"Block","src":"4266:76:7","statements":[{"expression":{"arguments":[{"id":884,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"4305:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"4313:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":887,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4322:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":883,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[911,955],"referencedDeclaration":955,"src":"4283:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":882,"id":889,"nodeType":"Return","src":"4276:59:7"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"3903:211:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:7","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"target","nameLocation":"4158:6:7","nodeType":"VariableDeclaration","scope":891,"src":"4150:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"data","nameLocation":"4187:4:7","nodeType":"VariableDeclaration","scope":891,"src":"4174:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":875,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:7","nodeType":"VariableDeclaration","scope":891,"src":"4201:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":877,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:7"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"4252:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":880,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:7"},"scope":1131,"src":"4119:223:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"4817:111:7","statements":[{"expression":{"arguments":[{"id":904,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"4856:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"4864:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"4870:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":903,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[911,955],"referencedDeclaration":955,"src":"4834:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":902,"id":909,"nodeType":"Return","src":"4827:94:7"}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"4348:351:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:7","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"target","nameLocation":"4743:6:7","nodeType":"VariableDeclaration","scope":911,"src":"4735:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"data","nameLocation":"4764:4:7","nodeType":"VariableDeclaration","scope":911,"src":"4751:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":895,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"value","nameLocation":"4778:5:7","nodeType":"VariableDeclaration","scope":911,"src":"4770:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:7"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"4803:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":900,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:7"},"scope":1131,"src":"4704:224:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":954,"nodeType":"Block","src":"5355:267:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":928,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1131","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1131","typeString":"library AddressUpgradeable"}],"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:7","typeDescriptions":{}}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:7","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"5398:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"ExpressionStatement","src":"5365:81:7"},{"assignments":[937,939],"declarations":[{"constant":false,"id":937,"mutability":"mutable","name":"success","nameLocation":"5462:7:7","nodeType":"VariableDeclaration","scope":954,"src":"5457:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":936,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:7","nodeType":"VariableDeclaration","scope":954,"src":"5471:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":938,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":946,"initialValue":{"arguments":[{"id":944,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"5524:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":940,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"5498:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:7","memberName":"call","nodeType":"MemberAccess","src":"5498:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"5517:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:7"},{"expression":{"arguments":[{"id":948,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"5573:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"5581:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":950,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"5590:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":951,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5602:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":947,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"5546:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":924,"id":953,"nodeType":"Return","src":"5539:76:7"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"4934:237:7","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":955,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:7","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"target","nameLocation":"5224:6:7","nodeType":"VariableDeclaration","scope":955,"src":"5216:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"5253:4:7","nodeType":"VariableDeclaration","scope":955,"src":"5240:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"value","nameLocation":"5275:5:7","nodeType":"VariableDeclaration","scope":955,"src":"5267:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:7","nodeType":"VariableDeclaration","scope":955,"src":"5290:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":919,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:7"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":955,"src":"5341:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":922,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:7"},"scope":1131,"src":"5176:446:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":971,"nodeType":"Block","src":"5899:97:7","statements":[{"expression":{"arguments":[{"id":966,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"5935:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"5943:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":965,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[972,1001],"referencedDeclaration":1001,"src":"5916:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":964,"id":970,"nodeType":"Return","src":"5909:80:7"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"5628:166:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":972,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:7","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"target","nameLocation":"5835:6:7","nodeType":"VariableDeclaration","scope":972,"src":"5827:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"data","nameLocation":"5856:4:7","nodeType":"VariableDeclaration","scope":972,"src":"5843:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":959,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:7"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":972,"src":"5885:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":962,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:7"},"scope":1131,"src":"5799:197:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1000,"nodeType":"Block","src":"6338:168:7","statements":[{"assignments":[985,987],"declarations":[{"constant":false,"id":985,"mutability":"mutable","name":"success","nameLocation":"6354:7:7","nodeType":"VariableDeclaration","scope":1000,"src":"6349:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":984,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:7","nodeType":"VariableDeclaration","scope":1000,"src":"6363:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":986,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":992,"initialValue":{"arguments":[{"id":990,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6408:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":988,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6390:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:7"},{"expression":{"arguments":[{"id":994,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"6457:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6465:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":996,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6474:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":997,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6486:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":993,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"6430:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":983,"id":999,"nodeType":"Return","src":"6423:76:7"}]},"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"6002:173:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1001,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:7","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"target","nameLocation":"6225:6:7","nodeType":"VariableDeclaration","scope":1001,"src":"6217:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"data","nameLocation":"6254:4:7","nodeType":"VariableDeclaration","scope":1001,"src":"6241:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":976,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:7","nodeType":"VariableDeclaration","scope":1001,"src":"6268:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":978,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:7"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1001,"src":"6324:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":981,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:7"},"scope":1131,"src":"6180:326:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"6782:101:7","statements":[{"expression":{"arguments":[{"id":1012,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6820:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1013,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6828:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1011,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1018,1047],"referencedDeclaration":1047,"src":"6799:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1010,"id":1016,"nodeType":"Return","src":"6792:84:7"}]},"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"6512:168:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:7","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"target","nameLocation":"6723:6:7","nodeType":"VariableDeclaration","scope":1018,"src":"6715:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"data","nameLocation":"6744:4:7","nodeType":"VariableDeclaration","scope":1018,"src":"6731:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1005,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:7"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1018,"src":"6768:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1008,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:7"},"scope":1131,"src":"6685:198:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1046,"nodeType":"Block","src":"7224:170:7","statements":[{"assignments":[1031,1033],"declarations":[{"constant":false,"id":1031,"mutability":"mutable","name":"success","nameLocation":"7240:7:7","nodeType":"VariableDeclaration","scope":1046,"src":"7235:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1030,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:7","nodeType":"VariableDeclaration","scope":1046,"src":"7249:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1032,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1038,"initialValue":{"arguments":[{"id":1036,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"7296:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1034,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7276:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:7","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:7"},{"expression":{"arguments":[{"id":1040,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"7345:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"7353:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1042,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"7362:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1043,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"7374:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1039,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"7318:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1029,"id":1045,"nodeType":"Return","src":"7311:76:7"}]},"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"6889:175:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1047,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:7","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"target","nameLocation":"7116:6:7","nodeType":"VariableDeclaration","scope":1047,"src":"7108:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"data","nameLocation":"7145:4:7","nodeType":"VariableDeclaration","scope":1047,"src":"7132:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:7","nodeType":"VariableDeclaration","scope":1047,"src":"7159:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1024,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:7"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1047,"src":"7210:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1027,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:7"},"scope":1131,"src":"7069:325:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1085,"nodeType":"Block","src":"7876:434:7","statements":[{"condition":{"id":1061,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"7890:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1083,"nodeType":"Block","src":"8246:58:7","statements":[{"expression":{"arguments":[{"id":1079,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8268:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1080,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"8280:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1078,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8260:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"8260:33:7"}]},"id":1084,"nodeType":"IfStatement","src":"7886:418:7","trueBody":{"id":1077,"nodeType":"Block","src":"7899:341:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1062,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"7917:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:7","memberName":"length","nodeType":"MemberAccess","src":"7917:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1074,"nodeType":"IfStatement","src":"7913:286:7","trueBody":{"id":1073,"nodeType":"Block","src":"7941:258:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1068,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"8143:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1067,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"8132:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1072,"nodeType":"ExpressionStatement","src":"8124:60:7"}]}},{"expression":{"id":1075,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8219:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1060,"id":1076,"nodeType":"Return","src":"8212:17:7"}]}}]},"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"7400:277:7","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:7","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"target","nameLocation":"7735:6:7","nodeType":"VariableDeclaration","scope":1086,"src":"7727:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"success","nameLocation":"7756:7:7","nodeType":"VariableDeclaration","scope":1086,"src":"7751:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1051,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:7","nodeType":"VariableDeclaration","scope":1086,"src":"7773:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1053,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:7","nodeType":"VariableDeclaration","scope":1086,"src":"7806:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1055,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:7"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"7862:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1058,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:7"},"scope":1131,"src":"7682:628:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1109,"nodeType":"Block","src":"8691:135:7","statements":[{"condition":{"id":1098,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"8705:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1107,"nodeType":"Block","src":"8762:58:7","statements":[{"expression":{"arguments":[{"id":1103,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"8784:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1104,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"8796:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1102,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8776:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"8776:33:7"}]},"id":1108,"nodeType":"IfStatement","src":"8701:119:7","trueBody":{"id":1101,"nodeType":"Block","src":"8714:42:7","statements":[{"expression":{"id":1099,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"8735:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1097,"id":1100,"nodeType":"Return","src":"8728:17:7"}]}}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"8316:210:7","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:7","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"success","nameLocation":"8571:7:7","nodeType":"VariableDeclaration","scope":1110,"src":"8566:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1088,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:7","nodeType":"VariableDeclaration","scope":1110,"src":"8588:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1090,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:7","nodeType":"VariableDeclaration","scope":1110,"src":"8621:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1092,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:7"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"8677:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1095,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:7"},"scope":1131,"src":"8531:295:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"8915:457:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1117,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8991:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:7","memberName":"length","nodeType":"MemberAccess","src":"8991:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1127,"nodeType":"Block","src":"9321:45:7","statements":[{"expression":{"arguments":[{"id":1124,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"9342:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1123,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"9335:20:7"}]},"id":1128,"nodeType":"IfStatement","src":"8987:379:7","trueBody":{"id":1122,"nodeType":"Block","src":"9014:301:7","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:7","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:7"},"nodeType":"YulFunctionCall","src":"9213:17:7"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:7","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:7"},"nodeType":"YulFunctionCall","src":"9254:19:7"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:7"},"nodeType":"YulFunctionCall","src":"9247:44:7"},"nodeType":"YulExpressionStatement","src":"9247:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1112,"isOffset":false,"isSlot":false,"src":"9219:10:7","valueSize":1},{"declaration":1112,"isOffset":false,"isSlot":false,"src":"9262:10:7","valueSize":1}],"id":1121,"nodeType":"InlineAssembly","src":"9163:142:7"}]}}]},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:7","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:7","nodeType":"VariableDeclaration","scope":1130,"src":"8849:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1111,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:7","nodeType":"VariableDeclaration","scope":1130,"src":"8874:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1113,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:7"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"8915:0:7"},"scope":1131,"src":"8832:540:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1132,"src":"194:9180:7","usedErrors":[]}],"src":"101:9274:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1131],"ContextUpgradeable":[1173],"Initializable":[665]},"id":1174,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1174,"sourceUnit":666,"src":"110:42:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1136,"name":"Initializable","nameLocations":["691:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"691:13:8"},"id":1137,"nodeType":"InheritanceSpecifier","src":"691:13:8"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1135,"nodeType":"StructuredDocumentation","src":"154:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1173,"linearizedBaseContracts":[1173,665],"name":"ContextUpgradeable","nameLocation":"669:18:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1142,"nodeType":"Block","src":"763:7:8","statements":[]},"id":1143,"implemented":true,"kind":"function","modifiers":[{"id":1140,"kind":"modifierInvocation","modifierName":{"id":1139,"name":"onlyInitializing","nameLocations":["746:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"746:16:8"},"nodeType":"ModifierInvocation","src":"746:16:8"}],"name":"__Context_init","nameLocation":"720:14:8","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"734:2:8"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"763:0:8"},"scope":1173,"src":"711:59:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1148,"nodeType":"Block","src":"838:7:8","statements":[]},"id":1149,"implemented":true,"kind":"function","modifiers":[{"id":1146,"kind":"modifierInvocation","modifierName":{"id":1145,"name":"onlyInitializing","nameLocations":["821:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"821:16:8"},"nodeType":"ModifierInvocation","src":"821:16:8"}],"name":"__Context_init_unchained","nameLocation":"785:24:8","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"809:2:8"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"838:0:8"},"scope":1173,"src":"776:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1157,"nodeType":"Block","src":"912:34:8","statements":[{"expression":{"expression":{"id":1154,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:8","memberName":"sender","nodeType":"MemberAccess","src":"929:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1153,"id":1156,"nodeType":"Return","src":"922:17:8"}]},"id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:8","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"869:2:8"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1158,"src":"903:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:8"},"scope":1173,"src":"850:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1166,"nodeType":"Block","src":"1019:32:8","statements":[{"expression":{"expression":{"id":1163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:8","memberName":"data","nodeType":"MemberAccess","src":"1036:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1162,"id":1165,"nodeType":"Return","src":"1029:15:8"}]},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:8","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"969:2:8"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1167,"src":"1003:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1160,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:8"},"scope":1173,"src":"952:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"1057:254:8","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1172,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:8","nodeType":"VariableDeclaration","scope":1173,"src":"1316:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1171,"length":{"hexValue":"3530","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1174,"src":"651:693:8","usedErrors":[]}],"src":"86:1259:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[1247]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1175,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"112:311:9","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1247,"linearizedBaseContracts":[1247],"name":"CountersUpgradeable","nameLocation":"432:19:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":1179,"members":[{"constant":false,"id":1178,"mutability":"mutable","name":"_value","nameLocation":"805:6:9","nodeType":"VariableDeclaration","scope":1179,"src":"797:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:9","nodeType":"StructDefinition","scope":1247,"src":"458:374:9","visibility":"public"},{"body":{"id":1190,"nodeType":"Block","src":"912:38:9","statements":[{"expression":{"expression":{"id":1187,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"929:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"937:6:9","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"929:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1186,"id":1189,"nodeType":"Return","src":"922:21:9"}]},"id":1191,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:9","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"counter","nameLocation":"871:7:9","nodeType":"VariableDeclaration","scope":1191,"src":"855:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1181,"nodeType":"UserDefinedTypeName","pathNode":{"id":1180,"name":"Counter","nameLocations":["855:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"855:7:9"},"referencedDeclaration":1179,"src":"855:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:9"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"903:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:9"},"scope":1247,"src":"838:112:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1204,"nodeType":"Block","src":"1009:70:9","statements":[{"id":1203,"nodeType":"UncheckedBlock","src":"1019:54:9","statements":[{"expression":{"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1197,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1043:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1051:6:9","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1043:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1202,"nodeType":"ExpressionStatement","src":"1043:19:9"}]}]},"id":1205,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:9","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"counter","nameLocation":"991:7:9","nodeType":"VariableDeclaration","scope":1205,"src":"975:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1193,"nodeType":"UserDefinedTypeName","pathNode":{"id":1192,"name":"Counter","nameLocations":["975:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"975:7:9"},"referencedDeclaration":1179,"src":"975:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:9"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"1009:0:9"},"scope":1247,"src":"956:123:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1232,"nodeType":"Block","src":"1138:176:9","statements":[{"assignments":[1212],"declarations":[{"constant":false,"id":1212,"mutability":"mutable","name":"value","nameLocation":"1156:5:9","nodeType":"VariableDeclaration","scope":1232,"src":"1148:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1215,"initialValue":{"expression":{"id":1213,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1164:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1172:6:9","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1164:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"1196:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1188:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"ExpressionStatement","src":"1188:49:9"},{"id":1231,"nodeType":"UncheckedBlock","src":"1247:61:9","statements":[{"expression":{"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1223,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1271:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1279:6:9","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1271:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"1288:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1230,"nodeType":"ExpressionStatement","src":"1271:26:9"}]}]},"id":1233,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:9","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"counter","nameLocation":"1120:7:9","nodeType":"VariableDeclaration","scope":1233,"src":"1104:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1207,"nodeType":"UserDefinedTypeName","pathNode":{"id":1206,"name":"Counter","nameLocations":["1104:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"1104:7:9"},"referencedDeclaration":1179,"src":"1104:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:9"},"returnParameters":{"id":1210,"nodeType":"ParameterList","parameters":[],"src":"1138:0:9"},"scope":1247,"src":"1085:229:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"1369:35:9","statements":[{"expression":{"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1239,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"1379:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1387:6:9","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1379:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1244,"nodeType":"ExpressionStatement","src":"1379:18:9"}]},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:9","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"counter","nameLocation":"1351:7:9","nodeType":"VariableDeclaration","scope":1246,"src":"1335:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1235,"nodeType":"UserDefinedTypeName","pathNode":{"id":1234,"name":"Counter","nameLocations":["1335:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"1335:7:9"},"referencedDeclaration":1179,"src":"1335:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:9"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[],"src":"1369:0:9"},"scope":1247,"src":"1320:84:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1248,"src":"424:982:9","usedErrors":[]}],"src":"87:1320:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[1357]},"id":1358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"218:1201:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1357,"linearizedBaseContracts":[1357],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":1253,"members":[{"constant":false,"id":1252,"mutability":"mutable","name":"value","nameLocation":"1494:5:10","nodeType":"VariableDeclaration","scope":1253,"src":"1486:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:10","nodeType":"StructDefinition","scope":1357,"src":"1457:49:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":1256,"members":[{"constant":false,"id":1255,"mutability":"mutable","name":"value","nameLocation":"1546:5:10","nodeType":"VariableDeclaration","scope":1256,"src":"1541:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1254,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:10","nodeType":"StructDefinition","scope":1357,"src":"1512:46:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":1259,"members":[{"constant":false,"id":1258,"mutability":"mutable","name":"value","nameLocation":"1601:5:10","nodeType":"VariableDeclaration","scope":1259,"src":"1593:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:10","nodeType":"StructDefinition","scope":1357,"src":"1564:49:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":1262,"members":[{"constant":false,"id":1261,"mutability":"mutable","name":"value","nameLocation":"1656:5:10","nodeType":"VariableDeclaration","scope":1262,"src":"1648:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:10","nodeType":"StructDefinition","scope":1357,"src":"1619:49:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":1265,"members":[{"constant":false,"id":1264,"mutability":"mutable","name":"value","nameLocation":"1709:5:10","nodeType":"VariableDeclaration","scope":1265,"src":"1702:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1263,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:10","nodeType":"StructDefinition","scope":1357,"src":"1674:47:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":1268,"members":[{"constant":false,"id":1267,"mutability":"mutable","name":"value","nameLocation":"1760:5:10","nodeType":"VariableDeclaration","scope":1268,"src":"1754:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1266,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:10","nodeType":"StructDefinition","scope":1357,"src":"1727:45:10","visibility":"public"},{"body":{"id":1278,"nodeType":"Block","src":"1954:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2016:38:10","statements":[{"nodeType":"YulAssignment","src":"2030:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2040:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2030:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1275,"isOffset":false,"isSlot":true,"src":"2030:6:10","suffix":"slot","valueSize":1},{"declaration":1271,"isOffset":false,"isSlot":false,"src":"2040:4:10","valueSize":1}],"id":1277,"nodeType":"InlineAssembly","src":"2007:47:10"}]},"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"1778:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:10","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"slot","nameLocation":"1902:4:10","nodeType":"VariableDeclaration","scope":1279,"src":"1894:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:10"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"r","nameLocation":"1951:1:10","nodeType":"VariableDeclaration","scope":1279,"src":"1931:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1253_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":1274,"nodeType":"UserDefinedTypeName","pathNode":{"id":1273,"name":"AddressSlot","nameLocations":["1931:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"1931:11:10"},"referencedDeclaration":1253,"src":"1931:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1253_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:10"},"scope":1357,"src":"1870:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"2242:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2304:38:10","statements":[{"nodeType":"YulAssignment","src":"2318:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2328:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2318:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1286,"isOffset":false,"isSlot":true,"src":"2318:6:10","suffix":"slot","valueSize":1},{"declaration":1282,"isOffset":false,"isSlot":false,"src":"2328:4:10","valueSize":1}],"id":1288,"nodeType":"InlineAssembly","src":"2295:47:10"}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"2066:87:10","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:10","nodeType":"FunctionDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"slot","nameLocation":"2190:4:10","nodeType":"VariableDeclaration","scope":1290,"src":"2182:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:10"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"r","nameLocation":"2239:1:10","nodeType":"VariableDeclaration","scope":1290,"src":"2219:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1256_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1285,"nodeType":"UserDefinedTypeName","pathNode":{"id":1284,"name":"BooleanSlot","nameLocations":["2219:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1256,"src":"2219:11:10"},"referencedDeclaration":1256,"src":"2219:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1256_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:10"},"scope":1357,"src":"2158:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1300,"nodeType":"Block","src":"2530:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2592:38:10","statements":[{"nodeType":"YulAssignment","src":"2606:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2616:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2606:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1297,"isOffset":false,"isSlot":true,"src":"2606:6:10","suffix":"slot","valueSize":1},{"declaration":1293,"isOffset":false,"isSlot":false,"src":"2616:4:10","valueSize":1}],"id":1299,"nodeType":"InlineAssembly","src":"2583:47:10"}]},"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"2354:87:10","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:10","nodeType":"FunctionDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"slot","nameLocation":"2478:4:10","nodeType":"VariableDeclaration","scope":1301,"src":"2470:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:10"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"r","nameLocation":"2527:1:10","nodeType":"VariableDeclaration","scope":1301,"src":"2507:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1259_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":1296,"nodeType":"UserDefinedTypeName","pathNode":{"id":1295,"name":"Bytes32Slot","nameLocations":["2507:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1259,"src":"2507:11:10"},"referencedDeclaration":1259,"src":"2507:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1259_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:10"},"scope":1357,"src":"2446:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1311,"nodeType":"Block","src":"2818:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2880:38:10","statements":[{"nodeType":"YulAssignment","src":"2894:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2904:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2894:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1308,"isOffset":false,"isSlot":true,"src":"2894:6:10","suffix":"slot","valueSize":1},{"declaration":1304,"isOffset":false,"isSlot":false,"src":"2904:4:10","valueSize":1}],"id":1310,"nodeType":"InlineAssembly","src":"2871:47:10"}]},"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"2642:87:10","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1312,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:10","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"slot","nameLocation":"2766:4:10","nodeType":"VariableDeclaration","scope":1312,"src":"2758:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:10"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"r","nameLocation":"2815:1:10","nodeType":"VariableDeclaration","scope":1312,"src":"2795:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1262_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":1307,"nodeType":"UserDefinedTypeName","pathNode":{"id":1306,"name":"Uint256Slot","nameLocations":["2795:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1262,"src":"2795:11:10"},"referencedDeclaration":1262,"src":"2795:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1262_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:10"},"scope":1357,"src":"2734:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1322,"nodeType":"Block","src":"3103:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3165:38:10","statements":[{"nodeType":"YulAssignment","src":"3179:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3189:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3179:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1319,"isOffset":false,"isSlot":true,"src":"3179:6:10","suffix":"slot","valueSize":1},{"declaration":1315,"isOffset":false,"isSlot":false,"src":"3189:4:10","valueSize":1}],"id":1321,"nodeType":"InlineAssembly","src":"3156:47:10"}]},"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"2930:86:10","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1323,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:10","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"slot","nameLocation":"3052:4:10","nodeType":"VariableDeclaration","scope":1323,"src":"3044:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:10"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"r","nameLocation":"3100:1:10","nodeType":"VariableDeclaration","scope":1323,"src":"3081:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1265_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1318,"nodeType":"UserDefinedTypeName","pathNode":{"id":1317,"name":"StringSlot","nameLocations":["3081:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"3081:10:10"},"referencedDeclaration":1265,"src":"3081:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1265_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:10"},"scope":1357,"src":"3021:188:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1333,"nodeType":"Block","src":"3411:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3473:44:10","statements":[{"nodeType":"YulAssignment","src":"3487:20:10","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3497:10:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3487:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1330,"isOffset":false,"isSlot":true,"src":"3487:6:10","suffix":"slot","valueSize":1},{"declaration":1326,"isOffset":false,"isSlot":true,"src":"3497:10:10","suffix":"slot","valueSize":1}],"id":1332,"nodeType":"InlineAssembly","src":"3464:53:10"}]},"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"3215:101:10","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:10","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"store","nameLocation":"3359:5:10","nodeType":"VariableDeclaration","scope":1334,"src":"3344:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1325,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:10"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"r","nameLocation":"3408:1:10","nodeType":"VariableDeclaration","scope":1334,"src":"3389:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1265_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1329,"nodeType":"UserDefinedTypeName","pathNode":{"id":1328,"name":"StringSlot","nameLocations":["3389:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"3389:10:10"},"referencedDeclaration":1265,"src":"3389:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1265_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:10"},"scope":1357,"src":"3321:202:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1344,"nodeType":"Block","src":"3699:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3761:38:10","statements":[{"nodeType":"YulAssignment","src":"3775:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3785:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3775:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1341,"isOffset":false,"isSlot":true,"src":"3775:6:10","suffix":"slot","valueSize":1},{"declaration":1337,"isOffset":false,"isSlot":false,"src":"3785:4:10","valueSize":1}],"id":1343,"nodeType":"InlineAssembly","src":"3752:47:10"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"3529:85:10","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:10","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"slot","nameLocation":"3649:4:10","nodeType":"VariableDeclaration","scope":1345,"src":"3641:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:10"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"r","nameLocation":"3696:1:10","nodeType":"VariableDeclaration","scope":1345,"src":"3678:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1268_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1340,"nodeType":"UserDefinedTypeName","pathNode":{"id":1339,"name":"BytesSlot","nameLocations":["3678:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"3678:9:10"},"referencedDeclaration":1268,"src":"3678:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1268_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:10"},"scope":1357,"src":"3619:186:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1355,"nodeType":"Block","src":"4002:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"4064:44:10","statements":[{"nodeType":"YulAssignment","src":"4078:20:10","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4088:10:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4078:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1352,"isOffset":false,"isSlot":true,"src":"4078:6:10","suffix":"slot","valueSize":1},{"declaration":1348,"isOffset":false,"isSlot":true,"src":"4088:10:10","suffix":"slot","valueSize":1}],"id":1354,"nodeType":"InlineAssembly","src":"4055:53:10"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"3811:99:10","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:10","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"store","nameLocation":"3951:5:10","nodeType":"VariableDeclaration","scope":1356,"src":"3937:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1347,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:10"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"r","nameLocation":"3999:1:10","nodeType":"VariableDeclaration","scope":1356,"src":"3981:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1268_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1351,"nodeType":"UserDefinedTypeName","pathNode":{"id":1350,"name":"BytesSlot","nameLocations":["3981:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1268,"src":"3981:9:10"},"referencedDeclaration":1268,"src":"3981:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1268_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:10"},"scope":1357,"src":"3915:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1358,"src":"1420:2696:10","usedErrors":[]}],"src":"193:3924:10"},"id":10},"contracts/ReputationScorer.sol":{"ast":{"absolutePath":"contracts/ReputationScorer.sol","exportedSymbols":{"AddressUpgradeable":[1131],"ContextUpgradeable":[1173],"CountersUpgradeable":[1247],"ERC1967UpgradeUpgradeable":[486],"IAstroTokenLauncher":[4222],"IAstrologerManager":[4305],"IBeaconUpgradeable":[496],"IBuyTokenContract":[4345],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"Initializable":[665],"OwnableUpgradeable":[131],"ReputationScorer":[2568],"StorageSlotUpgradeable":[1357],"UUPSUpgradeable":[801]},"id":2569,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1359,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":1360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2569,"sourceUnit":132,"src":"57:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2569,"sourceUnit":666,"src":"133:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":1362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2569,"sourceUnit":802,"src":"209:77:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAstrologerManager.sol","file":"./interfaces/IAstrologerManager.sol","id":1363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2569,"sourceUnit":4306,"src":"287:45:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBuyTokenContract.sol","file":"./interfaces/IBuyTokenContract.sol","id":1364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2569,"sourceUnit":4346,"src":"333:44:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAstroTokenLauncher.sol","file":"./interfaces/IAstroTokenLauncher.sol","id":1365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2569,"sourceUnit":4223,"src":"378:46:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","id":1366,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2569,"sourceUnit":1248,"src":"425:75:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1367,"name":"Initializable","nameLocations":["536:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"536:13:11"},"id":1368,"nodeType":"InheritanceSpecifier","src":"536:13:11"},{"baseName":{"id":1369,"name":"OwnableUpgradeable","nameLocations":["556:18:11"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"556:18:11"},"id":1370,"nodeType":"InheritanceSpecifier","src":"556:18:11"},{"baseName":{"id":1371,"name":"UUPSUpgradeable","nameLocations":["581:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":801,"src":"581:15:11"},"id":1372,"nodeType":"InheritanceSpecifier","src":"581:15:11"}],"canonicalName":"ReputationScorer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2568,"linearizedBaseContracts":[2568,801,486,152,162,131,1173,665],"name":"ReputationScorer","nameLocation":"511:16:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1376,"libraryName":{"id":1373,"name":"CountersUpgradeable","nameLocations":["610:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"610:19:11"},"nodeType":"UsingForDirective","src":"604:58:11","typeName":{"id":1375,"nodeType":"UserDefinedTypeName","pathNode":{"id":1374,"name":"CountersUpgradeable.Counter","nameLocations":["634:19:11","654:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"634:27:11"},"referencedDeclaration":1179,"src":"634:27:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":1379,"mutability":"mutable","name":"_scoreIds","nameLocation":"704:9:11","nodeType":"VariableDeclaration","scope":2568,"src":"668:45:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1378,"nodeType":"UserDefinedTypeName","pathNode":{"id":1377,"name":"CountersUpgradeable.Counter","nameLocations":["668:19:11","688:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"668:27:11"},"referencedDeclaration":1179,"src":"668:27:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"canonicalName":"ReputationScorer.ReputationScore","id":1402,"members":[{"constant":false,"id":1381,"mutability":"mutable","name":"id","nameLocation":"765:2:11","nodeType":"VariableDeclaration","scope":1402,"src":"757:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"astrologer","nameLocation":"785:10:11","nodeType":"VariableDeclaration","scope":1402,"src":"777:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"totalPredictions","nameLocation":"813:16:11","nodeType":"VariableDeclaration","scope":1402,"src":"805:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"accuratePredictions","nameLocation":"847:19:11","nodeType":"VariableDeclaration","scope":1402,"src":"839:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"accuracyPercentage","nameLocation":"884:18:11","nodeType":"VariableDeclaration","scope":1402,"src":"876:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"876:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"reputationMultiplier","nameLocation":"920:20:11","nodeType":"VariableDeclaration","scope":1402,"src":"912:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"marketPredictions","nameLocation":"958:17:11","nodeType":"VariableDeclaration","scope":1402,"src":"950:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"950:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"dailyPredictions","nameLocation":"993:16:11","nodeType":"VariableDeclaration","scope":1402,"src":"985:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"oneToOnePredictions","nameLocation":"1027:19:11","nodeType":"VariableDeclaration","scope":1402,"src":"1019:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1019:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"lastUpdated","nameLocation":"1064:11:11","nodeType":"VariableDeclaration","scope":1402,"src":"1056:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"isActive","nameLocation":"1090:8:11","nodeType":"VariableDeclaration","scope":1402,"src":"1085:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1400,"name":"bool","nodeType":"ElementaryTypeName","src":"1085:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ReputationScore","nameLocation":"731:15:11","nodeType":"StructDefinition","scope":2568,"src":"724:381:11","visibility":"public"},{"canonicalName":"ReputationScorer.ScoreBreakdown","id":1413,"members":[{"constant":false,"id":1404,"mutability":"mutable","name":"marketAccuracy","nameLocation":"1151:14:11","nodeType":"VariableDeclaration","scope":1413,"src":"1143:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"dailyAccuracy","nameLocation":"1183:13:11","nodeType":"VariableDeclaration","scope":1413,"src":"1175:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"oneToOneAccuracy","nameLocation":"1214:16:11","nodeType":"VariableDeclaration","scope":1413,"src":"1206:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"weightedScore","nameLocation":"1248:13:11","nodeType":"VariableDeclaration","scope":1413,"src":"1240:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1240:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"reputationTier","nameLocation":"1279:14:11","nodeType":"VariableDeclaration","scope":1413,"src":"1271:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ScoreBreakdown","nameLocation":"1118:14:11","nodeType":"StructDefinition","scope":2568,"src":"1111:189:11","visibility":"public"},{"canonicalName":"ReputationScorer.PredictionModule","id":1422,"members":[{"constant":false,"id":1415,"mutability":"mutable","name":"contractAddress","nameLocation":"1348:15:11","nodeType":"VariableDeclaration","scope":1422,"src":"1340:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"1340:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"isActive","nameLocation":"1378:8:11","nodeType":"VariableDeclaration","scope":1422,"src":"1373:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1416,"name":"bool","nodeType":"ElementaryTypeName","src":"1373:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"weight","nameLocation":"1404:6:11","nodeType":"VariableDeclaration","scope":1422,"src":"1396:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"lastUpdate","nameLocation":"1428:10:11","nodeType":"VariableDeclaration","scope":1422,"src":"1420:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PredictionModule","nameLocation":"1313:16:11","nodeType":"StructDefinition","scope":2568,"src":"1306:139:11","visibility":"public"},{"constant":false,"functionSelector":"fe0438b2","id":1427,"mutability":"mutable","name":"reputationScores","nameLocation":"1494:16:11","nodeType":"VariableDeclaration","scope":2568,"src":"1451:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$1402_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore)"},"typeName":{"id":1426,"keyType":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1459:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1451:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$1402_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore)"},"valueType":{"id":1425,"nodeType":"UserDefinedTypeName","pathNode":{"id":1424,"name":"ReputationScore","nameLocations":["1470:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"1470:15:11"},"referencedDeclaration":1402,"src":"1470:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"}}},"visibility":"public"},{"constant":false,"functionSelector":"dc0a40bd","id":1432,"mutability":"mutable","name":"scoreBreakdowns","nameLocation":"1558:15:11","nodeType":"VariableDeclaration","scope":2568,"src":"1516:57:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$1413_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown)"},"typeName":{"id":1431,"keyType":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1516:34:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$1413_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown)"},"valueType":{"id":1430,"nodeType":"UserDefinedTypeName","pathNode":{"id":1429,"name":"ScoreBreakdown","nameLocations":["1535:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"1535:14:11"},"referencedDeclaration":1413,"src":"1535:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"}}},"visibility":"public"},{"constant":false,"functionSelector":"10d4f374","id":1437,"mutability":"mutable","name":"predictionModules","nameLocation":"1623:17:11","nodeType":"VariableDeclaration","scope":2568,"src":"1579:61:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$1422_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule)"},"typeName":{"id":1436,"keyType":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1587:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1579:36:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$1422_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule)"},"valueType":{"id":1435,"nodeType":"UserDefinedTypeName","pathNode":{"id":1434,"name":"PredictionModule","nameLocations":["1598:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"1598:16:11"},"referencedDeclaration":1422,"src":"1598:16:11","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_storage_ptr","typeString":"struct ReputationScorer.PredictionModule"}}},"visibility":"public"},{"constant":false,"functionSelector":"6fd31a41","id":1439,"mutability":"mutable","name":"astrologerManager","nameLocation":"1666:17:11","nodeType":"VariableDeclaration","scope":2568,"src":"1651:32:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"16d54f09","id":1441,"mutability":"mutable","name":"buyTokenContract","nameLocation":"1704:16:11","nodeType":"VariableDeclaration","scope":2568,"src":"1689:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ab76c9ed","id":1443,"mutability":"mutable","name":"zodiacDAO","nameLocation":"1741:9:11","nodeType":"VariableDeclaration","scope":2568,"src":"1726:24:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"1726:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ab3dcd6a","id":1445,"mutability":"mutable","name":"astroTokenLauncher","nameLocation":"1771:18:11","nodeType":"VariableDeclaration","scope":2568,"src":"1756:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"02bc7f4a","id":1447,"mutability":"mutable","name":"worldPredictionMarket","nameLocation":"1810:21:11","nodeType":"VariableDeclaration","scope":2568,"src":"1795:36:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"78bbd701","id":1449,"mutability":"mutable","name":"totalModules","nameLocation":"1857:12:11","nodeType":"VariableDeclaration","scope":2568,"src":"1842:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"450f1442","id":1451,"mutability":"mutable","name":"minPredictionsForScore","nameLocation":"1890:22:11","nodeType":"VariableDeclaration","scope":2568,"src":"1875:37:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1875:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f92eadf6","id":1453,"mutability":"mutable","name":"scoreUpdateDelay","nameLocation":"1933:16:11","nodeType":"VariableDeclaration","scope":2568,"src":"1918:31:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1918:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"960e6f88","id":1455,"mutability":"mutable","name":"reputationDecayRate","nameLocation":"1970:19:11","nodeType":"VariableDeclaration","scope":2568,"src":"1955:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1955:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"430cd57a","id":1457,"mutability":"mutable","name":"maxReputationMultiplier","nameLocation":"2010:23:11","nodeType":"VariableDeclaration","scope":2568,"src":"1995:38:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1995:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5df4d161","id":1459,"mutability":"mutable","name":"minReputationMultiplier","nameLocation":"2107:23:11","nodeType":"VariableDeclaration","scope":2568,"src":"2092:38:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"2092:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac244","id":1469,"name":"ReputationScoreUpdated","nameLocation":"2199:22:11","nodeType":"EventDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"2247:10:11","nodeType":"VariableDeclaration","scope":1469,"src":"2231:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"2231:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"indexed":false,"mutability":"mutable","name":"oldAccuracy","nameLocation":"2275:11:11","nodeType":"VariableDeclaration","scope":1469,"src":"2267:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2267:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1465,"indexed":false,"mutability":"mutable","name":"newAccuracy","nameLocation":"2304:11:11","nodeType":"VariableDeclaration","scope":1469,"src":"2296:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1467,"indexed":false,"mutability":"mutable","name":"newMultiplier","nameLocation":"2333:13:11","nodeType":"VariableDeclaration","scope":1469,"src":"2325:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2221:131:11"},"src":"2193:160:11"},{"anonymous":false,"eventSelector":"af31016049a06640f36fa55e20d2a8c9809bbdadf9fd3327a7763e5aa652346e","id":1477,"name":"PredictionModuleAdded","nameLocation":"2365:21:11","nodeType":"EventDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"indexed":true,"mutability":"mutable","name":"moduleId","nameLocation":"2412:8:11","nodeType":"VariableDeclaration","scope":1477,"src":"2396:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2396:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1473,"indexed":false,"mutability":"mutable","name":"contractAddress","nameLocation":"2438:15:11","nodeType":"VariableDeclaration","scope":1477,"src":"2430:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"2430:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1475,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"2471:6:11","nodeType":"VariableDeclaration","scope":1477,"src":"2463:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2386:97:11"},"src":"2359:125:11"},{"anonymous":false,"eventSelector":"ad4434fdebadb9d3b07e14eaea89a4f564780aca2d11dbf1d7fcd70d921a5d64","id":1489,"name":"ScoreBreakdownUpdated","nameLocation":"2496:21:11","nodeType":"EventDefinition","parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"2543:10:11","nodeType":"VariableDeclaration","scope":1489,"src":"2527:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"2527:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1481,"indexed":false,"mutability":"mutable","name":"marketAccuracy","nameLocation":"2571:14:11","nodeType":"VariableDeclaration","scope":1489,"src":"2563:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2563:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1483,"indexed":false,"mutability":"mutable","name":"dailyAccuracy","nameLocation":"2603:13:11","nodeType":"VariableDeclaration","scope":1489,"src":"2595:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2595:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1485,"indexed":false,"mutability":"mutable","name":"oneToOneAccuracy","nameLocation":"2634:16:11","nodeType":"VariableDeclaration","scope":1489,"src":"2626:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1487,"indexed":false,"mutability":"mutable","name":"weightedScore","nameLocation":"2668:13:11","nodeType":"VariableDeclaration","scope":1489,"src":"2660:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2517:170:11"},"src":"2490:198:11"},{"body":{"id":1496,"nodeType":"Block","src":"2761:39:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1493,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"2771:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2771:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1495,"nodeType":"ExpressionStatement","src":"2771:22:11"}]},"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"2694:48:11","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":1497,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[],"src":"2758:2:11"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"2761:0:11"},"scope":2568,"src":"2747:53:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1564,"nodeType":"Block","src":"3026:631:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1512,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3036:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3036:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"ExpressionStatement","src":"3036:16:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1515,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3062:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1517,"nodeType":"ExpressionStatement","src":"3062:24:11"},{"expression":{"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1518,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"3105:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1519,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"3125:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3105:38:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1521,"nodeType":"ExpressionStatement","src":"3105:38:11"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1522,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"3153:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1523,"name":"_buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"3172:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3153:36:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1525,"nodeType":"ExpressionStatement","src":"3153:36:11"},{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1526,"name":"zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"3199:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1527,"name":"_zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3211:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3199:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1529,"nodeType":"ExpressionStatement","src":"3199:22:11"},{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1530,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"3231:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3260:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3252:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:11","typeDescriptions":{}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3252:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3231:31:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1536,"nodeType":"ExpressionStatement","src":"3231:31:11"},{"expression":{"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1537,"name":"worldPredictionMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"3298:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3330:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3322:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"3322:7:11","typeDescriptions":{}}},"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3322:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3298:34:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1543,"nodeType":"ExpressionStatement","src":"3298:34:11"},{"expression":{"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1544,"name":"minPredictionsForScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"3368:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1545,"name":"_minPredictionsForScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"3393:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3368:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1547,"nodeType":"ExpressionStatement","src":"3368:48:11"},{"expression":{"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1548,"name":"scoreUpdateDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"3426:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1549,"name":"_scoreUpdateDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"3445:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3426:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1551,"nodeType":"ExpressionStatement","src":"3426:36:11"},{"expression":{"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1552,"name":"reputationDecayRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"3472:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3494:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"3472:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1555,"nodeType":"ExpressionStatement","src":"3472:23:11"},{"expression":{"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1556,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"3527:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35303030","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3553:4:11","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"src":"3527:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1559,"nodeType":"ExpressionStatement","src":"3527:30:11"},{"expression":{"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1560,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"3594:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323030","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3620:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"3594:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1563,"nodeType":"ExpressionStatement","src":"3594:29:11"}]},"functionSelector":"a6b63eb8","id":1565,"implemented":true,"kind":"function","modifiers":[{"id":1510,"kind":"modifierInvocation","modifierName":{"id":1509,"name":"initializer","nameLocations":["3014:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"3014:11:11"},"nodeType":"ModifierInvocation","src":"3014:11:11"}],"name":"initialize","nameLocation":"2815:10:11","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"_astrologerManager","nameLocation":"2843:18:11","nodeType":"VariableDeclaration","scope":1565,"src":"2835:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"2835:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"_buyTokenContract","nameLocation":"2879:17:11","nodeType":"VariableDeclaration","scope":1565,"src":"2871:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"2871:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"_zodiacDAO","nameLocation":"2914:10:11","nodeType":"VariableDeclaration","scope":1565,"src":"2906:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"2906:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"_minPredictionsForScore","nameLocation":"2942:23:11","nodeType":"VariableDeclaration","scope":1565,"src":"2934:31:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2934:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"_scoreUpdateDelay","nameLocation":"2983:17:11","nodeType":"VariableDeclaration","scope":1565,"src":"2975:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"2975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2825:181:11"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"3026:0:11"},"scope":2568,"src":"2806:851:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1620,"nodeType":"Block","src":"3794:526:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"_contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"3812:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3832:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1578,"name":"address","nodeType":"ElementaryTypeName","src":"3832:7:11","typeDescriptions":{}}},"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3812:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e74726163742061646472657373","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3844:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68","typeString":"literal_string \"Invalid contract address\""},"value":"Invalid contract address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68","typeString":"literal_string \"Invalid contract address\""}],"id":1576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3804:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3804:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1585,"nodeType":"ExpressionStatement","src":"3804:67:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"_weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"3889:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3899:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3889:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576569676874206d7573742062652067726561746572207468616e2030","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3902:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""},"value":"Weight must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""}],"id":1586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3881:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3881:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"3881:53:11"},{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3945:14:11","subExpression":{"id":1593,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"3945:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"nodeType":"ExpressionStatement","src":"3945:14:11"},{"assignments":[1597],"declarations":[{"constant":false,"id":1597,"mutability":"mutable","name":"moduleId","nameLocation":"3977:8:11","nodeType":"VariableDeclaration","scope":1620,"src":"3969:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3969:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1599,"initialValue":{"id":1598,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"3988:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3969:31:11"},{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1600,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4011:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$1422_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":1602,"indexExpression":{"id":1601,"name":"moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4029:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4011:27:11","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1604,"name":"_contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"4089:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4129:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1606,"name":"_weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4155:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1607,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4188:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4194:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"4188:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1603,"name":"PredictionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"4041:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PredictionModule_$1422_storage_ptr_$","typeString":"type(struct ReputationScorer.PredictionModule storage pointer)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4072:15:11","4119:8:11","4147:6:11","4176:10:11"],"names":["contractAddress","isActive","weight","lastUpdate"],"nodeType":"FunctionCall","src":"4041:173:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_memory_ptr","typeString":"struct ReputationScorer.PredictionModule memory"}},"src":"4011:203:11","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":1611,"nodeType":"ExpressionStatement","src":"4011:203:11"},{"eventCall":{"arguments":[{"id":1613,"name":"moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4252:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1614,"name":"_contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"4262:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1615,"name":"_weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"4280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1612,"name":"PredictionModuleAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"4230:21:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1617,"nodeType":"EmitStatement","src":"4225:63:11"},{"expression":{"id":1618,"name":"moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4305:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1575,"id":1619,"nodeType":"Return","src":"4298:15:11"}]},"functionSelector":"51131876","id":1621,"implemented":true,"kind":"function","modifiers":[{"id":1572,"kind":"modifierInvocation","modifierName":{"id":1571,"name":"onlyOwner","nameLocations":["3766:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"3766:9:11"},"nodeType":"ModifierInvocation","src":"3766:9:11"}],"name":"addPredictionModule","nameLocation":"3672:19:11","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"_contractAddress","nameLocation":"3709:16:11","nodeType":"VariableDeclaration","scope":1621,"src":"3701:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"_weight","nameLocation":"3743:7:11","nodeType":"VariableDeclaration","scope":1621,"src":"3735:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"3735:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3691:65:11"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"3785:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"3785:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3784:9:11"},"scope":2568,"src":"3663:657:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1805,"nodeType":"Block","src":"4441:1973:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1629,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4459:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4463:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4459:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1631,"name":"worldPredictionMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4473:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4459:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4498:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4502:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4498:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1635,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"4512:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4498:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4459:60:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4521:14:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""},"value":"Unauthorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""}],"id":1628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4451:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"ExpressionStatement","src":"4451:85:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4554:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4577:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4569:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:11","typeDescriptions":{}}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4569:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4554:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617374726f6c6f6765722061646472657373","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4581:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""},"value":"Invalid astrologer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""}],"id":1642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4546:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"ExpressionStatement","src":"4546:64:11"},{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"score","nameLocation":"4645:5:11","nodeType":"VariableDeclaration","scope":1805,"src":"4621:29:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"},"typeName":{"id":1653,"nodeType":"UserDefinedTypeName","pathNode":{"id":1652,"name":"ReputationScore","nameLocations":["4621:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"4621:15:11"},"referencedDeclaration":1402,"src":"4621:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"}},"visibility":"internal"}],"id":1658,"initialValue":{"baseExpression":{"id":1655,"name":"reputationScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"4653:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$1402_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore storage ref)"}},"id":1657,"indexExpression":{"id":1656,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4670:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4653:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage","typeString":"struct ReputationScorer.ReputationScore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4621:61:11"},{"expression":{"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4743:25:11","subExpression":{"expression":{"id":1659,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"4743:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4749:17:11","memberName":"marketPredictions","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"4743:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1663,"nodeType":"ExpressionStatement","src":"4743:25:11"},{"expression":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4827:24:11","subExpression":{"expression":{"id":1664,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"4827:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4833:16:11","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"4827:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"nodeType":"ExpressionStatement","src":"4827:24:11"},{"condition":{"id":1669,"name":"_wasCorrect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4874:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1676,"nodeType":"IfStatement","src":"4870:69:11","trueBody":{"id":1675,"nodeType":"Block","src":"4887:52:11","statements":[{"expression":{"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4901:27:11","subExpression":{"expression":{"id":1670,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"4901:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4907:19:11","memberName":"accuratePredictions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"4901:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1674,"nodeType":"ExpressionStatement","src":"4901:27:11"}]}},{"expression":{"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1677,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5000:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5006:18:11","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"5000:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1680,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5028:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5034:19:11","memberName":"accuratePredictions","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"5028:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5056:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5028:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5027:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":1685,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5063:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5069:16:11","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"5063:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5027:58:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5000:85:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1689,"nodeType":"ExpressionStatement","src":"5000:85:11"},{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1690,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5144:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5150:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"5144:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1694,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5203:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:18:11","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"5203:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"name":"calculateReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"5173:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5173:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5144:84:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ExpressionStatement","src":"5144:84:11"},{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1699,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5238:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5244:11:11","memberName":"lastUpdated","nodeType":"MemberAccess","referencedDeclaration":1399,"src":"5238:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1702,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5258:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5264:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"5258:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5238:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"nodeType":"ExpressionStatement","src":"5238:35:11"},{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1706,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5283:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5289:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"5283:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5300:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5283:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"ExpressionStatement","src":"5283:21:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"5356:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5385:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5377:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"5377:7:11","typeDescriptions":{}}},"id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5377:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5356:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"nodeType":"IfStatement","src":"5352:315:11","trueBody":{"id":1741,"nodeType":"Block","src":"5389:278:11","statements":[{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"astrologerId","nameLocation":"5411:12:11","nodeType":"VariableDeclaration","scope":1741,"src":"5403:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"5403:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1726,"initialValue":{"arguments":[{"id":1724,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"5480:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1721,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"5445:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"5426:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$4305_$","typeString":"type(contract IAstrologerManager)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5426:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$4305","typeString":"contract IAstrologerManager"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5464:15:11","memberName":"getAstrologerId","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"5426:53:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5426:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5403:89:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1727,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"5510:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5510:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1740,"nodeType":"IfStatement","src":"5506:151:11","trueBody":{"id":1739,"nodeType":"Block","src":"5528:129:11","statements":[{"expression":{"arguments":[{"id":1734,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"5601:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1735,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5615:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5621:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"5615:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1731,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"5565:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1730,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"5546:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$4305_$","typeString":"type(contract IAstrologerManager)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$4305","typeString":"contract IAstrologerManager"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5584:16:11","memberName":"updateReputation","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"5546:54:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:96:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1738,"nodeType":"ExpressionStatement","src":"5546:96:11"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1743,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"5718:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5746:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5738:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"5738:7:11","typeDescriptions":{}}},"id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5738:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5718:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5752:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5782:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5774:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"5774:7:11","typeDescriptions":{}}},"id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5752:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5718:66:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"5714:563:11","trueBody":{"id":1793,"nodeType":"Block","src":"5786:491:11","statements":[{"clauses":[{"block":{"id":1788,"nodeType":"Block","src":"5935:244:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1766,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"5957:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":1767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5967:13:11","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"5957:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5992:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5984:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"5984:7:11","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5984:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5957:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":1773,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"5998:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":1774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6008:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4180,"src":"5998:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5957:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1787,"nodeType":"IfStatement","src":"5953:212:11","trueBody":{"id":1786,"nodeType":"Block","src":"6018:147:11","statements":[{"expression":{"arguments":[{"expression":{"id":1780,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"6094:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":1781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6104:13:11","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"6094:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1782,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6119:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6125:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"6119:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1777,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"6058:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1776,"name":"IBuyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"6040:17:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBuyTokenContract_$4345_$","typeString":"type(contract IBuyTokenContract)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBuyTokenContract_$4345","typeString":"contract IBuyTokenContract"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6076:17:11","memberName":"updateCredibility","nodeType":"MemberAccess","referencedDeclaration":4325,"src":"6040:53:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1785,"nodeType":"ExpressionStatement","src":"6040:106:11"}]}}]},"errorName":"","id":1789,"nodeType":"TryCatchClause","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"tokenInfo","nameLocation":"5924:9:11","nodeType":"VariableDeclaration","scope":1789,"src":"5887:46:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":1763,"nodeType":"UserDefinedTypeName","pathNode":{"id":1762,"name":"IAstroTokenLauncher.TokenInfo","nameLocations":["5887:19:11","5907:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":4183,"src":"5887:29:11"},"referencedDeclaration":4183,"src":"5887:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"5886:48:11"},"src":"5878:301:11"},{"block":{"id":1790,"nodeType":"Block","src":"6186:81:11","statements":[]},"errorName":"","id":1791,"nodeType":"TryCatchClause","src":"6180:87:11"}],"externalCall":{"arguments":[{"id":1760,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"5865:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1757,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5824:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1756,"name":"IAstroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"5804:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstroTokenLauncher_$4222_$","typeString":"type(contract IAstroTokenLauncher)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5804:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstroTokenLauncher_$4222","typeString":"contract IAstroTokenLauncher"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5844:20:11","memberName":"getTokenByAstrologer","nodeType":"MemberAccess","referencedDeclaration":4191,"src":"5804:60:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_TokenInfo_$4183_memory_ptr_$","typeString":"function (address) view external returns (struct IAstroTokenLauncher.TokenInfo memory)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5804:73:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":1792,"nodeType":"TryStatement","src":"5800:467:11"}]}},{"eventCall":{"arguments":[{"id":1796,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"6315:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1797,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6328:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6334:18:11","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"6328:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1799,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6354:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6360:18:11","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"6354:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1801,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"6380:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6386:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"6380:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1795,"name":"ReputationScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"6292:22:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:115:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"EmitStatement","src":"6287:120:11"}]},"functionSelector":"9f7c4688","id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"updateReputationFromWorldPrediction","nameLocation":"4335:35:11","nodeType":"FunctionDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"_astrologer","nameLocation":"4388:11:11","nodeType":"VariableDeclaration","scope":1806,"src":"4380:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"4380:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"_wasCorrect","nameLocation":"4414:11:11","nodeType":"VariableDeclaration","scope":1806,"src":"4409:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1624,"name":"bool","nodeType":"ElementaryTypeName","src":"4409:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4370:61:11"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[],"src":"4441:0:11"},"scope":2568,"src":"4326:2088:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2149,"nodeType":"Block","src":"6704:3422:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1824,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6722:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6726:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6722:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1826,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"6736:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6722:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":1830,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6766:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6770:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6766:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1829,"name":"isPredictionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"6747:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6747:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6722:55:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a6564","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6779:14:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""},"value":"Unauthorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5","typeString":"literal_string \"Unauthorized\""}],"id":1823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6714:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6714:80:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"6714:80:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1838,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"6812:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6835:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6827:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"6827:7:11","typeDescriptions":{}}},"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6812:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617374726f6c6f6765722061646472657373","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6839:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""},"value":"Invalid astrologer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b2383158c32e65fb8ad4b031f5ea76ea9165221053eeecde23f1dd3c197ccdc","typeString":"literal_string \"Invalid astrologer address\""}],"id":1837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6804:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6804:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"ExpressionStatement","src":"6804:64:11"},{"assignments":[1849],"declarations":[{"constant":false,"id":1849,"mutability":"mutable","name":"score","nameLocation":"6903:5:11","nodeType":"VariableDeclaration","scope":2149,"src":"6879:29:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"},"typeName":{"id":1848,"nodeType":"UserDefinedTypeName","pathNode":{"id":1847,"name":"ReputationScore","nameLocations":["6879:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"6879:15:11"},"referencedDeclaration":1402,"src":"6879:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"}},"visibility":"internal"}],"id":1853,"initialValue":{"baseExpression":{"id":1850,"name":"reputationScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"6911:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$1402_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore storage ref)"}},"id":1852,"indexExpression":{"id":1851,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"6928:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6911:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage","typeString":"struct ReputationScorer.ReputationScore storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6879:61:11"},{"assignments":[1856],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"breakdown","nameLocation":"6973:9:11","nodeType":"VariableDeclaration","scope":2149,"src":"6950:32:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"},"typeName":{"id":1855,"nodeType":"UserDefinedTypeName","pathNode":{"id":1854,"name":"ScoreBreakdown","nameLocations":["6950:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"6950:14:11"},"referencedDeclaration":1413,"src":"6950:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"}},"visibility":"internal"}],"id":1860,"initialValue":{"baseExpression":{"id":1857,"name":"scoreBreakdowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"6985:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$1413_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown storage ref)"}},"id":1859,"indexExpression":{"id":1858,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"7001:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6985:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage","typeString":"struct ReputationScorer.ScoreBreakdown storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6950:63:11"},{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1861,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7060:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7066:17:11","memberName":"marketPredictions","nodeType":"MemberAccess","referencedDeclaration":1393,"src":"7060:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1864,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"7086:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7060:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"7060:44:11"},{"expression":{"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1867,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7114:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7120:16:11","memberName":"dailyPredictions","nodeType":"MemberAccess","referencedDeclaration":1395,"src":"7114:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1870,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"7139:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7114:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1872,"nodeType":"ExpressionStatement","src":"7114:42:11"},{"expression":{"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1873,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7166:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7172:19:11","memberName":"oneToOnePredictions","nodeType":"MemberAccess","referencedDeclaration":1397,"src":"7166:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1876,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7194:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7166:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1878,"nodeType":"ExpressionStatement","src":"7166:48:11"},{"expression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1879,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"7224:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":1881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7230:16:11","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"7224:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"7249:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1883,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"7270:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7249:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1885,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7290:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7249:61:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7224:86:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1888,"nodeType":"ExpressionStatement","src":"7224:86:11"},{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1889,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7353:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":1891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7363:14:11","memberName":"marketAccuracy","nodeType":"MemberAccess","referencedDeclaration":1404,"src":"7353:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"7380:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7401:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7380:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7452:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7380:73:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"_marketAccurate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"7406:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7424:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7406:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7405:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1899,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"7431:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7405:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7353:100:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"nodeType":"ExpressionStatement","src":"7353:100:11"},{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1905,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7463:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":1907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7473:13:11","memberName":"dailyAccuracy","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"7463:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1908,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"7489:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7509:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7489:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7558:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7489:70:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"_dailyAccurate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"7514:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7531:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7514:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7513:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1915,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"7538:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7513:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7463:96:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"7463:96:11"},{"expression":{"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1921,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7569:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":1923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7579:16:11","memberName":"oneToOneAccuracy","nodeType":"MemberAccess","referencedDeclaration":1408,"src":"7569:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7598:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7598:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7676:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7598:79:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1927,"name":"_oneToOneAccurate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"7626:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7646:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7626:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7625:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1931,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7653:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7625:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7569:108:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1936,"nodeType":"ExpressionStatement","src":"7569:108:11"},{"assignments":[1938],"declarations":[{"constant":false,"id":1938,"mutability":"mutable","name":"totalWeight","nameLocation":"7732:11:11","nodeType":"VariableDeclaration","scope":2149,"src":"7724:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"7724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1940,"initialValue":{"hexValue":"30","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7746:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7724:23:11"},{"assignments":[1942],"declarations":[{"constant":false,"id":1942,"mutability":"mutable","name":"weightedSum","nameLocation":"7765:11:11","nodeType":"VariableDeclaration","scope":2149,"src":"7757:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"7757:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1944,"initialValue":{"hexValue":"30","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7779:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7757:23:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1945,"name":"_marketPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"7795:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7795:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1960,"nodeType":"IfStatement","src":"7791:158:11","trueBody":{"id":1959,"nodeType":"Block","src":"7819:130:11","statements":[{"expression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1948,"name":"weightedSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7833:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1949,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7848:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":1950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7858:14:11","memberName":"marketAccuracy","nodeType":"MemberAccess","referencedDeclaration":1404,"src":"7848:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7875:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"7848:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7833:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1954,"nodeType":"ExpressionStatement","src":"7833:43:11"},{"expression":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1955,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"7922:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"33","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7937:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"7922:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1958,"nodeType":"ExpressionStatement","src":"7922:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"_dailyPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"7962:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7982:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7962:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1976,"nodeType":"IfStatement","src":"7958:155:11","trueBody":{"id":1975,"nodeType":"Block","src":"7985:128:11","statements":[{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1964,"name":"weightedSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7999:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1965,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8014:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":1966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8024:13:11","memberName":"dailyAccuracy","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"8014:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8040:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8014:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"7999:42:11"},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"8086:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8101:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8086:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1974,"nodeType":"ExpressionStatement","src":"8086:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"_oneToOnePredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"8126:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8149:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8126:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1992,"nodeType":"IfStatement","src":"8122:166:11","trueBody":{"id":1991,"nodeType":"Block","src":"8152:136:11","statements":[{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1980,"name":"weightedSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"8166:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1981,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8181:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":1982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8191:16:11","memberName":"oneToOneAccuracy","nodeType":"MemberAccess","referencedDeclaration":1408,"src":"8181:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8210:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"8181:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8166:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1986,"nodeType":"ExpressionStatement","src":"8166:45:11"},{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1987,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"8261:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8276:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"8261:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"nodeType":"ExpressionStatement","src":"8261:16:11"}]}},{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1993,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8298:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":1995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8308:13:11","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":1410,"src":"8298:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1996,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"8324:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8338:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8324:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8370:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8324:47:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"weightedSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"8342:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2000,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"8356:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8342:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8298:73:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"8298:73:11"},{"expression":{"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2006,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"8381:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8387:18:11","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"8381:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2009,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8408:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":2010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:13:11","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":1410,"src":"8408:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8381:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2012,"nodeType":"ExpressionStatement","src":"8381:50:11"},{"expression":{"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2013,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"8503:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8509:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"8503:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2017,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8562:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":2018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8572:13:11","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":1410,"src":"8562:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2016,"name":"calculateReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"8532:29:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8532:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8503:83:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2021,"nodeType":"ExpressionStatement","src":"8503:83:11"},{"expression":{"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2022,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8634:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":2024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8644:14:11","memberName":"reputationTier","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"8634:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2026,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8685:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8695:13:11","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":1410,"src":"8685:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2025,"name":"calculateReputationTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"8661:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8634:75:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2030,"nodeType":"ExpressionStatement","src":"8634:75:11"},{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2031,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"8720:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8726:11:11","memberName":"lastUpdated","nodeType":"MemberAccess","referencedDeclaration":1399,"src":"8720:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2034,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8740:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8746:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"8740:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8720:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"8720:35:11"},{"expression":{"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2038,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"8765:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8771:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1401,"src":"8765:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8782:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8765:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2043,"nodeType":"ExpressionStatement","src":"8765:21:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"8838:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8867:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8859:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"8859:7:11","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8859:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8838:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2074,"nodeType":"IfStatement","src":"8834:315:11","trueBody":{"id":2073,"nodeType":"Block","src":"8871:278:11","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"astrologerId","nameLocation":"8893:12:11","nodeType":"VariableDeclaration","scope":2073,"src":"8885:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"8885:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2058,"initialValue":{"arguments":[{"id":2056,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"8962:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2053,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"8927:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2052,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"8908:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$4305_$","typeString":"type(contract IAstrologerManager)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8908:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$4305","typeString":"contract IAstrologerManager"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8946:15:11","memberName":"getAstrologerId","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"8908:53:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8908:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8885:89:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8992:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9007:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2072,"nodeType":"IfStatement","src":"8988:151:11","trueBody":{"id":2071,"nodeType":"Block","src":"9010:129:11","statements":[{"expression":{"arguments":[{"id":2066,"name":"astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"9083:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2067,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"9097:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9103:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"9097:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2063,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"9047:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2062,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"9028:18:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$4305_$","typeString":"type(contract IAstrologerManager)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9028:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$4305","typeString":"contract IAstrologerManager"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9066:16:11","memberName":"updateReputation","nodeType":"MemberAccess","referencedDeclaration":4276,"src":"9028:54:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9028:96:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2070,"nodeType":"ExpressionStatement","src":"9028:96:11"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"9200:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9228:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9220:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"9220:7:11","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9200:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"9234:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9264:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9256:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"9256:7:11","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9256:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9234:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9200:66:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2126,"nodeType":"IfStatement","src":"9196:640:11","trueBody":{"id":2125,"nodeType":"Block","src":"9268:568:11","statements":[{"clauses":[{"block":{"id":2120,"nodeType":"Block","src":"9417:321:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2098,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"9439:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":2099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9449:13:11","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"9439:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9474:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9466:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2100,"name":"address","nodeType":"ElementaryTypeName","src":"9466:7:11","typeDescriptions":{}}},"id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9466:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9439:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":2105,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"9480:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":2106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9490:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4180,"src":"9480:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9439:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2119,"nodeType":"IfStatement","src":"9435:289:11","trueBody":{"id":2118,"nodeType":"Block","src":"9500:224:11","statements":[{"expression":{"arguments":[{"expression":{"id":2112,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"9653:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":2113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9663:13:11","memberName":"tokenContract","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"9653:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2114,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"9678:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9684:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"9678:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2109,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"9617:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2108,"name":"IBuyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"9599:17:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBuyTokenContract_$4345_$","typeString":"type(contract IBuyTokenContract)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9599:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBuyTokenContract_$4345","typeString":"contract IBuyTokenContract"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9635:17:11","memberName":"updateCredibility","nodeType":"MemberAccess","referencedDeclaration":4325,"src":"9599:53:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9599:106:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"ExpressionStatement","src":"9599:106:11"}]}}]},"errorName":"","id":2121,"nodeType":"TryCatchClause","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"tokenInfo","nameLocation":"9406:9:11","nodeType":"VariableDeclaration","scope":2121,"src":"9369:46:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":2095,"nodeType":"UserDefinedTypeName","pathNode":{"id":2094,"name":"IAstroTokenLauncher.TokenInfo","nameLocations":["9369:19:11","9389:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":4183,"src":"9369:29:11"},"referencedDeclaration":4183,"src":"9369:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"9368:48:11"},"src":"9360:378:11"},{"block":{"id":2122,"nodeType":"Block","src":"9745:81:11","statements":[]},"errorName":"","id":2123,"nodeType":"TryCatchClause","src":"9739:87:11"}],"externalCall":{"arguments":[{"id":2092,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9347:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2089,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"9306:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2088,"name":"IAstroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"9286:19:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstroTokenLauncher_$4222_$","typeString":"type(contract IAstroTokenLauncher)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstroTokenLauncher_$4222","typeString":"contract IAstroTokenLauncher"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9326:20:11","memberName":"getTokenByAstrologer","nodeType":"MemberAccess","referencedDeclaration":4191,"src":"9286:60:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_TokenInfo_$4183_memory_ptr_$","typeString":"function (address) view external returns (struct IAstroTokenLauncher.TokenInfo memory)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:73:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo memory"}},"id":2124,"nodeType":"TryStatement","src":"9282:544:11"}]}},{"eventCall":{"arguments":[{"id":2128,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9874:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2129,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"9887:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9893:18:11","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"9887:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2131,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"9913:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9919:18:11","memberName":"accuracyPercentage","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"9913:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2133,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"9939:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore storage pointer"}},"id":2134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9945:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"9939:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2127,"name":"ReputationScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"9851:22:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9851:115:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2136,"nodeType":"EmitStatement","src":"9846:120:11"},{"eventCall":{"arguments":[{"id":2138,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10003:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2139,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"10016:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":2140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10026:14:11","memberName":"marketAccuracy","nodeType":"MemberAccess","referencedDeclaration":1404,"src":"10016:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2141,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"10042:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":2142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10052:13:11","memberName":"dailyAccuracy","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"10042:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2143,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"10067:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":2144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10077:16:11","memberName":"oneToOneAccuracy","nodeType":"MemberAccess","referencedDeclaration":1408,"src":"10067:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2145,"name":"breakdown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"10095:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown storage pointer"}},"id":2146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10105:13:11","memberName":"weightedScore","nodeType":"MemberAccess","referencedDeclaration":1410,"src":"10095:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2137,"name":"ScoreBreakdownUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9981:21:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9981:138:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2148,"nodeType":"EmitStatement","src":"9976:143:11"}]},"functionSelector":"adcbcde5","id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"updateReputationScore","nameLocation":"6429:21:11","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"_astrologer","nameLocation":"6468:11:11","nodeType":"VariableDeclaration","scope":2150,"src":"6460:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"6460:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"_marketPredictions","nameLocation":"6497:18:11","nodeType":"VariableDeclaration","scope":2150,"src":"6489:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"6489:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"_marketAccurate","nameLocation":"6533:15:11","nodeType":"VariableDeclaration","scope":2150,"src":"6525:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"6525:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"_dailyPredictions","nameLocation":"6566:17:11","nodeType":"VariableDeclaration","scope":2150,"src":"6558:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"6558:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"_dailyAccurate","nameLocation":"6601:14:11","nodeType":"VariableDeclaration","scope":2150,"src":"6593:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"_oneToOnePredictions","nameLocation":"6633:20:11","nodeType":"VariableDeclaration","scope":2150,"src":"6625:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6625:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"_oneToOneAccurate","nameLocation":"6671:17:11","nodeType":"VariableDeclaration","scope":2150,"src":"6663:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6663:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6450:244:11"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"6704:0:11"},"scope":2568,"src":"6420:3706:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2190,"nodeType":"Block","src":"10222:691:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"10391:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10404:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"10391:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2163,"nodeType":"IfStatement","src":"10387:95:11","trueBody":{"id":2162,"nodeType":"Block","src":"10409:73:11","statements":[{"expression":{"id":2160,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"10430:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2156,"id":2161,"nodeType":"Return","src":"10423:30:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"10504:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10517:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10504:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2170,"nodeType":"IfStatement","src":"10500:95:11","trueBody":{"id":2169,"nodeType":"Block","src":"10520:75:11","statements":[{"expression":{"id":2167,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"10541:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2156,"id":2168,"nodeType":"Return","src":"10534:30:11"}]}},{"assignments":[2172],"declarations":[{"constant":false,"id":2172,"mutability":"mutable","name":"multiplierRange","nameLocation":"10691:15:11","nodeType":"VariableDeclaration","scope":2190,"src":"10683:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"10683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2176,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2173,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"10709:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2174,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"10735:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10709:49:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10683:75:11"},{"assignments":[2178],"declarations":[{"constant":false,"id":2178,"mutability":"mutable","name":"accuracyContribution","nameLocation":"10776:20:11","nodeType":"VariableDeclaration","scope":2190,"src":"10768:28:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"10768:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2185,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"10800:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2180,"name":"multiplierRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"10812:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10800:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10799:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10831:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"10799:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10768:66:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"10860:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2187,"name":"accuracyContribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"10886:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10860:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2156,"id":2189,"nodeType":"Return","src":"10853:53:11"}]},"id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReputationMultiplier","nameLocation":"10141:29:11","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"_accuracy","nameLocation":"10179:9:11","nodeType":"VariableDeclaration","scope":2191,"src":"10171:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"10171:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10170:19:11"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2191,"src":"10213:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"10213:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10212:9:11"},"scope":2568,"src":"10132:781:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2230,"nodeType":"Block","src":"11003:345:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"11017:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3935","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11030:2:11","typeDescriptions":{"typeIdentifier":"t_rational_95_by_1","typeString":"int_const 95"},"value":"95"},"src":"11017:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2203,"nodeType":"IfStatement","src":"11013:29:11","trueBody":{"expression":{"hexValue":"35","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11041:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"functionReturnParameters":2197,"id":2202,"nodeType":"Return","src":"11034:8:11"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"11077:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3930","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:2:11","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"11077:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2209,"nodeType":"IfStatement","src":"11073:29:11","trueBody":{"expression":{"hexValue":"34","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11101:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"functionReturnParameters":2197,"id":2208,"nodeType":"Return","src":"11094:8:11"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2210,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"11137:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3835","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11150:2:11","typeDescriptions":{"typeIdentifier":"t_rational_85_by_1","typeString":"int_const 85"},"value":"85"},"src":"11137:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2215,"nodeType":"IfStatement","src":"11133:29:11","trueBody":{"expression":{"hexValue":"33","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11161:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"functionReturnParameters":2197,"id":2214,"nodeType":"Return","src":"11154:8:11"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2216,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"11199:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3830","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11212:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"11199:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"IfStatement","src":"11195:29:11","trueBody":{"expression":{"hexValue":"32","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11223:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"functionReturnParameters":2197,"id":2220,"nodeType":"Return","src":"11216:8:11"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"_accuracy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"11265:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3735","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:2:11","typeDescriptions":{"typeIdentifier":"t_rational_75_by_1","typeString":"int_const 75"},"value":"75"},"src":"11265:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2227,"nodeType":"IfStatement","src":"11261:29:11","trueBody":{"expression":{"hexValue":"31","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11289:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":2197,"id":2226,"nodeType":"Return","src":"11282:8:11"}},{"expression":{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11330:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2197,"id":2229,"nodeType":"Return","src":"11323:8:11"}]},"id":2231,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReputationTier","nameLocation":"10928:23:11","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"_accuracy","nameLocation":"10960:9:11","nodeType":"VariableDeclaration","scope":2231,"src":"10952:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"10952:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10951:19:11"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2231,"src":"10994:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2195,"name":"uint256","nodeType":"ElementaryTypeName","src":"10994:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10993:9:11"},"scope":2568,"src":"10919:429:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2243,"nodeType":"Block","src":"11450:53:11","statements":[{"expression":{"baseExpression":{"id":2239,"name":"reputationScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11467:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$1402_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore storage ref)"}},"id":2241,"indexExpression":{"id":2240,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"11484:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11467:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage","typeString":"struct ReputationScorer.ReputationScore storage ref"}},"functionReturnParameters":2238,"id":2242,"nodeType":"Return","src":"11460:36:11"}]},"functionSelector":"75a67d5c","id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationScore","nameLocation":"11363:18:11","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"_astrologer","nameLocation":"11390:11:11","nodeType":"VariableDeclaration","scope":2244,"src":"11382:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"11382:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11381:21:11"},"returnParameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"11426:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_memory_ptr","typeString":"struct ReputationScorer.ReputationScore"},"typeName":{"id":2236,"nodeType":"UserDefinedTypeName","pathNode":{"id":2235,"name":"ReputationScore","nameLocations":["11426:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"11426:15:11"},"referencedDeclaration":1402,"src":"11426:15:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage_ptr","typeString":"struct ReputationScorer.ReputationScore"}},"visibility":"internal"}],"src":"11425:24:11"},"scope":2568,"src":"11354:149:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2256,"nodeType":"Block","src":"11603:52:11","statements":[{"expression":{"baseExpression":{"id":2252,"name":"scoreBreakdowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"11620:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$1413_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown storage ref)"}},"id":2254,"indexExpression":{"id":2253,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"11636:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11620:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage","typeString":"struct ReputationScorer.ScoreBreakdown storage ref"}},"functionReturnParameters":2251,"id":2255,"nodeType":"Return","src":"11613:35:11"}]},"functionSelector":"2c27750a","id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"getScoreBreakdown","nameLocation":"11518:17:11","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"_astrologer","nameLocation":"11544:11:11","nodeType":"VariableDeclaration","scope":2257,"src":"11536:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"11536:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11535:21:11"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"11580:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_memory_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"},"typeName":{"id":2249,"nodeType":"UserDefinedTypeName","pathNode":{"id":2248,"name":"ScoreBreakdown","nameLocations":["11580:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1413,"src":"11580:14:11"},"referencedDeclaration":1413,"src":"11580:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage_ptr","typeString":"struct ReputationScorer.ScoreBreakdown"}},"visibility":"internal"}],"src":"11579:23:11"},"scope":2568,"src":"11509:146:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2269,"nodeType":"Block","src":"11747:74:11","statements":[{"expression":{"expression":{"baseExpression":{"id":2264,"name":"reputationScores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"11764:16:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReputationScore_$1402_storage_$","typeString":"mapping(address => struct ReputationScorer.ReputationScore storage ref)"}},"id":2266,"indexExpression":{"id":2265,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"11781:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11764:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_ReputationScore_$1402_storage","typeString":"struct ReputationScorer.ReputationScore storage ref"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11794:20:11","memberName":"reputationMultiplier","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"11764:50:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2263,"id":2268,"nodeType":"Return","src":"11757:57:11"}]},"functionSelector":"b107e88c","id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationMultiplier","nameLocation":"11670:23:11","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"_astrologer","nameLocation":"11702:11:11","nodeType":"VariableDeclaration","scope":2270,"src":"11694:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"11694:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11693:21:11"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"11738:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"11738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11737:9:11"},"scope":2568,"src":"11661:160:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2282,"nodeType":"Block","src":"11907:67:11","statements":[{"expression":{"expression":{"baseExpression":{"id":2277,"name":"scoreBreakdowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"11924:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ScoreBreakdown_$1413_storage_$","typeString":"mapping(address => struct ReputationScorer.ScoreBreakdown storage ref)"}},"id":2279,"indexExpression":{"id":2278,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"11940:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11924:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreBreakdown_$1413_storage","typeString":"struct ReputationScorer.ScoreBreakdown storage ref"}},"id":2280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11953:14:11","memberName":"reputationTier","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"11924:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2276,"id":2281,"nodeType":"Return","src":"11917:50:11"}]},"functionSelector":"6be2cefb","id":2283,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationTier","nameLocation":"11836:17:11","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"_astrologer","nameLocation":"11862:11:11","nodeType":"VariableDeclaration","scope":2283,"src":"11854:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"11854:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11853:21:11"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2283,"src":"11898:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"11898:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11897:9:11"},"scope":2568,"src":"11827:147:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2308,"nodeType":"Block","src":"12064:195:11","statements":[{"assignments":[2295],"declarations":[{"constant":false,"id":2295,"mutability":"mutable","name":"topAstrologers","nameLocation":"12091:14:11","nodeType":"VariableDeclaration","scope":2308,"src":"12074:31:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"12074:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2294,"nodeType":"ArrayTypeName","src":"12074:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2301,"initialValue":{"arguments":[{"id":2299,"name":"_limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"12122:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12108:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"12112:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2297,"nodeType":"ArrayTypeName","src":"12112:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12108:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12074:55:11"},{"assignments":[2303],"declarations":[{"constant":false,"id":2303,"mutability":"mutable","name":"count","nameLocation":"12147:5:11","nodeType":"VariableDeclaration","scope":2308,"src":"12139:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"12139:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2305,"initialValue":{"hexValue":"30","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12155:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12139:17:11"},{"expression":{"id":2306,"name":"topAstrologers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"12238:14:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2290,"id":2307,"nodeType":"Return","src":"12231:21:11"}]},"functionSelector":"5245420d","id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"getTopAstrologers","nameLocation":"11989:17:11","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"_limit","nameLocation":"12015:6:11","nodeType":"VariableDeclaration","scope":2309,"src":"12007:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12006:16:11"},"returnParameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"12046:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2288,"nodeType":"ArrayTypeName","src":"12046:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12045:18:11"},"scope":2568,"src":"11980:279:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2345,"nodeType":"Block","src":"12339:236:11","statements":[{"body":{"id":2341,"nodeType":"Block","src":"12393:154:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2326,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"12411:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$1422_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":2328,"indexExpression":{"id":2327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12429:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12411:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":2329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12432:15:11","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":1415,"src":"12411:36:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2330,"name":"_module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"12451:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12411:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"baseExpression":{"id":2332,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"12462:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$1422_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":2334,"indexExpression":{"id":2333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12480:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12462:20:11","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":2335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12483:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"12462:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12411:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2340,"nodeType":"IfStatement","src":"12407:130:11","trueBody":{"id":2339,"nodeType":"Block","src":"12493:44:11","statements":[{"expression":{"hexValue":"74727565","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12518:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2315,"id":2338,"nodeType":"Return","src":"12511:11:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12369:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2321,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"12374:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12369:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2342,"initializationExpression":{"assignments":[2317],"declarations":[{"constant":false,"id":2317,"mutability":"mutable","name":"i","nameLocation":"12362:1:11","nodeType":"VariableDeclaration","scope":2342,"src":"12354:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"12354:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2319,"initialValue":{"hexValue":"31","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"12354:13:11"},"loopExpression":{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12388:3:11","subExpression":{"id":2323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12388:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2325,"nodeType":"ExpressionStatement","src":"12388:3:11"},"nodeType":"ForStatement","src":"12349:198:11"},{"expression":{"hexValue":"66616c7365","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12563:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2315,"id":2344,"nodeType":"Return","src":"12556:12:11"}]},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"isPredictionModule","nameLocation":"12274:18:11","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"_module","nameLocation":"12301:7:11","nodeType":"VariableDeclaration","scope":2346,"src":"12293:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"12293:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12292:17:11"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"12333:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2313,"name":"bool","nodeType":"ElementaryTypeName","src":"12333:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12332:6:11"},"scope":2568,"src":"12265:310:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2357,"nodeType":"Block","src":"12658:55:11","statements":[{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2353,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"12668:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2354,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"12688:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12668:38:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2356,"nodeType":"ExpressionStatement","src":"12668:38:11"}]},"functionSelector":"44cda485","id":2358,"implemented":true,"kind":"function","modifiers":[{"id":2351,"kind":"modifierInvocation","modifierName":{"id":2350,"name":"onlyOwner","nameLocations":["12648:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"12648:9:11"},"nodeType":"ModifierInvocation","src":"12648:9:11"}],"name":"setAstrologerManager","nameLocation":"12590:20:11","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"_astrologerManager","nameLocation":"12619:18:11","nodeType":"VariableDeclaration","scope":2358,"src":"12611:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"12611:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12610:28:11"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[],"src":"12658:0:11"},"scope":2568,"src":"12581:132:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2369,"nodeType":"Block","src":"12794:53:11","statements":[{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2365,"name":"buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"12804:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2366,"name":"_buyTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"12823:17:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12804:36:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2368,"nodeType":"ExpressionStatement","src":"12804:36:11"}]},"functionSelector":"c3a274c2","id":2370,"implemented":true,"kind":"function","modifiers":[{"id":2363,"kind":"modifierInvocation","modifierName":{"id":2362,"name":"onlyOwner","nameLocations":["12784:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"12784:9:11"},"nodeType":"ModifierInvocation","src":"12784:9:11"}],"name":"setBuyTokenContract","nameLocation":"12728:19:11","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"_buyTokenContract","nameLocation":"12756:17:11","nodeType":"VariableDeclaration","scope":2370,"src":"12748:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"12748:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12747:27:11"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[],"src":"12794:0:11"},"scope":2568,"src":"12719:128:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2381,"nodeType":"Block","src":"12932:57:11","statements":[{"expression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"12942:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2378,"name":"_astroTokenLauncher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"12963:19:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12942:40:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2380,"nodeType":"ExpressionStatement","src":"12942:40:11"}]},"functionSelector":"e2c3538c","id":2382,"implemented":true,"kind":"function","modifiers":[{"id":2375,"kind":"modifierInvocation","modifierName":{"id":2374,"name":"onlyOwner","nameLocations":["12922:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"12922:9:11"},"nodeType":"ModifierInvocation","src":"12922:9:11"}],"name":"setAstroTokenLauncher","nameLocation":"12862:21:11","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"_astroTokenLauncher","nameLocation":"12892:19:11","nodeType":"VariableDeclaration","scope":2382,"src":"12884:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"12884:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12883:29:11"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"12932:0:11"},"scope":2568,"src":"12853:136:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2393,"nodeType":"Block","src":"13056:39:11","statements":[{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2389,"name":"zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"13066:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2390,"name":"_zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"13078:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13066:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2392,"nodeType":"ExpressionStatement","src":"13066:22:11"}]},"functionSelector":"65af67bd","id":2394,"implemented":true,"kind":"function","modifiers":[{"id":2387,"kind":"modifierInvocation","modifierName":{"id":2386,"name":"onlyOwner","nameLocations":["13046:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13046:9:11"},"nodeType":"ModifierInvocation","src":"13046:9:11"}],"name":"setZodiacDAO","nameLocation":"13004:12:11","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"_zodiacDAO","nameLocation":"13025:10:11","nodeType":"VariableDeclaration","scope":2394,"src":"13017:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2383,"name":"address","nodeType":"ElementaryTypeName","src":"13017:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13016:20:11"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"13056:0:11"},"scope":2568,"src":"12995:100:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2405,"nodeType":"Block","src":"13186:63:11","statements":[{"expression":{"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2401,"name":"worldPredictionMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"13196:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2402,"name":"_worldPredictionMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"13220:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13196:46:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2404,"nodeType":"ExpressionStatement","src":"13196:46:11"}]},"functionSelector":"106bdcf5","id":2406,"implemented":true,"kind":"function","modifiers":[{"id":2399,"kind":"modifierInvocation","modifierName":{"id":2398,"name":"onlyOwner","nameLocations":["13176:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13176:9:11"},"nodeType":"ModifierInvocation","src":"13176:9:11"}],"name":"setWorldPredictionMarket","nameLocation":"13110:24:11","nodeType":"FunctionDefinition","parameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"_worldPredictionMarket","nameLocation":"13143:22:11","nodeType":"VariableDeclaration","scope":2406,"src":"13135:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2395,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13134:32:11"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"13186:0:11"},"scope":2568,"src":"13101:148:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2417,"nodeType":"Block","src":"13334:57:11","statements":[{"expression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2413,"name":"minPredictionsForScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"13344:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2414,"name":"_minPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"13369:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13344:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2416,"nodeType":"ExpressionStatement","src":"13344:40:11"}]},"functionSelector":"9f68871d","id":2418,"implemented":true,"kind":"function","modifiers":[{"id":2411,"kind":"modifierInvocation","modifierName":{"id":2410,"name":"onlyOwner","nameLocations":["13324:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13324:9:11"},"nodeType":"ModifierInvocation","src":"13324:9:11"}],"name":"setMinPredictionsForScore","nameLocation":"13264:25:11","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"_minPredictions","nameLocation":"13298:15:11","nodeType":"VariableDeclaration","scope":2418,"src":"13290:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"13290:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13289:25:11"},"returnParameters":{"id":2412,"nodeType":"ParameterList","parameters":[],"src":"13334:0:11"},"scope":2568,"src":"13255:136:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2429,"nodeType":"Block","src":"13461:42:11","statements":[{"expression":{"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2425,"name":"scoreUpdateDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"13471:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2426,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"13490:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13471:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2428,"nodeType":"ExpressionStatement","src":"13471:25:11"}]},"functionSelector":"e6f95583","id":2430,"implemented":true,"kind":"function","modifiers":[{"id":2423,"kind":"modifierInvocation","modifierName":{"id":2422,"name":"onlyOwner","nameLocations":["13451:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13451:9:11"},"nodeType":"ModifierInvocation","src":"13451:9:11"}],"name":"setScoreUpdateDelay","nameLocation":"13406:19:11","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"_delay","nameLocation":"13434:6:11","nodeType":"VariableDeclaration","scope":2430,"src":"13426:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"13426:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13425:16:11"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[],"src":"13461:0:11"},"scope":2568,"src":"13397:106:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2441,"nodeType":"Block","src":"13580:49:11","statements":[{"expression":{"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2437,"name":"reputationDecayRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"13590:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2438,"name":"_decayRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"13612:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13590:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2440,"nodeType":"ExpressionStatement","src":"13590:32:11"}]},"functionSelector":"4cba103e","id":2442,"implemented":true,"kind":"function","modifiers":[{"id":2435,"kind":"modifierInvocation","modifierName":{"id":2434,"name":"onlyOwner","nameLocations":["13570:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13570:9:11"},"nodeType":"ModifierInvocation","src":"13570:9:11"}],"name":"setReputationDecayRate","nameLocation":"13518:22:11","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"_decayRate","nameLocation":"13549:10:11","nodeType":"VariableDeclaration","scope":2442,"src":"13541:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"13541:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13540:20:11"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[],"src":"13580:0:11"},"scope":2568,"src":"13509:120:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2471,"nodeType":"Block","src":"13705:177:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"13723:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13735:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13723:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"13740:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2454,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"13753:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13740:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13723:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d6f64756c65204944","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13767:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4432bc9a1666e2d0de0e0f9f41101175b2992444c68ddd1d0b446f479d2369c2","typeString":"literal_string \"Invalid module ID\""},"value":"Invalid module ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4432bc9a1666e2d0de0e0f9f41101175b2992444c68ddd1d0b446f479d2369c2","typeString":"literal_string \"Invalid module ID\""}],"id":2449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13715:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13715:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2459,"nodeType":"ExpressionStatement","src":"13715:72:11"},{"expression":{"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2460,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"13797:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$1422_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":2462,"indexExpression":{"id":2461,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"13815:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13797:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":2463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13826:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"13797:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13837:38:11","subExpression":{"expression":{"baseExpression":{"id":2464,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"13838:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$1422_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":2466,"indexExpression":{"id":2465,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"13856:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13838:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":2467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13867:8:11","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"13838:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13797:78:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2470,"nodeType":"ExpressionStatement","src":"13797:78:11"}]},"functionSelector":"893849de","id":2472,"implemented":true,"kind":"function","modifiers":[{"id":2447,"kind":"modifierInvocation","modifierName":{"id":2446,"name":"onlyOwner","nameLocations":["13695:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13695:9:11"},"nodeType":"ModifierInvocation","src":"13695:9:11"}],"name":"togglePredictionModule","nameLocation":"13644:22:11","nodeType":"FunctionDefinition","parameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"_moduleId","nameLocation":"13675:9:11","nodeType":"VariableDeclaration","scope":2472,"src":"13667:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"13667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13666:19:11"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[],"src":"13705:0:11"},"scope":2568,"src":"13635:247:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2506,"nodeType":"Block","src":"13974:213:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"13992:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14004:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13992:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"14009:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2486,"name":"totalModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"14022:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14009:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13992:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d6f64756c65204944","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14036:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4432bc9a1666e2d0de0e0f9f41101175b2992444c68ddd1d0b446f479d2369c2","typeString":"literal_string \"Invalid module ID\""},"value":"Invalid module ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4432bc9a1666e2d0de0e0f9f41101175b2992444c68ddd1d0b446f479d2369c2","typeString":"literal_string \"Invalid module ID\""}],"id":2481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13984:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2491,"nodeType":"ExpressionStatement","src":"13984:72:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"_newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"14074:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14087:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14074:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576569676874206d7573742062652067726561746572207468616e2030","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14090:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""},"value":"Weight must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""}],"id":2492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14066:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14066:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2498,"nodeType":"ExpressionStatement","src":"14066:56:11"},{"expression":{"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2499,"name":"predictionModules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"14132:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PredictionModule_$1422_storage_$","typeString":"mapping(uint256 => struct ReputationScorer.PredictionModule storage ref)"}},"id":2501,"indexExpression":{"id":2500,"name":"_moduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"14150:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14132:28:11","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionModule_$1422_storage","typeString":"struct ReputationScorer.PredictionModule storage ref"}},"id":2502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14161:6:11","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"14132:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2503,"name":"_newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"14170:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14132:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2505,"nodeType":"ExpressionStatement","src":"14132:48:11"}]},"functionSelector":"9754cfd1","id":2507,"implemented":true,"kind":"function","modifiers":[{"id":2479,"kind":"modifierInvocation","modifierName":{"id":2478,"name":"onlyOwner","nameLocations":["13964:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"13964:9:11"},"nodeType":"ModifierInvocation","src":"13964:9:11"}],"name":"updateModuleWeight","nameLocation":"13897:18:11","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"_moduleId","nameLocation":"13924:9:11","nodeType":"VariableDeclaration","scope":2507,"src":"13916:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"13916:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"_newWeight","nameLocation":"13943:10:11","nodeType":"VariableDeclaration","scope":2507,"src":"13935:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"13935:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13915:39:11"},"returnParameters":{"id":2480,"nodeType":"ParameterList","parameters":[],"src":"13974:0:11"},"scope":2568,"src":"13888:299:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2545,"nodeType":"Block","src":"14294:360:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"_maxMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"14312:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2518,"name":"_minMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"14329:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14312:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178206d7573742062652067726561746572207468616e206d696e","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14345:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_61d0c281bad020c47ec6f2801de2e56dc066854a8b9ad695cfc8a5e8de45a38e","typeString":"literal_string \"Max must be greater than min\""},"value":"Max must be greater than min"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61d0c281bad020c47ec6f2801de2e56dc066854a8b9ad695cfc8a5e8de45a38e","typeString":"literal_string \"Max must be greater than min\""}],"id":2516,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14304:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14304:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2522,"nodeType":"ExpressionStatement","src":"14304:72:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"_minMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"14394:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14412:3:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"14394:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e206d756c7469706c696572206d757374206265206174206c6561737420302e3178","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14417:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_0fc7e32423aaef9679cf82901f970d035e235c14e3c89af0a74d6f99eacfd4f6","typeString":"literal_string \"Min multiplier must be at least 0.1x\""},"value":"Min multiplier must be at least 0.1x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0fc7e32423aaef9679cf82901f970d035e235c14e3c89af0a74d6f99eacfd4f6","typeString":"literal_string \"Min multiplier must be at least 0.1x\""}],"id":2523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14386:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14386:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2529,"nodeType":"ExpressionStatement","src":"14386:70:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"_maxMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"14474:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130303030","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14492:5:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"14474:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178206d756c7469706c696572206d757374206265206174206d6f73742031302e3078","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14499:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae33eea7ea24c925addb12addc0d5bc8e8f0a74e98a84766d77bc571cd574988","typeString":"literal_string \"Max multiplier must be at most 10.0x\""},"value":"Max multiplier must be at most 10.0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae33eea7ea24c925addb12addc0d5bc8e8f0a74e98a84766d77bc571cd574988","typeString":"literal_string \"Max multiplier must be at most 10.0x\""}],"id":2530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14466:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14466:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2536,"nodeType":"ExpressionStatement","src":"14466:72:11"},{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"14557:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2538,"name":"_maxMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"14583:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14557:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"14557:40:11"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"14607:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2542,"name":"_minMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"14633:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14607:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"14607:40:11"}]},"functionSelector":"58bd9b93","id":2546,"implemented":true,"kind":"function","modifiers":[{"id":2514,"kind":"modifierInvocation","modifierName":{"id":2513,"name":"onlyOwner","nameLocations":["14284:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"14284:9:11"},"nodeType":"ModifierInvocation","src":"14284:9:11"}],"name":"setReputationMultipliers","nameLocation":"14202:24:11","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"_maxMultiplier","nameLocation":"14235:14:11","nodeType":"VariableDeclaration","scope":2546,"src":"14227:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"14227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"_minMultiplier","nameLocation":"14259:14:11","nodeType":"VariableDeclaration","scope":2546,"src":"14251:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"14251:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14226:48:11"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[],"src":"14294:0:11"},"scope":2568,"src":"14193:461:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2557,"nodeType":"Block","src":"14749:74:11","statements":[{"expression":{"components":[{"id":2553,"name":"maxReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"14767:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2554,"name":"minReputationMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"14792:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14766:50:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2552,"id":2556,"nodeType":"Return","src":"14759:57:11"}]},"functionSelector":"3d9617be","id":2558,"implemented":true,"kind":"function","modifiers":[],"name":"getReputationMultiplierRange","nameLocation":"14669:28:11","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[],"src":"14697:2:11"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"max","nameLocation":"14731:3:11","nodeType":"VariableDeclaration","scope":2558,"src":"14723:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"14723:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"min","nameLocation":"14744:3:11","nodeType":"VariableDeclaration","scope":2558,"src":"14736:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"14736:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14722:26:11"},"scope":2568,"src":"14660:163:11","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[795],"body":{"id":2566,"nodeType":"Block","src":"14911:2:11","statements":[]},"id":2567,"implemented":true,"kind":"function","modifiers":[{"id":2564,"kind":"modifierInvocation","modifierName":{"id":2563,"name":"onlyOwner","nameLocations":["14901:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"14901:9:11"},"nodeType":"ModifierInvocation","src":"14901:9:11"}],"name":"_authorizeUpgrade","nameLocation":"14838:17:11","nodeType":"FunctionDefinition","overrides":{"id":2562,"nodeType":"OverrideSpecifier","overrides":[],"src":"14892:8:11"},"parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"newImplementation","nameLocation":"14864:17:11","nodeType":"VariableDeclaration","scope":2567,"src":"14856:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"14856:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14855:27:11"},"returnParameters":{"id":2565,"nodeType":"ParameterList","parameters":[],"src":"14911:0:11"},"scope":2568,"src":"14829:84:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2569,"src":"502:14413:11","usedErrors":[]}],"src":"32:14884:11"},"id":11},"contracts/WorldPredictionMarket.sol":{"ast":{"absolutePath":"contracts/WorldPredictionMarket.sol","exportedSymbols":{"AddressUpgradeable":[1131],"ContextUpgradeable":[1173],"CountersUpgradeable":[1247],"ERC1967UpgradeUpgradeable":[486],"IAstrologerManager":[4305],"IBeaconUpgradeable":[496],"IERC1822ProxiableUpgradeable":[162],"IERC1967Upgradeable":[152],"IERC721":[4160],"IReputationScorer":[4389],"Initializable":[665],"OwnableUpgradeable":[131],"StorageSlotUpgradeable":[1357],"UUPSUpgradeable":[801],"WorldPredictionMarket":[4145]},"id":4161,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2570,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4161,"sourceUnit":132,"src":"57:75:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4161,"sourceUnit":666,"src":"133:75:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4161,"sourceUnit":802,"src":"209:77:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","id":2574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4161,"sourceUnit":1248,"src":"287:75:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAstrologerManager.sol","file":"./interfaces/IAstrologerManager.sol","id":2575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4161,"sourceUnit":4306,"src":"363:45:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IReputationScorer.sol","file":"./interfaces/IReputationScorer.sol","id":2576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4161,"sourceUnit":4390,"src":"409:44:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2577,"name":"Initializable","nameLocations":["494:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":665,"src":"494:13:12"},"id":2578,"nodeType":"InheritanceSpecifier","src":"494:13:12"},{"baseName":{"id":2579,"name":"OwnableUpgradeable","nameLocations":["514:18:12"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"514:18:12"},"id":2580,"nodeType":"InheritanceSpecifier","src":"514:18:12"},{"baseName":{"id":2581,"name":"UUPSUpgradeable","nameLocations":["539:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":801,"src":"539:15:12"},"id":2582,"nodeType":"InheritanceSpecifier","src":"539:15:12"}],"canonicalName":"WorldPredictionMarket","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4145,"linearizedBaseContracts":[4145,801,486,152,162,131,1173,665],"name":"WorldPredictionMarket","nameLocation":"464:21:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2586,"libraryName":{"id":2583,"name":"CountersUpgradeable","nameLocations":["568:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"568:19:12"},"nodeType":"UsingForDirective","src":"562:58:12","typeName":{"id":2585,"nodeType":"UserDefinedTypeName","pathNode":{"id":2584,"name":"CountersUpgradeable.Counter","nameLocations":["592:19:12","612:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"592:27:12"},"referencedDeclaration":1179,"src":"592:27:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":2589,"mutability":"mutable","name":"_predictionIds","nameLocation":"662:14:12","nodeType":"VariableDeclaration","scope":4145,"src":"626:50:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":2588,"nodeType":"UserDefinedTypeName","pathNode":{"id":2587,"name":"CountersUpgradeable.Counter","nameLocations":["626:19:12","646:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"626:27:12"},"referencedDeclaration":1179,"src":"626:27:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"private"},{"canonicalName":"WorldPredictionMarket.WorldPrediction","id":2622,"members":[{"constant":false,"id":2591,"mutability":"mutable","name":"id","nameLocation":"728:2:12","nodeType":"VariableDeclaration","scope":2622,"src":"720:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"astrologer","nameLocation":"748:10:12","nodeType":"VariableDeclaration","scope":2622,"src":"740:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"astrologerId","nameLocation":"776:12:12","nodeType":"VariableDeclaration","scope":2622,"src":"768:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"title","nameLocation":"805:5:12","nodeType":"VariableDeclaration","scope":2622,"src":"798:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2596,"name":"string","nodeType":"ElementaryTypeName","src":"798:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"description","nameLocation":"827:11:12","nodeType":"VariableDeclaration","scope":2622,"src":"820:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2598,"name":"string","nodeType":"ElementaryTypeName","src":"820:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"deadline","nameLocation":"856:8:12","nodeType":"VariableDeclaration","scope":2622,"src":"848:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"astrologerStake","nameLocation":"882:15:12","nodeType":"VariableDeclaration","scope":2622,"src":"874:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"totalVoterStake","nameLocation":"915:15:12","nodeType":"VariableDeclaration","scope":2622,"src":"907:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"yesVoterStake","nameLocation":"948:13:12","nodeType":"VariableDeclaration","scope":2622,"src":"940:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"noVoterStake","nameLocation":"979:12:12","nodeType":"VariableDeclaration","scope":2622,"src":"971:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"totalVoters","nameLocation":"1009:11:12","nodeType":"VariableDeclaration","scope":2622,"src":"1001:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"isResolved","nameLocation":"1035:10:12","nodeType":"VariableDeclaration","scope":2622,"src":"1030:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2612,"name":"bool","nodeType":"ElementaryTypeName","src":"1030:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"outcome","nameLocation":"1060:7:12","nodeType":"VariableDeclaration","scope":2622,"src":"1055:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2614,"name":"bool","nodeType":"ElementaryTypeName","src":"1055:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"daoVotingActive","nameLocation":"1082:15:12","nodeType":"VariableDeclaration","scope":2622,"src":"1077:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"1077:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"createdAt","nameLocation":"1115:9:12","nodeType":"VariableDeclaration","scope":2622,"src":"1107:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"resolvedAt","nameLocation":"1142:10:12","nodeType":"VariableDeclaration","scope":2622,"src":"1134:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WorldPrediction","nameLocation":"694:15:12","nodeType":"StructDefinition","scope":4145,"src":"687:472:12","visibility":"public"},{"canonicalName":"WorldPredictionMarket.Vote","id":2631,"members":[{"constant":false,"id":2624,"mutability":"mutable","name":"hasVoted","nameLocation":"1192:8:12","nodeType":"VariableDeclaration","scope":2631,"src":"1187:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2623,"name":"bool","nodeType":"ElementaryTypeName","src":"1187:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"vote","nameLocation":"1215:4:12","nodeType":"VariableDeclaration","scope":2631,"src":"1210:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2625,"name":"bool","nodeType":"ElementaryTypeName","src":"1210:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"stakeAmount","nameLocation":"1263:11:12","nodeType":"VariableDeclaration","scope":2631,"src":"1255:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1255:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"rewardClaimed","nameLocation":"1289:13:12","nodeType":"VariableDeclaration","scope":2631,"src":"1284:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2629,"name":"bool","nodeType":"ElementaryTypeName","src":"1284:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Vote","nameLocation":"1172:4:12","nodeType":"StructDefinition","scope":4145,"src":"1165:144:12","visibility":"public"},{"canonicalName":"WorldPredictionMarket.DAOVote","id":2638,"members":[{"constant":false,"id":2633,"mutability":"mutable","name":"hasVoted","nameLocation":"1345:8:12","nodeType":"VariableDeclaration","scope":2638,"src":"1340:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2632,"name":"bool","nodeType":"ElementaryTypeName","src":"1340:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"vote","nameLocation":"1368:4:12","nodeType":"VariableDeclaration","scope":2638,"src":"1363:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2634,"name":"bool","nodeType":"ElementaryTypeName","src":"1363:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"tokenId","nameLocation":"1438:7:12","nodeType":"VariableDeclaration","scope":2638,"src":"1430:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DAOVote","nameLocation":"1322:7:12","nodeType":"StructDefinition","scope":4145,"src":"1315:137:12","visibility":"public"},{"canonicalName":"WorldPredictionMarket.PredictionStats","id":2647,"members":[{"constant":false,"id":2640,"mutability":"mutable","name":"totalPredictions","nameLocation":"1499:16:12","nodeType":"VariableDeclaration","scope":2647,"src":"1491:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"activePredictions","nameLocation":"1533:17:12","nodeType":"VariableDeclaration","scope":2647,"src":"1525:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"resolvedPredictions","nameLocation":"1568:19:12","nodeType":"VariableDeclaration","scope":2647,"src":"1560:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"totalVolume","nameLocation":"1605:11:12","nodeType":"VariableDeclaration","scope":2647,"src":"1597:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PredictionStats","nameLocation":"1465:15:12","nodeType":"StructDefinition","scope":4145,"src":"1458:165:12","visibility":"public"},{"constant":false,"functionSelector":"004fbbb0","id":2652,"mutability":"mutable","name":"predictions","nameLocation":"1672:11:12","nodeType":"VariableDeclaration","scope":4145,"src":"1629:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction)"},"typeName":{"id":2651,"keyType":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1629:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction)"},"valueType":{"id":2650,"nodeType":"UserDefinedTypeName","pathNode":{"id":2649,"name":"WorldPrediction","nameLocations":["1648:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"1648:15:12"},"referencedDeclaration":2622,"src":"1648:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}}},"visibility":"public"},{"constant":false,"functionSelector":"d23254b4","id":2659,"mutability":"mutable","name":"votes","nameLocation":"1741:5:12","nodeType":"VariableDeclaration","scope":4145,"src":"1689:57:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.Vote))"},"typeName":{"id":2658,"keyType":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1689:44:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.Vote))"},"valueType":{"id":2657,"keyType":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1708:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.Vote)"},"valueType":{"id":2656,"nodeType":"UserDefinedTypeName","pathNode":{"id":2655,"name":"Vote","nameLocations":["1727:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2631,"src":"1727:4:12"},"referencedDeclaration":2631,"src":"1727:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote"}}}},"visibility":"public"},{"constant":false,"functionSelector":"78640668","id":2666,"mutability":"mutable","name":"daoVotes","nameLocation":"1807:8:12","nodeType":"VariableDeclaration","scope":4145,"src":"1752:63:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.DAOVote))"},"typeName":{"id":2665,"keyType":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1752:47:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.DAOVote))"},"valueType":{"id":2664,"keyType":{"id":2661,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1771:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.DAOVote)"},"valueType":{"id":2663,"nodeType":"UserDefinedTypeName","pathNode":{"id":2662,"name":"DAOVote","nameLocations":["1790:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2638,"src":"1790:7:12"},"referencedDeclaration":2638,"src":"1790:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_DAOVote_$2638_storage_ptr","typeString":"struct WorldPredictionMarket.DAOVote"}}}},"visibility":"public"},{"constant":false,"functionSelector":"533a12a5","id":2670,"mutability":"mutable","name":"daoYesVotes","nameLocation":"1856:11:12","nodeType":"VariableDeclaration","scope":4145,"src":"1821:46:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2669,"keyType":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1821:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1840:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"256c52d3","id":2674,"mutability":"mutable","name":"daoNoVotes","nameLocation":"1908:10:12","nodeType":"VariableDeclaration","scope":4145,"src":"1873:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2673,"keyType":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1873:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"1892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"37562b29","id":2679,"mutability":"mutable","name":"astrologerPredictions","nameLocation":"1961:21:12","nodeType":"VariableDeclaration","scope":4145,"src":"1924:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":2678,"keyType":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1924:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1943:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2677,"nodeType":"ArrayTypeName","src":"1943:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"8b3511f7","id":2684,"mutability":"mutable","name":"userVotes","nameLocation":"2025:9:12","nodeType":"VariableDeclaration","scope":4145,"src":"1988:46:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":2683,"keyType":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"1996:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1988:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueType":{"baseType":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"2007:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2682,"nodeType":"ArrayTypeName","src":"2007:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"6fd31a41","id":2686,"mutability":"mutable","name":"astrologerManager","nameLocation":"2060:17:12","nodeType":"VariableDeclaration","scope":4145,"src":"2045:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2685,"name":"address","nodeType":"ElementaryTypeName","src":"2045:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b488202d","id":2688,"mutability":"mutable","name":"astroChartNFT","nameLocation":"2098:13:12","nodeType":"VariableDeclaration","scope":4145,"src":"2083:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ab76c9ed","id":2690,"mutability":"mutable","name":"zodiacDAO","nameLocation":"2132:9:12","nodeType":"VariableDeclaration","scope":4145,"src":"2117:24:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2689,"name":"address","nodeType":"ElementaryTypeName","src":"2117:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"73c84d21","id":2692,"mutability":"mutable","name":"reputationScorer","nameLocation":"2162:16:12","nodeType":"VariableDeclaration","scope":4145,"src":"2147:31:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"63ab68ef","id":2694,"mutability":"mutable","name":"minAstrologerStake","nameLocation":"2204:18:12","nodeType":"VariableDeclaration","scope":4145,"src":"2189:33:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f7333e33","id":2696,"mutability":"mutable","name":"minVoterStake","nameLocation":"2243:13:12","nodeType":"VariableDeclaration","scope":4145,"src":"2228:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2228:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"0e8c47f2","id":2698,"mutability":"mutable","name":"maxVoterStake","nameLocation":"2277:13:12","nodeType":"VariableDeclaration","scope":4145,"src":"2262:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"72f022c2","id":2700,"mutability":"mutable","name":"daoVotingDuration","nameLocation":"2311:17:12","nodeType":"VariableDeclaration","scope":4145,"src":"2296:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d75ebce5","id":2702,"mutability":"mutable","name":"astrologerRewardPercentage","nameLocation":"2349:26:12","nodeType":"VariableDeclaration","scope":4145,"src":"2334:41:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"cdd78cfc","id":2704,"mutability":"mutable","name":"platformFeePercentage","nameLocation":"2408:21:12","nodeType":"VariableDeclaration","scope":4145,"src":"2393:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2393:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b6bb1754","id":2707,"mutability":"mutable","name":"predictionStats","nameLocation":"2475:15:12","nodeType":"VariableDeclaration","scope":4145,"src":"2452:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionStats_$2647_storage","typeString":"struct WorldPredictionMarket.PredictionStats"},"typeName":{"id":2706,"nodeType":"UserDefinedTypeName","pathNode":{"id":2705,"name":"PredictionStats","nameLocations":["2452:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2647,"src":"2452:15:12"},"referencedDeclaration":2647,"src":"2452:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionStats_$2647_storage_ptr","typeString":"struct WorldPredictionMarket.PredictionStats"}},"visibility":"public"},{"anonymous":false,"eventSelector":"37f3edf7ed237f91fd6999d49411c7e10b3602f2e561a5adf21934775659c61a","id":2719,"name":"PredictionCreated","nameLocation":"2507:17:12","nodeType":"EventDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"indexed":true,"mutability":"mutable","name":"predictionId","nameLocation":"2550:12:12","nodeType":"VariableDeclaration","scope":2719,"src":"2534:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"2534:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2711,"indexed":true,"mutability":"mutable","name":"astrologer","nameLocation":"2588:10:12","nodeType":"VariableDeclaration","scope":2719,"src":"2572:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"2572:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2713,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"2615:5:12","nodeType":"VariableDeclaration","scope":2719,"src":"2608:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2712,"name":"string","nodeType":"ElementaryTypeName","src":"2608:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2715,"indexed":false,"mutability":"mutable","name":"deadline","nameLocation":"2638:8:12","nodeType":"VariableDeclaration","scope":2719,"src":"2630:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2630:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2717,"indexed":false,"mutability":"mutable","name":"astrologerStake","nameLocation":"2664:15:12","nodeType":"VariableDeclaration","scope":2719,"src":"2656:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2524:161:12"},"src":"2501:185:12"},{"anonymous":false,"eventSelector":"cbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e","id":2729,"name":"VoteCast","nameLocation":"2698:8:12","nodeType":"EventDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"indexed":true,"mutability":"mutable","name":"predictionId","nameLocation":"2732:12:12","nodeType":"VariableDeclaration","scope":2729,"src":"2716:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2716:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2723,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"2770:5:12","nodeType":"VariableDeclaration","scope":2729,"src":"2754:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"2754:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2725,"indexed":false,"mutability":"mutable","name":"vote","nameLocation":"2790:4:12","nodeType":"VariableDeclaration","scope":2729,"src":"2785:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2724,"name":"bool","nodeType":"ElementaryTypeName","src":"2785:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2727,"indexed":false,"mutability":"mutable","name":"stakeAmount","nameLocation":"2812:11:12","nodeType":"VariableDeclaration","scope":2729,"src":"2804:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2706:123:12"},"src":"2692:138:12"},{"anonymous":false,"eventSelector":"f34f077f143d412407a903c03d8d2132b5dd9c006763fdf1fc57f5133610e64f","id":2739,"name":"DAOVoteCast","nameLocation":"2842:11:12","nodeType":"EventDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"indexed":true,"mutability":"mutable","name":"predictionId","nameLocation":"2879:12:12","nodeType":"VariableDeclaration","scope":2739,"src":"2863:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"2863:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2733,"indexed":true,"mutability":"mutable","name":"daoMember","nameLocation":"2917:9:12","nodeType":"VariableDeclaration","scope":2739,"src":"2901:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"2901:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2735,"indexed":false,"mutability":"mutable","name":"vote","nameLocation":"2941:4:12","nodeType":"VariableDeclaration","scope":2739,"src":"2936:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2734,"name":"bool","nodeType":"ElementaryTypeName","src":"2936:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2737,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2963:7:12","nodeType":"VariableDeclaration","scope":2739,"src":"2955:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2853:123:12"},"src":"2836:141:12"},{"anonymous":false,"eventSelector":"1ee447de28c6ff53bc0403bdbc8f4114866f73b12fc451b0605fc923b02b65bf","id":2749,"name":"PredictionResolved","nameLocation":"2989:18:12","nodeType":"EventDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"indexed":true,"mutability":"mutable","name":"predictionId","nameLocation":"3033:12:12","nodeType":"VariableDeclaration","scope":2749,"src":"3017:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"3017:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2743,"indexed":false,"mutability":"mutable","name":"outcome","nameLocation":"3060:7:12","nodeType":"VariableDeclaration","scope":2749,"src":"3055:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2742,"name":"bool","nodeType":"ElementaryTypeName","src":"3055:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2745,"indexed":false,"mutability":"mutable","name":"totalStake","nameLocation":"3085:10:12","nodeType":"VariableDeclaration","scope":2749,"src":"3077:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3077:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2747,"indexed":false,"mutability":"mutable","name":"astrologerReward","nameLocation":"3113:16:12","nodeType":"VariableDeclaration","scope":2749,"src":"3105:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3105:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3007:128:12"},"src":"2983:153:12"},{"anonymous":false,"eventSelector":"24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7","id":2757,"name":"RewardClaimed","nameLocation":"3148:13:12","nodeType":"EventDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"indexed":true,"mutability":"mutable","name":"predictionId","nameLocation":"3187:12:12","nodeType":"VariableDeclaration","scope":2757,"src":"3171:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2753,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"3225:7:12","nodeType":"VariableDeclaration","scope":2757,"src":"3209:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2752,"name":"address","nodeType":"ElementaryTypeName","src":"3209:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2755,"indexed":false,"mutability":"mutable","name":"rewardAmount","nameLocation":"3250:12:12","nodeType":"VariableDeclaration","scope":2757,"src":"3242:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3161:107:12"},"src":"3142:127:12"},{"anonymous":false,"eventSelector":"c83104e48f44c8c7b89a4dec1259a93bffcef18013dc1ac5891a260de98a50e5","id":2763,"name":"DAOVotingStarted","nameLocation":"3281:16:12","nodeType":"EventDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"indexed":true,"mutability":"mutable","name":"predictionId","nameLocation":"3323:12:12","nodeType":"VariableDeclaration","scope":2763,"src":"3307:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"3307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2761,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"3353:7:12","nodeType":"VariableDeclaration","scope":2763,"src":"3345:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3297:69:12"},"src":"3275:92:12"},{"body":{"id":2770,"nodeType":"Block","src":"3440:39:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2767,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"3450:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2769,"nodeType":"ExpressionStatement","src":"3450:22:12"}]},"documentation":{"id":2764,"nodeType":"StructuredDocumentation","src":"3373:48:12","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":2771,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[],"src":"3437:2:12"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[],"src":"3440:0:12"},"scope":4145,"src":"3426:53:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2836,"nodeType":"Block","src":"3762:499:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2790,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3772:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3772:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2792,"nodeType":"ExpressionStatement","src":"3772:16:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2793,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3798:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3798:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2795,"nodeType":"ExpressionStatement","src":"3798:24:12"},{"expression":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2796,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"3841:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2797,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"3861:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3841:38:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2799,"nodeType":"ExpressionStatement","src":"3841:38:12"},{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2800,"name":"astroChartNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"3889:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2801,"name":"_astroChartNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"3905:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3889:30:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2803,"nodeType":"ExpressionStatement","src":"3889:30:12"},{"expression":{"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2804,"name":"zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"3929:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2805,"name":"_zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"3941:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3929:22:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2807,"nodeType":"ExpressionStatement","src":"3929:22:12"},{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2808,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"3961:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2809,"name":"_reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"3980:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3961:36:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2811,"nodeType":"ExpressionStatement","src":"3961:36:12"},{"expression":{"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2812,"name":"minAstrologerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4007:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2813,"name":"_minAstrologerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"4028:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4007:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2815,"nodeType":"ExpressionStatement","src":"4007:40:12"},{"expression":{"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2816,"name":"minVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"4057:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2817,"name":"_minVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"4073:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4057:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2819,"nodeType":"ExpressionStatement","src":"4057:30:12"},{"expression":{"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2820,"name":"maxVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"4097:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2821,"name":"_maxVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"4113:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4097:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2823,"nodeType":"ExpressionStatement","src":"4097:30:12"},{"expression":{"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2824,"name":"daoVotingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"4137:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"37","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4157:6:12","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"src":"4137:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2827,"nodeType":"ExpressionStatement","src":"4137:26:12"},{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2828,"name":"astrologerRewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4173:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"353030","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4202:3:12","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"4173:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2831,"nodeType":"ExpressionStatement","src":"4173:32:12"},{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2832,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"4221:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323030","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4245:3:12","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"src":"4221:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ExpressionStatement","src":"4221:27:12"}]},"functionSelector":"e77fc7a4","id":2837,"implemented":true,"kind":"function","modifiers":[{"id":2788,"kind":"modifierInvocation","modifierName":{"id":2787,"name":"initializer","nameLocations":["3750:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":567,"src":"3750:11:12"},"nodeType":"ModifierInvocation","src":"3750:11:12"}],"name":"initialize","nameLocation":"3494:10:12","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"_astrologerManager","nameLocation":"3522:18:12","nodeType":"VariableDeclaration","scope":2837,"src":"3514:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"_astroChartNFT","nameLocation":"3558:14:12","nodeType":"VariableDeclaration","scope":2837,"src":"3550:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2774,"name":"address","nodeType":"ElementaryTypeName","src":"3550:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"_zodiacDAO","nameLocation":"3590:10:12","nodeType":"VariableDeclaration","scope":2837,"src":"3582:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2776,"name":"address","nodeType":"ElementaryTypeName","src":"3582:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"_reputationScorer","nameLocation":"3618:17:12","nodeType":"VariableDeclaration","scope":2837,"src":"3610:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"_minAstrologerStake","nameLocation":"3653:19:12","nodeType":"VariableDeclaration","scope":2837,"src":"3645:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"_minVoterStake","nameLocation":"3690:14:12","nodeType":"VariableDeclaration","scope":2837,"src":"3682:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"3682:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"_maxVoterStake","nameLocation":"3722:14:12","nodeType":"VariableDeclaration","scope":2837,"src":"3714:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3504:238:12"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[],"src":"3762:0:12"},"scope":4145,"src":"3485:776:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2979,"nodeType":"Block","src":"4657:1548:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4675:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4679:5:12","memberName":"value","nodeType":"MemberAccess","src":"4675:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2852,"name":"minAstrologerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4688:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4675:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420617374726f6c6f676572207374616b65","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4708:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e806bea1b349cb5c8358eb9ee41175912ef732ad3123d69bed55f98a8062ebe7","typeString":"literal_string \"Insufficient astrologer stake\""},"value":"Insufficient astrologer stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e806bea1b349cb5c8358eb9ee41175912ef732ad3123d69bed55f98a8062ebe7","typeString":"literal_string \"Insufficient astrologer stake\""}],"id":2849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4667:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4667:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"ExpressionStatement","src":"4667:73:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2860,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"4764:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4758:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2858,"name":"bytes","nodeType":"ElementaryTypeName","src":"4758:5:12","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4758:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4772:6:12","memberName":"length","nodeType":"MemberAccess","src":"4758:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4758:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469746c652063616e6e6f7420626520656d707479","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4784:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_698ca3c7081ed8237247ee65908074972d8604d6a2052a29e97091f6cc36ebf4","typeString":"literal_string \"Title cannot be empty\""},"value":"Title cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_698ca3c7081ed8237247ee65908074972d8604d6a2052a29e97091f6cc36ebf4","typeString":"literal_string \"Title cannot be empty\""}],"id":2857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4750:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4750:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2867,"nodeType":"ExpressionStatement","src":"4750:58:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2871,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"4832:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4826:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2869,"name":"bytes","nodeType":"ElementaryTypeName","src":"4826:5:12","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4826:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4846:6:12","memberName":"length","nodeType":"MemberAccess","src":"4826:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4855:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4826:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465736372697074696f6e2063616e6e6f7420626520656d707479","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4858:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214","typeString":"literal_string \"Description cannot be empty\""},"value":"Description cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5136780377cc231258678d13fe3ea7b31bc96a5f8a36a4c81f29820551bb6214","typeString":"literal_string \"Description cannot be empty\""}],"id":2868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4818:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2878,"nodeType":"ExpressionStatement","src":"4818:70:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"4906:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2881,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4918:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4924:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"4918:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4906:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"446561646c696e65206d75737420626520696e2074686520667574757265","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4935:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3e7aa4aa0cbec9a64fb6a0b8b9ffd2b31f86995a33f516b85a302b0ba10930e","typeString":"literal_string \"Deadline must be in the future\""},"value":"Deadline must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3e7aa4aa0cbec9a64fb6a0b8b9ffd2b31f86995a33f516b85a302b0ba10930e","typeString":"literal_string \"Deadline must be in the future\""}],"id":2879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4898:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4898:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2886,"nodeType":"ExpressionStatement","src":"4898:70:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5026:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5055:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5047:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"5047:7:12","typeDescriptions":{}}},"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5047:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5026:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"IfStatement","src":"5022:168:12","trueBody":{"id":2904,"nodeType":"Block","src":"5059:131:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2898,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5140:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5144:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5140:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2895,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5100:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2894,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"5081:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$4305_$","typeString":"type(contract IAstrologerManager)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5081:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$4305","typeString":"contract IAstrologerManager"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5119:20:12","memberName":"isAstrologerVerified","nodeType":"MemberAccess","referencedDeclaration":4297,"src":"5081:58:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5081:70:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417374726f6c6f676572206e6f74207665726966696564","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5153:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2b69f472c51edd3f3560c488068a1e68bb0c0d7f90c4cbf6f3b1e1e8d03c902","typeString":"literal_string \"Astrologer not verified\""},"value":"Astrologer not verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2b69f472c51edd3f3560c488068a1e68bb0c0d7f90c4cbf6f3b1e1e8d03c902","typeString":"literal_string \"Astrologer not verified\""}],"id":2893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5073:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:106:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2903,"nodeType":"ExpressionStatement","src":"5073:106:12"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2906,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5200:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":2908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5215:9:12","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1205,"src":"5200:24:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1179_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2910,"nodeType":"ExpressionStatement","src":"5200:26:12"},{"assignments":[2912],"declarations":[{"constant":false,"id":2912,"mutability":"mutable","name":"predictionId","nameLocation":"5244:12:12","nodeType":"VariableDeclaration","scope":2979,"src":"5236:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2916,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2913,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5259:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":2914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5274:7:12","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"5259:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5259:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5236:47:12"},{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2917,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"5294:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":2919,"indexExpression":{"id":2918,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"5306:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5294:25:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2921,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"5356:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2922,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5394:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5398:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5394:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":2928,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5486:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5490:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5486:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2925,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5451:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2924,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"5432:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$4305_$","typeString":"type(contract IAstrologerManager)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$4305","typeString":"contract IAstrologerManager"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5470:15:12","memberName":"getAstrologerId","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"5432:53:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2931,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"5518:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2932,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"5551:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2933,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"5587:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5627:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5631:5:12","memberName":"value","nodeType":"MemberAccess","src":"5627:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5667:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5697:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5726:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5754:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5781:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5809:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5845:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":2943,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5875:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5881:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"5875:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5916:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2920,"name":"WorldPrediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"5322:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WorldPrediction_$2622_storage_ptr_$","typeString":"type(struct WorldPredictionMarket.WorldPrediction storage pointer)"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5352:2:12","5382:10:12","5418:12:12","5511:5:12","5538:11:12","5577:8:12","5610:15:12","5650:15:12","5682:13:12","5712:12:12","5741:11:12","5769:10:12","5800:7:12","5828:15:12","5864:9:12","5904:10:12"],"names":["id","astrologer","astrologerId","title","description","deadline","astrologerStake","totalVoterStake","yesVoterStake","noVoterStake","totalVoters","isResolved","outcome","daoVotingActive","createdAt","resolvedAt"],"nodeType":"FunctionCall","src":"5322:606:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_memory_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction memory"}},"src":"5294:634:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"id":2948,"nodeType":"ExpressionStatement","src":"5294:634:12"},{"expression":{"arguments":[{"id":2954,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"5978:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2949,"name":"astrologerPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"5939:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2952,"indexExpression":{"expression":{"id":2950,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5961:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5965:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5961:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5939:33:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5973:4:12","memberName":"push","nodeType":"MemberAccess","src":"5939:38:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5939:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2956,"nodeType":"ExpressionStatement","src":"5939:52:12"},{"expression":{"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6001:34:12","subExpression":{"expression":{"id":2957,"name":"predictionStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"6001:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionStats_$2647_storage","typeString":"struct WorldPredictionMarket.PredictionStats storage ref"}},"id":2959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6017:16:12","memberName":"totalPredictions","nodeType":"MemberAccess","referencedDeclaration":2640,"src":"6001:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2961,"nodeType":"ExpressionStatement","src":"6001:34:12"},{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6045:35:12","subExpression":{"expression":{"id":2962,"name":"predictionStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"6045:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionStats_$2647_storage","typeString":"struct WorldPredictionMarket.PredictionStats storage ref"}},"id":2964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6061:17:12","memberName":"activePredictions","nodeType":"MemberAccess","referencedDeclaration":2642,"src":"6045:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2966,"nodeType":"ExpressionStatement","src":"6045:35:12"},{"eventCall":{"arguments":[{"id":2968,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"6114:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2969,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6128:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6132:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6128:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2971,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"6140:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2972,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"6148:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2973,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6159:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6163:5:12","memberName":"value","nodeType":"MemberAccess","src":"6159:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2967,"name":"PredictionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"6096:17:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256,uint256)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6096:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2976,"nodeType":"EmitStatement","src":"6091:78:12"},{"expression":{"id":2977,"name":"predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"6186:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2848,"id":2978,"nodeType":"Return","src":"6179:19:12"}]},"documentation":{"id":2838,"nodeType":"StructuredDocumentation","src":"4267:225:12","text":" @notice Create a world prediction by staking FLOW\n @param _title The title of the prediction\n @param _description The detailed description\n @param _deadline The deadline for the prediction"},"functionSelector":"d472a570","id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"createPrediction","nameLocation":"4506:16:12","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"_title","nameLocation":"4546:6:12","nodeType":"VariableDeclaration","scope":2980,"src":"4532:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2839,"name":"string","nodeType":"ElementaryTypeName","src":"4532:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"_description","nameLocation":"4576:12:12","nodeType":"VariableDeclaration","scope":2980,"src":"4562:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2841,"name":"string","nodeType":"ElementaryTypeName","src":"4562:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"_deadline","nameLocation":"4606:9:12","nodeType":"VariableDeclaration","scope":2980,"src":"4598:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"4598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4522:99:12"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2980,"src":"4648:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4648:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4647:9:12"},"scope":4145,"src":"4497:1708:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3138,"nodeType":"Block","src":"6460:1477:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"6478:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6494:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6478:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"6499:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2993,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"6516:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":2994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6531:7:12","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"6516:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6516:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6499:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6478:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e204944","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6542:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""},"value":"Invalid prediction ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""}],"id":2988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6470:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6470:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3000,"nodeType":"ExpressionStatement","src":"6470:96:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6584:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6588:5:12","memberName":"value","nodeType":"MemberAccess","src":"6584:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3004,"name":"minVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"6597:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6584:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420766f746572207374616b65","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6612:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e3d6c39044eb304362cc6bc25184db63691f9e4a10309d160e6306a9fcf5402","typeString":"literal_string \"Insufficient voter stake\""},"value":"Insufficient voter stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e3d6c39044eb304362cc6bc25184db63691f9e4a10309d160e6306a9fcf5402","typeString":"literal_string \"Insufficient voter stake\""}],"id":3001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6576:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3008,"nodeType":"ExpressionStatement","src":"6576:63:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6657:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6661:5:12","memberName":"value","nodeType":"MemberAccess","src":"6657:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3012,"name":"maxVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"6670:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6657:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616d6f756e7420746f6f2068696768","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6685:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_18aae7b06d8cca1aad60c6e7a965c7cc9b1e7647c01b28f8bb3d06af3148b8c6","typeString":"literal_string \"Stake amount too high\""},"value":"Stake amount too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18aae7b06d8cca1aad60c6e7a965c7cc9b1e7647c01b28f8bb3d06af3148b8c6","typeString":"literal_string \"Stake amount too high\""}],"id":3009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6649:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3016,"nodeType":"ExpressionStatement","src":"6649:60:12"},{"assignments":[3019],"declarations":[{"constant":false,"id":3019,"mutability":"mutable","name":"prediction","nameLocation":"6752:10:12","nodeType":"VariableDeclaration","scope":3138,"src":"6728:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"},"typeName":{"id":3018,"nodeType":"UserDefinedTypeName","pathNode":{"id":3017,"name":"WorldPrediction","nameLocations":["6728:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"6728:15:12"},"referencedDeclaration":2622,"src":"6728:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}},"visibility":"internal"}],"id":3023,"initialValue":{"baseExpression":{"id":3020,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"6765:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3022,"indexExpression":{"id":3021,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"6777:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6765:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6728:63:12"},{"expression":{"arguments":[{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6809:22:12","subExpression":{"expression":{"id":3025,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6810:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6821:10:12","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"6810:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726564696374696f6e20616c7265616479207265736f6c766564","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6833:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""},"value":"Prediction already resolved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""}],"id":3024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3030,"nodeType":"ExpressionStatement","src":"6801:62:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3032,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6881:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6887:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"6881:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3034,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"6899:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6910:8:12","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":2601,"src":"6899:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6881:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e6720706572696f6420656e646564","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6920:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0","typeString":"literal_string \"Voting period ended\""},"value":"Voting period ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0","typeString":"literal_string \"Voting period ended\""}],"id":3031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6873:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6873:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3039,"nodeType":"ExpressionStatement","src":"6873:69:12"},{"expression":{"arguments":[{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6960:42:12","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":3041,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"6961:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.Vote storage ref))"}},"id":3043,"indexExpression":{"id":3042,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"6967:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6961:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.Vote storage ref)"}},"id":3046,"indexExpression":{"expression":{"id":3044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6982:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6986:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6982:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6961:32:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage","typeString":"struct WorldPredictionMarket.Vote storage ref"}},"id":3047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6994:8:12","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"6961:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f746564","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7004:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""},"value":"Already voted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""}],"id":3040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6952:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6952:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3051,"nodeType":"ExpressionStatement","src":"6952:68:12"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3054,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7114:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7118:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7114:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3053,"name":"hasAstroChartNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"7097:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206f776e20417374726f4368617274204e465420746f20766f7465","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7127:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b09899ee9c939607250b65aa50c67289069ee729c4119f9b45d26f1e535ee892","typeString":"literal_string \"Must own AstroChart NFT to vote\""},"value":"Must own AstroChart NFT to vote"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b09899ee9c939607250b65aa50c67289069ee729c4119f9b45d26f1e535ee892","typeString":"literal_string \"Must own AstroChart NFT to vote\""}],"id":3052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7089:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7089:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3059,"nodeType":"ExpressionStatement","src":"7089:72:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3061,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7241:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7245:5:12","memberName":"value","nodeType":"MemberAccess","src":"7241:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3063,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7254:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7265:15:12","memberName":"astrologerStake","nodeType":"MemberAccess","referencedDeclaration":2603,"src":"7254:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7241:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f746572207374616b65206d757374206265203e3d20617374726f6c6f676572207374616b65","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7282:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e0432039de1a758d5a3f1a47de7bcb737768a5a8d291e8cb024fef606e757c8","typeString":"literal_string \"Voter stake must be >= astrologer stake\""},"value":"Voter stake must be >= astrologer stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e0432039de1a758d5a3f1a47de7bcb737768a5a8d291e8cb024fef606e757c8","typeString":"literal_string \"Voter stake must be >= astrologer stake\""}],"id":3060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7233:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7233:91:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3068,"nodeType":"ExpressionStatement","src":"7233:91:12"},{"expression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3069,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"7335:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.Vote storage ref))"}},"id":3073,"indexExpression":{"id":3070,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"7341:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7335:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.Vote storage ref)"}},"id":3074,"indexExpression":{"expression":{"id":3071,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7356:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7360:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7356:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7335:32:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage","typeString":"struct WorldPredictionMarket.Vote storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7399:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3077,"name":"_vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"7423:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3078,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7455:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7459:5:12","memberName":"value","nodeType":"MemberAccess","src":"7455:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7493:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3075,"name":"Vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"7370:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Vote_$2631_storage_ptr_$","typeString":"type(struct WorldPredictionMarket.Vote storage pointer)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7389:8:12","7417:4:12","7442:11:12","7478:13:12"],"names":["hasVoted","vote","stakeAmount","rewardClaimed"],"nodeType":"FunctionCall","src":"7370:139:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_memory_ptr","typeString":"struct WorldPredictionMarket.Vote memory"}},"src":"7335:174:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage","typeString":"struct WorldPredictionMarket.Vote storage ref"}},"id":3083,"nodeType":"ExpressionStatement","src":"7335:174:12"},{"expression":{"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3084,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7520:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7531:15:12","memberName":"totalVoterStake","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"7520:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3087,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7550:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7554:5:12","memberName":"value","nodeType":"MemberAccess","src":"7550:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7520:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3090,"nodeType":"ExpressionStatement","src":"7520:39:12"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7569:24:12","subExpression":{"expression":{"id":3091,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7569:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7580:11:12","memberName":"totalVoters","nodeType":"MemberAccess","referencedDeclaration":2611,"src":"7569:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"7569:24:12"},{"condition":{"id":3096,"name":"_vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"7616:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3112,"nodeType":"Block","src":"7691:61:12","statements":[{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3105,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7705:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7716:12:12","memberName":"noVoterStake","nodeType":"MemberAccess","referencedDeclaration":2609,"src":"7705:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7732:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7736:5:12","memberName":"value","nodeType":"MemberAccess","src":"7732:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"nodeType":"ExpressionStatement","src":"7705:36:12"}]},"id":3113,"nodeType":"IfStatement","src":"7612:140:12","trueBody":{"id":3104,"nodeType":"Block","src":"7623:62:12","statements":[{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3097,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"7637:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7648:13:12","memberName":"yesVoterStake","nodeType":"MemberAccess","referencedDeclaration":2607,"src":"7637:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3100,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7665:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7669:5:12","memberName":"value","nodeType":"MemberAccess","src":"7665:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7637:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3103,"nodeType":"ExpressionStatement","src":"7637:37:12"}]}},{"expression":{"arguments":[{"id":3119,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"7797:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3114,"name":"userVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"7770:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3117,"indexExpression":{"expression":{"id":3115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7780:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7784:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7780:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7770:21:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7792:4:12","memberName":"push","nodeType":"MemberAccess","src":"7770:26:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7770:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3121,"nodeType":"ExpressionStatement","src":"7770:41:12"},{"expression":{"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3122,"name":"predictionStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"7821:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionStats_$2647_storage","typeString":"struct WorldPredictionMarket.PredictionStats storage ref"}},"id":3124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7837:11:12","memberName":"totalVolume","nodeType":"MemberAccess","referencedDeclaration":2646,"src":"7821:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3125,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7852:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7856:5:12","memberName":"value","nodeType":"MemberAccess","src":"7852:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7821:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3128,"nodeType":"ExpressionStatement","src":"7821:40:12"},{"eventCall":{"arguments":[{"id":3130,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"7886:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3131,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7901:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7905:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7901:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3133,"name":"_vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"7913:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7920:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7924:5:12","memberName":"value","nodeType":"MemberAccess","src":"7920:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3129,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"7877:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint256,address,bool,uint256)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7877:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3137,"nodeType":"EmitStatement","src":"7872:58:12"}]},"documentation":{"id":2981,"nodeType":"StructuredDocumentation","src":"6211:166:12","text":" @notice Vote on a prediction (requires AstroChart NFT)\n @param _predictionId The prediction ID\n @param _vote True for YES, false for NO"},"functionSelector":"700c8367","id":3139,"implemented":true,"kind":"function","modifiers":[],"name":"voteOnPrediction","nameLocation":"6391:16:12","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"_predictionId","nameLocation":"6416:13:12","nodeType":"VariableDeclaration","scope":3139,"src":"6408:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"6408:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"_vote","nameLocation":"6436:5:12","nodeType":"VariableDeclaration","scope":3139,"src":"6431:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2984,"name":"bool","nodeType":"ElementaryTypeName","src":"6431:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6407:35:12"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[],"src":"6460:0:12"},"scope":4145,"src":"6382:1555:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3202,"nodeType":"Block","src":"8119:570:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"8137:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8153:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8137:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"8158:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3150,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"8175:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8190:7:12","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"8175:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8175:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8158:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8137:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e204944","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8201:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""},"value":"Invalid prediction ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""}],"id":3145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8129:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3157,"nodeType":"ExpressionStatement","src":"8129:96:12"},{"assignments":[3160],"declarations":[{"constant":false,"id":3160,"mutability":"mutable","name":"prediction","nameLocation":"8268:10:12","nodeType":"VariableDeclaration","scope":3202,"src":"8244:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"},"typeName":{"id":3159,"nodeType":"UserDefinedTypeName","pathNode":{"id":3158,"name":"WorldPrediction","nameLocations":["8244:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"8244:15:12"},"referencedDeclaration":2622,"src":"8244:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}},"visibility":"internal"}],"id":3164,"initialValue":{"baseExpression":{"id":3161,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"8281:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3163,"indexExpression":{"id":3162,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"8293:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8281:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8244:63:12"},{"expression":{"arguments":[{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8325:22:12","subExpression":{"expression":{"id":3166,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"8326:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8337:10:12","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"8326:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726564696374696f6e20616c7265616479207265736f6c766564","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8349:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""},"value":"Prediction already resolved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""}],"id":3165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8317:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8317:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3171,"nodeType":"ExpressionStatement","src":"8317:62:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3173,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8397:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8403:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"8397:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3175,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"8416:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8427:8:12","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":2601,"src":"8416:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726564696374696f6e20646561646c696e65206e6f742072656163686564","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8437:33:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_44b9aa865ba15e81bdd3728cd6ea47c14d3c33ba13db48fb6d8d6d87956ad29f","typeString":"literal_string \"Prediction deadline not reached\""},"value":"Prediction deadline not reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44b9aa865ba15e81bdd3728cd6ea47c14d3c33ba13db48fb6d8d6d87956ad29f","typeString":"literal_string \"Prediction deadline not reached\""}],"id":3172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8389:82:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3180,"nodeType":"ExpressionStatement","src":"8389:82:12"},{"expression":{"arguments":[{"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8489:27:12","subExpression":{"expression":{"id":3182,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"8490:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8501:15:12","memberName":"daoVotingActive","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"8490:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f20766f74696e6720616c726561647920616374697665","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8518:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_596954e29975c7f51ea1f19196d3d678c07733a66a0e74a6bb6ba203e5485b6d","typeString":"literal_string \"DAO voting already active\""},"value":"DAO voting already active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_596954e29975c7f51ea1f19196d3d678c07733a66a0e74a6bb6ba203e5485b6d","typeString":"literal_string \"DAO voting already active\""}],"id":3181,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8481:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8481:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3187,"nodeType":"ExpressionStatement","src":"8481:65:12"},{"expression":{"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3188,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"8557:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8568:15:12","memberName":"daoVotingActive","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"8557:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8586:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8557:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3193,"nodeType":"ExpressionStatement","src":"8557:33:12"},{"eventCall":{"arguments":[{"id":3195,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"8631:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3196,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8646:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8652:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"8646:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3198,"name":"daoVotingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"8664:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8646:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3194,"name":"DAOVotingStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"8614:16:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3201,"nodeType":"EmitStatement","src":"8609:73:12"}]},"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"7943:115:12","text":" @notice Start DAO voting after prediction deadline\n @param _predictionId The prediction ID"},"functionSelector":"886dbdf9","id":3203,"implemented":true,"kind":"function","modifiers":[],"name":"startDAOVoting","nameLocation":"8072:14:12","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"_predictionId","nameLocation":"8095:13:12","nodeType":"VariableDeclaration","scope":3203,"src":"8087:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8086:23:12"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[],"src":"8119:0:12"},"scope":4145,"src":"8063:626:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3302,"nodeType":"Block","src":"9022:896:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3214,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"9040:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9040:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3217,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"9061:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3218,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"9078:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9093:7:12","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"9078:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9078:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9061:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9040:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e204944","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9104:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""},"value":"Invalid prediction ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""}],"id":3213,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9032:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9032:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3225,"nodeType":"ExpressionStatement","src":"9032:96:12"},{"assignments":[3228],"declarations":[{"constant":false,"id":3228,"mutability":"mutable","name":"prediction","nameLocation":"9171:10:12","nodeType":"VariableDeclaration","scope":3302,"src":"9147:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"},"typeName":{"id":3227,"nodeType":"UserDefinedTypeName","pathNode":{"id":3226,"name":"WorldPrediction","nameLocations":["9147:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"9147:15:12"},"referencedDeclaration":2622,"src":"9147:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}},"visibility":"internal"}],"id":3232,"initialValue":{"baseExpression":{"id":3229,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"9184:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3231,"indexExpression":{"id":3230,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"9196:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9184:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9147:63:12"},{"expression":{"arguments":[{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9228:22:12","subExpression":{"expression":{"id":3234,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"9229:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9240:10:12","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"9229:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726564696374696f6e20616c7265616479207265736f6c766564","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9252:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""},"value":"Prediction already resolved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""}],"id":3233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9220:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3239,"nodeType":"ExpressionStatement","src":"9220:62:12"},{"expression":{"arguments":[{"expression":{"id":3241,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"9300:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9311:15:12","memberName":"daoVotingActive","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"9300:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f20766f74696e67206e6f7420616374697665","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9328:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_23481764773651837b693c0116eb1867a15e4af0b37eaa952dfe02da7ca67c1a","typeString":"literal_string \"DAO voting not active\""},"value":"DAO voting not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23481764773651837b693c0116eb1867a15e4af0b37eaa952dfe02da7ca67c1a","typeString":"literal_string \"DAO voting not active\""}],"id":3240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9292:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9292:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3245,"nodeType":"ExpressionStatement","src":"9292:60:12"},{"expression":{"arguments":[{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9370:45:12","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":3247,"name":"daoVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"9371:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.DAOVote storage ref))"}},"id":3249,"indexExpression":{"id":3248,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"9380:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9371:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.DAOVote storage ref)"}},"id":3252,"indexExpression":{"expression":{"id":3250,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9395:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9399:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9395:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9371:35:12","typeDescriptions":{"typeIdentifier":"t_struct$_DAOVote_$2638_storage","typeString":"struct WorldPredictionMarket.DAOVote storage ref"}},"id":3253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9407:8:12","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":2633,"src":"9371:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f746564","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9417:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""},"value":"Already voted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""}],"id":3246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9362:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9362:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3257,"nodeType":"ExpressionStatement","src":"9362:71:12"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9505:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9509:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9505:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3262,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9517:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3259,"name":"isDAOMember","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"9493:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9493:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420612044414f206d656d626572","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5","typeString":"literal_string \"Not a DAO member\""},"value":"Not a DAO member"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8fc0753689749684a9e551425bc1a5c3140528f7a45ea255ec00e51d97963b5","typeString":"literal_string \"Not a DAO member\""}],"id":3258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9485:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9485:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3266,"nodeType":"ExpressionStatement","src":"9485:62:12"},{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3267,"name":"daoVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"9558:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.DAOVote storage ref))"}},"id":3271,"indexExpression":{"id":3268,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"9567:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9558:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.DAOVote storage ref)"}},"id":3272,"indexExpression":{"expression":{"id":3269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9582:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9586:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9582:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9558:35:12","typeDescriptions":{"typeIdentifier":"t_struct$_DAOVote_$2638_storage","typeString":"struct WorldPredictionMarket.DAOVote storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9628:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3275,"name":"_outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"9652:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3276,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9683:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3273,"name":"DAOVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"9596:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DAOVote_$2638_storage_ptr_$","typeString":"type(struct WorldPredictionMarket.DAOVote storage pointer)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9618:8:12","9646:4:12","9674:7:12"],"names":["hasVoted","vote","tokenId"],"nodeType":"FunctionCall","src":"9596:106:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DAOVote_$2638_memory_ptr","typeString":"struct WorldPredictionMarket.DAOVote memory"}},"src":"9558:144:12","typeDescriptions":{"typeIdentifier":"t_struct$_DAOVote_$2638_storage","typeString":"struct WorldPredictionMarket.DAOVote storage ref"}},"id":3279,"nodeType":"ExpressionStatement","src":"9558:144:12"},{"condition":{"id":3280,"name":"_outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"9717:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3292,"nodeType":"Block","src":"9786:52:12","statements":[{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9800:27:12","subExpression":{"baseExpression":{"id":3287,"name":"daoNoVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"9800:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3289,"indexExpression":{"id":3288,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"9811:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9800:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"nodeType":"ExpressionStatement","src":"9800:27:12"}]},"id":3293,"nodeType":"IfStatement","src":"9713:125:12","trueBody":{"id":3286,"nodeType":"Block","src":"9727:53:12","statements":[{"expression":{"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9741:28:12","subExpression":{"baseExpression":{"id":3281,"name":"daoYesVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"9741:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3283,"indexExpression":{"id":3282,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"9753:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9741:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3285,"nodeType":"ExpressionStatement","src":"9741:28:12"}]}},{"eventCall":{"arguments":[{"id":3295,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"9865:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3296,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9880:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9884:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9880:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3298,"name":"_outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"9892:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3299,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9902:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3294,"name":"DAOVoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"9853:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint256,address,bool,uint256)"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9853:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3301,"nodeType":"EmitStatement","src":"9848:63:12"}]},"documentation":{"id":3204,"nodeType":"StructuredDocumentation","src":"8695:236:12","text":" @notice DAO members vote on prediction outcome\n @param _predictionId The prediction ID\n @param _outcome True if prediction was correct, false if incorrect\n @param _tokenId The DAO token ID for voting"},"functionSelector":"84ebaae1","id":3303,"implemented":true,"kind":"function","modifiers":[],"name":"castDAOVote","nameLocation":"8945:11:12","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"_predictionId","nameLocation":"8965:13:12","nodeType":"VariableDeclaration","scope":3303,"src":"8957:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"8957:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"_outcome","nameLocation":"8985:8:12","nodeType":"VariableDeclaration","scope":3303,"src":"8980:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3207,"name":"bool","nodeType":"ElementaryTypeName","src":"8980:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"_tokenId","nameLocation":"9003:8:12","nodeType":"VariableDeclaration","scope":3303,"src":"8995:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"8995:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8956:56:12"},"returnParameters":{"id":3212,"nodeType":"ParameterList","parameters":[],"src":"9022:0:12"},"scope":4145,"src":"8936:982:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3435,"nodeType":"Block","src":"10098:1350:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10116:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10116:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10137:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3314,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"10154:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10169:7:12","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"10154:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10154:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10137:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10116:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e204944","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10180:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""},"value":"Invalid prediction ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""}],"id":3309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10108:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10108:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3321,"nodeType":"ExpressionStatement","src":"10108:96:12"},{"assignments":[3324],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"prediction","nameLocation":"10247:10:12","nodeType":"VariableDeclaration","scope":3435,"src":"10223:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"},"typeName":{"id":3323,"nodeType":"UserDefinedTypeName","pathNode":{"id":3322,"name":"WorldPrediction","nameLocations":["10223:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"10223:15:12"},"referencedDeclaration":2622,"src":"10223:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}},"visibility":"internal"}],"id":3328,"initialValue":{"baseExpression":{"id":3325,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"10260:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3327,"indexExpression":{"id":3326,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10272:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10260:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10223:63:12"},{"expression":{"arguments":[{"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10304:22:12","subExpression":{"expression":{"id":3330,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"10305:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10316:10:12","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"10305:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726564696374696f6e20616c7265616479207265736f6c766564","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10328:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""},"value":"Prediction already resolved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5c7fd694202985aae764043fecb045b079bc8cf6282adc9f3fb74cc21cb2321","typeString":"literal_string \"Prediction already resolved\""}],"id":3329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10296:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10296:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3335,"nodeType":"ExpressionStatement","src":"10296:62:12"},{"expression":{"arguments":[{"expression":{"id":3337,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"10376:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:15:12","memberName":"daoVotingActive","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"10376:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f20766f74696e67206e6f742073746172746564","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10404:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f69aa035c2300465b3b3ac77ec1e7c2defcf6ec4a77f25a01644bb392a08ccb","typeString":"literal_string \"DAO voting not started\""},"value":"DAO voting not started"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f69aa035c2300465b3b3ac77ec1e7c2defcf6ec4a77f25a01644bb392a08ccb","typeString":"literal_string \"DAO voting not started\""}],"id":3336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10368:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10368:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3341,"nodeType":"ExpressionStatement","src":"10368:61:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3343,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10447:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10453:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"10447:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3345,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"10466:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10477:8:12","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":2601,"src":"10466:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3347,"name":"daoVotingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"10488:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10466:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10447:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44414f20766f74696e6720706572696f64206e6f7420656e646564","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10507:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_891360af1abbee9addc57e5951a6b396a9e19bddf2027a7e0f3b17d7cc19be76","typeString":"literal_string \"DAO voting period not ended\""},"value":"DAO voting period not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_891360af1abbee9addc57e5951a6b396a9e19bddf2027a7e0f3b17d7cc19be76","typeString":"literal_string \"DAO voting period not ended\""}],"id":3342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10439:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10439:98:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3352,"nodeType":"ExpressionStatement","src":"10439:98:12"},{"assignments":[3354],"declarations":[{"constant":false,"id":3354,"mutability":"mutable","name":"totalDAOVotes","nameLocation":"10604:13:12","nodeType":"VariableDeclaration","scope":3435,"src":"10596:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"10596:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3362,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3355,"name":"daoYesVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10620:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3357,"indexExpression":{"id":3356,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10632:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10620:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":3358,"name":"daoNoVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"10649:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3360,"indexExpression":{"id":3359,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10660:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10649:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10620:54:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10596:78:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"totalDAOVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"10692:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10708:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10692:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2044414f20766f7465732063617374","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10711:19:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_55242650e6363316d9bf96eaf027f9437d9fd733b148b9346e7feecabeb8dc14","typeString":"literal_string \"No DAO votes cast\""},"value":"No DAO votes cast"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55242650e6363316d9bf96eaf027f9437d9fd733b148b9346e7feecabeb8dc14","typeString":"literal_string \"No DAO votes cast\""}],"id":3363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10684:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10684:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3369,"nodeType":"ExpressionStatement","src":"10684:47:12"},{"assignments":[3371],"declarations":[{"constant":false,"id":3371,"mutability":"mutable","name":"outcome","nameLocation":"10755:7:12","nodeType":"VariableDeclaration","scope":3435,"src":"10750:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3370,"name":"bool","nodeType":"ElementaryTypeName","src":"10750:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3379,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3372,"name":"daoYesVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10765:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3374,"indexExpression":{"id":3373,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10777:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10765:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3375,"name":"daoNoVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"10794:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3377,"indexExpression":{"id":3376,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10805:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10794:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10765:54:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10750:69:12"},{"expression":{"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3380,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"10838:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10849:10:12","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"10838:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10862:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10838:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3385,"nodeType":"ExpressionStatement","src":"10838:28:12"},{"expression":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3386,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"10876:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10887:7:12","memberName":"outcome","nodeType":"MemberAccess","referencedDeclaration":2615,"src":"10876:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3389,"name":"outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"10897:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10876:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3391,"nodeType":"ExpressionStatement","src":"10876:28:12"},{"expression":{"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3392,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"10914:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10925:10:12","memberName":"resolvedAt","nodeType":"MemberAccess","referencedDeclaration":2621,"src":"10914:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3395,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10938:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10944:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"10938:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10914:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3398,"nodeType":"ExpressionStatement","src":"10914:39:12"},{"expression":{"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"10972:35:12","subExpression":{"expression":{"id":3399,"name":"predictionStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"10972:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionStats_$2647_storage","typeString":"struct WorldPredictionMarket.PredictionStats storage ref"}},"id":3401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10988:17:12","memberName":"activePredictions","nodeType":"MemberAccess","referencedDeclaration":2642,"src":"10972:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3403,"nodeType":"ExpressionStatement","src":"10972:35:12"},{"expression":{"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11017:37:12","subExpression":{"expression":{"id":3404,"name":"predictionStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"11017:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionStats_$2647_storage","typeString":"struct WorldPredictionMarket.PredictionStats storage ref"}},"id":3406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11033:19:12","memberName":"resolvedPredictions","nodeType":"MemberAccess","referencedDeclaration":2644,"src":"11017:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3408,"nodeType":"ExpressionStatement","src":"11017:37:12"},{"assignments":[3410],"declarations":[{"constant":false,"id":3410,"mutability":"mutable","name":"astrologerReward","nameLocation":"11117:16:12","nodeType":"VariableDeclaration","scope":3435,"src":"11109:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"11109:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3415,"initialValue":{"arguments":[{"id":3412,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"11154:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3413,"name":"outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"11169:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3411,"name":"distributeRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"11136:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint256,bool) returns (uint256)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11136:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11109:68:12"},{"expression":{"arguments":[{"expression":{"id":3417,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"11252:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11263:10:12","memberName":"astrologer","nodeType":"MemberAccess","referencedDeclaration":2593,"src":"11252:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3419,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"11275:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11286:12:12","memberName":"astrologerId","nodeType":"MemberAccess","referencedDeclaration":2595,"src":"11275:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3421,"name":"outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"11300:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3416,"name":"updateAstrologerReputation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"11225:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:83:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3423,"nodeType":"ExpressionStatement","src":"11225:83:12"},{"eventCall":{"arguments":[{"id":3425,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"11343:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3426,"name":"outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"11358:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3427,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"11367:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11378:15:12","memberName":"totalVoterStake","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"11367:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3429,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"11396:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11407:15:12","memberName":"astrologerStake","nodeType":"MemberAccess","referencedDeclaration":2603,"src":"11396:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11367:55:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3432,"name":"astrologerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"11424:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3424,"name":"PredictionResolved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"11324:18:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,bool,uint256,uint256)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11324:117:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3434,"nodeType":"EmitStatement","src":"11319:122:12"}]},"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"9924:110:12","text":" @notice Resolve prediction based on DAO votes\n @param _predictionId The prediction ID"},"functionSelector":"e69fe3dc","id":3436,"implemented":true,"kind":"function","modifiers":[],"name":"resolvePrediction","nameLocation":"10048:17:12","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"_predictionId","nameLocation":"10074:13:12","nodeType":"VariableDeclaration","scope":3436,"src":"10066:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"10066:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10065:23:12"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[],"src":"10098:0:12"},"scope":4145,"src":"10039:1409:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3526,"nodeType":"Block","src":"11622:737:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"11640:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11656:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11640:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"11661:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3447,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"11678:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11693:7:12","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"11678:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11678:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11661:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11640:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e204944","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11704:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""},"value":"Invalid prediction ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""}],"id":3442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11632:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11632:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3454,"nodeType":"ExpressionStatement","src":"11632:96:12"},{"assignments":[3457],"declarations":[{"constant":false,"id":3457,"mutability":"mutable","name":"prediction","nameLocation":"11771:10:12","nodeType":"VariableDeclaration","scope":3526,"src":"11747:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"},"typeName":{"id":3456,"nodeType":"UserDefinedTypeName","pathNode":{"id":3455,"name":"WorldPrediction","nameLocations":["11747:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"11747:15:12"},"referencedDeclaration":2622,"src":"11747:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}},"visibility":"internal"}],"id":3461,"initialValue":{"baseExpression":{"id":3458,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"11784:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3460,"indexExpression":{"id":3459,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"11796:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11784:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11747:63:12"},{"expression":{"arguments":[{"expression":{"id":3463,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"11828:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11839:10:12","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"11828:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726564696374696f6e206e6f74207265736f6c766564","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11851:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_382bda24046a8d0af5605bb825d7eec7bed8aa46697cda2a990b33f7d72d9cdd","typeString":"literal_string \"Prediction not resolved\""},"value":"Prediction not resolved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_382bda24046a8d0af5605bb825d7eec7bed8aa46697cda2a990b33f7d72d9cdd","typeString":"literal_string \"Prediction not resolved\""}],"id":3462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11820:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3467,"nodeType":"ExpressionStatement","src":"11820:57:12"},{"assignments":[3470],"declarations":[{"constant":false,"id":3470,"mutability":"mutable","name":"vote","nameLocation":"11909:4:12","nodeType":"VariableDeclaration","scope":3526,"src":"11896:17:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote"},"typeName":{"id":3469,"nodeType":"UserDefinedTypeName","pathNode":{"id":3468,"name":"Vote","nameLocations":["11896:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2631,"src":"11896:4:12"},"referencedDeclaration":2631,"src":"11896:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote"}},"visibility":"internal"}],"id":3477,"initialValue":{"baseExpression":{"baseExpression":{"id":3471,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"11916:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.Vote storage ref))"}},"id":3473,"indexExpression":{"id":3472,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"11922:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11916:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.Vote storage ref)"}},"id":3476,"indexExpression":{"expression":{"id":3474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11937:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11941:6:12","memberName":"sender","nodeType":"MemberAccess","src":"11937:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11916:32:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage","typeString":"struct WorldPredictionMarket.Vote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11896:52:12"},{"expression":{"arguments":[{"expression":{"id":3479,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"11966:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote storage pointer"}},"id":3480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11971:8:12","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"11966:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20766f746520666f756e64","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11981:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6131f382f49656f9d2ea1f970e53c16ce56c65bc624a1259379c03224a20d2f","typeString":"literal_string \"No vote found\""},"value":"No vote found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6131f382f49656f9d2ea1f970e53c16ce56c65bc624a1259379c03224a20d2f","typeString":"literal_string \"No vote found\""}],"id":3478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11958:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11958:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3483,"nodeType":"ExpressionStatement","src":"11958:39:12"},{"expression":{"arguments":[{"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12015:19:12","subExpression":{"expression":{"id":3485,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"12016:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote storage pointer"}},"id":3486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12021:13:12","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":2630,"src":"12016:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657761726420616c726561647920636c61696d6564","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12036:24:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c","typeString":"literal_string \"Reward already claimed\""},"value":"Reward already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59cbfee2a24523c1fd613f6298f3ecd1131edd49036e244040e570087e53f19c","typeString":"literal_string \"Reward already claimed\""}],"id":3484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12007:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3490,"nodeType":"ExpressionStatement","src":"12007:54:12"},{"assignments":[3492],"declarations":[{"constant":false,"id":3492,"mutability":"mutable","name":"rewardAmount","nameLocation":"12080:12:12","nodeType":"VariableDeclaration","scope":3526,"src":"12072:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"12072:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3498,"initialValue":{"arguments":[{"id":3494,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"12116:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12131:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12135:6:12","memberName":"sender","nodeType":"MemberAccess","src":"12131:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3493,"name":"calculateVoterReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"12095:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12095:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12072:70:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3499,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"12156:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12171:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12156:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3525,"nodeType":"IfStatement","src":"12152:201:12","trueBody":{"id":3524,"nodeType":"Block","src":"12174:179:12","statements":[{"expression":{"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3502,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"12188:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote storage pointer"}},"id":3504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12193:13:12","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":2630,"src":"12188:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12209:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12188:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3507,"nodeType":"ExpressionStatement","src":"12188:25:12"},{"expression":{"arguments":[{"id":3514,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"12256:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":3510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12235:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12239:6:12","memberName":"sender","nodeType":"MemberAccess","src":"12235:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12227:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3508,"name":"address","nodeType":"ElementaryTypeName","src":"12227:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12247:8:12","memberName":"transfer","nodeType":"MemberAccess","src":"12227:28:12","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3516,"nodeType":"ExpressionStatement","src":"12227:42:12"},{"eventCall":{"arguments":[{"id":3518,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"12302:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3519,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12317:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12321:6:12","memberName":"sender","nodeType":"MemberAccess","src":"12317:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3521,"name":"rewardAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"12329:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3517,"name":"RewardClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"12288:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12288:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3523,"nodeType":"EmitStatement","src":"12283:59:12"}]}}]},"documentation":{"id":3437,"nodeType":"StructuredDocumentation","src":"11454:110:12","text":" @notice Claim rewards for correct predictions\n @param _predictionId The prediction ID"},"functionSelector":"ae169a50","id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"claimReward","nameLocation":"11578:11:12","nodeType":"FunctionDefinition","parameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"_predictionId","nameLocation":"11598:13:12","nodeType":"VariableDeclaration","scope":3527,"src":"11590:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"11590:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11589:23:12"},"returnParameters":{"id":3441,"nodeType":"ParameterList","parameters":[],"src":"11622:0:12"},"scope":4145,"src":"11569:790:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3595,"nodeType":"Block","src":"12534:827:12","statements":[{"assignments":[3539],"declarations":[{"constant":false,"id":3539,"mutability":"mutable","name":"prediction","nameLocation":"12568:10:12","nodeType":"VariableDeclaration","scope":3595,"src":"12544:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"},"typeName":{"id":3538,"nodeType":"UserDefinedTypeName","pathNode":{"id":3537,"name":"WorldPrediction","nameLocations":["12544:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"12544:15:12"},"referencedDeclaration":2622,"src":"12544:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}},"visibility":"internal"}],"id":3543,"initialValue":{"baseExpression":{"id":3540,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"12581:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3542,"indexExpression":{"id":3541,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"12593:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12581:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12544:63:12"},{"assignments":[3545],"declarations":[{"constant":false,"id":3545,"mutability":"mutable","name":"totalPot","nameLocation":"12634:8:12","nodeType":"VariableDeclaration","scope":3595,"src":"12626:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"12626:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3551,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3546,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"12645:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12656:15:12","memberName":"totalVoterStake","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"12645:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3548,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"12674:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12685:15:12","memberName":"astrologerStake","nodeType":"MemberAccess","referencedDeclaration":2603,"src":"12674:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12645:55:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12626:74:12"},{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"platformFee","nameLocation":"12718:11:12","nodeType":"VariableDeclaration","scope":3595,"src":"12710:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"12710:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3560,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"totalPot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"12733:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3555,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"12744:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12733:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12732:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12769:5:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"12732:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12710:64:12"},{"assignments":[3562],"declarations":[{"constant":false,"id":3562,"mutability":"mutable","name":"distributablePot","nameLocation":"12792:16:12","nodeType":"VariableDeclaration","scope":3595,"src":"12784:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3566,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"totalPot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"12811:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3564,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"12822:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12811:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12784:49:12"},{"assignments":[3568],"declarations":[{"constant":false,"id":3568,"mutability":"mutable","name":"astrologerReward","nameLocation":"12860:16:12","nodeType":"VariableDeclaration","scope":3595,"src":"12852:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"12852:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3570,"initialValue":{"hexValue":"30","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12879:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12852:28:12"},{"condition":{"id":3571,"name":"outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"12903:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3591,"nodeType":"Block","src":"13149:164:12","statements":[]},"id":3592,"nodeType":"IfStatement","src":"12899:414:12","trueBody":{"id":3590,"nodeType":"Block","src":"12912:231:12","statements":[{"expression":{"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3572,"name":"astrologerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"12987:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"distributablePot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"13007:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3574,"name":"astrologerRewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"13026:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13007:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13006:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13056:5:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"13006:55:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12987:74:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3580,"nodeType":"ExpressionStatement","src":"12987:74:12"},{"expression":{"arguments":[{"id":3587,"name":"astrologerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13115:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":3583,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"13083:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13094:10:12","memberName":"astrologer","nodeType":"MemberAccess","referencedDeclaration":2593,"src":"13083:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13075:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3581,"name":"address","nodeType":"ElementaryTypeName","src":"13075:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13075:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13106:8:12","memberName":"transfer","nodeType":"MemberAccess","src":"13075:39:12","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13075:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3589,"nodeType":"ExpressionStatement","src":"13075:57:12"}]}},{"expression":{"id":3593,"name":"astrologerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13338:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3536,"id":3594,"nodeType":"Return","src":"13331:23:12"}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"12365:73:12","text":" @notice Distribute rewards after prediction resolution"},"id":3596,"implemented":true,"kind":"function","modifiers":[],"name":"distributeRewards","nameLocation":"12452:17:12","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"_predictionId","nameLocation":"12478:13:12","nodeType":"VariableDeclaration","scope":3596,"src":"12470:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"12470:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"outcome","nameLocation":"12498:7:12","nodeType":"VariableDeclaration","scope":3596,"src":"12493:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3531,"name":"bool","nodeType":"ElementaryTypeName","src":"12493:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12469:37:12"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3596,"src":"12525:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"12525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12524:9:12"},"scope":4145,"src":"12443:918:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"13527:1111:12","statements":[{"assignments":[3608],"declarations":[{"constant":false,"id":3608,"mutability":"mutable","name":"prediction","nameLocation":"13561:10:12","nodeType":"VariableDeclaration","scope":3716,"src":"13537:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"},"typeName":{"id":3607,"nodeType":"UserDefinedTypeName","pathNode":{"id":3606,"name":"WorldPrediction","nameLocations":["13537:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"13537:15:12"},"referencedDeclaration":2622,"src":"13537:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}},"visibility":"internal"}],"id":3612,"initialValue":{"baseExpression":{"id":3609,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"13574:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3611,"indexExpression":{"id":3610,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"13586:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13574:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13537:63:12"},{"assignments":[3615],"declarations":[{"constant":false,"id":3615,"mutability":"mutable","name":"vote","nameLocation":"13623:4:12","nodeType":"VariableDeclaration","scope":3716,"src":"13610:17:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote"},"typeName":{"id":3614,"nodeType":"UserDefinedTypeName","pathNode":{"id":3613,"name":"Vote","nameLocations":["13610:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2631,"src":"13610:4:12"},"referencedDeclaration":2631,"src":"13610:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote"}},"visibility":"internal"}],"id":3621,"initialValue":{"baseExpression":{"baseExpression":{"id":3616,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"13630:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.Vote storage ref))"}},"id":3618,"indexExpression":{"id":3617,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"13636:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13630:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.Vote storage ref)"}},"id":3620,"indexExpression":{"id":3619,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"13651:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13630:28:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage","typeString":"struct WorldPredictionMarket.Vote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13610:48:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13681:22:12","subExpression":{"expression":{"id":3622,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"13682:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13693:10:12","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"13682:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13707:14:12","subExpression":{"expression":{"id":3625,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"13708:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote storage pointer"}},"id":3626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13713:8:12","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"13708:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13681:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":3629,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"13725:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote storage pointer"}},"id":3630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13730:13:12","memberName":"rewardClaimed","nodeType":"MemberAccess","referencedDeclaration":2630,"src":"13725:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13681:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3635,"nodeType":"IfStatement","src":"13677:101:12","trueBody":{"id":3634,"nodeType":"Block","src":"13745:33:12","statements":[{"expression":{"hexValue":"30","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13766:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3605,"id":3633,"nodeType":"Return","src":"13759:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3636,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"13835:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote storage pointer"}},"id":3637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13840:4:12","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":2626,"src":"13835:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3638,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"13848:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13859:7:12","memberName":"outcome","nodeType":"MemberAccess","referencedDeclaration":2615,"src":"13848:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13835:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3644,"nodeType":"IfStatement","src":"13831:70:12","trueBody":{"id":3643,"nodeType":"Block","src":"13868:33:12","statements":[{"expression":{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13889:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3605,"id":3642,"nodeType":"Return","src":"13882:8:12"}]}},{"assignments":[3646],"declarations":[{"constant":false,"id":3646,"mutability":"mutable","name":"totalPot","nameLocation":"13919:8:12","nodeType":"VariableDeclaration","scope":3716,"src":"13911:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"13911:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3652,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3647,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"13930:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13941:15:12","memberName":"totalVoterStake","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"13930:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3649,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"13959:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13970:15:12","memberName":"astrologerStake","nodeType":"MemberAccess","referencedDeclaration":2603,"src":"13959:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13930:55:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13911:74:12"},{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"platformFee","nameLocation":"14003:11:12","nodeType":"VariableDeclaration","scope":3716,"src":"13995:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"13995:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3661,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3655,"name":"totalPot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"14018:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3656,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"14029:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14018:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14017:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14054:5:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"14017:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13995:64:12"},{"assignments":[3663],"declarations":[{"constant":false,"id":3663,"mutability":"mutable","name":"distributablePot","nameLocation":"14077:16:12","nodeType":"VariableDeclaration","scope":3716,"src":"14069:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"14069:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3667,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"totalPot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"14096:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3665,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"14107:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14096:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14069:49:12"},{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"astrologerReward","nameLocation":"14145:16:12","nodeType":"VariableDeclaration","scope":3716,"src":"14137:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"14137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3671,"initialValue":{"hexValue":"30","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14164:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14137:28:12"},{"condition":{"expression":{"id":3672,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"14179:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14190:7:12","memberName":"outcome","nodeType":"MemberAccess","referencedDeclaration":2615,"src":"14179:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3684,"nodeType":"IfStatement","src":"14175:123:12","trueBody":{"id":3683,"nodeType":"Block","src":"14199:99:12","statements":[{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3674,"name":"astrologerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"14213:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3675,"name":"distributablePot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"14233:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3676,"name":"astrologerRewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"14252:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14233:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14232:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14282:5:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"14232:55:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14213:74:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"nodeType":"ExpressionStatement","src":"14213:74:12"}]}},{"assignments":[3686],"declarations":[{"constant":false,"id":3686,"mutability":"mutable","name":"voterRewardPool","nameLocation":"14324:15:12","nodeType":"VariableDeclaration","scope":3716,"src":"14316:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"14316:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3690,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"distributablePot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"14342:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3688,"name":"astrologerReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"14361:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14342:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14316:61:12"},{"assignments":[3692],"declarations":[{"constant":false,"id":3692,"mutability":"mutable","name":"winningStake","nameLocation":"14395:12:12","nodeType":"VariableDeclaration","scope":3716,"src":"14387:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"14387:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3700,"initialValue":{"condition":{"expression":{"id":3693,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"14410:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14421:7:12","memberName":"outcome","nodeType":"MemberAccess","referencedDeclaration":2615,"src":"14410:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3697,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"14458:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14469:12:12","memberName":"noVoterStake","nodeType":"MemberAccess","referencedDeclaration":2609,"src":"14458:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14410:71:12","trueExpression":{"expression":{"id":3695,"name":"prediction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"14431:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction storage pointer"}},"id":3696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14442:13:12","memberName":"yesVoterStake","nodeType":"MemberAccess","referencedDeclaration":2607,"src":"14431:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14387:94:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3701,"name":"winningStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"14504:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14519:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14504:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3713,"nodeType":"IfStatement","src":"14500:105:12","trueBody":{"id":3712,"nodeType":"Block","src":"14522:83:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3704,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"14544:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote storage pointer"}},"id":3705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14549:11:12","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":2628,"src":"14544:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3706,"name":"voterRewardPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"14563:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14544:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14543:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3709,"name":"winningStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"14582:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14543:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3605,"id":3711,"nodeType":"Return","src":"14536:58:12"}]}},{"expression":{"hexValue":"30","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14630:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3605,"id":3715,"nodeType":"Return","src":"14623:8:12"}]},"documentation":{"id":3597,"nodeType":"StructuredDocumentation","src":"13367:56:12","text":" @notice Calculate voter reward amount"},"functionSelector":"5aa76be0","id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"calculateVoterReward","nameLocation":"13437:20:12","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"_predictionId","nameLocation":"13466:13:12","nodeType":"VariableDeclaration","scope":3717,"src":"13458:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"13458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"_voter","nameLocation":"13489:6:12","nodeType":"VariableDeclaration","scope":3717,"src":"13481:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3600,"name":"address","nodeType":"ElementaryTypeName","src":"13481:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13457:39:12"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3717,"src":"13518:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"13518:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13517:9:12"},"scope":4145,"src":"13428:1210:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3763,"nodeType":"Block","src":"14839:363:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3727,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"14853:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14881:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14873:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3728,"name":"address","nodeType":"ElementaryTypeName","src":"14873:7:12","typeDescriptions":{}}},"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14873:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14853:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3742,"nodeType":"IfStatement","src":"14849:158:12","trueBody":{"id":3741,"nodeType":"Block","src":"14885:122:12","statements":[{"expression":{"arguments":[{"id":3737,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"14971:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3738,"name":"_wasCorrect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"14984:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":3734,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"14917:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3733,"name":"IReputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"14899:17:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IReputationScorer_$4389_$","typeString":"type(contract IReputationScorer)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14899:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IReputationScorer_$4389","typeString":"contract IReputationScorer"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14935:35:12","memberName":"updateReputationFromWorldPrediction","nodeType":"MemberAccess","referencedDeclaration":4354,"src":"14899:71:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool) external"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14899:97:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3740,"nodeType":"ExpressionStatement","src":"14899:97:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"15029:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15058:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15050:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3744,"name":"address","nodeType":"ElementaryTypeName","src":"15050:7:12","typeDescriptions":{}}},"id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15050:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15029:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"_astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"15064:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15080:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15064:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15029:52:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"IfStatement","src":"15025:171:12","trueBody":{"id":3761,"nodeType":"Block","src":"15083:113:12","statements":[{"expression":{"arguments":[{"id":3757,"name":"_astrologerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"15158:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3758,"name":"_wasCorrect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"15173:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":3754,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"15116:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3753,"name":"IAstrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"15097:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAstrologerManager_$4305_$","typeString":"type(contract IAstrologerManager)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15097:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAstrologerManager_$4305","typeString":"contract IAstrologerManager"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15135:22:12","memberName":"recordPredictionResult","nodeType":"MemberAccess","referencedDeclaration":4283,"src":"15097:60:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool) external"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15097:88:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3760,"nodeType":"ExpressionStatement","src":"15097:88:12"}]}}]},"documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"14644:83:12","text":" @notice Update astrologer reputation based on prediction outcome"},"id":3764,"implemented":true,"kind":"function","modifiers":[],"name":"updateAstrologerReputation","nameLocation":"14741:26:12","nodeType":"FunctionDefinition","parameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"_astrologer","nameLocation":"14776:11:12","nodeType":"VariableDeclaration","scope":3764,"src":"14768:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3719,"name":"address","nodeType":"ElementaryTypeName","src":"14768:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"_astrologerId","nameLocation":"14797:13:12","nodeType":"VariableDeclaration","scope":3764,"src":"14789:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"14789:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"_wasCorrect","nameLocation":"14817:11:12","nodeType":"VariableDeclaration","scope":3764,"src":"14812:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3723,"name":"bool","nodeType":"ElementaryTypeName","src":"14812:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14767:62:12"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[],"src":"14839:0:12"},"scope":4145,"src":"14732:470:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"15342:308:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"astroChartNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"15356:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15381:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15373:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3773,"name":"address","nodeType":"ElementaryTypeName","src":"15373:7:12","typeDescriptions":{}}},"id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15373:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15356:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"IfStatement","src":"15352:44:12","trueBody":{"expression":{"hexValue":"74727565","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15392:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3771,"id":3779,"nodeType":"Return","src":"15385:11:12"}},{"clauses":[{"block":{"id":3794,"nodeType":"Block","src":"15557:43:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3790,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"15578:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15588:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15578:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3771,"id":3793,"nodeType":"Return","src":"15571:18:12"}]},"errorName":"","id":3795,"nodeType":"TryCatchClause","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"balance","nameLocation":"15548:7:12","nodeType":"VariableDeclaration","scope":3795,"src":"15540:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"15540:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15539:17:12"},"src":"15531:69:12"},{"block":{"id":3798,"nodeType":"Block","src":"15607:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15628:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3771,"id":3797,"nodeType":"Return","src":"15621:12:12"}]},"errorName":"","id":3799,"nodeType":"TryCatchClause","src":"15601:43:12"}],"externalCall":{"arguments":[{"id":3785,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"15524:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3782,"name":"astroChartNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"15499:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3781,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"15491:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$4160_$","typeString":"type(contract IERC721)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15491:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$4160","typeString":"contract IERC721"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15514:9:12","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4152,"src":"15491:32:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15491:39:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3800,"nodeType":"TryStatement","src":"15487:157:12"}]},"documentation":{"id":3765,"nodeType":"StructuredDocumentation","src":"15208:59:12","text":" @notice Check if user has AstroChart NFT"},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"hasAstroChartNFT","nameLocation":"15281:16:12","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"_user","nameLocation":"15306:5:12","nodeType":"VariableDeclaration","scope":3802,"src":"15298:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3766,"name":"address","nodeType":"ElementaryTypeName","src":"15298:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15297:15:12"},"returnParameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"15336:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3769,"name":"bool","nodeType":"ElementaryTypeName","src":"15336:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15335:6:12"},"scope":4145,"src":"15272:378:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3845,"nodeType":"Block","src":"15798:327:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3812,"name":"zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"15812:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15833:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15825:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3813,"name":"address","nodeType":"ElementaryTypeName","src":"15825:7:12","typeDescriptions":{}}},"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15825:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15812:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3824,"nodeType":"IfStatement","src":"15808:57:12","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15844:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15848:6:12","memberName":"sender","nodeType":"MemberAccess","src":"15844:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3820,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"15858:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15858:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15844:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3811,"id":3823,"nodeType":"Return","src":"15837:28:12"}},{"clauses":[{"block":{"id":3838,"nodeType":"Block","src":"16029:46:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3834,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"16050:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3835,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"16059:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16050:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3811,"id":3837,"nodeType":"Return","src":"16043:21:12"}]},"errorName":"","id":3839,"nodeType":"TryCatchClause","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"owner","nameLocation":"16022:5:12","nodeType":"VariableDeclaration","scope":3839,"src":"16014:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3831,"name":"address","nodeType":"ElementaryTypeName","src":"16014:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16013:15:12"},"src":"16005:70:12"},{"block":{"id":3842,"nodeType":"Block","src":"16082:37:12","statements":[{"expression":{"hexValue":"66616c7365","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3811,"id":3841,"nodeType":"Return","src":"16096:12:12"}]},"errorName":"","id":3843,"nodeType":"TryCatchClause","src":"16076:43:12"}],"externalCall":{"arguments":[{"id":3829,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"15995:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3826,"name":"zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"15976:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3825,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"15968:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$4160_$","typeString":"type(contract IERC721)"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15968:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$4160","typeString":"contract IERC721"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15987:7:12","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":4159,"src":"15968:26:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15968:36:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3844,"nodeType":"TryStatement","src":"15964:155:12"}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"15656:54:12","text":" @notice Check if user is DAO member"},"id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"isDAOMember","nameLocation":"15724:11:12","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"_user","nameLocation":"15744:5:12","nodeType":"VariableDeclaration","scope":3846,"src":"15736:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3804,"name":"address","nodeType":"ElementaryTypeName","src":"15736:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"_tokenId","nameLocation":"15759:8:12","nodeType":"VariableDeclaration","scope":3846,"src":"15751:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"15751:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15735:33:12"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3846,"src":"15792:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3809,"name":"bool","nodeType":"ElementaryTypeName","src":"15792:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15791:6:12"},"scope":4145,"src":"15715:410:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3871,"nodeType":"Block","src":"16246:156:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"16264:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16280:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16264:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"16285:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3859,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"16302:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16317:7:12","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"16302:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16302:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16285:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16264:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726564696374696f6e204944","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16328:23:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""},"value":"Invalid prediction ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa200ea2f36f3d7ec238a38cbd1984d2d2df09c69ef58fb1cf5e7b214b9d8a1e","typeString":"literal_string \"Invalid prediction ID\""}],"id":3854,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16256:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16256:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3866,"nodeType":"ExpressionStatement","src":"16256:96:12"},{"expression":{"baseExpression":{"id":3867,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"16369:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3869,"indexExpression":{"id":3868,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"16381:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16369:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"functionReturnParameters":3853,"id":3870,"nodeType":"Return","src":"16362:33:12"}]},"functionSelector":"fe83bece","id":3872,"implemented":true,"kind":"function","modifiers":[],"name":"getPrediction","nameLocation":"16162:13:12","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"_predictionId","nameLocation":"16184:13:12","nodeType":"VariableDeclaration","scope":3872,"src":"16176:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"16176:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16175:23:12"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3872,"src":"16222:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_memory_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"},"typeName":{"id":3851,"nodeType":"UserDefinedTypeName","pathNode":{"id":3850,"name":"WorldPrediction","nameLocations":["16222:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":2622,"src":"16222:15:12"},"referencedDeclaration":2622,"src":"16222:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage_ptr","typeString":"struct WorldPredictionMarket.WorldPrediction"}},"visibility":"internal"}],"src":"16221:24:12"},"scope":4145,"src":"16153:249:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3888,"nodeType":"Block","src":"16500:52:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3882,"name":"votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"16517:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.Vote storage ref))"}},"id":3884,"indexExpression":{"id":3883,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"16523:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16517:20:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Vote_$2631_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.Vote storage ref)"}},"id":3886,"indexExpression":{"id":3885,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"16538:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16517:28:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage","typeString":"struct WorldPredictionMarket.Vote storage ref"}},"functionReturnParameters":3881,"id":3887,"nodeType":"Return","src":"16510:35:12"}]},"functionSelector":"bc3f931f","id":3889,"implemented":true,"kind":"function","modifiers":[],"name":"getVote","nameLocation":"16417:7:12","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"_predictionId","nameLocation":"16433:13:12","nodeType":"VariableDeclaration","scope":3889,"src":"16425:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"16425:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"_voter","nameLocation":"16456:6:12","nodeType":"VariableDeclaration","scope":3889,"src":"16448:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"16448:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16424:39:12"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3889,"src":"16487:11:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_memory_ptr","typeString":"struct WorldPredictionMarket.Vote"},"typeName":{"id":3879,"nodeType":"UserDefinedTypeName","pathNode":{"id":3878,"name":"Vote","nameLocations":["16487:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":2631,"src":"16487:4:12"},"referencedDeclaration":2631,"src":"16487:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Vote_$2631_storage_ptr","typeString":"struct WorldPredictionMarket.Vote"}},"visibility":"internal"}],"src":"16486:13:12"},"scope":4145,"src":"16408:144:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3905,"nodeType":"Block","src":"16656:55:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3899,"name":"daoVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"16673:8:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.DAOVote storage ref))"}},"id":3901,"indexExpression":{"id":3900,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"16682:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16673:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DAOVote_$2638_storage_$","typeString":"mapping(address => struct WorldPredictionMarket.DAOVote storage ref)"}},"id":3903,"indexExpression":{"id":3902,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"16697:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16673:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_DAOVote_$2638_storage","typeString":"struct WorldPredictionMarket.DAOVote storage ref"}},"functionReturnParameters":3898,"id":3904,"nodeType":"Return","src":"16666:38:12"}]},"functionSelector":"444a50c2","id":3906,"implemented":true,"kind":"function","modifiers":[],"name":"getDAOVote","nameLocation":"16567:10:12","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"_predictionId","nameLocation":"16586:13:12","nodeType":"VariableDeclaration","scope":3906,"src":"16578:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"16578:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"_voter","nameLocation":"16609:6:12","nodeType":"VariableDeclaration","scope":3906,"src":"16601:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3892,"name":"address","nodeType":"ElementaryTypeName","src":"16601:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16577:39:12"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3906,"src":"16640:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DAOVote_$2638_memory_ptr","typeString":"struct WorldPredictionMarket.DAOVote"},"typeName":{"id":3896,"nodeType":"UserDefinedTypeName","pathNode":{"id":3895,"name":"DAOVote","nameLocations":["16640:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2638,"src":"16640:7:12"},"referencedDeclaration":2638,"src":"16640:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_DAOVote_$2638_storage_ptr","typeString":"struct WorldPredictionMarket.DAOVote"}},"visibility":"internal"}],"src":"16639:16:12"},"scope":4145,"src":"16558:153:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3918,"nodeType":"Block","src":"16813:58:12","statements":[{"expression":{"baseExpression":{"id":3914,"name":"astrologerPredictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"16830:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3916,"indexExpression":{"id":3915,"name":"_astrologer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"16852:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16830:34:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":3913,"id":3917,"nodeType":"Return","src":"16823:41:12"}]},"functionSelector":"bc858185","id":3919,"implemented":true,"kind":"function","modifiers":[],"name":"getAstrologerPredictions","nameLocation":"16726:24:12","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"_astrologer","nameLocation":"16759:11:12","nodeType":"VariableDeclaration","scope":3919,"src":"16751:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3907,"name":"address","nodeType":"ElementaryTypeName","src":"16751:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16750:21:12"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"16795:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"16795:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ArrayTypeName","src":"16795:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16794:18:12"},"scope":4145,"src":"16717:154:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3931,"nodeType":"Block","src":"16955:40:12","statements":[{"expression":{"baseExpression":{"id":3927,"name":"userVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"16972:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":3929,"indexExpression":{"id":3928,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"16982:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16972:16:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":3926,"id":3930,"nodeType":"Return","src":"16965:23:12"}]},"functionSelector":"950c7822","id":3932,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVotes","nameLocation":"16886:12:12","nodeType":"FunctionDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"_user","nameLocation":"16907:5:12","nodeType":"VariableDeclaration","scope":3932,"src":"16899:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3920,"name":"address","nodeType":"ElementaryTypeName","src":"16899:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16898:15:12"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3932,"src":"16937:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"16937:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3924,"nodeType":"ArrayTypeName","src":"16937:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16936:18:12"},"scope":4145,"src":"16877:118:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3986,"nodeType":"Block","src":"17074:364:12","statements":[{"assignments":[3942],"declarations":[{"constant":false,"id":3942,"mutability":"mutable","name":"activeIds","nameLocation":"17101:9:12","nodeType":"VariableDeclaration","scope":3986,"src":"17084:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"17084:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"nodeType":"ArrayTypeName","src":"17084:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3949,"initialValue":{"arguments":[{"expression":{"id":3946,"name":"predictionStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"17127:15:12","typeDescriptions":{"typeIdentifier":"t_struct$_PredictionStats_$2647_storage","typeString":"struct WorldPredictionMarket.PredictionStats storage ref"}},"id":3947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17143:17:12","memberName":"activePredictions","nodeType":"MemberAccess","referencedDeclaration":2642,"src":"17127:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17113:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"17117:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ArrayTypeName","src":"17117:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17113:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17084:77:12"},{"assignments":[3951],"declarations":[{"constant":false,"id":3951,"mutability":"mutable","name":"count","nameLocation":"17179:5:12","nodeType":"VariableDeclaration","scope":3986,"src":"17171:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"17171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3953,"initialValue":{"hexValue":"30","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17187:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17171:17:12"},{"body":{"id":3982,"nodeType":"Block","src":"17263:134:12","statements":[{"condition":{"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17281:26:12","subExpression":{"expression":{"baseExpression":{"id":3966,"name":"predictions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"17282:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_WorldPrediction_$2622_storage_$","typeString":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction storage ref)"}},"id":3968,"indexExpression":{"id":3967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"17294:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17282:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_WorldPrediction_$2622_storage","typeString":"struct WorldPredictionMarket.WorldPrediction storage ref"}},"id":3969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17297:10:12","memberName":"isResolved","nodeType":"MemberAccess","referencedDeclaration":2613,"src":"17282:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3981,"nodeType":"IfStatement","src":"17277:110:12","trueBody":{"id":3980,"nodeType":"Block","src":"17309:78:12","statements":[{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3971,"name":"activeIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"17327:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3973,"indexExpression":{"id":3972,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"17337:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17327:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3974,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"17346:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17327:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3976,"nodeType":"ExpressionStatement","src":"17327:20:12"},{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17365:7:12","subExpression":{"id":3977,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"17365:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3979,"nodeType":"ExpressionStatement","src":"17365:7:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"17227:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3959,"name":"_predictionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"17232:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1179_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":3960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17247:7:12","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"17232:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1179_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1179_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17232:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17227:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3983,"initializationExpression":{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"i","nameLocation":"17220:1:12","nodeType":"VariableDeclaration","scope":3983,"src":"17212:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"17212:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3957,"initialValue":{"hexValue":"31","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17224:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"17212:13:12"},"loopExpression":{"expression":{"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17258:3:12","subExpression":{"id":3963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"17258:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3965,"nodeType":"ExpressionStatement","src":"17258:3:12"},"nodeType":"ForStatement","src":"17207:190:12"},{"expression":{"id":3984,"name":"activeIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"17422:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3937,"id":3985,"nodeType":"Return","src":"17415:16:12"}]},"functionSelector":"a9d6921b","id":3987,"implemented":true,"kind":"function","modifiers":[],"name":"getActivePredictions","nameLocation":"17010:20:12","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[],"src":"17030:2:12"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3987,"src":"17056:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"17056:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3935,"nodeType":"ArrayTypeName","src":"17056:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17055:18:12"},"scope":4145,"src":"17001:437:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4004,"nodeType":"Block","src":"17551:79:12","statements":[{"expression":{"components":[{"baseExpression":{"id":3996,"name":"daoYesVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"17569:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3998,"indexExpression":{"id":3997,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"17581:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17569:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3999,"name":"daoNoVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"17597:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4001,"indexExpression":{"id":4000,"name":"_predictionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"17608:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17597:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17568:55:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3995,"id":4003,"nodeType":"Return","src":"17561:62:12"}]},"functionSelector":"9dcf0b7a","id":4005,"implemented":true,"kind":"function","modifiers":[],"name":"getDAOVoteCounts","nameLocation":"17453:16:12","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"_predictionId","nameLocation":"17478:13:12","nodeType":"VariableDeclaration","scope":4005,"src":"17470:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"17470:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17469:23:12"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"yesVotes","nameLocation":"17524:8:12","nodeType":"VariableDeclaration","scope":4005,"src":"17516:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3991,"name":"uint256","nodeType":"ElementaryTypeName","src":"17516:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"noVotes","nameLocation":"17542:7:12","nodeType":"VariableDeclaration","scope":4005,"src":"17534:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17515:35:12"},"scope":4145,"src":"17444:186:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4016,"nodeType":"Block","src":"17736:55:12","statements":[{"expression":{"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4012,"name":"astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"17746:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4013,"name":"_astrologerManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"17766:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17746:38:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4015,"nodeType":"ExpressionStatement","src":"17746:38:12"}]},"functionSelector":"44cda485","id":4017,"implemented":true,"kind":"function","modifiers":[{"id":4010,"kind":"modifierInvocation","modifierName":{"id":4009,"name":"onlyOwner","nameLocations":["17726:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"17726:9:12"},"nodeType":"ModifierInvocation","src":"17726:9:12"}],"name":"setAstrologerManager","nameLocation":"17668:20:12","nodeType":"FunctionDefinition","parameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"_astrologerManager","nameLocation":"17697:18:12","nodeType":"VariableDeclaration","scope":4017,"src":"17689:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4006,"name":"address","nodeType":"ElementaryTypeName","src":"17689:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17688:28:12"},"returnParameters":{"id":4011,"nodeType":"ParameterList","parameters":[],"src":"17736:0:12"},"scope":4145,"src":"17659:132:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4028,"nodeType":"Block","src":"17866:47:12","statements":[{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"astroChartNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"17876:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4025,"name":"_astroChartNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"17892:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17876:30:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4027,"nodeType":"ExpressionStatement","src":"17876:30:12"}]},"functionSelector":"ce083d73","id":4029,"implemented":true,"kind":"function","modifiers":[{"id":4022,"kind":"modifierInvocation","modifierName":{"id":4021,"name":"onlyOwner","nameLocations":["17856:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"17856:9:12"},"nodeType":"ModifierInvocation","src":"17856:9:12"}],"name":"setAstroChartNFT","nameLocation":"17806:16:12","nodeType":"FunctionDefinition","parameters":{"id":4020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"_astroChartNFT","nameLocation":"17831:14:12","nodeType":"VariableDeclaration","scope":4029,"src":"17823:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4018,"name":"address","nodeType":"ElementaryTypeName","src":"17823:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17822:24:12"},"returnParameters":{"id":4023,"nodeType":"ParameterList","parameters":[],"src":"17866:0:12"},"scope":4145,"src":"17797:116:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4040,"nodeType":"Block","src":"17980:39:12","statements":[{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4036,"name":"zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"17990:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4037,"name":"_zodiacDAO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"18002:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17990:22:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4039,"nodeType":"ExpressionStatement","src":"17990:22:12"}]},"functionSelector":"65af67bd","id":4041,"implemented":true,"kind":"function","modifiers":[{"id":4034,"kind":"modifierInvocation","modifierName":{"id":4033,"name":"onlyOwner","nameLocations":["17970:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"17970:9:12"},"nodeType":"ModifierInvocation","src":"17970:9:12"}],"name":"setZodiacDAO","nameLocation":"17928:12:12","nodeType":"FunctionDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"_zodiacDAO","nameLocation":"17949:10:12","nodeType":"VariableDeclaration","scope":4041,"src":"17941:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4030,"name":"address","nodeType":"ElementaryTypeName","src":"17941:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17940:20:12"},"returnParameters":{"id":4035,"nodeType":"ParameterList","parameters":[],"src":"17980:0:12"},"scope":4145,"src":"17919:100:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4052,"nodeType":"Block","src":"18100:53:12","statements":[{"expression":{"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4048,"name":"reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"18110:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4049,"name":"_reputationScorer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"18129:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18110:36:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4051,"nodeType":"ExpressionStatement","src":"18110:36:12"}]},"functionSelector":"e9725c21","id":4053,"implemented":true,"kind":"function","modifiers":[{"id":4046,"kind":"modifierInvocation","modifierName":{"id":4045,"name":"onlyOwner","nameLocations":["18090:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"18090:9:12"},"nodeType":"ModifierInvocation","src":"18090:9:12"}],"name":"setReputationScorer","nameLocation":"18034:19:12","nodeType":"FunctionDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"_reputationScorer","nameLocation":"18062:17:12","nodeType":"VariableDeclaration","scope":4053,"src":"18054:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4042,"name":"address","nodeType":"ElementaryTypeName","src":"18054:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18053:27:12"},"returnParameters":{"id":4047,"nodeType":"ParameterList","parameters":[],"src":"18100:0:12"},"scope":4145,"src":"18025:128:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4076,"nodeType":"Block","src":"18279:137:12","statements":[{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"minAstrologerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"18289:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4065,"name":"_minAstrologerStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"18310:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18289:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"18289:40:12"},{"expression":{"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4068,"name":"minVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"18339:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4069,"name":"_minVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"18355:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18339:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4071,"nodeType":"ExpressionStatement","src":"18339:30:12"},{"expression":{"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4072,"name":"maxVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"18379:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4073,"name":"_maxVoterStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"18395:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18379:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4075,"nodeType":"ExpressionStatement","src":"18379:30:12"}]},"functionSelector":"c8ab686a","id":4077,"implemented":true,"kind":"function","modifiers":[{"id":4062,"kind":"modifierInvocation","modifierName":{"id":4061,"name":"onlyOwner","nameLocations":["18269:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"18269:9:12"},"nodeType":"ModifierInvocation","src":"18269:9:12"}],"name":"setStakeLimits","nameLocation":"18168:14:12","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"_minAstrologerStake","nameLocation":"18191:19:12","nodeType":"VariableDeclaration","scope":4077,"src":"18183:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"18183:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"_minVoterStake","nameLocation":"18220:14:12","nodeType":"VariableDeclaration","scope":4077,"src":"18212:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"18212:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"_maxVoterStake","nameLocation":"18244:14:12","nodeType":"VariableDeclaration","scope":4077,"src":"18236:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"18236:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18182:77:12"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[],"src":"18279:0:12"},"scope":4145,"src":"18159:257:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4088,"nodeType":"Block","src":"18490:46:12","statements":[{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4084,"name":"daoVotingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18500:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4085,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"18520:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18500:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"18500:29:12"}]},"functionSelector":"34954999","id":4089,"implemented":true,"kind":"function","modifiers":[{"id":4082,"kind":"modifierInvocation","modifierName":{"id":4081,"name":"onlyOwner","nameLocations":["18480:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"18480:9:12"},"nodeType":"ModifierInvocation","src":"18480:9:12"}],"name":"setDAOVotingDuration","nameLocation":"18431:20:12","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"_duration","nameLocation":"18460:9:12","nodeType":"VariableDeclaration","scope":4089,"src":"18452:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"18452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18451:19:12"},"returnParameters":{"id":4083,"nodeType":"ParameterList","parameters":[],"src":"18490:0:12"},"scope":4145,"src":"18422:114:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4115,"nodeType":"Block","src":"18660:247:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"_astrologerRewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"18678:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4100,"name":"_platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"18708:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18678:52:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18734:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"18678:60:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2070657263656e74616765732063616e6e6f742065786365656420313025","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18740:37:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e1c99d0d9e673c79f68bdfc4edab67f5db0ec96e0958f57a342d69cc25c1448","typeString":"literal_string \"Total percentages cannot exceed 10%\""},"value":"Total percentages cannot exceed 10%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e1c99d0d9e673c79f68bdfc4edab67f5db0ec96e0958f57a342d69cc25c1448","typeString":"literal_string \"Total percentages cannot exceed 10%\""}],"id":4098,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18670:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18670:108:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4106,"nodeType":"ExpressionStatement","src":"18670:108:12"},{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4107,"name":"astrologerRewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"18788:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4108,"name":"_astrologerRewardPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"18817:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18788:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4110,"nodeType":"ExpressionStatement","src":"18788:56:12"},{"expression":{"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4111,"name":"platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"18854:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4112,"name":"_platformFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"18878:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18854:46:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4114,"nodeType":"ExpressionStatement","src":"18854:46:12"}]},"functionSelector":"6f502056","id":4116,"implemented":true,"kind":"function","modifiers":[{"id":4096,"kind":"modifierInvocation","modifierName":{"id":4095,"name":"onlyOwner","nameLocations":["18650:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"18650:9:12"},"nodeType":"ModifierInvocation","src":"18650:9:12"}],"name":"setRewardPercentages","nameLocation":"18551:20:12","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"_astrologerRewardPercentage","nameLocation":"18580:27:12","nodeType":"VariableDeclaration","scope":4116,"src":"18572:35:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"18572:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"_platformFeePercentage","nameLocation":"18617:22:12","nodeType":"VariableDeclaration","scope":4116,"src":"18609:30:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"18609:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18571:69:12"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[],"src":"18660:0:12"},"scope":4145,"src":"18542:365:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4134,"nodeType":"Block","src":"18952:65:12","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":4129,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18996:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WorldPredictionMarket_$4145","typeString":"contract WorldPredictionMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WorldPredictionMarket_$4145","typeString":"contract WorldPredictionMarket"}],"id":4128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18988:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4127,"name":"address","nodeType":"ElementaryTypeName","src":"18988:7:12","typeDescriptions":{}}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18988:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19002:7:12","memberName":"balance","nodeType":"MemberAccess","src":"18988:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"18970:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18970:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18962:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4121,"name":"address","nodeType":"ElementaryTypeName","src":"18962:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18962:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18979:8:12","memberName":"transfer","nodeType":"MemberAccess","src":"18962:25:12","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18962:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4133,"nodeType":"ExpressionStatement","src":"18962:48:12"}]},"functionSelector":"3ccfd60b","id":4135,"implemented":true,"kind":"function","modifiers":[{"id":4119,"kind":"modifierInvocation","modifierName":{"id":4118,"name":"onlyOwner","nameLocations":["18942:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"18942:9:12"},"nodeType":"ModifierInvocation","src":"18942:9:12"}],"name":"withdraw","nameLocation":"18922:8:12","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[],"src":"18930:2:12"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[],"src":"18952:0:12"},"scope":4145,"src":"18913:104:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[795],"body":{"id":4143,"nodeType":"Block","src":"19105:2:12","statements":[]},"id":4144,"implemented":true,"kind":"function","modifiers":[{"id":4141,"kind":"modifierInvocation","modifierName":{"id":4140,"name":"onlyOwner","nameLocations":["19095:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"19095:9:12"},"nodeType":"ModifierInvocation","src":"19095:9:12"}],"name":"_authorizeUpgrade","nameLocation":"19032:17:12","nodeType":"FunctionDefinition","overrides":{"id":4139,"nodeType":"OverrideSpecifier","overrides":[],"src":"19086:8:12"},"parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"newImplementation","nameLocation":"19058:17:12","nodeType":"VariableDeclaration","scope":4144,"src":"19050:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4136,"name":"address","nodeType":"ElementaryTypeName","src":"19050:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19049:27:12"},"returnParameters":{"id":4142,"nodeType":"ParameterList","parameters":[],"src":"19105:0:12"},"scope":4145,"src":"19023:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4161,"src":"455:18654:12","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4160,"linearizedBaseContracts":[4160],"name":"IERC721","nameLocation":"19162:7:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"70a08231","id":4152,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"19185:9:12","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"owner","nameLocation":"19203:5:12","nodeType":"VariableDeclaration","scope":4152,"src":"19195:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4146,"name":"address","nodeType":"ElementaryTypeName","src":"19195:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19194:15:12"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"balance","nameLocation":"19241:7:12","nodeType":"VariableDeclaration","scope":4152,"src":"19233:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"19233:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19232:17:12"},"scope":4160,"src":"19176:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6352211e","id":4159,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"19264:7:12","nodeType":"FunctionDefinition","parameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"tokenId","nameLocation":"19280:7:12","nodeType":"VariableDeclaration","scope":4159,"src":"19272:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"19272:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19271:17:12"},"returnParameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"owner","nameLocation":"19320:5:12","nodeType":"VariableDeclaration","scope":4159,"src":"19312:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4156,"name":"address","nodeType":"ElementaryTypeName","src":"19312:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19311:15:12"},"scope":4160,"src":"19255:72:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4161,"src":"19152:177:12","usedErrors":[]}],"src":"32:19298:12"},"id":12},"contracts/interfaces/IAstroTokenLauncher.sol":{"ast":{"absolutePath":"contracts/interfaces/IAstroTokenLauncher.sol","exportedSymbols":{"IAstroTokenLauncher":[4222]},"id":4223,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4162,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IAstroTokenLauncher","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4222,"linearizedBaseContracts":[4222],"name":"IAstroTokenLauncher","nameLocation":"67:19:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IAstroTokenLauncher.TokenInfo","id":4183,"members":[{"constant":false,"id":4164,"mutability":"mutable","name":"id","nameLocation":"128:2:13","nodeType":"VariableDeclaration","scope":4183,"src":"120:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"120:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4166,"mutability":"mutable","name":"astrologer","nameLocation":"148:10:13","nodeType":"VariableDeclaration","scope":4183,"src":"140:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4165,"name":"address","nodeType":"ElementaryTypeName","src":"140:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"tokenContract","nameLocation":"176:13:13","nodeType":"VariableDeclaration","scope":4183,"src":"168:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4167,"name":"address","nodeType":"ElementaryTypeName","src":"168:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"buyContract","nameLocation":"207:11:13","nodeType":"VariableDeclaration","scope":4183,"src":"199:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4169,"name":"address","nodeType":"ElementaryTypeName","src":"199:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"name","nameLocation":"235:4:13","nodeType":"VariableDeclaration","scope":4183,"src":"228:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4171,"name":"string","nodeType":"ElementaryTypeName","src":"228:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"symbol","nameLocation":"256:6:13","nodeType":"VariableDeclaration","scope":4183,"src":"249:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4173,"name":"string","nodeType":"ElementaryTypeName","src":"249:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4176,"mutability":"mutable","name":"totalSupply","nameLocation":"280:11:13","nodeType":"VariableDeclaration","scope":4183,"src":"272:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4175,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"initialPrice","nameLocation":"309:12:13","nodeType":"VariableDeclaration","scope":4183,"src":"301:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"isActive","nameLocation":"336:8:13","nodeType":"VariableDeclaration","scope":4183,"src":"331:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4179,"name":"bool","nodeType":"ElementaryTypeName","src":"331:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4182,"mutability":"mutable","name":"createdAt","nameLocation":"362:9:13","nodeType":"VariableDeclaration","scope":4183,"src":"354:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"100:9:13","nodeType":"StructDefinition","scope":4222,"src":"93:285:13","visibility":"public"},{"functionSelector":"922edb34","id":4191,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenByAstrologer","nameLocation":"393:20:13","nodeType":"FunctionDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"astrologer","nameLocation":"422:10:13","nodeType":"VariableDeclaration","scope":4191,"src":"414:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4184,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"413:20:13"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4191,"src":"457:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":4188,"nodeType":"UserDefinedTypeName","pathNode":{"id":4187,"name":"TokenInfo","nameLocations":["457:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4183,"src":"457:9:13"},"referencedDeclaration":4183,"src":"457:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"456:18:13"},"scope":4222,"src":"384:91:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8d84289e","id":4199,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenByContract","nameLocation":"489:18:13","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"tokenContract","nameLocation":"516:13:13","nodeType":"VariableDeclaration","scope":4199,"src":"508:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4192,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:23:13"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4199,"src":"554:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":4196,"nodeType":"UserDefinedTypeName","pathNode":{"id":4195,"name":"TokenInfo","nameLocations":["554:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4183,"src":"554:9:13"},"referencedDeclaration":4183,"src":"554:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"553:18:13"},"scope":4222,"src":"480:92:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8c7a63ae","id":4207,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"586:12:13","nodeType":"FunctionDefinition","parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"tokenId","nameLocation":"607:7:13","nodeType":"VariableDeclaration","scope":4207,"src":"599:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"598:17:13"},"returnParameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4207,"src":"639:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_memory_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"},"typeName":{"id":4204,"nodeType":"UserDefinedTypeName","pathNode":{"id":4203,"name":"TokenInfo","nameLocations":["639:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":4183,"src":"639:9:13"},"referencedDeclaration":4183,"src":"639:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$4183_storage_ptr","typeString":"struct IAstroTokenLauncher.TokenInfo"}},"visibility":"internal"}],"src":"638:18:13"},"scope":4222,"src":"577:80:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"21dd6760","id":4214,"implemented":false,"kind":"function","modifiers":[],"name":"astrologerToTokenId","nameLocation":"671:19:13","nodeType":"FunctionDefinition","parameters":{"id":4210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"astrologer","nameLocation":"699:10:13","nodeType":"VariableDeclaration","scope":4214,"src":"691:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4208,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"690:20:13"},"returnParameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4214,"src":"734:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:9:13"},"scope":4222,"src":"662:81:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"36203131","id":4221,"implemented":false,"kind":"function","modifiers":[],"name":"tokenContractToId","nameLocation":"757:17:13","nodeType":"FunctionDefinition","parameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"tokenContract","nameLocation":"783:13:13","nodeType":"VariableDeclaration","scope":4221,"src":"775:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"774:23:13"},"returnParameters":{"id":4220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4221,"src":"821:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4218,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:13"},"scope":4222,"src":"748:82:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4223,"src":"57:775:13","usedErrors":[]}],"src":"32:801:13"},"id":13},"contracts/interfaces/IAstrologerManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IAstrologerManager.sol","exportedSymbols":{"IAstrologerManager":[4305]},"id":4306,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4224,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IAstrologerManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4305,"linearizedBaseContracts":[4305],"name":"IAstrologerManager","nameLocation":"67:18:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IAstrologerManager.Astrologer","id":4253,"members":[{"constant":false,"id":4226,"mutability":"mutable","name":"id","nameLocation":"128:2:14","nodeType":"VariableDeclaration","scope":4253,"src":"120:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4228,"mutability":"mutable","name":"wallet","nameLocation":"148:6:14","nodeType":"VariableDeclaration","scope":4253,"src":"140:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4227,"name":"address","nodeType":"ElementaryTypeName","src":"140:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"name","nameLocation":"171:4:14","nodeType":"VariableDeclaration","scope":4253,"src":"164:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4229,"name":"string","nodeType":"ElementaryTypeName","src":"164:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"description","nameLocation":"192:11:14","nodeType":"VariableDeclaration","scope":4253,"src":"185:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4231,"name":"string","nodeType":"ElementaryTypeName","src":"185:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"specialty","nameLocation":"220:9:14","nodeType":"VariableDeclaration","scope":4253,"src":"213:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4233,"name":"string","nodeType":"ElementaryTypeName","src":"213:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4236,"mutability":"mutable","name":"experience","nameLocation":"247:10:14","nodeType":"VariableDeclaration","scope":4253,"src":"239:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"239:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4238,"mutability":"mutable","name":"reputation","nameLocation":"275:10:14","nodeType":"VariableDeclaration","scope":4253,"src":"267:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4240,"mutability":"mutable","name":"totalPredictions","nameLocation":"303:16:14","nodeType":"VariableDeclaration","scope":4253,"src":"295:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"295:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"accuratePredictions","nameLocation":"337:19:14","nodeType":"VariableDeclaration","scope":4253,"src":"329:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4244,"mutability":"mutable","name":"tokenContract","nameLocation":"374:13:14","nodeType":"VariableDeclaration","scope":4253,"src":"366:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4243,"name":"uint256","nodeType":"ElementaryTypeName","src":"366:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4246,"mutability":"mutable","name":"isVerified","nameLocation":"402:10:14","nodeType":"VariableDeclaration","scope":4253,"src":"397:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4245,"name":"bool","nodeType":"ElementaryTypeName","src":"397:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4248,"mutability":"mutable","name":"isActive","nameLocation":"427:8:14","nodeType":"VariableDeclaration","scope":4253,"src":"422:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4247,"name":"bool","nodeType":"ElementaryTypeName","src":"422:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"registeredAt","nameLocation":"453:12:14","nodeType":"VariableDeclaration","scope":4253,"src":"445:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"lastActive","nameLocation":"483:10:14","nodeType":"VariableDeclaration","scope":4253,"src":"475:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"475:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Astrologer","nameLocation":"99:10:14","nodeType":"StructDefinition","scope":4305,"src":"92:408:14","visibility":"public"},{"functionSelector":"61cb82ba","id":4261,"implemented":false,"kind":"function","modifiers":[],"name":"getAstrologerByWallet","nameLocation":"515:21:14","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"wallet","nameLocation":"545:6:14","nodeType":"VariableDeclaration","scope":4261,"src":"537:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4254,"name":"address","nodeType":"ElementaryTypeName","src":"537:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"536:16:14"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"576:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Astrologer_$4253_memory_ptr","typeString":"struct IAstrologerManager.Astrologer"},"typeName":{"id":4258,"nodeType":"UserDefinedTypeName","pathNode":{"id":4257,"name":"Astrologer","nameLocations":["576:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":4253,"src":"576:10:14"},"referencedDeclaration":4253,"src":"576:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Astrologer_$4253_storage_ptr","typeString":"struct IAstrologerManager.Astrologer"}},"visibility":"internal"}],"src":"575:19:14"},"scope":4305,"src":"506:89:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b56faf11","id":4269,"implemented":false,"kind":"function","modifiers":[],"name":"getAstrologer","nameLocation":"609:13:14","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"astrologerId","nameLocation":"631:12:14","nodeType":"VariableDeclaration","scope":4269,"src":"623:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"622:22:14"},"returnParameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4269,"src":"668:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Astrologer_$4253_memory_ptr","typeString":"struct IAstrologerManager.Astrologer"},"typeName":{"id":4266,"nodeType":"UserDefinedTypeName","pathNode":{"id":4265,"name":"Astrologer","nameLocations":["668:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":4253,"src":"668:10:14"},"referencedDeclaration":4253,"src":"668:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Astrologer_$4253_storage_ptr","typeString":"struct IAstrologerManager.Astrologer"}},"visibility":"internal"}],"src":"667:19:14"},"scope":4305,"src":"600:87:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0675f763","id":4276,"implemented":false,"kind":"function","modifiers":[],"name":"updateReputation","nameLocation":"701:16:14","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"astrologerId","nameLocation":"726:12:14","nodeType":"VariableDeclaration","scope":4276,"src":"718:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"newReputation","nameLocation":"748:13:14","nodeType":"VariableDeclaration","scope":4276,"src":"740:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"717:45:14"},"returnParameters":{"id":4275,"nodeType":"ParameterList","parameters":[],"src":"771:0:14"},"scope":4305,"src":"692:80:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e47ef5a8","id":4283,"implemented":false,"kind":"function","modifiers":[],"name":"recordPredictionResult","nameLocation":"786:22:14","nodeType":"FunctionDefinition","parameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"astrologerId","nameLocation":"817:12:14","nodeType":"VariableDeclaration","scope":4283,"src":"809:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4277,"name":"uint256","nodeType":"ElementaryTypeName","src":"809:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4280,"mutability":"mutable","name":"wasAccurate","nameLocation":"836:11:14","nodeType":"VariableDeclaration","scope":4283,"src":"831:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4279,"name":"bool","nodeType":"ElementaryTypeName","src":"831:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"808:40:14"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[],"src":"857:0:14"},"scope":4305,"src":"777:81:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5273496a","id":4290,"implemented":false,"kind":"function","modifiers":[],"name":"setTokenContract","nameLocation":"872:16:14","nodeType":"FunctionDefinition","parameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"astrologerId","nameLocation":"897:12:14","nodeType":"VariableDeclaration","scope":4290,"src":"889:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"889:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4287,"mutability":"mutable","name":"tokenContract","nameLocation":"919:13:14","nodeType":"VariableDeclaration","scope":4290,"src":"911:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"888:45:14"},"returnParameters":{"id":4289,"nodeType":"ParameterList","parameters":[],"src":"942:0:14"},"scope":4305,"src":"863:80:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"30a7d32a","id":4297,"implemented":false,"kind":"function","modifiers":[],"name":"isAstrologerVerified","nameLocation":"957:20:14","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"wallet","nameLocation":"986:6:14","nodeType":"VariableDeclaration","scope":4297,"src":"978:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4291,"name":"address","nodeType":"ElementaryTypeName","src":"978:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"977:16:14"},"returnParameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4297,"src":"1017:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4294,"name":"bool","nodeType":"ElementaryTypeName","src":"1017:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1016:6:14"},"scope":4305,"src":"948:75:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"656d0c39","id":4304,"implemented":false,"kind":"function","modifiers":[],"name":"getAstrologerId","nameLocation":"1037:15:14","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"wallet","nameLocation":"1061:6:14","nodeType":"VariableDeclaration","scope":4304,"src":"1053:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4298,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1052:16:14"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4304,"src":"1092:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1091:9:14"},"scope":4305,"src":"1028:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4306,"src":"57:1046:14","usedErrors":[]}],"src":"32:1072:14"},"id":14},"contracts/interfaces/IBuyTokenContract.sol":{"ast":{"absolutePath":"contracts/interfaces/IBuyTokenContract.sol","exportedSymbols":{"IBuyTokenContract":[4345]},"id":4346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4307,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IBuyTokenContract","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4345,"linearizedBaseContracts":[4345],"name":"IBuyTokenContract","nameLocation":"67:17:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cea9f4b5","id":4318,"implemented":false,"kind":"function","modifiers":[],"name":"registerToken","nameLocation":"100:13:15","nodeType":"FunctionDefinition","parameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"_tokenContract","nameLocation":"131:14:15","nodeType":"VariableDeclaration","scope":4318,"src":"123:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4308,"name":"address","nodeType":"ElementaryTypeName","src":"123:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"_astrologer","nameLocation":"163:11:15","nodeType":"VariableDeclaration","scope":4318,"src":"155:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4310,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"_totalSupply","nameLocation":"192:12:15","nodeType":"VariableDeclaration","scope":4318,"src":"184:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"184:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4315,"mutability":"mutable","name":"_basePrice","nameLocation":"222:10:15","nodeType":"VariableDeclaration","scope":4318,"src":"214:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"113:125:15"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[],"src":"247:0:15"},"scope":4345,"src":"91:157:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f6322a5f","id":4325,"implemented":false,"kind":"function","modifiers":[],"name":"updateCredibility","nameLocation":"267:17:15","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"_tokenContract","nameLocation":"293:14:15","nodeType":"VariableDeclaration","scope":4325,"src":"285:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4319,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"_credibilityMultiplier","nameLocation":"317:22:15","nodeType":"VariableDeclaration","scope":4325,"src":"309:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"284:56:15"},"returnParameters":{"id":4324,"nodeType":"ParameterList","parameters":[],"src":"349:0:15"},"scope":4345,"src":"258:92:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"84cc315b","id":4332,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentPrice","nameLocation":"364:15:15","nodeType":"FunctionDefinition","parameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"_tokenContract","nameLocation":"388:14:15","nodeType":"VariableDeclaration","scope":4332,"src":"380:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4326,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:24:15"},"returnParameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4332,"src":"427:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"427:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"426:9:15"},"scope":4345,"src":"355:81:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ec8ac4d8","id":4337,"implemented":false,"kind":"function","modifiers":[],"name":"buyTokens","nameLocation":"450:9:15","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"mutability":"mutable","name":"_tokenContract","nameLocation":"468:14:15","nodeType":"VariableDeclaration","scope":4337,"src":"460:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4333,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:24:15"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[],"src":"500:0:15"},"scope":4345,"src":"441:60:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c464fe65","id":4344,"implemented":false,"kind":"function","modifiers":[],"name":"sellTokens","nameLocation":"515:10:15","nodeType":"FunctionDefinition","parameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"_tokenContract","nameLocation":"534:14:15","nodeType":"VariableDeclaration","scope":4344,"src":"526:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4338,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"_tokenAmount","nameLocation":"558:12:15","nodeType":"VariableDeclaration","scope":4344,"src":"550:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"525:46:15"},"returnParameters":{"id":4343,"nodeType":"ParameterList","parameters":[],"src":"580:0:15"},"scope":4345,"src":"506:75:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4346,"src":"57:526:15","usedErrors":[]}],"src":"32:552:15"},"id":15},"contracts/interfaces/IReputationScorer.sol":{"ast":{"absolutePath":"contracts/interfaces/IReputationScorer.sol","exportedSymbols":{"IReputationScorer":[4389]},"id":4390,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4347,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IReputationScorer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4389,"linearizedBaseContracts":[4389],"name":"IReputationScorer","nameLocation":"67:17:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"9f7c4688","id":4354,"implemented":false,"kind":"function","modifiers":[],"name":"updateReputationFromWorldPrediction","nameLocation":"100:35:16","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"_astrologer","nameLocation":"153:11:16","nodeType":"VariableDeclaration","scope":4354,"src":"145:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4348,"name":"address","nodeType":"ElementaryTypeName","src":"145:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4351,"mutability":"mutable","name":"_wasCorrect","nameLocation":"179:11:16","nodeType":"VariableDeclaration","scope":4354,"src":"174:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4350,"name":"bool","nodeType":"ElementaryTypeName","src":"174:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"135:61:16"},"returnParameters":{"id":4353,"nodeType":"ParameterList","parameters":[],"src":"205:0:16"},"scope":4389,"src":"91:115:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b107e88c","id":4361,"implemented":false,"kind":"function","modifiers":[],"name":"getReputationMultiplier","nameLocation":"221:23:16","nodeType":"FunctionDefinition","parameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"_astrologer","nameLocation":"253:11:16","nodeType":"VariableDeclaration","scope":4361,"src":"245:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4355,"name":"address","nodeType":"ElementaryTypeName","src":"245:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"244:21:16"},"returnParameters":{"id":4360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4361,"src":"289:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"289:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"288:9:16"},"scope":4389,"src":"212:86:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"75a67d5c","id":4388,"implemented":false,"kind":"function","modifiers":[],"name":"getReputationScore","nameLocation":"317:18:16","nodeType":"FunctionDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"_astrologer","nameLocation":"344:11:16","nodeType":"VariableDeclaration","scope":4388,"src":"336:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4362,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"335:21:16"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"id","nameLocation":"397:2:16","nodeType":"VariableDeclaration","scope":4388,"src":"389:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4368,"mutability":"mutable","name":"astrologer","nameLocation":"417:10:16","nodeType":"VariableDeclaration","scope":4388,"src":"409:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4367,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"totalPredictions","nameLocation":"445:16:16","nodeType":"VariableDeclaration","scope":4388,"src":"437:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"accuratePredictions","nameLocation":"479:19:16","nodeType":"VariableDeclaration","scope":4388,"src":"471:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4374,"mutability":"mutable","name":"accuracyPercentage","nameLocation":"516:18:16","nodeType":"VariableDeclaration","scope":4388,"src":"508:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4373,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4376,"mutability":"mutable","name":"reputationMultiplier","nameLocation":"552:20:16","nodeType":"VariableDeclaration","scope":4388,"src":"544:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4378,"mutability":"mutable","name":"marketPredictions","nameLocation":"590:17:16","nodeType":"VariableDeclaration","scope":4388,"src":"582:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"dailyPredictions","nameLocation":"625:16:16","nodeType":"VariableDeclaration","scope":4388,"src":"617:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4382,"mutability":"mutable","name":"oneToOnePredictions","nameLocation":"659:19:16","nodeType":"VariableDeclaration","scope":4388,"src":"651:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"651:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"lastUpdated","nameLocation":"696:11:16","nodeType":"VariableDeclaration","scope":4388,"src":"688:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"688:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"isActive","nameLocation":"722:8:16","nodeType":"VariableDeclaration","scope":4388,"src":"717:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4385,"name":"bool","nodeType":"ElementaryTypeName","src":"717:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"379:357:16"},"scope":4389,"src":"308:429:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4390,"src":"57:682:16","usedErrors":[]}],"src":"32:708:16"},"id":16}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1172,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."},"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":485,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._","kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable state-variable-assignment"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":485,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b1e3be4c5b3b88c3c0cf80d5016514a1a8cec2d1065e8003ff831c61f49c62db64736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE3 0xBE 0x4C JUMPDEST EXTCODESIZE DUP9 0xC3 0xC0 0xCF DUP1 0xD5 ADD PUSH6 0x14A1A8CEC2D1 MOD 0x5E DUP1 SUB SELFDESTRUCT DUP4 SHR PUSH2 0xF49C PUSH3 0xDB6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:9180:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b1e3be4c5b3b88c3c0cf80d5016514a1a8cec2d1065e8003ff831c61f49c62db64736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE3 0xBE 0x4C JUMPDEST EXTCODESIZE DUP9 0xC3 0xC0 0xCF DUP1 0xD5 ADD PUSH6 0x14A1A8CEC2D1 MOD 0x5E DUP1 SUB SELFDESTRUCT DUP4 SHR PUSH2 0xF49C PUSH3 0xDB6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:9180:7:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1172,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"devdoc":{"author":"Matt Condon (@shrugs)","details":"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`","kind":"dev","methods":{},"title":"Counters","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fc37d900abddb73c46c379b2a2664b71775298d45c4841409270186ba604ffda64736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC CALLDATACOPY 0xD9 STOP 0xAB 0xDD 0xB7 EXTCODECOPY CHAINID 0xC3 PUSH26 0xB2A2664B71775298D45C4841409270186BA604FFDA64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"424:982:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fc37d900abddb73c46c379b2a2664b71775298d45c4841409270186ba604ffda64736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC CALLDATACOPY 0xD9 STOP 0xAB 0xDD 0xB7 EXTCODECOPY CHAINID 0xC3 PUSH26 0xB2A2664B71775298D45C4841409270186BA604FFDA64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"424:982:9:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"current(struct CountersUpgradeable.Counter storage pointer)":"infinite","decrement(struct CountersUpgradeable.Counter storage pointer)":"infinite","increment(struct CountersUpgradeable.Counter storage pointer)":"infinite","reset(struct CountersUpgradeable.Counter storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary CountersUpgradeable {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d5316a15c9aedf1238b60ad56577f4a69cfc811a6b1f01726800648dfd510cb364736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 BALANCE PUSH11 0x15C9AEDF1238B60AD56577 DELEGATECALL 0xA6 SWAP13 0xFC DUP2 BYTE PUSH12 0x1F01726800648DFD510CB364 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"1420:2696:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d5316a15c9aedf1238b60ad56577f4a69cfc811a6b1f01726800648dfd510cb364736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 BALANCE PUSH11 0x15C9AEDF1238B60AD56577 DELEGATECALL 0xA6 SWAP13 0xFC DUP2 BYTE PUSH12 0x1F01726800648DFD510CB364 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"1420:2696:10:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ReputationScorer.sol":{"ReputationScorer":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"moduleId","type":"uint256"},{"indexed":false,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"}],"name":"PredictionModuleAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"uint256","name":"oldAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newMultiplier","type":"uint256"}],"name":"ReputationScoreUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"uint256","name":"marketAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"dailyAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"oneToOneAccuracy","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weightedScore","type":"uint256"}],"name":"ScoreBreakdownUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"address","name":"_contractAddress","type":"address"},{"internalType":"uint256","name":"_weight","type":"uint256"}],"name":"addPredictionModule","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"astroTokenLauncher","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"astrologerManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyTokenContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReputationMultiplierRange","outputs":[{"internalType":"uint256","name":"max","type":"uint256"},{"internalType":"uint256","name":"min","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationScore","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"accuracyPercentage","type":"uint256"},{"internalType":"uint256","name":"reputationMultiplier","type":"uint256"},{"internalType":"uint256","name":"marketPredictions","type":"uint256"},{"internalType":"uint256","name":"dailyPredictions","type":"uint256"},{"internalType":"uint256","name":"oneToOnePredictions","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct ReputationScorer.ReputationScore","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getScoreBreakdown","outputs":[{"components":[{"internalType":"uint256","name":"marketAccuracy","type":"uint256"},{"internalType":"uint256","name":"dailyAccuracy","type":"uint256"},{"internalType":"uint256","name":"oneToOneAccuracy","type":"uint256"},{"internalType":"uint256","name":"weightedScore","type":"uint256"},{"internalType":"uint256","name":"reputationTier","type":"uint256"}],"internalType":"struct ReputationScorer.ScoreBreakdown","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_limit","type":"uint256"}],"name":"getTopAstrologers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"},{"internalType":"address","name":"_buyTokenContract","type":"address"},{"internalType":"address","name":"_zodiacDAO","type":"address"},{"internalType":"uint256","name":"_minPredictionsForScore","type":"uint256"},{"internalType":"uint256","name":"_scoreUpdateDelay","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxReputationMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minPredictionsForScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minReputationMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"predictionModules","outputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"lastUpdate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reputationDecayRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reputationScores","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"accuracyPercentage","type":"uint256"},{"internalType":"uint256","name":"reputationMultiplier","type":"uint256"},{"internalType":"uint256","name":"marketPredictions","type":"uint256"},{"internalType":"uint256","name":"dailyPredictions","type":"uint256"},{"internalType":"uint256","name":"oneToOnePredictions","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"scoreBreakdowns","outputs":[{"internalType":"uint256","name":"marketAccuracy","type":"uint256"},{"internalType":"uint256","name":"dailyAccuracy","type":"uint256"},{"internalType":"uint256","name":"oneToOneAccuracy","type":"uint256"},{"internalType":"uint256","name":"weightedScore","type":"uint256"},{"internalType":"uint256","name":"reputationTier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"scoreUpdateDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astroTokenLauncher","type":"address"}],"name":"setAstroTokenLauncher","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"}],"name":"setAstrologerManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_buyTokenContract","type":"address"}],"name":"setBuyTokenContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minPredictions","type":"uint256"}],"name":"setMinPredictionsForScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_decayRate","type":"uint256"}],"name":"setReputationDecayRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxMultiplier","type":"uint256"},{"internalType":"uint256","name":"_minMultiplier","type":"uint256"}],"name":"setReputationMultipliers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_delay","type":"uint256"}],"name":"setScoreUpdateDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_worldPredictionMarket","type":"address"}],"name":"setWorldPredictionMarket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_zodiacDAO","type":"address"}],"name":"setZodiacDAO","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_moduleId","type":"uint256"}],"name":"togglePredictionModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalModules","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_moduleId","type":"uint256"},{"internalType":"uint256","name":"_newWeight","type":"uint256"}],"name":"updateModuleWeight","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"bool","name":"_wasCorrect","type":"bool"}],"name":"updateReputationFromWorldPrediction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"uint256","name":"_marketPredictions","type":"uint256"},{"internalType":"uint256","name":"_marketAccurate","type":"uint256"},{"internalType":"uint256","name":"_dailyPredictions","type":"uint256"},{"internalType":"uint256","name":"_dailyAccurate","type":"uint256"},{"internalType":"uint256","name":"_oneToOnePredictions","type":"uint256"},{"internalType":"uint256","name":"_oneToOneAccurate","type":"uint256"}],"name":"updateReputationScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"worldPredictionMarket","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"zodiacDAO","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b60405161266c90816100e282396080518181816114410152818161177b0152611ae50152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816302bc7f4a14611e2457508063106bdcf514611de457806310d4f37414611d8c57806316d54f0914611d635780632c27750a14611cae5780633659cfe614611ac05780633d9617be14611a9b578063430cd57a14611a7d57806344cda48514611a3d578063450f144214611a1f5780634cba103e146119fc5780634f1ef2861461170057806351131876146115825780635245420d146114f257806352d1902d1461142e57806358bd9b931461130d5780635df4d161146112ef57806365af67bd146112af5780636be2cefb146112725780636fd31a4114611249578063715018a6146111ec57806375a67d5c1461107357806378bbd70114611055578063893849de14610fed5780638da5cb5b14610fc4578063960e6f8814610fa65780639754cfd114610f535780639f68871d14610f305780639f7c468814610bf7578063a6b63eb814610a32578063ab3dcd6a14610a09578063ab76c9ed146109e0578063adcbcde51461048c578063b107e88c1461044f578063c3a274c21461040f578063dc0a40bd146103a9578063e2c3538c14610369578063e6f9558314610346578063f2fde38b146102b5578063f92eadf6146102975763fe0438b2146101e457600080fd5b3461029457602036600319011261029457610160906001600160a01b03906040908261020e611e49565b16815260ca6020522080549160018201541690600281015460038201546004830154600584015460068501549160078601549360088701549560ff600a60098a015499015416986040519a8b5260208b015260408a01526060890152608088015260a087015260c086015260e08501526101008401526101208301521515610140820152f35b80fd5b5034610294578060031936011261029457602060d454604051908152f35b5034610294576020366003190112610294576102cf611e49565b6102d7611f32565b6001600160a01b038116156102f2576102ef90611f8a565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461029457602036600319011261029457610360611f32565b60043560d45580f35b503461029457602036600319011261029457610383611e49565b61038b611f32565b60018060a01b03166001600160601b0360a01b60d054161760d05580f35b50346102945760203660031901126102945760a0906040906001600160a01b036103d1611e49565b16815260cb60205220805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b503461029457602036600319011261029457610429611e49565b610431611f32565b60018060a01b03166001600160601b0360a01b60ce54161760ce5580f35b5034610294576020366003190112610294576020906005906040906001600160a01b0361047a611e49565b16815260ca8452200154604051908152f35b50346102945760e0366003190112610294576104a6611e49565b602435604435916084359260018060a01b0360335416331480156109cc575b6104ce906122cc565b6104e26001600160a01b0383161515612307565b60018060a01b038216855260ca602052604085209260cb60205260408620948160068601556064359283600787015560a435600887015561052e60a43561052986866124b2565b6124b2565b600287015582156109c457606481029080820460641490151715610938578261055691612353565b905b81875583156109bd57606481029080820460641490151715610938578361057e91612353565b6001870181905560a435156109b65760c4358060648102046064148115171561097f576105b190606460a4359102612353565b905b600288019482865589938a95610993575b5061094c575b5060a4356108f3575b5080156108eb576105e391612353565b6003850190808255600a6105fd60048701928084556124bf565b956005810196875561060f8454612505565b600489015542600982015501805460ff1916600117905560cd5487906001600160a01b031680610815575b5060ce546001600160a01b031680151580610801575b6106f3575b50505493546040805186815260208101969096528501527fad4434fdebadb9d3b07e14eaea89a4f564780aca2d11dbf1d7fcd70d921a5d64936080939291906001600160a01b038416907f518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac24490606090a260018654960154915490549160405196875260208701526040860152606085015260018060a01b031692a280f35b60d05460405163248bb6cd60e21b81526001600160a01b0388811660048301529091849183916024918391165afa8391816107dd575b50610735575b50610655565b60408101516001600160a01b03169081151590816107ce575b501561072f578754823b156107ca5760405163f6322a5f60e01b81526001600160a01b0392909216600483015260248201529082908290604490829084905af180156107bf5761079f575b8061072f565b6107ad909594939295611eae565b6107bb579091928638610799565b8680fd5b6040513d84823e3d90fd5b8380fd5b6101009150015115153861074e565b6107fa9192503d8086833e6107f28183611ede565b8101906123cc565b9038610729565b5060d0546001600160a01b03161515610650565b60405163656d0c3960e01b81526001600160a01b0387166004820152602081602481855afa9081156108e05783916108a6575b5080610855575b5061063a565b8754823b156107ca5760448492836040519586948593630675f76360e01b8552600485015260248401525af180156107bf57610892575b8061084f565b61089b90611eae565b6107bb57863861088c565b9250506020823d6020116108d8575b816108c260209383611ede565b810103126108d35788915138610848565b600080fd5b3d91506108b5565b6040513d85823e3d90fd5b5050846105e3565b90918160021b91808304600414901517156109385790610912916124b2565b906004810180911161092457386105d3565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b9091928160011b918083046002149015171561097f579061096c916124b2565b91600281018091116109385790386105ca565b634e487b7160e01b89526011600452602489fd5b80929550600391945002908082046003149015171561097f5792600392386105c4565b87906105b3565b508661057e565b508690610558565b506104ce6109d93361256b565b90506104c5565b503461029457806003193601126102945760cf546040516001600160a01b039091168152602090f35b503461029457806003193601126102945760d0546040516001600160a01b039091168152602090f35b50346102945760a036600319011261029457610a4c611e49565b6001600160a01b039060243582811691908290036108d3576044358381168091036108d35784549260ff8460081c161593848095610bea575b8015610bd3575b15610b775760ff198116600117875584610b66575b50610abb60ff875460081c16610ab6816121fb565b6121fb565b610ac433611f8a565b855494610ad660ff8760081c166121fb565b6001600160601b0360a01b93168360cd54161760cd558260ce54161760ce558160cf54161760cf558060d0541660d05560d1541660d15560643560d35560843560d455600560d55561138860d65560c860d755610b31575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117865538610aa1565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610a8c5750600160ff821614610a8c565b50600160ff821610610a85565b503461029457604036600319011261029457610c11611e49565b602435908115158203610eb65760d1546001600160a01b03918291821633148015610f23575b610c40906122cc565b1691610c4d831515612307565b82845260ca602052604084209060068201610c6881546122a7565b90556002820190610c7982546122a7565b809255610f0e575b6003820154606481029080820460641490151715610efa578591610ca491612353565b92610cb560048401948086556124bf565b600a600585019482865542600982015501600160ff198254161790558160cd54169081610e1f575b50508060ce54169081151580610e12575b610d35575b5050915490546040805183815260208101939093528201527f518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac2449150606090a280f35b808360249260d054166040519384809263248bb6cd60e21b82528b60048301525afa849281610df6575b50610d6b575b50610cf3565b604082015116908115159081610de7575b50610d88575b80610d65565b8354823b156107ca5760405163f6322a5f60e01b81526001600160a01b0392909216600483015260248201529082908290604490829084905af180156107bf57610dd3575b80610d82565b610ddc90611eae565b6107ca578338610dcd565b61010091500151151538610d7c565b610e0b9193503d8087833e6107f28183611ede565b9138610d5f565b508060d054161515610cee565b60405163656d0c3960e01b815260048101889052602081602481865afa908115610eef578591610eba575b5080610e57575b50610cdd565b829394923b15610eb657604490836040519586948593630675f76360e01b8552600485015260248401525af18015610eab57610e98575b9081808793610e51565b610ea490959195611eae565b9338610e8e565b6040513d88823e3d90fd5b8280fd5b90506020813d8211610ee7575b81610ed460209383611ede565b81010312610ee3575138610e4a565b8480fd5b3d9150610ec7565b6040513d87823e3d90fd5b634e487b7160e01b86526011600452602486fd5b60038201610f1c81546122a7565b9055610c81565b5060335482163314610c37565b503461029457602036600319011261029457610f4a611f32565b60043560d35580f35b503461029457610f6236611f1c565b90610f6b611f32565b80151580610f9a575b610f7d906125d6565b610f8882151561225b565b825260cc602052600160408320015580f35b5060d254811115610f74565b5034610294578060031936011261029457602060d554604051908152f35b50346102945780600319360112610294576033546040516001600160a01b039091168152602090f35b50346102945760203660031901126102945760043561100a611f32565b80151580611049575b61101c906125d6565b815260cc60205260408120805460ff60a01b19811660a091821c60ff161590911b60ff60a01b1617905580f35b5060d254811115611013565b5034610294578060031936011261029457602060d254604051908152f35b503461029457602036600319011261029457604061016091611093611e49565b8161014084516110a281611e91565b82815282602082015282868201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152015260018060a01b0316815260ca602052206101406040516110fd81611e91565b60ff600a84549485845260018060a01b036001820154166020850152600281015460408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501526008810154610100850152600981015461012085015201541615158282015260405192835260018060a01b03602082015116602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015160e084015261010081015161010084015261012081015161012084015201511515610140820152f35b5034610294578060031936011261029457611205611f32565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461029457806003193601126102945760cd546040516001600160a01b039091168152602090f35b5034610294576020366003190112610294576020906004906040906001600160a01b0361129d611e49565b16815260cb8452200154604051908152f35b5034610294576020366003190112610294576112c9611e49565b6112d1611f32565b60018060a01b03166001600160601b0360a01b60cf54161760cf5580f35b5034610294578060031936011261029457602060d754604051908152f35b50346102945761131c36611f1c565b90611325611f32565b818111156113e957606482106113985761271081116113475760d65560d75580f35b60405162461bcd60e51b8152602060048201526024808201527f4d6178206d756c7469706c696572206d757374206265206174206d6f737420316044820152630605c60f60e31b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f4d696e206d756c7469706c696572206d757374206265206174206c65617374206044820152630605c62f60e31b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4d6178206d7573742062652067726561746572207468616e206d696e000000006044820152606490fd5b50346102945780600319360112610294577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036114875760206040516000805160206126178339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b50346102945760208060031936011261157e576004359161152b61151584612553565b936115236040519586611ede565b808552612553565b8383019190601f190136833760405193838594850191818652518092526040850193925b82811061155e57505050500390f35b83516001600160a01b03168552869550938101939281019260010161154f565b5080fd5b50346102945760403660031901126102945761159c611e49565b6024356115a7611f32565b6001600160a01b039180831680156116bb576115c483151561225b565b6115cf60d2546122a7565b938460d255604051916080830183811067ffffffffffffffff8211176116a7576020977faf31016049a06640f36fa55e20d2a8c9809bbdadf9fd3327a7763e5aa652346e959388979593600293604052845261167a8a8501600181526040860192888452604060608801954287528c815260cc8f52209651166001600160601b0360a01b875416178655511515859081549060ff60a01b90151560a01b169060ff60a01b1916179055565b51600184015551910155604080516001600160a01b039290921682526020820192909252a2604051908152f35b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e7472616374206164647265737300000000000000006044820152606490fd5b50604036600319011261029457611715611e49565b6024359067ffffffffffffffff8211610eb65736602383011215610eb657816004013561174181611f00565b61174e6040519182611ede565b81815284602094858301933660248284010111610eb6578060248893018637830101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906117a930831415611fd3565b6117c6600080516020612617833981519152928284541614612034565b6117ce611f32565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561180657505050506102ef9150612095565b8492939416906040516352d1902d60e01b81528681600481865afa8891816119c9575b5061188a5760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b95939495036119725761189c82612095565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a28483511580159061196a575b6118d9575b505050505080f35b8061195695604051956118eb87611ec2565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15611961573d61193a81611f00565b906119486040519283611ede565b81528681943d92013e612125565b5038808080846118d1565b60609250612125565b5060016118cc565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d83116119f5575b6119e18183611ede565b810103126119f157519038611829565b8880fd5b503d6119d7565b503461029457602036600319011261029457611a16611f32565b60043560d55580f35b5034610294578060031936011261029457602060d354604051908152f35b503461029457602036600319011261029457611a57611e49565b611a5f611f32565b60018060a01b03166001600160601b0360a01b60cd54161760cd5580f35b5034610294578060031936011261029457602060d654604051908152f35b5034610294578060031936011261029457604060d65460d75482519182526020820152f35b50346102945760208060031936011261157e57611adb611e49565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116611b1230821415611fd3565b611b2f600080516020612617833981519152918383541614612034565b611b37611f32565b604051908482019282841067ffffffffffffffff851117611c9a578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014611b9357505050506102ef9150612095565b8492939416906040516352d1902d60e01b81528681600481865afa889181611c6b575b50611c175760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959394950361197257611c2982612095565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a284835115801590611c64576118d957505050505080f35b50806118cc565b9091508781813d8311611c93575b611c838183611ede565b810103126119f157519038611bb6565b503d611c79565b634e487b7160e01b87526041600452602487fd5b503461029457602036600319011261029457604060a091611ccd611e49565b8160808451611cdb81611e5f565b82815282602082015282868201528260608201520152600180851b0316815260cb60205220604051611d0c81611e5f565b81549182825260018101546020830190815260028201549060408401918252608060046003850154946060870195865201549401938452604051948552516020850152516040840152516060830152516080820152f35b503461029457806003193601126102945760ce546040516001600160a01b039091168152602090f35b5034610294576020366003190112610294576040608091600435815260cc60205220805490600260018201549101549060ff6040519360018060a01b038116855260a01c161515602084015260408301526060820152f35b503461029457602036600319011261029457611dfe611e49565b611e06611f32565b60018060a01b03166001600160601b0360a01b60d154161760d15580f35b90503461157e578160031936011261157e5760d1546001600160a01b03168152602090f35b600435906001600160a01b03821682036108d357565b60a0810190811067ffffffffffffffff821117611e7b57604052565b634e487b7160e01b600052604160045260246000fd5b610160810190811067ffffffffffffffff821117611e7b57604052565b67ffffffffffffffff8111611e7b57604052565b6060810190811067ffffffffffffffff821117611e7b57604052565b90601f8019910116810190811067ffffffffffffffff821117611e7b57604052565b67ffffffffffffffff8111611e7b57601f01601f191660200190565b60409060031901126108d3576004359060243590565b6033546001600160a01b03163303611f4657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611fda57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561203b57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156120ca5760008051602061261783398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156121875750815115612139575090565b3b156121425790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561219a5750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526121ca81518092816024860152602086860191016121d8565b601f01601f19168101030190fd5b60005b8381106121eb5750506000910152565b81810151838201526020016121db565b1561220257565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561226257565b60405162461bcd60e51b815260206004820152601d60248201527f576569676874206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60001981146122b65760010190565b634e487b7160e01b600052601160045260246000fd5b156122d357565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b1561230e57565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420617374726f6c6f67657220616464726573730000000000006044820152606490fd5b811561235d570490565b634e487b7160e01b600052601260045260246000fd5b51906001600160a01b03821682036108d357565b81601f820112156108d357805161239d81611f00565b926123ab6040519485611ede565b818452602082840101116108d3576123c991602080850191016121d8565b90565b6020818303126108d357805167ffffffffffffffff918282116108d35701906101409283838203126108d35760405193840184811083821117611e7b576040528251845261241c60208401612373565b602085015261242d60408401612373565b604085015261243e60608401612373565b606085015260808301518281116108d3578161245b918501612387565b608085015260a08301519182116108d357612477918301612387565b60a083015260c081015160c083015260e081015160e0830152610100808201519081151582036108d357830152610120809101519082015290565b919082018092116122b657565b60648110156124fe5780156124f75760d65460d754908181039081116122b657808302928304036122b65760646123c99204906124b2565b5060d75490565b5060d65490565b605f81101561254d57605a81101561254757605581101561254157605081101561253b57604b111561253657600090565b600190565b50600290565b50600390565b50600490565b50600590565b67ffffffffffffffff8111611e7b5760051b60200190565b6001809160d254925b838111156125855750505050600090565b600081815260cc6020526040808220546001600160a01b0385811691161491826125c5575b50506125be576125b9906122a7565b612574565b5050905090565b60ff9250205460a01c1638806125aa565b156125dd57565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5bd91d5b19481251607a1b6044820152606490fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220ad1ecb0a5dda295c60e9b997c439f5836863b2eeb6d4a970f6d176c57f8f4cbe64736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266C SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1441 ADD MSTORE DUP2 DUP2 PUSH2 0x177B ADD MSTORE PUSH2 0x1AE5 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2BC7F4A EQ PUSH2 0x1E24 JUMPI POP DUP1 PUSH4 0x106BDCF5 EQ PUSH2 0x1DE4 JUMPI DUP1 PUSH4 0x10D4F374 EQ PUSH2 0x1D8C JUMPI DUP1 PUSH4 0x16D54F09 EQ PUSH2 0x1D63 JUMPI DUP1 PUSH4 0x2C27750A EQ PUSH2 0x1CAE JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1AC0 JUMPI DUP1 PUSH4 0x3D9617BE EQ PUSH2 0x1A9B JUMPI DUP1 PUSH4 0x430CD57A EQ PUSH2 0x1A7D JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x1A3D JUMPI DUP1 PUSH4 0x450F1442 EQ PUSH2 0x1A1F JUMPI DUP1 PUSH4 0x4CBA103E EQ PUSH2 0x19FC JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1700 JUMPI DUP1 PUSH4 0x51131876 EQ PUSH2 0x1582 JUMPI DUP1 PUSH4 0x5245420D EQ PUSH2 0x14F2 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x142E JUMPI DUP1 PUSH4 0x58BD9B93 EQ PUSH2 0x130D JUMPI DUP1 PUSH4 0x5DF4D161 EQ PUSH2 0x12EF JUMPI DUP1 PUSH4 0x65AF67BD EQ PUSH2 0x12AF JUMPI DUP1 PUSH4 0x6BE2CEFB EQ PUSH2 0x1272 JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x1249 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11EC JUMPI DUP1 PUSH4 0x75A67D5C EQ PUSH2 0x1073 JUMPI DUP1 PUSH4 0x78BBD701 EQ PUSH2 0x1055 JUMPI DUP1 PUSH4 0x893849DE EQ PUSH2 0xFED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFC4 JUMPI DUP1 PUSH4 0x960E6F88 EQ PUSH2 0xFA6 JUMPI DUP1 PUSH4 0x9754CFD1 EQ PUSH2 0xF53 JUMPI DUP1 PUSH4 0x9F68871D EQ PUSH2 0xF30 JUMPI DUP1 PUSH4 0x9F7C4688 EQ PUSH2 0xBF7 JUMPI DUP1 PUSH4 0xA6B63EB8 EQ PUSH2 0xA32 JUMPI DUP1 PUSH4 0xAB3DCD6A EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0xAB76C9ED EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0xADCBCDE5 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xB107E88C EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xC3A274C2 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xDC0A40BD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xE2C3538C EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xE6F95583 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF92EADF6 EQ PUSH2 0x297 JUMPI PUSH4 0xFE0438B2 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x160 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP3 PUSH2 0x20E PUSH2 0x1E49 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP2 PUSH1 0x7 DUP7 ADD SLOAD SWAP4 PUSH1 0x8 DUP8 ADD SLOAD SWAP6 PUSH1 0xFF PUSH1 0xA PUSH1 0x9 DUP11 ADD SLOAD SWAP10 ADD SLOAD AND SWAP9 PUSH1 0x40 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x2CF PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2EF SWAP1 PUSH2 0x1F8A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x360 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD4 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x383 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0xA0 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3D1 PUSH2 0x1E49 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x429 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x47A PUSH2 0x1E49 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x4A6 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x9CC JUMPI JUMPDEST PUSH2 0x4CE SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x4E2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x2307 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND DUP6 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP3 PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP5 DUP2 PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x64 CALLDATALOAD SWAP3 DUP4 PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 DUP8 ADD SSTORE PUSH2 0x52E PUSH1 0xA4 CALLDATALOAD PUSH2 0x529 DUP7 DUP7 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0x24B2 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE DUP3 ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x938 JUMPI DUP3 PUSH2 0x556 SWAP2 PUSH2 0x2353 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 DUP8 SSTORE DUP4 ISZERO PUSH2 0x9BD JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x938 JUMPI DUP4 PUSH2 0x57E SWAP2 PUSH2 0x2353 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD DUP2 SWAP1 SSTORE PUSH1 0xA4 CALLDATALOAD ISZERO PUSH2 0x9B6 JUMPI PUSH1 0xC4 CALLDATALOAD DUP1 PUSH1 0x64 DUP2 MUL DIV PUSH1 0x64 EQ DUP2 ISZERO OR ISZERO PUSH2 0x97F JUMPI PUSH2 0x5B1 SWAP1 PUSH1 0x64 PUSH1 0xA4 CALLDATALOAD SWAP2 MUL PUSH2 0x2353 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x2 DUP9 ADD SWAP5 DUP3 DUP7 SSTORE DUP10 SWAP4 DUP11 SWAP6 PUSH2 0x993 JUMPI JUMPDEST POP PUSH2 0x94C JUMPI JUMPDEST POP PUSH1 0xA4 CALLDATALOAD PUSH2 0x8F3 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x8EB JUMPI PUSH2 0x5E3 SWAP2 PUSH2 0x2353 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SWAP1 DUP1 DUP3 SSTORE PUSH1 0xA PUSH2 0x5FD PUSH1 0x4 DUP8 ADD SWAP3 DUP1 DUP5 SSTORE PUSH2 0x24BF JUMP JUMPDEST SWAP6 PUSH1 0x5 DUP2 ADD SWAP7 DUP8 SSTORE PUSH2 0x60F DUP5 SLOAD PUSH2 0x2505 JUMP JUMPDEST PUSH1 0x4 DUP10 ADD SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x815 JUMPI JUMPDEST POP PUSH1 0xCE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO DUP1 PUSH2 0x801 JUMPI JUMPDEST PUSH2 0x6F3 JUMPI JUMPDEST POP POP SLOAD SWAP4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP6 ADD MSTORE PUSH32 0xAD4434FDEBADB9D3B07E14EAEA89A4F564780ACA2D11DBF1D7FCD70D921A5D64 SWAP4 PUSH1 0x80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x518D384EC8D284E293CFE22999E2961FCB70FAE686352F14179033225F2AC244 SWAP1 PUSH1 0x60 SWAP1 LOG2 PUSH1 0x1 DUP7 SLOAD SWAP7 ADD SLOAD SWAP2 SLOAD SWAP1 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0xD0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL DUP4 SWAP2 DUP2 PUSH2 0x7DD JUMPI JUMPDEST POP PUSH2 0x735 JUMPI JUMPDEST POP PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x7CE JUMPI JUMPDEST POP ISZERO PUSH2 0x72F JUMPI DUP8 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH2 0x79F JUMPI JUMPDEST DUP1 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x7AD SWAP1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP6 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x7BB JUMPI SWAP1 SWAP2 SWAP3 DUP7 CODESIZE PUSH2 0x799 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x100 SWAP2 POP ADD MLOAD ISZERO ISZERO CODESIZE PUSH2 0x74E JUMP JUMPDEST PUSH2 0x7FA SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x7F2 DUP2 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x23CC JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x729 JUMP JUMPDEST POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8E0 JUMPI DUP4 SWAP2 PUSH2 0x8A6 JUMPI JUMPDEST POP DUP1 PUSH2 0x855 JUMPI JUMPDEST POP PUSH2 0x63A JUMP JUMPDEST DUP8 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7CA JUMPI PUSH1 0x44 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x675F763 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH2 0x892 JUMPI JUMPDEST DUP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x89B SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x7BB JUMPI DUP7 CODESIZE PUSH2 0x88C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8D8 JUMPI JUMPDEST DUP2 PUSH2 0x8C2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8D3 JUMPI DUP9 SWAP2 MLOAD CODESIZE PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP DUP5 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 SWAP2 DUP2 PUSH1 0x2 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x4 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x938 JUMPI SWAP1 PUSH2 0x912 SWAP2 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x924 JUMPI CODESIZE PUSH2 0x5D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x97F JUMPI SWAP1 PUSH2 0x96C SWAP2 PUSH2 0x24B2 JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x938 JUMPI SWAP1 CODESIZE PUSH2 0x5CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP1 SWAP3 SWAP6 POP PUSH1 0x3 SWAP2 SWAP5 POP MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x97F JUMPI SWAP3 PUSH1 0x3 SWAP3 CODESIZE PUSH2 0x5C4 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST POP DUP7 PUSH2 0x57E JUMP JUMPDEST POP DUP7 SWAP1 PUSH2 0x558 JUMP JUMPDEST POP PUSH2 0x4CE PUSH2 0x9D9 CALLER PUSH2 0x256B JUMP JUMPDEST SWAP1 POP PUSH2 0x4C5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xD0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xA4C PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x8D3 JUMPI PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x8D3 JUMPI DUP5 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0xBEA JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xBD3 JUMPI JUMPDEST ISZERO PUSH2 0xB77 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP8 SSTORE DUP5 PUSH2 0xB66 JUMPI JUMPDEST POP PUSH2 0xABB PUSH1 0xFF DUP8 SLOAD PUSH1 0x8 SHR AND PUSH2 0xAB6 DUP2 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x21FB JUMP JUMPDEST PUSH2 0xAC4 CALLER PUSH2 0x1F8A JUMP JUMPDEST DUP6 SLOAD SWAP5 PUSH2 0xAD6 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 AND DUP4 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP3 PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP2 PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 PUSH1 0xD0 SLOAD AND PUSH1 0xD0 SSTORE PUSH1 0xD1 SLOAD AND PUSH1 0xD1 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xD3 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD4 SSTORE PUSH1 0x5 PUSH1 0xD5 SSTORE PUSH2 0x1388 PUSH1 0xD6 SSTORE PUSH1 0xC8 PUSH1 0xD7 SSTORE PUSH2 0xB31 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP7 SSTORE CODESIZE PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA8C JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0xA8C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0xA85 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xC11 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0xEB6 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 SWAP2 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0xF23 JUMPI JUMPDEST PUSH2 0xC40 SWAP1 PUSH2 0x22CC JUMP JUMPDEST AND SWAP2 PUSH2 0xC4D DUP4 ISZERO ISZERO PUSH2 0x2307 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD PUSH2 0xC68 DUP2 SLOAD PUSH2 0x22A7 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xC79 DUP3 SLOAD PUSH2 0x22A7 JUMP JUMPDEST DUP1 SWAP3 SSTORE PUSH2 0xF0E JUMPI JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xEFA JUMPI DUP6 SWAP2 PUSH2 0xCA4 SWAP2 PUSH2 0x2353 JUMP JUMPDEST SWAP3 PUSH2 0xCB5 PUSH1 0x4 DUP5 ADD SWAP5 DUP1 DUP7 SSTORE PUSH2 0x24BF JUMP JUMPDEST PUSH1 0xA PUSH1 0x5 DUP6 ADD SWAP5 DUP3 DUP7 SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 PUSH1 0xCD SLOAD AND SWAP1 DUP2 PUSH2 0xE1F JUMPI JUMPDEST POP POP DUP1 PUSH1 0xCE SLOAD AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xE12 JUMPI JUMPDEST PUSH2 0xD35 JUMPI JUMPDEST POP POP SWAP2 SLOAD SWAP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x518D384EC8D284E293CFE22999E2961FCB70FAE686352F14179033225F2AC244 SWAP2 POP PUSH1 0x60 SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP1 DUP4 PUSH1 0x24 SWAP3 PUSH1 0xD0 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP3 MSTORE DUP12 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP5 SWAP3 DUP2 PUSH2 0xDF6 JUMPI JUMPDEST POP PUSH2 0xD6B JUMPI JUMPDEST POP PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD AND SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xDE7 JUMPI JUMPDEST POP PUSH2 0xD88 JUMPI JUMPDEST DUP1 PUSH2 0xD65 JUMP JUMPDEST DUP4 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH2 0xDD3 JUMPI JUMPDEST DUP1 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xDDC SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x7CA JUMPI DUP4 CODESIZE PUSH2 0xDCD JUMP JUMPDEST PUSH2 0x100 SWAP2 POP ADD MLOAD ISZERO ISZERO CODESIZE PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xE0B SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x7F2 DUP2 DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0xD5F JUMP JUMPDEST POP DUP1 PUSH1 0xD0 SLOAD AND ISZERO ISZERO PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEEF JUMPI DUP6 SWAP2 PUSH2 0xEBA JUMPI JUMPDEST POP DUP1 PUSH2 0xE57 JUMPI JUMPDEST POP PUSH2 0xCDD JUMP JUMPDEST DUP3 SWAP4 SWAP5 SWAP3 EXTCODESIZE ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x675F763 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xEAB JUMPI PUSH2 0xE98 JUMPI JUMPDEST SWAP1 DUP2 DUP1 DUP8 SWAP4 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xEA4 SWAP1 SWAP6 SWAP2 SWAP6 PUSH2 0x1EAE JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xEE7 JUMPI JUMPDEST DUP2 PUSH2 0xED4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEE3 JUMPI MLOAD CODESIZE PUSH2 0xE4A JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD PUSH2 0xF1C DUP2 SLOAD PUSH2 0x22A7 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xC81 JUMP JUMPDEST POP PUSH1 0x33 SLOAD DUP3 AND CALLER EQ PUSH2 0xC37 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xF4A PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH2 0xF62 CALLDATASIZE PUSH2 0x1F1C JUMP JUMPDEST SWAP1 PUSH2 0xF6B PUSH2 0x1F32 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xF9A JUMPI JUMPDEST PUSH2 0xF7D SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0xF88 DUP3 ISZERO ISZERO PUSH2 0x225B JUMP JUMPDEST DUP3 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0xF74 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x100A PUSH2 0x1F32 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x1049 JUMPI JUMPDEST PUSH2 0x101C SWAP1 PUSH2 0x25D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0xA0 SWAP2 DUP3 SHR PUSH1 0xFF AND ISZERO SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0x1013 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH2 0x160 SWAP2 PUSH2 0x1093 PUSH2 0x1E49 JUMP JUMPDEST DUP2 PUSH2 0x140 DUP5 MLOAD PUSH2 0x10A2 DUP2 PUSH2 0x1E91 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x10FD DUP2 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA DUP5 SLOAD SWAP5 DUP6 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO DUP3 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1205 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x129D PUSH2 0x1E49 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x12C9 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x12D1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH2 0x131C CALLDATASIZE PUSH2 0x1F1C JUMP JUMPDEST SWAP1 PUSH2 0x1325 PUSH2 0x1F32 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x64 DUP3 LT PUSH2 0x1398 JUMPI PUSH2 0x2710 DUP2 GT PUSH2 0x1347 JUMPI PUSH1 0xD6 SSTORE PUSH1 0xD7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D6178206D756C7469706C696572206D757374206265206174206D6F73742031 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x605C60F PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D696E206D756C7469706C696572206D757374206265206174206C6561737420 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x605C62F PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178206D7573742062652067726561746572207468616E206D696E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1487 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x157E JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH2 0x152B PUSH2 0x1515 DUP5 PUSH2 0x2553 JUMP JUMPDEST SWAP4 PUSH2 0x1523 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1EDE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x2553 JUMP JUMPDEST DUP4 DUP4 ADD SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x155E JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x154F JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x159C PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x15A7 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND DUP1 ISZERO PUSH2 0x16BB JUMPI PUSH2 0x15C4 DUP4 ISZERO ISZERO PUSH2 0x225B JUMP JUMPDEST PUSH2 0x15CF PUSH1 0xD2 SLOAD PUSH2 0x22A7 JUMP JUMPDEST SWAP4 DUP5 PUSH1 0xD2 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x80 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A7 JUMPI PUSH1 0x20 SWAP8 PUSH32 0xAF31016049A06640F36FA55E20D2A8C9809BBDADF9FD3327A7763E5AA652346E SWAP6 SWAP4 DUP9 SWAP8 SWAP6 SWAP4 PUSH1 0x2 SWAP4 PUSH1 0x40 MSTORE DUP5 MSTORE PUSH2 0x167A DUP11 DUP6 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD SWAP3 DUP9 DUP5 MSTORE PUSH1 0x40 PUSH1 0x60 DUP9 ADD SWAP6 TIMESTAMP DUP8 MSTORE DUP13 DUP2 MSTORE PUSH1 0xCC DUP16 MSTORE KECCAK256 SWAP7 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE MLOAD ISZERO ISZERO DUP6 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1715 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEB6 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xEB6 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1741 DUP2 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x174E PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1EDE JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 SWAP5 DUP6 DUP4 ADD SWAP4 CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0xEB6 JUMPI DUP1 PUSH1 0x24 DUP9 SWAP4 ADD DUP7 CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP1 PUSH2 0x17A9 ADDRESS DUP4 EQ ISZERO PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x17C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 DUP5 SLOAD AND EQ PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x17CE PUSH2 0x1F32 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1806 JUMPI POP POP POP POP PUSH2 0x2EF SWAP2 POP PUSH2 0x2095 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x19C9 JUMPI JUMPDEST POP PUSH2 0x188A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1972 JUMPI PUSH2 0x189C DUP3 PUSH2 0x2095 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x196A JUMPI JUMPDEST PUSH2 0x18D9 JUMPI JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x1956 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x18EB DUP8 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1961 JUMPI RETURNDATASIZE PUSH2 0x193A DUP2 PUSH2 0x1F00 JUMP JUMPDEST SWAP1 PUSH2 0x1948 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2125 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP5 PUSH2 0x18D1 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2125 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x19F5 JUMPI JUMPDEST PUSH2 0x19E1 DUP2 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19F1 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1829 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x19D7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1A16 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD5 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1A57 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x1A5F PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0xD6 SLOAD PUSH1 0xD7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x157E JUMPI PUSH2 0x1ADB PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x1B12 ADDRESS DUP3 EQ ISZERO PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x1B2F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x1B37 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x1C9A JUMPI DUP4 PUSH1 0x40 MSTORE DUP7 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1B93 JUMPI POP POP POP POP PUSH2 0x2EF SWAP2 POP PUSH2 0x2095 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x1C6B JUMPI JUMPDEST POP PUSH2 0x1C17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1972 JUMPI PUSH2 0x1C29 DUP3 PUSH2 0x2095 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C64 JUMPI PUSH2 0x18D9 JUMPI POP POP POP POP POP DUP1 RETURN JUMPDEST POP DUP1 PUSH2 0x18CC JUMP JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C93 JUMPI JUMPDEST PUSH2 0x1C83 DUP2 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19F1 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1BB6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C79 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0xA0 SWAP2 PUSH2 0x1CCD PUSH2 0x1E49 JUMP JUMPDEST DUP2 PUSH1 0x80 DUP5 MLOAD PUSH2 0x1CDB DUP2 PUSH2 0x1E5F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 DUP6 SHL SUB AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1D0C DUP2 PUSH2 0x1E5F JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP6 MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1DFE PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x1E06 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD1 SLOAD AND OR PUSH1 0xD1 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x157E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x157E JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8D3 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x8D3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F46 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x1FDA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x203B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x20CA JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2187 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2139 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2142 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x219A JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x21CA DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x21D8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21EB JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21DB JUMP JUMPDEST ISZERO PUSH2 0x2202 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2262 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576569676874206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x22B6 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x22D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x230E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617374726F6C6F6765722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x235D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8D3 JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x8D3 JUMPI DUP1 MLOAD PUSH2 0x239D DUP2 PUSH2 0x1F00 JUMP JUMPDEST SWAP3 PUSH2 0x23AB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1EDE JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x8D3 JUMPI PUSH2 0x23C9 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x21D8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x8D3 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x8D3 JUMPI ADD SWAP1 PUSH2 0x140 SWAP3 DUP4 DUP4 DUP3 SUB SLT PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD SWAP4 DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE DUP3 MLOAD DUP5 MSTORE PUSH2 0x241C PUSH1 0x20 DUP5 ADD PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x242D PUSH1 0x40 DUP5 ADD PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x243E PUSH1 0x60 DUP5 ADD PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP3 DUP2 GT PUSH2 0x8D3 JUMPI DUP2 PUSH2 0x245B SWAP2 DUP6 ADD PUSH2 0x2387 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x8D3 JUMPI PUSH2 0x2477 SWAP2 DUP4 ADD PUSH2 0x2387 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x8D3 JUMPI DUP4 ADD MSTORE PUSH2 0x120 DUP1 SWAP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x22B6 JUMPI JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x24FE JUMPI DUP1 ISZERO PUSH2 0x24F7 JUMPI PUSH1 0xD6 SLOAD PUSH1 0xD7 SLOAD SWAP1 DUP2 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x22B6 JUMPI DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x22B6 JUMPI PUSH1 0x64 PUSH2 0x23C9 SWAP3 DIV SWAP1 PUSH2 0x24B2 JUMP JUMPDEST POP PUSH1 0xD7 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0xD6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5F DUP2 LT ISZERO PUSH2 0x254D JUMPI PUSH1 0x5A DUP2 LT ISZERO PUSH2 0x2547 JUMPI PUSH1 0x55 DUP2 LT ISZERO PUSH2 0x2541 JUMPI PUSH1 0x50 DUP2 LT ISZERO PUSH2 0x253B JUMPI PUSH1 0x4B GT ISZERO PUSH2 0x2536 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SWAP2 PUSH1 0xD2 SLOAD SWAP3 JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2585 JUMPI POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ SWAP2 DUP3 PUSH2 0x25C5 JUMPI JUMPDEST POP POP PUSH2 0x25BE JUMPI PUSH2 0x25B9 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x2574 JUMP JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 POP KECCAK256 SLOAD PUSH1 0xA0 SHR AND CODESIZE DUP1 PUSH2 0x25AA JUMP JUMPDEST ISZERO PUSH2 0x25DD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081B5BD91D5B19481251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA2646970667358221220AD 0x1E 0xCB EXP 0x5D 0xDA 0x29 0x5C PUSH1 0xE9 0xB9 SWAP8 0xC4 CODECOPY CREATE2 DUP4 PUSH9 0x63B2EEB6D4A970F6D1 PUSH23 0xC57F8F4CBE64736F6C6343000811003300000000000000 ","sourceMap":"502:14413:11:-:0;;;;;;;1332:4:6;1324:13;;6007::5;502:14413:11;;;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;502:14413:11;;;;;;;;1324:13:6;502:14413:11;;;;;;;;;;;;;;;;6074:139:5;502:14413:11;;;;;;6007:13:5;502:14413:11;6174:28:5;502:14413:11;;;;;;6174:28:5;6074:139;;;502:14413:11;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7753,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":9075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":9095,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_TokenInfo_fromMemory":{"entryPoint":9164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":7964,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":9555,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":7936,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":9394,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":9043,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8664,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":7902,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_25751":{"entryPoint":7775,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25767":{"entryPoint":7825,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_25771":{"entryPoint":7854,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_34788":{"entryPoint":7874,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateReputationMultiplier":{"entryPoint":9407,"id":2191,"parameterSlots":1,"returnSlots":1},"fun_calculateReputationTier":{"entryPoint":9477,"id":2231,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":7986,"id":68,"parameterSlots":0,"returnSlots":0},"fun_isPredictionModule":{"entryPoint":9579,"id":2346,"parameterSlots":1,"returnSlots":1},"fun_setImplementation":{"entryPoint":8341,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":8074,"id":125,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":8485,"id":1086,"parameterSlots":4,"returnSlots":1},"increment_uint256":{"entryPoint":8871,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":9686,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0b23":{"entryPoint":8967,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1b26":{"entryPoint":8908,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_36e1":{"entryPoint":8147,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":8244,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9e0c":{"entryPoint":8795,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":8699,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":5185},{"length":32,"start":6011},{"length":32,"start":6885}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816302bc7f4a14611e2457508063106bdcf514611de457806310d4f37414611d8c57806316d54f0914611d635780632c27750a14611cae5780633659cfe614611ac05780633d9617be14611a9b578063430cd57a14611a7d57806344cda48514611a3d578063450f144214611a1f5780634cba103e146119fc5780634f1ef2861461170057806351131876146115825780635245420d146114f257806352d1902d1461142e57806358bd9b931461130d5780635df4d161146112ef57806365af67bd146112af5780636be2cefb146112725780636fd31a4114611249578063715018a6146111ec57806375a67d5c1461107357806378bbd70114611055578063893849de14610fed5780638da5cb5b14610fc4578063960e6f8814610fa65780639754cfd114610f535780639f68871d14610f305780639f7c468814610bf7578063a6b63eb814610a32578063ab3dcd6a14610a09578063ab76c9ed146109e0578063adcbcde51461048c578063b107e88c1461044f578063c3a274c21461040f578063dc0a40bd146103a9578063e2c3538c14610369578063e6f9558314610346578063f2fde38b146102b5578063f92eadf6146102975763fe0438b2146101e457600080fd5b3461029457602036600319011261029457610160906001600160a01b03906040908261020e611e49565b16815260ca6020522080549160018201541690600281015460038201546004830154600584015460068501549160078601549360088701549560ff600a60098a015499015416986040519a8b5260208b015260408a01526060890152608088015260a087015260c086015260e08501526101008401526101208301521515610140820152f35b80fd5b5034610294578060031936011261029457602060d454604051908152f35b5034610294576020366003190112610294576102cf611e49565b6102d7611f32565b6001600160a01b038116156102f2576102ef90611f8a565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461029457602036600319011261029457610360611f32565b60043560d45580f35b503461029457602036600319011261029457610383611e49565b61038b611f32565b60018060a01b03166001600160601b0360a01b60d054161760d05580f35b50346102945760203660031901126102945760a0906040906001600160a01b036103d1611e49565b16815260cb60205220805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b503461029457602036600319011261029457610429611e49565b610431611f32565b60018060a01b03166001600160601b0360a01b60ce54161760ce5580f35b5034610294576020366003190112610294576020906005906040906001600160a01b0361047a611e49565b16815260ca8452200154604051908152f35b50346102945760e0366003190112610294576104a6611e49565b602435604435916084359260018060a01b0360335416331480156109cc575b6104ce906122cc565b6104e26001600160a01b0383161515612307565b60018060a01b038216855260ca602052604085209260cb60205260408620948160068601556064359283600787015560a435600887015561052e60a43561052986866124b2565b6124b2565b600287015582156109c457606481029080820460641490151715610938578261055691612353565b905b81875583156109bd57606481029080820460641490151715610938578361057e91612353565b6001870181905560a435156109b65760c4358060648102046064148115171561097f576105b190606460a4359102612353565b905b600288019482865589938a95610993575b5061094c575b5060a4356108f3575b5080156108eb576105e391612353565b6003850190808255600a6105fd60048701928084556124bf565b956005810196875561060f8454612505565b600489015542600982015501805460ff1916600117905560cd5487906001600160a01b031680610815575b5060ce546001600160a01b031680151580610801575b6106f3575b50505493546040805186815260208101969096528501527fad4434fdebadb9d3b07e14eaea89a4f564780aca2d11dbf1d7fcd70d921a5d64936080939291906001600160a01b038416907f518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac24490606090a260018654960154915490549160405196875260208701526040860152606085015260018060a01b031692a280f35b60d05460405163248bb6cd60e21b81526001600160a01b0388811660048301529091849183916024918391165afa8391816107dd575b50610735575b50610655565b60408101516001600160a01b03169081151590816107ce575b501561072f578754823b156107ca5760405163f6322a5f60e01b81526001600160a01b0392909216600483015260248201529082908290604490829084905af180156107bf5761079f575b8061072f565b6107ad909594939295611eae565b6107bb579091928638610799565b8680fd5b6040513d84823e3d90fd5b8380fd5b6101009150015115153861074e565b6107fa9192503d8086833e6107f28183611ede565b8101906123cc565b9038610729565b5060d0546001600160a01b03161515610650565b60405163656d0c3960e01b81526001600160a01b0387166004820152602081602481855afa9081156108e05783916108a6575b5080610855575b5061063a565b8754823b156107ca5760448492836040519586948593630675f76360e01b8552600485015260248401525af180156107bf57610892575b8061084f565b61089b90611eae565b6107bb57863861088c565b9250506020823d6020116108d8575b816108c260209383611ede565b810103126108d35788915138610848565b600080fd5b3d91506108b5565b6040513d85823e3d90fd5b5050846105e3565b90918160021b91808304600414901517156109385790610912916124b2565b906004810180911161092457386105d3565b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b88526011600452602488fd5b9091928160011b918083046002149015171561097f579061096c916124b2565b91600281018091116109385790386105ca565b634e487b7160e01b89526011600452602489fd5b80929550600391945002908082046003149015171561097f5792600392386105c4565b87906105b3565b508661057e565b508690610558565b506104ce6109d93361256b565b90506104c5565b503461029457806003193601126102945760cf546040516001600160a01b039091168152602090f35b503461029457806003193601126102945760d0546040516001600160a01b039091168152602090f35b50346102945760a036600319011261029457610a4c611e49565b6001600160a01b039060243582811691908290036108d3576044358381168091036108d35784549260ff8460081c161593848095610bea575b8015610bd3575b15610b775760ff198116600117875584610b66575b50610abb60ff875460081c16610ab6816121fb565b6121fb565b610ac433611f8a565b855494610ad660ff8760081c166121fb565b6001600160601b0360a01b93168360cd54161760cd558260ce54161760ce558160cf54161760cf558060d0541660d05560d1541660d15560643560d35560843560d455600560d55561138860d65560c860d755610b31575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117865538610aa1565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610a8c5750600160ff821614610a8c565b50600160ff821610610a85565b503461029457604036600319011261029457610c11611e49565b602435908115158203610eb65760d1546001600160a01b03918291821633148015610f23575b610c40906122cc565b1691610c4d831515612307565b82845260ca602052604084209060068201610c6881546122a7565b90556002820190610c7982546122a7565b809255610f0e575b6003820154606481029080820460641490151715610efa578591610ca491612353565b92610cb560048401948086556124bf565b600a600585019482865542600982015501600160ff198254161790558160cd54169081610e1f575b50508060ce54169081151580610e12575b610d35575b5050915490546040805183815260208101939093528201527f518d384ec8d284e293cfe22999e2961fcb70fae686352f14179033225f2ac2449150606090a280f35b808360249260d054166040519384809263248bb6cd60e21b82528b60048301525afa849281610df6575b50610d6b575b50610cf3565b604082015116908115159081610de7575b50610d88575b80610d65565b8354823b156107ca5760405163f6322a5f60e01b81526001600160a01b0392909216600483015260248201529082908290604490829084905af180156107bf57610dd3575b80610d82565b610ddc90611eae565b6107ca578338610dcd565b61010091500151151538610d7c565b610e0b9193503d8087833e6107f28183611ede565b9138610d5f565b508060d054161515610cee565b60405163656d0c3960e01b815260048101889052602081602481865afa908115610eef578591610eba575b5080610e57575b50610cdd565b829394923b15610eb657604490836040519586948593630675f76360e01b8552600485015260248401525af18015610eab57610e98575b9081808793610e51565b610ea490959195611eae565b9338610e8e565b6040513d88823e3d90fd5b8280fd5b90506020813d8211610ee7575b81610ed460209383611ede565b81010312610ee3575138610e4a565b8480fd5b3d9150610ec7565b6040513d87823e3d90fd5b634e487b7160e01b86526011600452602486fd5b60038201610f1c81546122a7565b9055610c81565b5060335482163314610c37565b503461029457602036600319011261029457610f4a611f32565b60043560d35580f35b503461029457610f6236611f1c565b90610f6b611f32565b80151580610f9a575b610f7d906125d6565b610f8882151561225b565b825260cc602052600160408320015580f35b5060d254811115610f74565b5034610294578060031936011261029457602060d554604051908152f35b50346102945780600319360112610294576033546040516001600160a01b039091168152602090f35b50346102945760203660031901126102945760043561100a611f32565b80151580611049575b61101c906125d6565b815260cc60205260408120805460ff60a01b19811660a091821c60ff161590911b60ff60a01b1617905580f35b5060d254811115611013565b5034610294578060031936011261029457602060d254604051908152f35b503461029457602036600319011261029457604061016091611093611e49565b8161014084516110a281611e91565b82815282602082015282868201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152015260018060a01b0316815260ca602052206101406040516110fd81611e91565b60ff600a84549485845260018060a01b036001820154166020850152600281015460408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152600781015460e08501526008810154610100850152600981015461012085015201541615158282015260405192835260018060a01b03602082015116602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015260c081015160c084015260e081015160e084015261010081015161010084015261012081015161012084015201511515610140820152f35b5034610294578060031936011261029457611205611f32565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461029457806003193601126102945760cd546040516001600160a01b039091168152602090f35b5034610294576020366003190112610294576020906004906040906001600160a01b0361129d611e49565b16815260cb8452200154604051908152f35b5034610294576020366003190112610294576112c9611e49565b6112d1611f32565b60018060a01b03166001600160601b0360a01b60cf54161760cf5580f35b5034610294578060031936011261029457602060d754604051908152f35b50346102945761131c36611f1c565b90611325611f32565b818111156113e957606482106113985761271081116113475760d65560d75580f35b60405162461bcd60e51b8152602060048201526024808201527f4d6178206d756c7469706c696572206d757374206265206174206d6f737420316044820152630605c60f60e31b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f4d696e206d756c7469706c696572206d757374206265206174206c65617374206044820152630605c62f60e31b6064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4d6178206d7573742062652067726561746572207468616e206d696e000000006044820152606490fd5b50346102945780600319360112610294577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036114875760206040516000805160206126178339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b50346102945760208060031936011261157e576004359161152b61151584612553565b936115236040519586611ede565b808552612553565b8383019190601f190136833760405193838594850191818652518092526040850193925b82811061155e57505050500390f35b83516001600160a01b03168552869550938101939281019260010161154f565b5080fd5b50346102945760403660031901126102945761159c611e49565b6024356115a7611f32565b6001600160a01b039180831680156116bb576115c483151561225b565b6115cf60d2546122a7565b938460d255604051916080830183811067ffffffffffffffff8211176116a7576020977faf31016049a06640f36fa55e20d2a8c9809bbdadf9fd3327a7763e5aa652346e959388979593600293604052845261167a8a8501600181526040860192888452604060608801954287528c815260cc8f52209651166001600160601b0360a01b875416178655511515859081549060ff60a01b90151560a01b169060ff60a01b1916179055565b51600184015551910155604080516001600160a01b039290921682526020820192909252a2604051908152f35b634e487b7160e01b88526041600452602488fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e7472616374206164647265737300000000000000006044820152606490fd5b50604036600319011261029457611715611e49565b6024359067ffffffffffffffff8211610eb65736602383011215610eb657816004013561174181611f00565b61174e6040519182611ede565b81815284602094858301933660248284010111610eb6578060248893018637830101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906117a930831415611fd3565b6117c6600080516020612617833981519152928284541614612034565b6117ce611f32565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561180657505050506102ef9150612095565b8492939416906040516352d1902d60e01b81528681600481865afa8891816119c9575b5061188a5760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b95939495036119725761189c82612095565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a28483511580159061196a575b6118d9575b505050505080f35b8061195695604051956118eb87611ec2565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15611961573d61193a81611f00565b906119486040519283611ede565b81528681943d92013e612125565b5038808080846118d1565b60609250612125565b5060016118cc565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d83116119f5575b6119e18183611ede565b810103126119f157519038611829565b8880fd5b503d6119d7565b503461029457602036600319011261029457611a16611f32565b60043560d55580f35b5034610294578060031936011261029457602060d354604051908152f35b503461029457602036600319011261029457611a57611e49565b611a5f611f32565b60018060a01b03166001600160601b0360a01b60cd54161760cd5580f35b5034610294578060031936011261029457602060d654604051908152f35b5034610294578060031936011261029457604060d65460d75482519182526020820152f35b50346102945760208060031936011261157e57611adb611e49565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116611b1230821415611fd3565b611b2f600080516020612617833981519152918383541614612034565b611b37611f32565b604051908482019282841067ffffffffffffffff851117611c9a578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435416600014611b9357505050506102ef9150612095565b8492939416906040516352d1902d60e01b81528681600481865afa889181611c6b575b50611c175760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959394950361197257611c2982612095565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a284835115801590611c64576118d957505050505080f35b50806118cc565b9091508781813d8311611c93575b611c838183611ede565b810103126119f157519038611bb6565b503d611c79565b634e487b7160e01b87526041600452602487fd5b503461029457602036600319011261029457604060a091611ccd611e49565b8160808451611cdb81611e5f565b82815282602082015282868201528260608201520152600180851b0316815260cb60205220604051611d0c81611e5f565b81549182825260018101546020830190815260028201549060408401918252608060046003850154946060870195865201549401938452604051948552516020850152516040840152516060830152516080820152f35b503461029457806003193601126102945760ce546040516001600160a01b039091168152602090f35b5034610294576020366003190112610294576040608091600435815260cc60205220805490600260018201549101549060ff6040519360018060a01b038116855260a01c161515602084015260408301526060820152f35b503461029457602036600319011261029457611dfe611e49565b611e06611f32565b60018060a01b03166001600160601b0360a01b60d154161760d15580f35b90503461157e578160031936011261157e5760d1546001600160a01b03168152602090f35b600435906001600160a01b03821682036108d357565b60a0810190811067ffffffffffffffff821117611e7b57604052565b634e487b7160e01b600052604160045260246000fd5b610160810190811067ffffffffffffffff821117611e7b57604052565b67ffffffffffffffff8111611e7b57604052565b6060810190811067ffffffffffffffff821117611e7b57604052565b90601f8019910116810190811067ffffffffffffffff821117611e7b57604052565b67ffffffffffffffff8111611e7b57601f01601f191660200190565b60409060031901126108d3576004359060243590565b6033546001600160a01b03163303611f4657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611fda57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561203b57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b156120ca5760008051602061261783398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156121875750815115612139575090565b3b156121425790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561219a5750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526121ca81518092816024860152602086860191016121d8565b601f01601f19168101030190fd5b60005b8381106121eb5750506000910152565b81810151838201526020016121db565b1561220257565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561226257565b60405162461bcd60e51b815260206004820152601d60248201527f576569676874206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60001981146122b65760010190565b634e487b7160e01b600052601160045260246000fd5b156122d357565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b1561230e57565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420617374726f6c6f67657220616464726573730000000000006044820152606490fd5b811561235d570490565b634e487b7160e01b600052601260045260246000fd5b51906001600160a01b03821682036108d357565b81601f820112156108d357805161239d81611f00565b926123ab6040519485611ede565b818452602082840101116108d3576123c991602080850191016121d8565b90565b6020818303126108d357805167ffffffffffffffff918282116108d35701906101409283838203126108d35760405193840184811083821117611e7b576040528251845261241c60208401612373565b602085015261242d60408401612373565b604085015261243e60608401612373565b606085015260808301518281116108d3578161245b918501612387565b608085015260a08301519182116108d357612477918301612387565b60a083015260c081015160c083015260e081015160e0830152610100808201519081151582036108d357830152610120809101519082015290565b919082018092116122b657565b60648110156124fe5780156124f75760d65460d754908181039081116122b657808302928304036122b65760646123c99204906124b2565b5060d75490565b5060d65490565b605f81101561254d57605a81101561254757605581101561254157605081101561253b57604b111561253657600090565b600190565b50600290565b50600390565b50600490565b50600590565b67ffffffffffffffff8111611e7b5760051b60200190565b6001809160d254925b838111156125855750505050600090565b600081815260cc6020526040808220546001600160a01b0385811691161491826125c5575b50506125be576125b9906122a7565b612574565b5050905090565b60ff9250205460a01c1638806125aa565b156125dd57565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5bd91d5b19481251607a1b6044820152606490fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220ad1ecb0a5dda295c60e9b997c439f5836863b2eeb6d4a970f6d176c57f8f4cbe64736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2BC7F4A EQ PUSH2 0x1E24 JUMPI POP DUP1 PUSH4 0x106BDCF5 EQ PUSH2 0x1DE4 JUMPI DUP1 PUSH4 0x10D4F374 EQ PUSH2 0x1D8C JUMPI DUP1 PUSH4 0x16D54F09 EQ PUSH2 0x1D63 JUMPI DUP1 PUSH4 0x2C27750A EQ PUSH2 0x1CAE JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1AC0 JUMPI DUP1 PUSH4 0x3D9617BE EQ PUSH2 0x1A9B JUMPI DUP1 PUSH4 0x430CD57A EQ PUSH2 0x1A7D JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x1A3D JUMPI DUP1 PUSH4 0x450F1442 EQ PUSH2 0x1A1F JUMPI DUP1 PUSH4 0x4CBA103E EQ PUSH2 0x19FC JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1700 JUMPI DUP1 PUSH4 0x51131876 EQ PUSH2 0x1582 JUMPI DUP1 PUSH4 0x5245420D EQ PUSH2 0x14F2 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x142E JUMPI DUP1 PUSH4 0x58BD9B93 EQ PUSH2 0x130D JUMPI DUP1 PUSH4 0x5DF4D161 EQ PUSH2 0x12EF JUMPI DUP1 PUSH4 0x65AF67BD EQ PUSH2 0x12AF JUMPI DUP1 PUSH4 0x6BE2CEFB EQ PUSH2 0x1272 JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x1249 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11EC JUMPI DUP1 PUSH4 0x75A67D5C EQ PUSH2 0x1073 JUMPI DUP1 PUSH4 0x78BBD701 EQ PUSH2 0x1055 JUMPI DUP1 PUSH4 0x893849DE EQ PUSH2 0xFED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFC4 JUMPI DUP1 PUSH4 0x960E6F88 EQ PUSH2 0xFA6 JUMPI DUP1 PUSH4 0x9754CFD1 EQ PUSH2 0xF53 JUMPI DUP1 PUSH4 0x9F68871D EQ PUSH2 0xF30 JUMPI DUP1 PUSH4 0x9F7C4688 EQ PUSH2 0xBF7 JUMPI DUP1 PUSH4 0xA6B63EB8 EQ PUSH2 0xA32 JUMPI DUP1 PUSH4 0xAB3DCD6A EQ PUSH2 0xA09 JUMPI DUP1 PUSH4 0xAB76C9ED EQ PUSH2 0x9E0 JUMPI DUP1 PUSH4 0xADCBCDE5 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xB107E88C EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xC3A274C2 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xDC0A40BD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xE2C3538C EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xE6F95583 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF92EADF6 EQ PUSH2 0x297 JUMPI PUSH4 0xFE0438B2 EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x160 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP3 PUSH2 0x20E PUSH2 0x1E49 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP2 PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP2 PUSH1 0x7 DUP7 ADD SLOAD SWAP4 PUSH1 0x8 DUP8 ADD SLOAD SWAP6 PUSH1 0xFF PUSH1 0xA PUSH1 0x9 DUP11 ADD SLOAD SWAP10 ADD SLOAD AND SWAP9 PUSH1 0x40 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x2CF PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2EF SWAP1 PUSH2 0x1F8A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x360 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD4 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x383 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD0 SLOAD AND OR PUSH1 0xD0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0xA0 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3D1 PUSH2 0x1E49 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x429 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x431 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x47A PUSH2 0x1E49 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCA DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x4A6 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x9CC JUMPI JUMPDEST PUSH2 0x4CE SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH2 0x4E2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x2307 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND DUP6 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP3 PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP5 DUP2 PUSH1 0x6 DUP7 ADD SSTORE PUSH1 0x64 CALLDATALOAD SWAP3 DUP4 PUSH1 0x7 DUP8 ADD SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x8 DUP8 ADD SSTORE PUSH2 0x52E PUSH1 0xA4 CALLDATALOAD PUSH2 0x529 DUP7 DUP7 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0x24B2 JUMP JUMPDEST PUSH1 0x2 DUP8 ADD SSTORE DUP3 ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x938 JUMPI DUP3 PUSH2 0x556 SWAP2 PUSH2 0x2353 JUMP JUMPDEST SWAP1 JUMPDEST DUP2 DUP8 SSTORE DUP4 ISZERO PUSH2 0x9BD JUMPI PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x938 JUMPI DUP4 PUSH2 0x57E SWAP2 PUSH2 0x2353 JUMP JUMPDEST PUSH1 0x1 DUP8 ADD DUP2 SWAP1 SSTORE PUSH1 0xA4 CALLDATALOAD ISZERO PUSH2 0x9B6 JUMPI PUSH1 0xC4 CALLDATALOAD DUP1 PUSH1 0x64 DUP2 MUL DIV PUSH1 0x64 EQ DUP2 ISZERO OR ISZERO PUSH2 0x97F JUMPI PUSH2 0x5B1 SWAP1 PUSH1 0x64 PUSH1 0xA4 CALLDATALOAD SWAP2 MUL PUSH2 0x2353 JUMP JUMPDEST SWAP1 JUMPDEST PUSH1 0x2 DUP9 ADD SWAP5 DUP3 DUP7 SSTORE DUP10 SWAP4 DUP11 SWAP6 PUSH2 0x993 JUMPI JUMPDEST POP PUSH2 0x94C JUMPI JUMPDEST POP PUSH1 0xA4 CALLDATALOAD PUSH2 0x8F3 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x8EB JUMPI PUSH2 0x5E3 SWAP2 PUSH2 0x2353 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SWAP1 DUP1 DUP3 SSTORE PUSH1 0xA PUSH2 0x5FD PUSH1 0x4 DUP8 ADD SWAP3 DUP1 DUP5 SSTORE PUSH2 0x24BF JUMP JUMPDEST SWAP6 PUSH1 0x5 DUP2 ADD SWAP7 DUP8 SSTORE PUSH2 0x60F DUP5 SLOAD PUSH2 0x2505 JUMP JUMPDEST PUSH1 0x4 DUP10 ADD SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x815 JUMPI JUMPDEST POP PUSH1 0xCE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO DUP1 PUSH2 0x801 JUMPI JUMPDEST PUSH2 0x6F3 JUMPI JUMPDEST POP POP SLOAD SWAP4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP6 ADD MSTORE PUSH32 0xAD4434FDEBADB9D3B07E14EAEA89A4F564780ACA2D11DBF1D7FCD70D921A5D64 SWAP4 PUSH1 0x80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x518D384EC8D284E293CFE22999E2961FCB70FAE686352F14179033225F2AC244 SWAP1 PUSH1 0x60 SWAP1 LOG2 PUSH1 0x1 DUP7 SLOAD SWAP7 ADD SLOAD SWAP2 SLOAD SWAP1 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0xD0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH1 0x24 SWAP2 DUP4 SWAP2 AND GAS STATICCALL DUP4 SWAP2 DUP2 PUSH2 0x7DD JUMPI JUMPDEST POP PUSH2 0x735 JUMPI JUMPDEST POP PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x7CE JUMPI JUMPDEST POP ISZERO PUSH2 0x72F JUMPI DUP8 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH2 0x79F JUMPI JUMPDEST DUP1 PUSH2 0x72F JUMP JUMPDEST PUSH2 0x7AD SWAP1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP6 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x7BB JUMPI SWAP1 SWAP2 SWAP3 DUP7 CODESIZE PUSH2 0x799 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x100 SWAP2 POP ADD MLOAD ISZERO ISZERO CODESIZE PUSH2 0x74E JUMP JUMPDEST PUSH2 0x7FA SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x7F2 DUP2 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x23CC JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x729 JUMP JUMPDEST POP PUSH1 0xD0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8E0 JUMPI DUP4 SWAP2 PUSH2 0x8A6 JUMPI JUMPDEST POP DUP1 PUSH2 0x855 JUMPI JUMPDEST POP PUSH2 0x63A JUMP JUMPDEST DUP8 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7CA JUMPI PUSH1 0x44 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x675F763 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH2 0x892 JUMPI JUMPDEST DUP1 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x89B SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x7BB JUMPI DUP7 CODESIZE PUSH2 0x88C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x8D8 JUMPI JUMPDEST DUP2 PUSH2 0x8C2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8D3 JUMPI DUP9 SWAP2 MLOAD CODESIZE PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP DUP5 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 SWAP2 DUP2 PUSH1 0x2 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x4 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x938 JUMPI SWAP1 PUSH2 0x912 SWAP2 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x924 JUMPI CODESIZE PUSH2 0x5D3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x97F JUMPI SWAP1 PUSH2 0x96C SWAP2 PUSH2 0x24B2 JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x938 JUMPI SWAP1 CODESIZE PUSH2 0x5CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP1 SWAP3 SWAP6 POP PUSH1 0x3 SWAP2 SWAP5 POP MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x97F JUMPI SWAP3 PUSH1 0x3 SWAP3 CODESIZE PUSH2 0x5C4 JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x5B3 JUMP JUMPDEST POP DUP7 PUSH2 0x57E JUMP JUMPDEST POP DUP7 SWAP1 PUSH2 0x558 JUMP JUMPDEST POP PUSH2 0x4CE PUSH2 0x9D9 CALLER PUSH2 0x256B JUMP JUMPDEST SWAP1 POP PUSH2 0x4C5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xD0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xA4C PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x8D3 JUMPI PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x8D3 JUMPI DUP5 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO SWAP4 DUP5 DUP1 SWAP6 PUSH2 0xBEA JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xBD3 JUMPI JUMPDEST ISZERO PUSH2 0xB77 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP8 SSTORE DUP5 PUSH2 0xB66 JUMPI JUMPDEST POP PUSH2 0xABB PUSH1 0xFF DUP8 SLOAD PUSH1 0x8 SHR AND PUSH2 0xAB6 DUP2 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x21FB JUMP JUMPDEST PUSH2 0xAC4 CALLER PUSH2 0x1F8A JUMP JUMPDEST DUP6 SLOAD SWAP5 PUSH2 0xAD6 PUSH1 0xFF DUP8 PUSH1 0x8 SHR AND PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP4 AND DUP4 PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP3 PUSH1 0xCE SLOAD AND OR PUSH1 0xCE SSTORE DUP2 PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 PUSH1 0xD0 SLOAD AND PUSH1 0xD0 SSTORE PUSH1 0xD1 SLOAD AND PUSH1 0xD1 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xD3 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD4 SSTORE PUSH1 0x5 PUSH1 0xD5 SSTORE PUSH2 0x1388 PUSH1 0xD6 SSTORE PUSH1 0xC8 PUSH1 0xD7 SSTORE PUSH2 0xB31 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP7 SSTORE CODESIZE PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA8C JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0xA8C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0xA85 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xC11 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0xEB6 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 SWAP2 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0xF23 JUMPI JUMPDEST PUSH2 0xC40 SWAP1 PUSH2 0x22CC JUMP JUMPDEST AND SWAP2 PUSH2 0xC4D DUP4 ISZERO ISZERO PUSH2 0x2307 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD PUSH2 0xC68 DUP2 SLOAD PUSH2 0x22A7 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xC79 DUP3 SLOAD PUSH2 0x22A7 JUMP JUMPDEST DUP1 SWAP3 SSTORE PUSH2 0xF0E JUMPI JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x64 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xEFA JUMPI DUP6 SWAP2 PUSH2 0xCA4 SWAP2 PUSH2 0x2353 JUMP JUMPDEST SWAP3 PUSH2 0xCB5 PUSH1 0x4 DUP5 ADD SWAP5 DUP1 DUP7 SSTORE PUSH2 0x24BF JUMP JUMPDEST PUSH1 0xA PUSH1 0x5 DUP6 ADD SWAP5 DUP3 DUP7 SSTORE TIMESTAMP PUSH1 0x9 DUP3 ADD SSTORE ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 PUSH1 0xCD SLOAD AND SWAP1 DUP2 PUSH2 0xE1F JUMPI JUMPDEST POP POP DUP1 PUSH1 0xCE SLOAD AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xE12 JUMPI JUMPDEST PUSH2 0xD35 JUMPI JUMPDEST POP POP SWAP2 SLOAD SWAP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x518D384EC8D284E293CFE22999E2961FCB70FAE686352F14179033225F2AC244 SWAP2 POP PUSH1 0x60 SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP1 DUP4 PUSH1 0x24 SWAP3 PUSH1 0xD0 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x248BB6CD PUSH1 0xE2 SHL DUP3 MSTORE DUP12 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP5 SWAP3 DUP2 PUSH2 0xDF6 JUMPI JUMPDEST POP PUSH2 0xD6B JUMPI JUMPDEST POP PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD AND SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xDE7 JUMPI JUMPDEST POP PUSH2 0xD88 JUMPI JUMPDEST DUP1 PUSH2 0xD65 JUMP JUMPDEST DUP4 SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6322A5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH2 0xDD3 JUMPI JUMPDEST DUP1 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xDDC SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x7CA JUMPI DUP4 CODESIZE PUSH2 0xDCD JUMP JUMPDEST PUSH2 0x100 SWAP2 POP ADD MLOAD ISZERO ISZERO CODESIZE PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xE0B SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x7F2 DUP2 DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0xD5F JUMP JUMPDEST POP DUP1 PUSH1 0xD0 SLOAD AND ISZERO ISZERO PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xEEF JUMPI DUP6 SWAP2 PUSH2 0xEBA JUMPI JUMPDEST POP DUP1 PUSH2 0xE57 JUMPI JUMPDEST POP PUSH2 0xCDD JUMP JUMPDEST DUP3 SWAP4 SWAP5 SWAP3 EXTCODESIZE ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x44 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x675F763 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xEAB JUMPI PUSH2 0xE98 JUMPI JUMPDEST SWAP1 DUP2 DUP1 DUP8 SWAP4 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xEA4 SWAP1 SWAP6 SWAP2 SWAP6 PUSH2 0x1EAE JUMP JUMPDEST SWAP4 CODESIZE PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0xEE7 JUMPI JUMPDEST DUP2 PUSH2 0xED4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEE3 JUMPI MLOAD CODESIZE PUSH2 0xE4A JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD PUSH2 0xF1C DUP2 SLOAD PUSH2 0x22A7 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xC81 JUMP JUMPDEST POP PUSH1 0x33 SLOAD DUP3 AND CALLER EQ PUSH2 0xC37 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0xF4A PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH2 0xF62 CALLDATASIZE PUSH2 0x1F1C JUMP JUMPDEST SWAP1 PUSH2 0xF6B PUSH2 0x1F32 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0xF9A JUMPI JUMPDEST PUSH2 0xF7D SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0xF88 DUP3 ISZERO ISZERO PUSH2 0x225B JUMP JUMPDEST DUP3 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0xF74 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x100A PUSH2 0x1F32 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x1049 JUMPI JUMPDEST PUSH2 0x101C SWAP1 PUSH2 0x25D6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP2 AND PUSH1 0xA0 SWAP2 DUP3 SHR PUSH1 0xFF AND ISZERO SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0xD2 SLOAD DUP2 GT ISZERO PUSH2 0x1013 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH2 0x160 SWAP2 PUSH2 0x1093 PUSH2 0x1E49 JUMP JUMPDEST DUP2 PUSH2 0x140 DUP5 MLOAD PUSH2 0x10A2 DUP2 PUSH2 0x1E91 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x10FD DUP2 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA DUP5 SLOAD SWAP5 DUP6 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO DUP3 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1205 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x129D PUSH2 0x1E49 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xCB DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x12C9 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x12D1 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCF SLOAD AND OR PUSH1 0xCF SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH2 0x131C CALLDATASIZE PUSH2 0x1F1C JUMP JUMPDEST SWAP1 PUSH2 0x1325 PUSH2 0x1F32 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x64 DUP3 LT PUSH2 0x1398 JUMPI PUSH2 0x2710 DUP2 GT PUSH2 0x1347 JUMPI PUSH1 0xD6 SSTORE PUSH1 0xD7 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D6178206D756C7469706C696572206D757374206265206174206D6F73742031 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x605C60F PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4D696E206D756C7469706C696572206D757374206265206174206C6561737420 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x605C62F PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178206D7573742062652067726561746572207468616E206D696E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1487 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x157E JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH2 0x152B PUSH2 0x1515 DUP5 PUSH2 0x2553 JUMP JUMPDEST SWAP4 PUSH2 0x1523 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1EDE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x2553 JUMP JUMPDEST DUP4 DUP4 ADD SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x155E JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x154F JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x159C PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x15A7 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND DUP1 ISZERO PUSH2 0x16BB JUMPI PUSH2 0x15C4 DUP4 ISZERO ISZERO PUSH2 0x225B JUMP JUMPDEST PUSH2 0x15CF PUSH1 0xD2 SLOAD PUSH2 0x22A7 JUMP JUMPDEST SWAP4 DUP5 PUSH1 0xD2 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x80 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x16A7 JUMPI PUSH1 0x20 SWAP8 PUSH32 0xAF31016049A06640F36FA55E20D2A8C9809BBDADF9FD3327A7763E5AA652346E SWAP6 SWAP4 DUP9 SWAP8 SWAP6 SWAP4 PUSH1 0x2 SWAP4 PUSH1 0x40 MSTORE DUP5 MSTORE PUSH2 0x167A DUP11 DUP6 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x40 DUP7 ADD SWAP3 DUP9 DUP5 MSTORE PUSH1 0x40 PUSH1 0x60 DUP9 ADD SWAP6 TIMESTAMP DUP8 MSTORE DUP13 DUP2 MSTORE PUSH1 0xCC DUP16 MSTORE KECCAK256 SWAP7 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP8 SLOAD AND OR DUP7 SSTORE MLOAD ISZERO ISZERO DUP6 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1715 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEB6 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xEB6 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1741 DUP2 PUSH2 0x1F00 JUMP JUMPDEST PUSH2 0x174E PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1EDE JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 SWAP5 DUP6 DUP4 ADD SWAP4 CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0xEB6 JUMPI DUP1 PUSH1 0x24 DUP9 SWAP4 ADD DUP7 CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP1 PUSH2 0x17A9 ADDRESS DUP4 EQ ISZERO PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x17C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 DUP5 SLOAD AND EQ PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x17CE PUSH2 0x1F32 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1806 JUMPI POP POP POP POP PUSH2 0x2EF SWAP2 POP PUSH2 0x2095 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x19C9 JUMPI JUMPDEST POP PUSH2 0x188A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1972 JUMPI PUSH2 0x189C DUP3 PUSH2 0x2095 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x196A JUMPI JUMPDEST PUSH2 0x18D9 JUMPI JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x1956 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x18EB DUP8 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1961 JUMPI RETURNDATASIZE PUSH2 0x193A DUP2 PUSH2 0x1F00 JUMP JUMPDEST SWAP1 PUSH2 0x1948 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2125 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP5 PUSH2 0x18D1 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2125 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x19F5 JUMPI JUMPDEST PUSH2 0x19E1 DUP2 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19F1 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1829 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x19D7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1A16 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD5 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1A57 PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x1A5F PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xCD SLOAD AND OR PUSH1 0xCD SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 PUSH1 0xD6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0xD6 SLOAD PUSH1 0xD7 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x157E JUMPI PUSH2 0x1ADB PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x1B12 ADDRESS DUP3 EQ ISZERO PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0x1B2F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x1B37 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x1C9A JUMPI DUP4 PUSH1 0x40 MSTORE DUP7 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1B93 JUMPI POP POP POP POP PUSH2 0x2EF SWAP2 POP PUSH2 0x2095 JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x1C6B JUMPI JUMPDEST POP PUSH2 0x1C17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x1972 JUMPI PUSH2 0x1C29 DUP3 PUSH2 0x2095 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C64 JUMPI PUSH2 0x18D9 JUMPI POP POP POP POP POP DUP1 RETURN JUMPDEST POP DUP1 PUSH2 0x18CC JUMP JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C93 JUMPI JUMPDEST PUSH2 0x1C83 DUP2 DUP4 PUSH2 0x1EDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x19F1 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1BB6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C79 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0xA0 SWAP2 PUSH2 0x1CCD PUSH2 0x1E49 JUMP JUMPDEST DUP2 PUSH1 0x80 DUP5 MLOAD PUSH2 0x1CDB DUP2 PUSH2 0x1E5F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 DUP6 SHL SUB AND DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1D0C DUP2 PUSH2 0x1E5F JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x80 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xCE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP6 MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x1DFE PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x1E06 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD1 SLOAD AND OR PUSH1 0xD1 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x157E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x157E JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8D3 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x8D3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F46 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x1FDA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x203B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x20CA JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2187 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2139 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2142 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x219A JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x21CA DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x21D8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21EB JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21DB JUMP JUMPDEST ISZERO PUSH2 0x2202 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2262 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576569676874206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x22B6 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x22D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x230E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617374726F6C6F6765722061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x235D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8D3 JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x8D3 JUMPI DUP1 MLOAD PUSH2 0x239D DUP2 PUSH2 0x1F00 JUMP JUMPDEST SWAP3 PUSH2 0x23AB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1EDE JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x8D3 JUMPI PUSH2 0x23C9 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x21D8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x8D3 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x8D3 JUMPI ADD SWAP1 PUSH2 0x140 SWAP3 DUP4 DUP4 DUP3 SUB SLT PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD SWAP4 DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x1E7B JUMPI PUSH1 0x40 MSTORE DUP3 MLOAD DUP5 MSTORE PUSH2 0x241C PUSH1 0x20 DUP5 ADD PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x242D PUSH1 0x40 DUP5 ADD PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x243E PUSH1 0x60 DUP5 ADD PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP3 DUP2 GT PUSH2 0x8D3 JUMPI DUP2 PUSH2 0x245B SWAP2 DUP6 ADD PUSH2 0x2387 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x8D3 JUMPI PUSH2 0x2477 SWAP2 DUP4 ADD PUSH2 0x2387 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x8D3 JUMPI DUP4 ADD MSTORE PUSH2 0x120 DUP1 SWAP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x22B6 JUMPI JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO PUSH2 0x24FE JUMPI DUP1 ISZERO PUSH2 0x24F7 JUMPI PUSH1 0xD6 SLOAD PUSH1 0xD7 SLOAD SWAP1 DUP2 DUP2 SUB SWAP1 DUP2 GT PUSH2 0x22B6 JUMPI DUP1 DUP4 MUL SWAP3 DUP4 DIV SUB PUSH2 0x22B6 JUMPI PUSH1 0x64 PUSH2 0x23C9 SWAP3 DIV SWAP1 PUSH2 0x24B2 JUMP JUMPDEST POP PUSH1 0xD7 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0xD6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5F DUP2 LT ISZERO PUSH2 0x254D JUMPI PUSH1 0x5A DUP2 LT ISZERO PUSH2 0x2547 JUMPI PUSH1 0x55 DUP2 LT ISZERO PUSH2 0x2541 JUMPI PUSH1 0x50 DUP2 LT ISZERO PUSH2 0x253B JUMPI PUSH1 0x4B GT ISZERO PUSH2 0x2536 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1E7B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SWAP2 PUSH1 0xD2 SLOAD SWAP3 JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2585 JUMPI POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ SWAP2 DUP3 PUSH2 0x25C5 JUMPI JUMPDEST POP POP PUSH2 0x25BE JUMPI PUSH2 0x25B9 SWAP1 PUSH2 0x22A7 JUMP JUMPDEST PUSH2 0x2574 JUMP JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 POP KECCAK256 SLOAD PUSH1 0xA0 SHR AND CODESIZE DUP1 PUSH2 0x25AA JUMP JUMPDEST ISZERO PUSH2 0x25DD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081B5BD91D5B19481251 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA2646970667358221220AD 0x1E 0xCB EXP 0x5D 0xDA 0x29 0x5C PUSH1 0xE9 0xB9 SWAP8 0xC4 CODECOPY CREATE2 DUP4 PUSH9 0x63B2EEB6D4A970F6D1 PUSH23 0xC57F8F4CBE64736F6C6343000811003300000000000000 ","sourceMap":"502:14413:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;-1:-1:-1;;;;;502:14413:11;;;;;;:::i;:::-;;;;1451:59;502:14413;;;;;1451:59;502:14413;1451:59;;502:14413;;1451:59;;;;502:14413;;1451:59;;502:14413;;1451:59;;502:14413;1451:59;;;502:14413;1451:59;;;502:14413;1451:59;;;;502:14413;1451:59;;;;502:14413;1451:59;502:14413;1451:59;;;;502:14413;1451:59;;502:14413;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:31;502:14413;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;502:14413:11;;2402:22:0;502:14413:11;;2496:8:0;;;:::i;:::-;502:14413:11;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;1303:62:0;;:::i;:::-;502:14413:11;;13471:25;502:14413;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14413:11;;;;;;-1:-1:-1;;;;;502:14413:11;;12942:40;502:14413;;;12942:40;502:14413;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;;;-1:-1:-1;;;;;502:14413:11;;:::i;:::-;;;;1516:57;502:14413;;;;;1516:57;502:14413;1516:57;;502:14413;1516:57;;;;502:14413;;;1516:57;;502:14413;1516:57;;502:14413;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14413:11;;;;;;-1:-1:-1;;;;;502:14413:11;;12804:36;502:14413;;;12804:36;502:14413;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;11764:50;;502:14413;;-1:-1:-1;;;;;502:14413:11;;:::i;:::-;;;;11764:16;502:14413;;;11764:50;502:14413;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;;;;;;;;;;;;;;1513:6:0;502:14413:11;;6722:10;:21;:55;;;;502:14413;6714:80;;;:::i;:::-;6804:64;-1:-1:-1;;;;;502:14413:11;;6812:25;;6804:64;:::i;:::-;502:14413;;;;;;;;;6911:16;502:14413;;;;;;6985:15;502:14413;;;;;7060:23;;;;;502:14413;;;7114:22;;;;;502:14413;;;7166:25;;;502:14413;7249:61;502:14413;;7249:38;;;;:::i;:::-;:61;:::i;:::-;7224:22;;;502:14413;7380:22;;;;502:14413;;;;;;;;;;;;;;;7405:44;;;;:::i;:::-;7380:73;;502:14413;;;7489:21;;502:14413;;;;;;;;;;;;;;;;;7513:42;;;;:::i;:::-;502:14413;7463:23;;502:14413;;;;;7598:24;502:14413;;;;;;;;;;;;;;;;;7625:48;502:14413;;;;;;7625:48;:::i;:::-;7598:79;;7224:22;7569:26;;502:14413;;;;7724:23;7757;;7380:22;7791:158;;7598:79;7489:21;7958:155;;7598:79;502:14413;;;8122:166;;7598:79;-1:-1:-1;8324:15:11;;;;8342:25;;;:::i;:::-;502:14413;8298:23;;502:14413;;;;8765:14;8532:54;502:14413;8381:24;;502:14413;;;;8532:54;:::i;:::-;8503:26;;;;502:14413;;;8661:48;502:14413;;8661:48;:::i;:::-;502:14413;8634:24;;502:14413;8740:15;8720:17;;;502:14413;8765:14;502:14413;;-1:-1:-1;;502:14413:11;;;;;8838:17;502:14413;;;-1:-1:-1;;;;;502:14413:11;;8834:315;;8324:47;-1:-1:-1;9200:16:11;502:14413;-1:-1:-1;;;;;502:14413:11;9200:30;;;;:66;;8324:47;9196:640;;8324:47;-1:-1:-1;;502:14413:11;;;;;;;;;;;;;;;;;;;9981:138;;502:14413;;;;;-1:-1:-1;;;;;502:14413:11;;;9851:115;;502:14413;;9851:115;502:14413;;;7463:23;;502:14413;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9981:138;;502:14413;;9196:640;9306:18;502:14413;;;-1:-1:-1;;;9286:73:11;;-1:-1:-1;;;;;502:14413:11;;;;9286:73;;502:14413;;;;;;;;;;;;9286:73;;;;;;;9196:640;9282:544;;;9196:640;;;;9282:544;502:14413;9439:23;;502:14413;-1:-1:-1;;;;;502:14413:11;;9439:37;;;;;:59;;9282:544;9435:289;;9282:544;9435:289;502:14413;;9599:106;;;;;502:14413;;-1:-1:-1;;;9599:106:11;;-1:-1:-1;;;;;502:14413:11;;;;;9599:106;;502:14413;;;;;;;;;;;;;;;;9599:106;;;;;;;;9435:289;;9282:544;;9599:106;;;;;;;;;:::i;:::-;502:14413;;9599:106;;;;;;;502:14413;;;;9599:106;502:14413;;971:66:3;502:14413:11;;971:66:3;;;;9599:106:11;502:14413;;;9439:59;9480:18;;;;502:14413;;;9439:59;;;9286:73;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;9200:66;-1:-1:-1;9234:18:11;502:14413;-1:-1:-1;;;;;502:14413:11;9234:32;;9200:66;;8834:315;502:14413;;-1:-1:-1;;;8908:66:11;;-1:-1:-1;;;;;502:14413:11;;;8908:66;;502:14413;;;;;8908:66;;;;;;;;;;;;8834:315;8992:16;;8988:151;;8834:315;;;;8988:151;502:14413;;9028:96;;;;;502:14413;;;;;;971:66:3;;;;;;;;9028:96:11;;502:14413;9028:96;;502:14413;;;;;9028:96;;;;;;;;8988:151;;;;9028:96;;;;:::i;:::-;502:14413;;9028:96;;;;8908:66;;;;502:14413;8908:66;;502:14413;8908:66;;;;;;502:14413;8908:66;;;:::i;:::-;;;502:14413;;;;;;;8908:66;;;502:14413;;;;8908:66;;;-1:-1:-1;8908:66:11;;;502:14413;;971:66:3;502:14413:11;;971:66:3;;;;8324:47:11;;;;;;8122:166;502:14413;;;7224:22;502:14413;;;;;;;;;;;;;8166:45;;;;:::i;:::-;502:14413;;;;;;;;;8122:166;;;502:14413;-1:-1:-1;;;502:14413:11;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;7958:155;502:14413;;;;;;;;;;7224:22;502:14413;;;;;;;7999:42;;;;:::i;:::-;502:14413;7224:22;502:14413;;;;;;;7958:155;;;;502:14413;-1:-1:-1;;;502:14413:11;;;;;;;;7791:158;502:14413;;;;;;;;;;;;;;;;;;;;;7922:16;502:14413;7791:158;;;;7598:79;;;;;7489:70;;;;;7380:73;;;;;;6722:55;:10;6714:80;6747:30;6722:10;6747:30;:::i;:::-;6722:55;;;;502:14413;;;;;;;;;;;;;1726:24;502:14413;;;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;;;;;;;;;;;;1756:33;502:14413;;;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:14:5;3347:34;;;;;;502:14413:11;3346:108:5;;;;502:14413:11;;;;-1:-1:-1;;502:14413:11;;;;;;;3562:65:5;;502:14413:11;;5366:69:5;502:14413:11;;;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;1195:12:0;929:10:8;1195:12:0;:::i;:::-;502:14413:11;;;5366:69:5;502:14413:11;;;;;5366:69:5;:::i;:::-;-1:-1:-1;;;;;502:14413:11;;;;;3105:38;502:14413;;;3105:38;502:14413;;3153:36;502:14413;;;3153:36;502:14413;;3199:22;502:14413;;;3199:22;502:14413;;3231:31;502:14413;;3231:31;502:14413;3298:34;502:14413;;3298:34;502:14413;;;3368:48;502:14413;;;3426:36;502:14413;3494:1;3472:23;502:14413;3553:4;3527:30;502:14413;3620:3;3594:29;502:14413;3647:99:5;;502:14413:11;;;3647:99:5;502:14413:11;;;;;3721:14:5;502:14413:11;;;;;;3721:14:5;502:14413:11;;3562:65:5;-1:-1:-1;;502:14413:11;;;;;3562:65:5;;;502:14413:11;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;3346:108:5;3426:4;;1713:19:7;:23;3387:66:5;;3346:108;3387:66;502:14413:11;;;;;3436:17:5;3346:108;;3347:34;502:14413:11;;;;;3365:16:5;3347:34;;502:14413:11;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;;;;;;;;;;;4473:21;502:14413;-1:-1:-1;;;;;502:14413:11;;;;;4459:10;:35;:60;;;;502:14413;4451:85;;;:::i;:::-;502:14413;4554:25;4546:64;4554:25;;;4546:64;:::i;:::-;502:14413;;;4653:16;502:14413;;;;;4743:23;;;;:25;502:14413;;4743:25;:::i;:::-;502:14413;;4827:22;;;502:14413;4827:24;502:14413;;4827:24;:::i;:::-;502:14413;;;4870:69;;502:14413;;5028:25;;502:14413;5056:3;502:14413;;;;;;5056:3;502:14413;;;;;;;5027:58;;;;;:::i;:::-;5000:24;5173:55;502:14413;5000:24;;502:14413;;;;5173:55;:::i;:::-;5283:14;5144:26;;;502:14413;;;;5258:15;5238:17;;;502:14413;5283:14;502:14413;;;;;;;;;;5356:17;502:14413;;5356:31;;5352:315;;502:14413;;;;5718:16;502:14413;;5718:30;;;;:66;;;502:14413;5714:563;;502:14413;-1:-1:-1;;502:14413:11;;;;;;;;;;;;;;;;;;;;6292:115;;-1:-1:-1;502:14413:11;;6292:115;502:14413;;5714:563;502:14413;;;;5824:18;502:14413;;;;971:66:3;;;;;;;5804:73:11;;;502:14413;5804:73;;502:14413;5804:73;;;;;;;5714:563;5800:467;;;5714:563;;;;5800:467;502:14413;5957:23;;502:14413;;5957:37;;;;:59;;;;5800:467;5953:212;;;5800:467;;;;5953:212;502:14413;;6040:106;;;;;502:14413;;-1:-1:-1;;;6040:106:11;;-1:-1:-1;;;;;502:14413:11;;;;;6040:106;;502:14413;;;;;;;;;;;;;;;;6040:106;;;;;;;;5953:212;;;;6040:106;;;;:::i;:::-;502:14413;;6040:106;;;;5957:59;5998:18;;;;502:14413;;;5957:59;;;5804:73;;;;;;;;;;;;;;:::i;:::-;;;;;5718:66;502:14413;;5752:18;502:14413;;5752:32;;5718:66;;5352:315;502:14413;;-1:-1:-1;;;5426:66:11;;502:14413;5426:66;;502:14413;;;;;;;5426:66;;;;;;;;;;;;5352:315;5510:16;;5506:151;;5352:315;;;;5506:151;5546:96;;;;;;;;502:14413;;;;;971:66:3;;;;;;;;5546:96:11;;502:14413;5546:96;;502:14413;;;;;5546:96;;;;;;;;5506:151;;;;;;;;5546:96;;;;;;;:::i;:::-;;;;;;502:14413;;971:66:3;502:14413:11;;971:66:3;;;;5546:96:11;502:14413;;;5426:66;;;502:14413;5426:66;;;;;;;;;502:14413;5426:66;;;:::i;:::-;;;502:14413;;;;;5426:66;;;502:14413;;;;5426:66;;;-1:-1:-1;5426:66:11;;;502:14413;;971:66:3;502:14413:11;;971:66:3;;;;502:14413:11;-1:-1:-1;;;502:14413:11;;;;;;;;4870:69;502:14413;4901:25;;:27;502:14413;;4901:27;:::i;:::-;502:14413;;4870:69;;4459:60;-1:-1:-1;1513:6:0;502:14413:11;;;4459:10;4498:21;4459:60;;502:14413;;;;;;;-1:-1:-1;;502:14413:11;;;;1303:62:0;;:::i;:::-;502:14413:11;;13344:40;502:14413;;;;;;;;;;;:::i;:::-;1303:62:0;;;:::i;:::-;13992:13:11;;;:42;;;502:14413;13984:72;;;:::i;:::-;14066:56;14074:14;;;14066:56;:::i;:::-;502:14413;;14132:17;502:14413;;14132:35;502:14413;;;14132:35;502:14413;;;13992:42;-1:-1:-1;14022:12:11;502:14413;14009:25;;;13992:42;;502:14413;;;;;;;;;;;;;;1955:34;502:14413;;;;;;;;;;;;;;;;;;;;1513:6:0;502:14413:11;;;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;1303:62:0;;:::i;:::-;13723:13:11;;;:42;;;502:14413;13715:72;;;:::i;:::-;502:14413;;13838:17;502:14413;;;;;;;-1:-1:-1;;;;502:14413:11;;;;;;;;13837:38;502:14413;;;-1:-1:-1;;;502:14413:11;;;;;;13723:42;-1:-1:-1;13753:12:11;502:14413;13740:25;;;13723:42;;502:14413;;;;;;;;;;;;;;1842:27;502:14413;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11467:16;502:14413;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:62:0;;:::i;:::-;2758:6;502:14413:11;;-1:-1:-1;;;;;;502:14413:11;;;;;;;-1:-1:-1;;;;;502:14413:11;2806:40:0;502:14413:11;;2806:40:0;502:14413:11;;;;;;;;;;;;;;;1651:32;502:14413;;;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;;;;;-1:-1:-1;;;;;502:14413:11;;:::i;:::-;;;;11924:15;502:14413;;;11924:43;502:14413;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14413:11;;;;;;-1:-1:-1;;;;;502:14413:11;;13066:22;502:14413;;;13066:22;502:14413;;;;;;;;;;;;;;;;;2092:38;502:14413;;;;;;;;;;;;;;;:::i;:::-;1303:62:0;;;:::i;:::-;14312:31:11;;;502:14413;;;14412:3;14394:21;;502:14413;;14492:5;14474:23;;502:14413;;14557:40;502:14413;14607:40;502:14413;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;14412:3:11;502:14413;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;14412:3:11;502:14413;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2333:6:6;-1:-1:-1;;;;;502:14413:11;2324:4:6;2316:23;502:14413:11;;;;;-1:-1:-1;;;;;;;;;;;502:14413:11;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;502:14413:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:14413:11;;;;;-1:-1:-1;502:14413:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;;;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;502:14413:11;;;;3812:30;;502:14413;;3881:53;3889:11;;;3881:53;:::i;:::-;3945:14;;502:14413;3945:14;:::i;:::-;502:14413;;3945:14;502:14413;;;;;;;;;;;;;;;;;;4230:58;502:14413;;;;;;;;;;;;;4041:173;;;502:14413;;;;4041:173;;502:14413;;;;;4041:173;;;4188:15;;502:14413;;;;;4011:17;502:14413;;;;;;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;;;;4230:58;502:14413;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:14413:11;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1898:6:6;502:14413:11;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;502:14413:11;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;971:66:3;502:14413:11;;;;;;3330:17:3;;;;;;;;:::i;3232:526::-;502:14413:11;;;;;;;;971:66:3;;;3383:63;;;;502:14413:11;3383:63:3;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;502:14413:11;;-1:-1:-1;;;3610:56:3;;502:14413:11;3610:56:3;;971:66;;;;502:14413:11;971:66:3;;502:14413:11;971:66:3;502:14413:11;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;;;;502:14413:11;;;2523:15:3;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;502:14413:11;;2519:123:3;502:14413:11;7318:69:7;502:14413:11;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;7276:25:7;;;;;;502:14413:11;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;7318:69:7;:::i;:::-;;2519:123:3;;;;;;;502:14413:11;;;-1:-1:-1;7318:69:7;:::i;2523:28:3:-;;502:14413:11;2523:28:3;;971:66;502:14413:11;;-1:-1:-1;;;971:66:3;;502:14413:11;971:66:3;;;;;;502:14413:11;971:66:3;;502:14413:11;971:66:3;502:14413:11;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;502:14413:11;;;3383:63:3;;;;;502:14413:11;;;;;;;-1:-1:-1;;502:14413:11;;;;1303:62:0;;:::i;:::-;502:14413:11;;13590:32;502:14413;;;;;;;;;;;;;;;;;1875:37;502:14413;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14413:11;;;;;;-1:-1:-1;;;;;502:14413:11;;12668:38;502:14413;;;12668:38;502:14413;;;;;;;;;;;;;;;;;1995:38;502:14413;;;;;;;;;;;;;;;;;;;;;14767:23;502:14413;14792:23;502:14413;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;502:14413:11;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;502:14413:11;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;502:14413:11;;;;;;;;;;;;;;;;;;;;;;;971:66:3;502:14413:11;;3232:526:3;502:14413:11;;;3330:17:3;;;;;;;;:::i;3232:526::-;502:14413:11;;;;;;;;971:66:3;;;3383:63;;;;502:14413:11;3383:63:3;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;502:14413:11;;-1:-1:-1;;;3610:56:3;;502:14413:11;3610:56:3;;971:66;;;;;;;502:14413:11;971:66:3;502:14413:11;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;;;;502:14413:11;;;2523:15:3;;;:28;;;2519:123;;3232:526;;;;;502:14413:11;;2523:28:3;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;502:14413:11;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11620:15;502:14413;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:31;502:14413;;;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;;;;;;1579:61;502:14413;;;;;1579:61;;502:14413;1579:61;;502:14413;1579:61;;502:14413;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;502:14413:11;;;;;;-1:-1:-1;;;;;502:14413:11;;13196:46;502:14413;;;13196:46;502:14413;;;;;;;;;;;;;;;;;1795:36;502:14413;-1:-1:-1;;;;;502:14413:11;;;;;;;;;;-1:-1:-1;;;;;502:14413:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;502:14413:11;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;1599:130:0:-;1513:6;502:14413:11;-1:-1:-1;;;;;502:14413:11;929:10:8;1662:23:0;502:14413:11;;1599:130:0:o;502:14413:11:-;;;;971:66:3;;;502:14413:11;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;502:14413:11;;-1:-1:-1;;;;;502:14413:11;;;-1:-1:-1;;;;;;502:14413:11;;;;;;;;;;2806:40:0;-1:-1:-1;;2806:40:0;2666:187::o;502:14413:11:-;;;;:::o;:::-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;1699:281:3;1713:19:7;;:23;502:14413:11;;-1:-1:-1;;;;;;;;;;;502:14413:11;;-1:-1:-1;;;;;;502:14413:11;-1:-1:-1;;;;;502:14413:11;;;;;;;;;1699:281:3:o;502:14413:11:-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;7682:628:7;;;;7886:418;;;502:14413:11;;;7917:22:7;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;502:14413:11;;8212:17:7;:::o;502:14413:11:-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;;;;7886:418:7;502:14413:11;;;;-1:-1:-1;8991:21:7;:17;;9163:142;;;;;;;8987:379;502:14413:11;;;971:66:3;;;;;9335:20:7;;502:14413:11;9335:20:7;;;502:14413:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;502:14413:11;;;9335:20:7;;;;502:14413:11;;;;;;;;-1:-1:-1;;502:14413:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:14413:11;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:14413:11;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;10132:781::-;10404:3;10391:16;;;10387:95;;10504:14;;10500:95;;10709:23;502:14413;10735:23;502:14413;;;;;;;;;;;;;;;;;;;10404:3;10860:46;502:14413;;10860:46;;:::i;10500:95::-;502:14413;10541:23;502:14413;10534:30;:::o;10387:95::-;502:14413;10430:23;502:14413;10423:30;:::o;10919:429::-;11030:2;11017:15;;;11013:29;;11090:2;11077:15;;;11073:29;;11150:2;11137:15;;;11133:29;;11212:2;11199:15;;;11195:29;;11278:2;-1:-1:-1;11265:15:11;11261:29;;11330:1;10919:429;:::o;11261:29::-;11289:1;11282:8;:::o;11195:29::-;11216:8;11223:1;11216:8;:::o;11133:29::-;11154:8;11161:1;11154:8;:::o;11073:29::-;11094:8;11101:1;11094:8;:::o;11013:29::-;11034:8;11041:1;11034:8;:::o;502:14413::-;;;;;;;;;;;:::o;12265:310::-;12366:1;12354:13;502:14413;12374:12;502:14413;12349:198;12369:17;;;;;;;12556:12;;;;-1:-1:-1;12265:310:11;:::o;12388:3::-;-1:-1:-1;502:14413:11;;;12411:17;502:14413;;;;;;;-1:-1:-1;;;;;502:14413:11;;;;;12411:47;;;:80;;12388:3;12407:130;;;;12388:3;;;:::i;:::-;12354:13;;12407:130;12511:11;;;;;:::o;12411:80::-;502:14413;;;;;;;;12411:80;;;;502:14413;;;;:::o;:::-;;;-1:-1:-1;;;502:14413:11;;;;;;;;;;;;-1:-1:-1;;;502:14413:11;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1967200","executionCost":"infinite","totalCost":"infinite"},"external":{"addPredictionModule(address,uint256)":"121712","astroTokenLauncher()":"2950","astrologerManager()":"2708","buyTokenContract()":"2356","getReputationMultiplier(address)":"3155","getReputationMultiplierRange()":"4516","getReputationScore(address)":"infinite","getReputationTier(address)":"2825","getScoreBreakdown(address)":"infinite","getTopAstrologers(uint256)":"infinite","initialize(address,address,address,uint256,uint256)":"infinite","maxReputationMultiplier()":"2420","minPredictionsForScore()":"2464","minReputationMultiplier()":"2618","owner()":"2818","predictionModules(uint256)":"6687","proxiableUUID()":"infinite","renounceOwnership()":"28514","reputationDecayRate()":"2816","reputationScores(address)":"24577","scoreBreakdowns(address)":"11698","scoreUpdateDelay()":"3124","setAstroTokenLauncher(address)":"27421","setAstrologerManager(address)":"26805","setBuyTokenContract(address)":"27377","setMinPredictionsForScore(uint256)":"25008","setReputationDecayRate(uint256)":"24634","setReputationMultipliers(uint256,uint256)":"46958","setScoreUpdateDelay(uint256)":"25228","setWorldPredictionMarket(address)":"26651","setZodiacDAO(address)":"27003","togglePredictionModule(uint256)":"29344","totalModules()":"2750","transferOwnership(address)":"29062","updateModuleWeight(uint256,uint256)":"27338","updateReputationFromWorldPrediction(address,bool)":"infinite","updateReputationScore(address,uint256,uint256,uint256,uint256,uint256,uint256)":"infinite","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite","worldPredictionMarket()":"2279","zodiacDAO()":"2972"},"internal":{"_authorizeUpgrade(address)":"infinite","calculateReputationMultiplier(uint256)":"4423","calculateReputationTier(uint256)":"138","isPredictionModule(address)":"infinite"}},"methodIdentifiers":{"addPredictionModule(address,uint256)":"51131876","astroTokenLauncher()":"ab3dcd6a","astrologerManager()":"6fd31a41","buyTokenContract()":"16d54f09","getReputationMultiplier(address)":"b107e88c","getReputationMultiplierRange()":"3d9617be","getReputationScore(address)":"75a67d5c","getReputationTier(address)":"6be2cefb","getScoreBreakdown(address)":"2c27750a","getTopAstrologers(uint256)":"5245420d","initialize(address,address,address,uint256,uint256)":"a6b63eb8","maxReputationMultiplier()":"430cd57a","minPredictionsForScore()":"450f1442","minReputationMultiplier()":"5df4d161","owner()":"8da5cb5b","predictionModules(uint256)":"10d4f374","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","reputationDecayRate()":"960e6f88","reputationScores(address)":"fe0438b2","scoreBreakdowns(address)":"dc0a40bd","scoreUpdateDelay()":"f92eadf6","setAstroTokenLauncher(address)":"e2c3538c","setAstrologerManager(address)":"44cda485","setBuyTokenContract(address)":"c3a274c2","setMinPredictionsForScore(uint256)":"9f68871d","setReputationDecayRate(uint256)":"4cba103e","setReputationMultipliers(uint256,uint256)":"58bd9b93","setScoreUpdateDelay(uint256)":"e6f95583","setWorldPredictionMarket(address)":"106bdcf5","setZodiacDAO(address)":"65af67bd","togglePredictionModule(uint256)":"893849de","totalModules()":"78bbd701","transferOwnership(address)":"f2fde38b","updateModuleWeight(uint256,uint256)":"9754cfd1","updateReputationFromWorldPrediction(address,bool)":"9f7c4688","updateReputationScore(address,uint256,uint256,uint256,uint256,uint256,uint256)":"adcbcde5","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","worldPredictionMarket()":"02bc7f4a","zodiacDAO()":"ab76c9ed"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"moduleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"PredictionModuleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"ReputationScoreUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dailyAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oneToOneAccuracy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weightedScore\",\"type\":\"uint256\"}],\"name\":\"ScoreBreakdownUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"addPredictionModule\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astroTokenLauncher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astrologerManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReputationMultiplierRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationScore\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOnePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct ReputationScorer.ReputationScore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationTier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getScoreBreakdown\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"marketAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOneAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightedScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationTier\",\"type\":\"uint256\"}],\"internalType\":\"struct ReputationScorer.ScoreBreakdown\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"getTopAstrologers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyTokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zodiacDAO\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPredictionsForScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scoreUpdateDelay\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReputationMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPredictionsForScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minReputationMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictionModules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationDecayRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reputationScores\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOnePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"scoreBreakdowns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marketAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOneAccuracy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weightedScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationTier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scoreUpdateDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astroTokenLauncher\",\"type\":\"address\"}],\"name\":\"setAstroTokenLauncher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"}],\"name\":\"setAstrologerManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyTokenContract\",\"type\":\"address\"}],\"name\":\"setBuyTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minPredictions\",\"type\":\"uint256\"}],\"name\":\"setMinPredictionsForScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_decayRate\",\"type\":\"uint256\"}],\"name\":\"setReputationDecayRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minMultiplier\",\"type\":\"uint256\"}],\"name\":\"setReputationMultipliers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"setScoreUpdateDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_worldPredictionMarket\",\"type\":\"address\"}],\"name\":\"setWorldPredictionMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zodiacDAO\",\"type\":\"address\"}],\"name\":\"setZodiacDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_moduleId\",\"type\":\"uint256\"}],\"name\":\"togglePredictionModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalModules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_moduleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newWeight\",\"type\":\"uint256\"}],\"name\":\"updateModuleWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_wasCorrect\",\"type\":\"bool\"}],\"name\":\"updateReputationFromWorldPrediction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_marketPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marketAccurate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dailyPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dailyAccurate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oneToOnePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oneToOneAccurate\",\"type\":\"uint256\"}],\"name\":\"updateReputationScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"worldPredictionMarket\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zodiacDAO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReputationScorer.sol\":\"ReputationScorer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary CountersUpgradeable {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/ReputationScorer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"./interfaces/IAstrologerManager.sol\\\";\\nimport \\\"./interfaces/IBuyTokenContract.sol\\\";\\nimport \\\"./interfaces/IAstroTokenLauncher.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\\\";\\n\\ncontract ReputationScorer is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using CountersUpgradeable for CountersUpgradeable.Counter;\\n\\n    CountersUpgradeable.Counter private _scoreIds;\\n    \\n    struct ReputationScore {\\n        uint256 id;\\n        address astrologer;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 accuracyPercentage;\\n        uint256 reputationMultiplier;\\n        uint256 marketPredictions;\\n        uint256 dailyPredictions;\\n        uint256 oneToOnePredictions;\\n        uint256 lastUpdated;\\n        bool isActive;\\n    }\\n\\n    struct ScoreBreakdown {\\n        uint256 marketAccuracy;\\n        uint256 dailyAccuracy;\\n        uint256 oneToOneAccuracy;\\n        uint256 weightedScore;\\n        uint256 reputationTier;\\n    }\\n\\n    struct PredictionModule {\\n        address contractAddress;\\n        bool isActive;\\n        uint256 weight;\\n        uint256 lastUpdate;\\n    }\\n\\n    mapping(address => ReputationScore) public reputationScores;\\n    mapping(address => ScoreBreakdown) public scoreBreakdowns;\\n    mapping(uint256 => PredictionModule) public predictionModules;\\n    \\n    address public astrologerManager;\\n    address public buyTokenContract;\\n    address public zodiacDAO;\\n    address public astroTokenLauncher;\\n    address public worldPredictionMarket;\\n    \\n    uint256 public totalModules;\\n    uint256 public minPredictionsForScore;\\n    uint256 public scoreUpdateDelay;\\n    uint256 public reputationDecayRate;\\n    uint256 public maxReputationMultiplier; // Maximum reputation multiplier (e.g., 5000 = 5.0x)\\n    uint256 public minReputationMultiplier; // Minimum reputation multiplier (e.g., 200 = 0.2x)\\n    \\n    event ReputationScoreUpdated(\\n        address indexed astrologer,\\n        uint256 oldAccuracy,\\n        uint256 newAccuracy,\\n        uint256 newMultiplier\\n    );\\n\\n    event PredictionModuleAdded(\\n        uint256 indexed moduleId,\\n        address contractAddress,\\n        uint256 weight\\n    );\\n\\n    event ScoreBreakdownUpdated(\\n        address indexed astrologer,\\n        uint256 marketAccuracy,\\n        uint256 dailyAccuracy,\\n        uint256 oneToOneAccuracy,\\n        uint256 weightedScore\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _buyTokenContract,\\n        address _zodiacDAO,\\n        uint256 _minPredictionsForScore,\\n        uint256 _scoreUpdateDelay\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        buyTokenContract = _buyTokenContract;\\n        zodiacDAO = _zodiacDAO;\\n        astroTokenLauncher = address(0); // Will be set separately\\n        worldPredictionMarket = address(0); // Will be set separately\\n        minPredictionsForScore = _minPredictionsForScore;\\n        scoreUpdateDelay = _scoreUpdateDelay;\\n        reputationDecayRate = 5; // 5% decay per month\\n        maxReputationMultiplier = 5000; // 5.0x maximum multiplier\\n        minReputationMultiplier = 200; // 0.2x minimum multiplier\\n    }\\n\\n    function addPredictionModule(\\n        address _contractAddress,\\n        uint256 _weight\\n    ) external onlyOwner returns (uint256) {\\n        require(_contractAddress != address(0), \\\"Invalid contract address\\\");\\n        require(_weight > 0, \\\"Weight must be greater than 0\\\");\\n\\n        totalModules++;\\n        uint256 moduleId = totalModules;\\n\\n        predictionModules[moduleId] = PredictionModule({\\n            contractAddress: _contractAddress,\\n            isActive: true,\\n            weight: _weight,\\n            lastUpdate: block.timestamp\\n        });\\n\\n        emit PredictionModuleAdded(moduleId, _contractAddress, _weight);\\n        return moduleId;\\n    }\\n\\n    function updateReputationFromWorldPrediction(\\n        address _astrologer,\\n        bool _wasCorrect\\n    ) external {\\n        require(msg.sender == worldPredictionMarket || msg.sender == owner(), \\\"Unauthorized\\\");\\n        require(_astrologer != address(0), \\\"Invalid astrologer address\\\");\\n\\n        ReputationScore storage score = reputationScores[_astrologer];\\n        \\n        // Update world prediction counts\\n        score.marketPredictions++; // World predictions count as market predictions\\n        score.totalPredictions++;\\n        \\n        if (_wasCorrect) {\\n            score.accuratePredictions++;\\n        }\\n        \\n        // Recalculate accuracy percentage\\n        score.accuracyPercentage = (score.accuratePredictions * 100) / score.totalPredictions;\\n        \\n        // Update reputation multiplier\\n        score.reputationMultiplier = calculateReputationMultiplier(score.accuracyPercentage);\\n        score.lastUpdated = block.timestamp;\\n        score.isActive = true;\\n\\n        // Update astrologer manager\\n        if (astrologerManager != address(0)) {\\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(_astrologer);\\n            if (astrologerId > 0) {\\n                IAstrologerManager(astrologerManager).updateReputation(astrologerId, score.reputationMultiplier);\\n            }\\n        }\\n\\n        // Update buy token contract\\n        if (buyTokenContract != address(0) && astroTokenLauncher != address(0)) {\\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.isActive) {\\n                    IBuyTokenContract(buyTokenContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\\n                }\\n            } catch {\\n                // Token not found or error occurred, skip update\\n            }\\n        }\\n\\n        emit ReputationScoreUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\\n    }\\n\\n    function updateReputationScore(\\n        address _astrologer,\\n        uint256 _marketPredictions,\\n        uint256 _marketAccurate,\\n        uint256 _dailyPredictions,\\n        uint256 _dailyAccurate,\\n        uint256 _oneToOnePredictions,\\n        uint256 _oneToOneAccurate\\n    ) external {\\n        require(msg.sender == owner() || isPredictionModule(msg.sender), \\\"Unauthorized\\\");\\n        require(_astrologer != address(0), \\\"Invalid astrologer address\\\");\\n\\n        ReputationScore storage score = reputationScores[_astrologer];\\n        ScoreBreakdown storage breakdown = scoreBreakdowns[_astrologer];\\n\\n        // Update prediction counts\\n        score.marketPredictions = _marketPredictions;\\n        score.dailyPredictions = _dailyPredictions;\\n        score.oneToOnePredictions = _oneToOnePredictions;\\n        score.totalPredictions = _marketPredictions + _dailyPredictions + _oneToOnePredictions;\\n\\n        // Calculate accuracies\\n        breakdown.marketAccuracy = _marketPredictions > 0 ? (_marketAccurate * 100) / _marketPredictions : 0;\\n        breakdown.dailyAccuracy = _dailyPredictions > 0 ? (_dailyAccurate * 100) / _dailyPredictions : 0;\\n        breakdown.oneToOneAccuracy = _oneToOnePredictions > 0 ? (_oneToOneAccurate * 100) / _oneToOnePredictions : 0;\\n\\n        // Calculate weighted score\\n        uint256 totalWeight = 0;\\n        uint256 weightedSum = 0;\\n\\n        if (_marketPredictions > 0) {\\n            weightedSum += breakdown.marketAccuracy * 3; // Market predictions weight: 3\\n            totalWeight += 3;\\n        }\\n        if (_dailyPredictions > 0) {\\n            weightedSum += breakdown.dailyAccuracy * 2; // Daily predictions weight: 2\\n            totalWeight += 2;\\n        }\\n        if (_oneToOnePredictions > 0) {\\n            weightedSum += breakdown.oneToOneAccuracy * 4; // One-to-one predictions weight: 4\\n            totalWeight += 4;\\n        }\\n\\n        breakdown.weightedScore = totalWeight > 0 ? weightedSum / totalWeight : 0;\\n        score.accuracyPercentage = breakdown.weightedScore;\\n\\n        // Calculate reputation multiplier based on accuracy\\n        score.reputationMultiplier = calculateReputationMultiplier(breakdown.weightedScore);\\n\\n        // Determine reputation tier\\n        breakdown.reputationTier = calculateReputationTier(breakdown.weightedScore);\\n\\n        score.lastUpdated = block.timestamp;\\n        score.isActive = true;\\n\\n        // Update astrologer manager\\n        if (astrologerManager != address(0)) {\\n            uint256 astrologerId = IAstrologerManager(astrologerManager).getAstrologerId(_astrologer);\\n            if (astrologerId > 0) {\\n                IAstrologerManager(astrologerManager).updateReputation(astrologerId, score.reputationMultiplier);\\n            }\\n        }\\n\\n        // Update buy token contract\\n        if (buyTokenContract != address(0) && astroTokenLauncher != address(0)) {\\n            try IAstroTokenLauncher(astroTokenLauncher).getTokenByAstrologer(_astrologer) returns (IAstroTokenLauncher.TokenInfo memory tokenInfo) {\\n                if (tokenInfo.tokenContract != address(0) && tokenInfo.isActive) {\\n                    // Update the credibility multiplier in BuyTokenContract\\n                    IBuyTokenContract(buyTokenContract).updateCredibility(tokenInfo.tokenContract, score.reputationMultiplier);\\n                }\\n            } catch {\\n                // Token not found or error occurred, skip update\\n            }\\n        }\\n\\n        emit ReputationScoreUpdated(_astrologer, score.accuracyPercentage, score.accuracyPercentage, score.reputationMultiplier);\\n        emit ScoreBreakdownUpdated(_astrologer, breakdown.marketAccuracy, breakdown.dailyAccuracy, breakdown.oneToOneAccuracy, breakdown.weightedScore);\\n    }\\n\\n    function calculateReputationMultiplier(uint256 _accuracy) internal view returns (uint256) {\\n        // Dynamic multiplier based on accuracy percentage\\n        // Formula: minMultiplier + (accuracy * (maxMultiplier - minMultiplier)) / 100\\n        \\n        if (_accuracy >= 100) {\\n            return maxReputationMultiplier; // Cap at maximum\\n        }\\n        \\n        if (_accuracy <= 0) {\\n            return minReputationMultiplier; // Floor at minimum\\n        }\\n        \\n        // Linear interpolation between min and max based on accuracy\\n        uint256 multiplierRange = maxReputationMultiplier - minReputationMultiplier;\\n        uint256 accuracyContribution = (_accuracy * multiplierRange) / 100;\\n        \\n        return minReputationMultiplier + accuracyContribution;\\n    }\\n\\n    function calculateReputationTier(uint256 _accuracy) internal pure returns (uint256) {\\n        if (_accuracy >= 95) return 5; // Master Astrologer\\n        if (_accuracy >= 90) return 4; // Expert Astrologer\\n        if (_accuracy >= 85) return 3; // Advanced Astrologer\\n        if (_accuracy >= 80) return 2; // Intermediate Astrologer\\n        if (_accuracy >= 75) return 1; // Beginner Astrologer\\n        return 0; // Novice\\n    }\\n\\n    function getReputationScore(address _astrologer) external view returns (ReputationScore memory) {\\n        return reputationScores[_astrologer];\\n    }\\n\\n    function getScoreBreakdown(address _astrologer) external view returns (ScoreBreakdown memory) {\\n        return scoreBreakdowns[_astrologer];\\n    }\\n\\n    function getReputationMultiplier(address _astrologer) external view returns (uint256) {\\n        return reputationScores[_astrologer].reputationMultiplier;\\n    }\\n\\n    function getReputationTier(address _astrologer) external view returns (uint256) {\\n        return scoreBreakdowns[_astrologer].reputationTier;\\n    }\\n\\n    function getTopAstrologers(uint256 _limit) external view returns (address[] memory) {\\n        address[] memory topAstrologers = new address[](_limit);\\n        uint256 count = 0;\\n        \\n        // This is a simplified implementation\\n        \\n        return topAstrologers;\\n    }\\n\\n    function isPredictionModule(address _module) internal view returns (bool) {\\n        for (uint256 i = 1; i <= totalModules; i++) {\\n            if (predictionModules[i].contractAddress == _module && predictionModules[i].isActive) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setBuyTokenContract(address _buyTokenContract) external onlyOwner {\\n        buyTokenContract = _buyTokenContract;\\n    }\\n\\n    function setAstroTokenLauncher(address _astroTokenLauncher) external onlyOwner {\\n        astroTokenLauncher = _astroTokenLauncher;\\n    }\\n\\n    function setZodiacDAO(address _zodiacDAO) external onlyOwner {\\n        zodiacDAO = _zodiacDAO;\\n    }\\n\\n    function setWorldPredictionMarket(address _worldPredictionMarket) external onlyOwner {\\n        worldPredictionMarket = _worldPredictionMarket;\\n    }\\n\\n    function setMinPredictionsForScore(uint256 _minPredictions) external onlyOwner {\\n        minPredictionsForScore = _minPredictions;\\n    }\\n\\n    function setScoreUpdateDelay(uint256 _delay) external onlyOwner {\\n        scoreUpdateDelay = _delay;\\n    }\\n\\n    function setReputationDecayRate(uint256 _decayRate) external onlyOwner {\\n        reputationDecayRate = _decayRate;\\n    }\\n\\n    function togglePredictionModule(uint256 _moduleId) external onlyOwner {\\n        require(_moduleId > 0 && _moduleId <= totalModules, \\\"Invalid module ID\\\");\\n        predictionModules[_moduleId].isActive = !predictionModules[_moduleId].isActive;\\n    }\\n\\n    function updateModuleWeight(uint256 _moduleId, uint256 _newWeight) external onlyOwner {\\n        require(_moduleId > 0 && _moduleId <= totalModules, \\\"Invalid module ID\\\");\\n        require(_newWeight > 0, \\\"Weight must be greater than 0\\\");\\n        predictionModules[_moduleId].weight = _newWeight;\\n    }\\n\\n    function setReputationMultipliers(uint256 _maxMultiplier, uint256 _minMultiplier) external onlyOwner {\\n        require(_maxMultiplier > _minMultiplier, \\\"Max must be greater than min\\\");\\n        require(_minMultiplier >= 100, \\\"Min multiplier must be at least 0.1x\\\");\\n        require(_maxMultiplier <= 10000, \\\"Max multiplier must be at most 10.0x\\\");\\n        \\n        maxReputationMultiplier = _maxMultiplier;\\n        minReputationMultiplier = _minMultiplier;\\n    }\\n\\n    function getReputationMultiplierRange() external view returns (uint256 max, uint256 min) {\\n        return (maxReputationMultiplier, minReputationMultiplier);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n} \",\"keccak256\":\"0xef18a709f543f8170e6e9b57b7732db390e4660047997057c42b26829702effd\",\"license\":\"MIT\"},\"contracts/interfaces/IAstroTokenLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstroTokenLauncher {\\n    struct TokenInfo {\\n        uint256 id;\\n        address astrologer;\\n        address tokenContract;\\n        address buyContract;\\n        string name;\\n        string symbol;\\n        uint256 totalSupply;\\n        uint256 initialPrice;\\n        bool isActive;\\n        uint256 createdAt;\\n    }\\n\\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory);\\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory);\\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory);\\n    function astrologerToTokenId(address astrologer) external view returns (uint256);\\n    function tokenContractToId(address tokenContract) external view returns (uint256);\\n} \",\"keccak256\":\"0x751a36414a4235dd498afd5a3e9309f3586fc81b8340fb85f6db72555629ccb7\",\"license\":\"MIT\"},\"contracts/interfaces/IAstrologerManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstrologerManager {\\n    struct Astrologer {\\n        uint256 id;\\n        address wallet;\\n        string name;\\n        string description;\\n        string specialty;\\n        uint256 experience;\\n        uint256 reputation;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 tokenContract;\\n        bool isVerified;\\n        bool isActive;\\n        uint256 registeredAt;\\n        uint256 lastActive;\\n    }\\n\\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\\n    function isAstrologerVerified(address wallet) external view returns (bool);\\n    function getAstrologerId(address wallet) external view returns (uint256);\\n} \",\"keccak256\":\"0x11ca9cb820c6a6cec9a66342e9d644365a1c256aff7fc4cca46964dbcdae6e64\",\"license\":\"MIT\"},\"contracts/interfaces/IBuyTokenContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IBuyTokenContract {\\n    function registerToken(\\n        address _tokenContract,\\n        address _astrologer,\\n        uint256 _totalSupply,\\n        uint256 _basePrice\\n    ) external;\\n    \\n    function updateCredibility(address _tokenContract, uint256 _credibilityMultiplier) external;\\n    function getCurrentPrice(address _tokenContract) external view returns (uint256);\\n    function buyTokens(address _tokenContract) external payable;\\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external;\\n} \",\"keccak256\":\"0xce9205cb618a8e74f30eea7d43c134dfeed5b87ee80ff94138a2adf385018c68\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1172,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":485,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":1379,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_scoreIds","offset":0,"slot":"201","type":"t_struct(Counter)1179_storage"},{"astId":1427,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"reputationScores","offset":0,"slot":"202","type":"t_mapping(t_address,t_struct(ReputationScore)1402_storage)"},{"astId":1432,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"scoreBreakdowns","offset":0,"slot":"203","type":"t_mapping(t_address,t_struct(ScoreBreakdown)1413_storage)"},{"astId":1437,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"predictionModules","offset":0,"slot":"204","type":"t_mapping(t_uint256,t_struct(PredictionModule)1422_storage)"},{"astId":1439,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"astrologerManager","offset":0,"slot":"205","type":"t_address"},{"astId":1441,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"buyTokenContract","offset":0,"slot":"206","type":"t_address"},{"astId":1443,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"zodiacDAO","offset":0,"slot":"207","type":"t_address"},{"astId":1445,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"astroTokenLauncher","offset":0,"slot":"208","type":"t_address"},{"astId":1447,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"worldPredictionMarket","offset":0,"slot":"209","type":"t_address"},{"astId":1449,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"totalModules","offset":0,"slot":"210","type":"t_uint256"},{"astId":1451,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"minPredictionsForScore","offset":0,"slot":"211","type":"t_uint256"},{"astId":1453,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"scoreUpdateDelay","offset":0,"slot":"212","type":"t_uint256"},{"astId":1455,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"reputationDecayRate","offset":0,"slot":"213","type":"t_uint256"},{"astId":1457,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"maxReputationMultiplier","offset":0,"slot":"214","type":"t_uint256"},{"astId":1459,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"minReputationMultiplier","offset":0,"slot":"215","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_struct(ReputationScore)1402_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ReputationScorer.ReputationScore)","numberOfBytes":"32","value":"t_struct(ReputationScore)1402_storage"},"t_mapping(t_address,t_struct(ScoreBreakdown)1413_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct ReputationScorer.ScoreBreakdown)","numberOfBytes":"32","value":"t_struct(ScoreBreakdown)1413_storage"},"t_mapping(t_uint256,t_struct(PredictionModule)1422_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ReputationScorer.PredictionModule)","numberOfBytes":"32","value":"t_struct(PredictionModule)1422_storage"},"t_struct(Counter)1179_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":1178,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(PredictionModule)1422_storage":{"encoding":"inplace","label":"struct ReputationScorer.PredictionModule","members":[{"astId":1415,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"contractAddress","offset":0,"slot":"0","type":"t_address"},{"astId":1417,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"isActive","offset":20,"slot":"0","type":"t_bool"},{"astId":1419,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"weight","offset":0,"slot":"1","type":"t_uint256"},{"astId":1421,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"lastUpdate","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(ReputationScore)1402_storage":{"encoding":"inplace","label":"struct ReputationScorer.ReputationScore","members":[{"astId":1381,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1383,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"astrologer","offset":0,"slot":"1","type":"t_address"},{"astId":1385,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"totalPredictions","offset":0,"slot":"2","type":"t_uint256"},{"astId":1387,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"accuratePredictions","offset":0,"slot":"3","type":"t_uint256"},{"astId":1389,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"accuracyPercentage","offset":0,"slot":"4","type":"t_uint256"},{"astId":1391,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"reputationMultiplier","offset":0,"slot":"5","type":"t_uint256"},{"astId":1393,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"marketPredictions","offset":0,"slot":"6","type":"t_uint256"},{"astId":1395,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"dailyPredictions","offset":0,"slot":"7","type":"t_uint256"},{"astId":1397,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"oneToOnePredictions","offset":0,"slot":"8","type":"t_uint256"},{"astId":1399,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"lastUpdated","offset":0,"slot":"9","type":"t_uint256"},{"astId":1401,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"isActive","offset":0,"slot":"10","type":"t_bool"}],"numberOfBytes":"352"},"t_struct(ScoreBreakdown)1413_storage":{"encoding":"inplace","label":"struct ReputationScorer.ScoreBreakdown","members":[{"astId":1404,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"marketAccuracy","offset":0,"slot":"0","type":"t_uint256"},{"astId":1406,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"dailyAccuracy","offset":0,"slot":"1","type":"t_uint256"},{"astId":1408,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"oneToOneAccuracy","offset":0,"slot":"2","type":"t_uint256"},{"astId":1410,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"weightedScore","offset":0,"slot":"3","type":"t_uint256"},{"astId":1412,"contract":"contracts/ReputationScorer.sol:ReputationScorer","label":"reputationTier","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/WorldPredictionMarket.sol":{"IERC721":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address)":"70a08231","ownerOf(uint256)":"6352211e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorldPredictionMarket.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary CountersUpgradeable {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/WorldPredictionMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\\\";\\nimport \\\"./interfaces/IAstrologerManager.sol\\\";\\nimport \\\"./interfaces/IReputationScorer.sol\\\";\\n\\ncontract WorldPredictionMarket is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using CountersUpgradeable for CountersUpgradeable.Counter;\\n\\n    CountersUpgradeable.Counter private _predictionIds;\\n    \\n    struct WorldPrediction {\\n        uint256 id;\\n        address astrologer;\\n        uint256 astrologerId;\\n        string title;\\n        string description;\\n        uint256 deadline;\\n        uint256 astrologerStake;\\n        uint256 totalVoterStake;\\n        uint256 yesVoterStake;\\n        uint256 noVoterStake;\\n        uint256 totalVoters;\\n        bool isResolved;\\n        bool outcome;\\n        bool daoVotingActive;\\n        uint256 createdAt;\\n        uint256 resolvedAt;\\n    }\\n\\n    struct Vote {\\n        bool hasVoted;\\n        bool vote; // true = YES, false = NO\\n        uint256 stakeAmount;\\n        bool rewardClaimed;\\n    }\\n\\n    struct DAOVote {\\n        bool hasVoted;\\n        bool vote; // true = YES (correct), false = NO (incorrect)\\n        uint256 tokenId;\\n    }\\n\\n    struct PredictionStats {\\n        uint256 totalPredictions;\\n        uint256 activePredictions;\\n        uint256 resolvedPredictions;\\n        uint256 totalVolume;\\n    }\\n\\n    mapping(uint256 => WorldPrediction) public predictions;\\n    mapping(uint256 => mapping(address => Vote)) public votes;\\n    mapping(uint256 => mapping(address => DAOVote)) public daoVotes;\\n    mapping(uint256 => uint256) public daoYesVotes;\\n    mapping(uint256 => uint256) public daoNoVotes;\\n    mapping(address => uint256[]) public astrologerPredictions;\\n    mapping(address => uint256[]) public userVotes;\\n    \\n    address public astrologerManager;\\n    address public astroChartNFT;\\n    address public zodiacDAO;\\n    address public reputationScorer;\\n    \\n    uint256 public minAstrologerStake;\\n    uint256 public minVoterStake;\\n    uint256 public maxVoterStake;\\n    uint256 public daoVotingDuration;\\n    uint256 public astrologerRewardPercentage; // 500 = 5%\\n    uint256 public platformFeePercentage; // 200 = 2%\\n    \\n    PredictionStats public predictionStats;\\n    \\n    event PredictionCreated(\\n        uint256 indexed predictionId,\\n        address indexed astrologer,\\n        string title,\\n        uint256 deadline,\\n        uint256 astrologerStake\\n    );\\n\\n    event VoteCast(\\n        uint256 indexed predictionId,\\n        address indexed voter,\\n        bool vote,\\n        uint256 stakeAmount\\n    );\\n\\n    event DAOVoteCast(\\n        uint256 indexed predictionId,\\n        address indexed daoMember,\\n        bool vote,\\n        uint256 tokenId\\n    );\\n\\n    event PredictionResolved(\\n        uint256 indexed predictionId,\\n        bool outcome,\\n        uint256 totalStake,\\n        uint256 astrologerReward\\n    );\\n\\n    event RewardClaimed(\\n        uint256 indexed predictionId,\\n        address indexed claimer,\\n        uint256 rewardAmount\\n    );\\n\\n    event DAOVotingStarted(\\n        uint256 indexed predictionId,\\n        uint256 endTime\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _astroChartNFT,\\n        address _zodiacDAO,\\n        address _reputationScorer,\\n        uint256 _minAstrologerStake,\\n        uint256 _minVoterStake,\\n        uint256 _maxVoterStake\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        astroChartNFT = _astroChartNFT;\\n        zodiacDAO = _zodiacDAO;\\n        reputationScorer = _reputationScorer;\\n        minAstrologerStake = _minAstrologerStake;\\n        minVoterStake = _minVoterStake;\\n        maxVoterStake = _maxVoterStake;\\n        daoVotingDuration = 7 days;\\n        astrologerRewardPercentage = 500; // 5%\\n        platformFeePercentage = 200; // 2%\\n    }\\n\\n    /**\\n     * @notice Create a world prediction by staking FLOW\\n     * @param _title The title of the prediction\\n     * @param _description The detailed description\\n     * @param _deadline The deadline for the prediction\\n     */\\n    function createPrediction(\\n        string memory _title,\\n        string memory _description,\\n        uint256 _deadline\\n    ) external payable returns (uint256) {\\n        require(msg.value >= minAstrologerStake, \\\"Insufficient astrologer stake\\\");\\n        require(bytes(_title).length > 0, \\\"Title cannot be empty\\\");\\n        require(bytes(_description).length > 0, \\\"Description cannot be empty\\\");\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\n\\n        // Verify astrologer is registered\\n        if (astrologerManager != address(0)) {\\n            require(IAstrologerManager(astrologerManager).isAstrologerVerified(msg.sender), \\\"Astrologer not verified\\\");\\n        }\\n\\n        _predictionIds.increment();\\n        uint256 predictionId = _predictionIds.current();\\n\\n        predictions[predictionId] = WorldPrediction({\\n            id: predictionId,\\n            astrologer: msg.sender,\\n            astrologerId: IAstrologerManager(astrologerManager).getAstrologerId(msg.sender),\\n            title: _title,\\n            description: _description,\\n            deadline: _deadline,\\n            astrologerStake: msg.value,\\n            totalVoterStake: 0,\\n            yesVoterStake: 0,\\n            noVoterStake: 0,\\n            totalVoters: 0,\\n            isResolved: false,\\n            outcome: false,\\n            daoVotingActive: false,\\n            createdAt: block.timestamp,\\n            resolvedAt: 0\\n        });\\n\\n        astrologerPredictions[msg.sender].push(predictionId);\\n        predictionStats.totalPredictions++;\\n        predictionStats.activePredictions++;\\n\\n        emit PredictionCreated(predictionId, msg.sender, _title, _deadline, msg.value);\\n        return predictionId;\\n    }\\n\\n    /**\\n     * @notice Vote on a prediction (requires AstroChart NFT)\\n     * @param _predictionId The prediction ID\\n     * @param _vote True for YES, false for NO\\n     */\\n    function voteOnPrediction(uint256 _predictionId, bool _vote) external payable {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        require(msg.value >= minVoterStake, \\\"Insufficient voter stake\\\");\\n        require(msg.value <= maxVoterStake, \\\"Stake amount too high\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(block.timestamp < prediction.deadline, \\\"Voting period ended\\\");\\n        require(!votes[_predictionId][msg.sender].hasVoted, \\\"Already voted\\\");\\n        \\n        // Verify voter has minted AstroChart NFT\\n        require(hasAstroChartNFT(msg.sender), \\\"Must own AstroChart NFT to vote\\\");\\n        \\n        // Verify voter stake is >= astrologer stake\\n        require(msg.value >= prediction.astrologerStake, \\\"Voter stake must be >= astrologer stake\\\");\\n\\n        votes[_predictionId][msg.sender] = Vote({\\n            hasVoted: true,\\n            vote: _vote,\\n            stakeAmount: msg.value,\\n            rewardClaimed: false\\n        });\\n\\n        prediction.totalVoterStake += msg.value;\\n        prediction.totalVoters++;\\n        \\n        if (_vote) {\\n            prediction.yesVoterStake += msg.value;\\n        } else {\\n            prediction.noVoterStake += msg.value;\\n        }\\n        \\n        userVotes[msg.sender].push(_predictionId);\\n        predictionStats.totalVolume += msg.value;\\n\\n        emit VoteCast(_predictionId, msg.sender, _vote, msg.value);\\n    }\\n\\n    /**\\n     * @notice Start DAO voting after prediction deadline\\n     * @param _predictionId The prediction ID\\n     */\\n    function startDAOVoting(uint256 _predictionId) external {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(block.timestamp >= prediction.deadline, \\\"Prediction deadline not reached\\\");\\n        require(!prediction.daoVotingActive, \\\"DAO voting already active\\\");\\n\\n        prediction.daoVotingActive = true;\\n        \\n        emit DAOVotingStarted(_predictionId, block.timestamp + daoVotingDuration);\\n    }\\n\\n    /**\\n     * @notice DAO members vote on prediction outcome\\n     * @param _predictionId The prediction ID\\n     * @param _outcome True if prediction was correct, false if incorrect\\n     * @param _tokenId The DAO token ID for voting\\n     */\\n    function castDAOVote(uint256 _predictionId, bool _outcome, uint256 _tokenId) external {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(prediction.daoVotingActive, \\\"DAO voting not active\\\");\\n        require(!daoVotes[_predictionId][msg.sender].hasVoted, \\\"Already voted\\\");\\n        \\n        // Verify DAO membership\\n        require(isDAOMember(msg.sender, _tokenId), \\\"Not a DAO member\\\");\\n\\n        daoVotes[_predictionId][msg.sender] = DAOVote({\\n            hasVoted: true,\\n            vote: _outcome,\\n            tokenId: _tokenId\\n        });\\n\\n        if (_outcome) {\\n            daoYesVotes[_predictionId]++;\\n        } else {\\n            daoNoVotes[_predictionId]++;\\n        }\\n\\n        emit DAOVoteCast(_predictionId, msg.sender, _outcome, _tokenId);\\n    }\\n\\n    /**\\n     * @notice Resolve prediction based on DAO votes\\n     * @param _predictionId The prediction ID\\n     */\\n    function resolvePrediction(uint256 _predictionId) external {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(prediction.daoVotingActive, \\\"DAO voting not started\\\");\\n        require(block.timestamp >= prediction.deadline + daoVotingDuration, \\\"DAO voting period not ended\\\");\\n\\n        // Determine outcome based on DAO votes\\n        uint256 totalDAOVotes = daoYesVotes[_predictionId] + daoNoVotes[_predictionId];\\n        require(totalDAOVotes > 0, \\\"No DAO votes cast\\\");\\n        \\n        bool outcome = daoYesVotes[_predictionId] > daoNoVotes[_predictionId];\\n        \\n        prediction.isResolved = true;\\n        prediction.outcome = outcome;\\n        prediction.resolvedAt = block.timestamp;\\n        \\n        predictionStats.activePredictions--;\\n        predictionStats.resolvedPredictions++;\\n\\n        // Calculate and distribute rewards\\n        uint256 astrologerReward = distributeRewards(_predictionId, outcome);\\n        \\n        // Update reputation\\n        updateAstrologerReputation(prediction.astrologer, prediction.astrologerId, outcome);\\n\\n        emit PredictionResolved(_predictionId, outcome, prediction.totalVoterStake + prediction.astrologerStake, astrologerReward);\\n    }\\n\\n    /**\\n     * @notice Claim rewards for correct predictions\\n     * @param _predictionId The prediction ID\\n     */\\n    function claimReward(uint256 _predictionId) external {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(prediction.isResolved, \\\"Prediction not resolved\\\");\\n        \\n        Vote storage vote = votes[_predictionId][msg.sender];\\n        require(vote.hasVoted, \\\"No vote found\\\");\\n        require(!vote.rewardClaimed, \\\"Reward already claimed\\\");\\n\\n        uint256 rewardAmount = calculateVoterReward(_predictionId, msg.sender);\\n        if (rewardAmount > 0) {\\n            vote.rewardClaimed = true;\\n            payable(msg.sender).transfer(rewardAmount);\\n            emit RewardClaimed(_predictionId, msg.sender, rewardAmount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Distribute rewards after prediction resolution\\n     */\\n    function distributeRewards(uint256 _predictionId, bool outcome) internal returns (uint256) {\\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        \\n        uint256 totalPot = prediction.totalVoterStake + prediction.astrologerStake;\\n        uint256 platformFee = (totalPot * platformFeePercentage) / 10000;\\n        uint256 distributablePot = totalPot - platformFee;\\n        \\n        uint256 astrologerReward = 0;\\n        \\n        if (outcome) {\\n            // Astrologer was correct - gets 5% of total pot\\n            astrologerReward = (distributablePot * astrologerRewardPercentage) / 10000;\\n            payable(prediction.astrologer).transfer(astrologerReward);\\n        } else {\\n            // Astrologer was wrong - stake is redistributed to winning voters\\n            // Reputation will be penalized by updateAstrologerReputation\\n        }\\n        \\n        return astrologerReward;\\n    }\\n\\n    /**\\n     * @notice Calculate voter reward amount\\n     */\\n    function calculateVoterReward(uint256 _predictionId, address _voter) public view returns (uint256) {\\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        Vote storage vote = votes[_predictionId][_voter];\\n        \\n        if (!prediction.isResolved || !vote.hasVoted || vote.rewardClaimed) {\\n            return 0;\\n        }\\n\\n        // Only winning voters get rewards\\n        if (vote.vote != prediction.outcome) {\\n            return 0;\\n        }\\n\\n        uint256 totalPot = prediction.totalVoterStake + prediction.astrologerStake;\\n        uint256 platformFee = (totalPot * platformFeePercentage) / 10000;\\n        uint256 distributablePot = totalPot - platformFee;\\n        \\n        uint256 astrologerReward = 0;\\n        if (prediction.outcome) {\\n            astrologerReward = (distributablePot * astrologerRewardPercentage) / 10000;\\n        }\\n        \\n        uint256 voterRewardPool = distributablePot - astrologerReward;\\n        uint256 winningStake = prediction.outcome ? prediction.yesVoterStake : prediction.noVoterStake;\\n        \\n        if (winningStake > 0) {\\n            return (vote.stakeAmount * voterRewardPool) / winningStake;\\n        }\\n        \\n        return 0;\\n    }\\n\\n    /**\\n     * @notice Update astrologer reputation based on prediction outcome\\n     */\\n    function updateAstrologerReputation(address _astrologer, uint256 _astrologerId, bool _wasCorrect) internal {\\n        if (reputationScorer != address(0)) {\\n            IReputationScorer(reputationScorer).updateReputationFromWorldPrediction(_astrologer, _wasCorrect);\\n        }\\n        \\n        if (astrologerManager != address(0) && _astrologerId > 0) {\\n            IAstrologerManager(astrologerManager).recordPredictionResult(_astrologerId, _wasCorrect);\\n        }\\n    }\\n\\n    /**\\n     * @notice Check if user has AstroChart NFT\\n     */\\n    function hasAstroChartNFT(address _user) internal view returns (bool) {\\n        if (astroChartNFT == address(0)) return true; // For testing\\n        \\n        // Check if user has at least one AstroChart NFT\\n        try IERC721(astroChartNFT).balanceOf(_user) returns (uint256 balance) {\\n            return balance > 0;\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @notice Check if user is DAO member\\n     */\\n    function isDAOMember(address _user, uint256 _tokenId) internal view returns (bool) {\\n        if (zodiacDAO == address(0)) return msg.sender == owner(); // For testing, only owner can vote\\n        \\n        // Check if user owns the DAO token\\n        try IERC721(zodiacDAO).ownerOf(_tokenId) returns (address owner) {\\n            return owner == _user;\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    // View functions\\n    function getPrediction(uint256 _predictionId) external view returns (WorldPrediction memory) {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        return predictions[_predictionId];\\n    }\\n\\n    function getVote(uint256 _predictionId, address _voter) external view returns (Vote memory) {\\n        return votes[_predictionId][_voter];\\n    }\\n\\n    function getDAOVote(uint256 _predictionId, address _voter) external view returns (DAOVote memory) {\\n        return daoVotes[_predictionId][_voter];\\n    }\\n\\n    function getAstrologerPredictions(address _astrologer) external view returns (uint256[] memory) {\\n        return astrologerPredictions[_astrologer];\\n    }\\n\\n    function getUserVotes(address _user) external view returns (uint256[] memory) {\\n        return userVotes[_user];\\n    }\\n\\n    function getActivePredictions() external view returns (uint256[] memory) {\\n        uint256[] memory activeIds = new uint256[](predictionStats.activePredictions);\\n        uint256 count = 0;\\n        \\n        for (uint256 i = 1; i <= _predictionIds.current(); i++) {\\n            if (!predictions[i].isResolved) {\\n                activeIds[count] = i;\\n                count++;\\n            }\\n        }\\n        \\n        return activeIds;\\n    }\\n\\n    function getDAOVoteCounts(uint256 _predictionId) external view returns (uint256 yesVotes, uint256 noVotes) {\\n        return (daoYesVotes[_predictionId], daoNoVotes[_predictionId]);\\n    }\\n\\n    // Admin functions\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setAstroChartNFT(address _astroChartNFT) external onlyOwner {\\n        astroChartNFT = _astroChartNFT;\\n    }\\n\\n    function setZodiacDAO(address _zodiacDAO) external onlyOwner {\\n        zodiacDAO = _zodiacDAO;\\n    }\\n\\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\\n        reputationScorer = _reputationScorer;\\n    }\\n\\n    function setStakeLimits(uint256 _minAstrologerStake, uint256 _minVoterStake, uint256 _maxVoterStake) external onlyOwner {\\n        minAstrologerStake = _minAstrologerStake;\\n        minVoterStake = _minVoterStake;\\n        maxVoterStake = _maxVoterStake;\\n    }\\n\\n    function setDAOVotingDuration(uint256 _duration) external onlyOwner {\\n        daoVotingDuration = _duration;\\n    }\\n\\n    function setRewardPercentages(uint256 _astrologerRewardPercentage, uint256 _platformFeePercentage) external onlyOwner {\\n        require(_astrologerRewardPercentage + _platformFeePercentage <= 1000, \\\"Total percentages cannot exceed 10%\\\");\\n        astrologerRewardPercentage = _astrologerRewardPercentage;\\n        platformFeePercentage = _platformFeePercentage;\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n}\\n\\n// Interface for ERC721 (for NFT checks)\\ninterface IERC721 {\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n} \",\"keccak256\":\"0xcc2c31c1c9fc2f6f066ef42f0f2e94ae4ce7c5d5e2506af40a11f34e96c7afa1\",\"license\":\"MIT\"},\"contracts/interfaces/IAstrologerManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstrologerManager {\\n    struct Astrologer {\\n        uint256 id;\\n        address wallet;\\n        string name;\\n        string description;\\n        string specialty;\\n        uint256 experience;\\n        uint256 reputation;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 tokenContract;\\n        bool isVerified;\\n        bool isActive;\\n        uint256 registeredAt;\\n        uint256 lastActive;\\n    }\\n\\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\\n    function isAstrologerVerified(address wallet) external view returns (bool);\\n    function getAstrologerId(address wallet) external view returns (uint256);\\n} \",\"keccak256\":\"0x11ca9cb820c6a6cec9a66342e9d644365a1c256aff7fc4cca46964dbcdae6e64\",\"license\":\"MIT\"},\"contracts/interfaces/IReputationScorer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IReputationScorer {\\n    function updateReputationFromWorldPrediction(\\n        address _astrologer,\\n        bool _wasCorrect\\n    ) external;\\n\\n    function getReputationMultiplier(address _astrologer) external view returns (uint256);\\n    \\n    function getReputationScore(address _astrologer) external view returns (\\n        uint256 id,\\n        address astrologer,\\n        uint256 totalPredictions,\\n        uint256 accuratePredictions,\\n        uint256 accuracyPercentage,\\n        uint256 reputationMultiplier,\\n        uint256 marketPredictions,\\n        uint256 dailyPredictions,\\n        uint256 oneToOnePredictions,\\n        uint256 lastUpdated,\\n        bool isActive\\n    );\\n} \",\"keccak256\":\"0x703180fb5f26749d16b00844cc9f4ff63a31eeb43e1fa2303a2c8bd5a7bb2b82\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"WorldPredictionMarket":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"predictionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"daoMember","type":"address"},{"indexed":false,"internalType":"bool","name":"vote","type":"bool"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"DAOVoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"predictionId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"DAOVotingStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"predictionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"astrologer","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"uint256","name":"deadline","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"astrologerStake","type":"uint256"}],"name":"PredictionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"predictionId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"outcome","type":"bool"},{"indexed":false,"internalType":"uint256","name":"totalStake","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"astrologerReward","type":"uint256"}],"name":"PredictionResolved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"predictionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"claimer","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"RewardClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"predictionId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"bool","name":"vote","type":"bool"},{"indexed":false,"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"name":"VoteCast","type":"event"},{"inputs":[],"name":"astroChartNFT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"astrologerManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"astrologerPredictions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"astrologerRewardPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"},{"internalType":"address","name":"_voter","type":"address"}],"name":"calculateVoterReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"},{"internalType":"bool","name":"_outcome","type":"bool"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"castDAOVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"}],"name":"claimReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint256","name":"_deadline","type":"uint256"}],"name":"createPrediction","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"daoNoVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"daoVotes","outputs":[{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"daoVotingDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"daoYesVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActivePredictions","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getAstrologerPredictions","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"},{"internalType":"address","name":"_voter","type":"address"}],"name":"getDAOVote","outputs":[{"components":[{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"internalType":"struct WorldPredictionMarket.DAOVote","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"}],"name":"getDAOVoteCounts","outputs":[{"internalType":"uint256","name":"yesVotes","type":"uint256"},{"internalType":"uint256","name":"noVotes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"}],"name":"getPrediction","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"astrologerStake","type":"uint256"},{"internalType":"uint256","name":"totalVoterStake","type":"uint256"},{"internalType":"uint256","name":"yesVoterStake","type":"uint256"},{"internalType":"uint256","name":"noVoterStake","type":"uint256"},{"internalType":"uint256","name":"totalVoters","type":"uint256"},{"internalType":"bool","name":"isResolved","type":"bool"},{"internalType":"bool","name":"outcome","type":"bool"},{"internalType":"bool","name":"daoVotingActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"resolvedAt","type":"uint256"}],"internalType":"struct WorldPredictionMarket.WorldPrediction","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserVotes","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"},{"internalType":"address","name":"_voter","type":"address"}],"name":"getVote","outputs":[{"components":[{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"bool","name":"rewardClaimed","type":"bool"}],"internalType":"struct WorldPredictionMarket.Vote","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"},{"internalType":"address","name":"_astroChartNFT","type":"address"},{"internalType":"address","name":"_zodiacDAO","type":"address"},{"internalType":"address","name":"_reputationScorer","type":"address"},{"internalType":"uint256","name":"_minAstrologerStake","type":"uint256"},{"internalType":"uint256","name":"_minVoterStake","type":"uint256"},{"internalType":"uint256","name":"_maxVoterStake","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxVoterStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minAstrologerStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minVoterStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"predictionStats","outputs":[{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"activePredictions","type":"uint256"},{"internalType":"uint256","name":"resolvedPredictions","type":"uint256"},{"internalType":"uint256","name":"totalVolume","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"predictions","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"astrologerStake","type":"uint256"},{"internalType":"uint256","name":"totalVoterStake","type":"uint256"},{"internalType":"uint256","name":"yesVoterStake","type":"uint256"},{"internalType":"uint256","name":"noVoterStake","type":"uint256"},{"internalType":"uint256","name":"totalVoters","type":"uint256"},{"internalType":"bool","name":"isResolved","type":"bool"},{"internalType":"bool","name":"outcome","type":"bool"},{"internalType":"bool","name":"daoVotingActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"resolvedAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reputationScorer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"}],"name":"resolvePrediction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astroChartNFT","type":"address"}],"name":"setAstroChartNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologerManager","type":"address"}],"name":"setAstrologerManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_duration","type":"uint256"}],"name":"setDAOVotingDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_reputationScorer","type":"address"}],"name":"setReputationScorer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_astrologerRewardPercentage","type":"uint256"},{"internalType":"uint256","name":"_platformFeePercentage","type":"uint256"}],"name":"setRewardPercentages","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minAstrologerStake","type":"uint256"},{"internalType":"uint256","name":"_minVoterStake","type":"uint256"},{"internalType":"uint256","name":"_maxVoterStake","type":"uint256"}],"name":"setStakeLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_zodiacDAO","type":"address"}],"name":"setZodiacDAO","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"}],"name":"startDAOVoting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_predictionId","type":"uint256"},{"internalType":"bool","name":"_vote","type":"bool"}],"name":"voteOnPrediction","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"votes","outputs":[{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"bool","name":"vote","type":"bool"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"bool","name":"rewardClaimed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"zodiacDAO","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"castDAOVote(uint256,bool,uint256)":{"params":{"_outcome":"True if prediction was correct, false if incorrect","_predictionId":"The prediction ID","_tokenId":"The DAO token ID for voting"}},"claimReward(uint256)":{"params":{"_predictionId":"The prediction ID"}},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"createPrediction(string,string,uint256)":{"params":{"_deadline":"The deadline for the prediction","_description":"The detailed description","_title":"The title of the prediction"}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"resolvePrediction(uint256)":{"params":{"_predictionId":"The prediction ID"}},"startDAOVoting(uint256)":{"params":{"_predictionId":"The prediction ID"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"voteOnPrediction(uint256,bool)":{"params":{"_predictionId":"The prediction ID","_vote":"True for YES, false for NO"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a08060405234620000e157306080526000549060ff8260081c166200008f575060ff8082160362000053575b6040516134609081620000e782396080518181816121700152818161227001526126880152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a1386200002c565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80624fbbb0146129705780630e8c47f214612952578063256c52d31461292857806334954999146129055780633659cfe61461266357806337562b291461261b5780633ccfd60b146125cb578063444a50c21461253057806344cda485146124f05780634f1ef2861461222157806352d1902d1461215d578063533a12a5146121335780635aa76be01461210457806363ab68ef146120e657806365af67bd146120a65780636f5020561461201a5780636fd31a4114611ff1578063700c836714611cb1578063715018a614611c5457806372f022c214611c3657806373c84d2114611c0d5780637864066814611bac57806384ebaae1146119b4578063886dbdf91461187a5780638b3511f7146118245780638da5cb5b146117fb578063950c7822146117885780639dcf0b7a14611750578063a9d6921b1461168b578063ab76c9ed14611662578063ae169a50146114ae578063b488202d14611485578063b6bb17541461144e578063bc3f931f14611392578063bc8581851461130f578063c8ab686a146112e0578063cdd78cfc146112c2578063ce083d7314611282578063d23254b414611210578063d472a57014610b22578063d75ebce514610b04578063e69fe3dc1461074d578063e77fc7a414610576578063e9725c2114610536578063f2fde38b146104a5578063f7333e33146104875763fe83bece1461022157600080fd5b3461048457602036600319011261048457806040916101e0835161024481612b0f565b8281528260208201528285820152606080820152606060808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c0820152015260043580151580610478575b6102b9906130aa565b815260ca60205220600d604051916102d083612b0f565b8054835260018101546001600160a01b03166020840152600281015460408401526102fd60038201612b5f565b606084015261030e60048201612b5f565b6080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a81015461014084015260ff600b8201548181161515610160860152818160081c16151561018086015260101c1615156101a0840152600c8101546101c084015201546101e08201526040518091602082528051602083015260018060a01b036020820151166040830152604081015160608301526101e06103f46103de60608401516102006080870152610220860190612c05565b6080840151858203601f190160a0870152612c05565b9160a081015160c085015260c081015160e085015260e0810151610100850152610100810151610120850152610120810151610140850152610140810151610160850152610160810151151561018085015261018081015115156101a08501526101a081015115156101c08501526101c08101518285015201516102008301520390f35b5060c9548111156102b0565b80fd5b5034610484578060031936011261048457602060d654604051908152f35b5034610484576020366003190112610484576104bf612c45565b6104c7612d59565b6001600160a01b038116156104e2576104df90612db1565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461048457602036600319011261048457610550612c45565b610558612d59565b60018060a01b03166001600160601b0360a01b60d454161760d45580f35b50346104845760e036600319011261048457610590612c45565b610598612c5b565b906001600160a01b0390604435828116919082900361074857606435918383168093036107485785549360ff8560081c16159485809661073b575b8015610724575b156106c85760ff1981166001178855856106b7575b5061060960ff885460081c1661060481612fe9565b612fe9565b61061233612db1565b86549561062460ff8860081c16612fe9565b816001600160601b0360a01b94168460d154161760d155168260d254161760d2558160d354161760d35560d454161760d45560843560d55560a43560d65560c43560d75562093a8060d8556101f460d95560c860da55610682575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff1916610101178755386105ef565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105da5750600160ff8216146105da565b50600160ff8216106105d3565b600080fd5b503461048457602080600319360112610b00576004359081151580610af4575b610776906130aa565b81835260ca815260408320600b810180549061079560ff8316156130ee565b60ff8260101c1615610ab6576107b2600584015460d85490613176565b4210610a715784865260cd84526107d6604087205460ce8652604088205490613176565b15610a385784865260cd845260408087205460ce86529087205461ffff199093169210600881901b61ff00169290921760011790559042600d82015560dc548015610a24576000190160dc5561082d60dd54613085565b60dd5583855260ca83526040852090856108506007840154600685015490613176565b61086b612710918261086460da5483613183565b0490613196565b828615610a1a5750828092610884829360d95490613183565b60019097015496049586906001600160a01b0316828215610a11575bf115610a06575b6001810154600282015460d45488926001600160a01b0391908216908216806109a3575b505060d15416908115158061099a575b610930575b505050907f1ee447de28c6ff53bc0403bdbc8f4114866f73b12fc451b0605fc923b02b65bf9361091d836006600760609796015491015490613176565b906040519384528301526040820152a280f35b813b15610996578291604483926040519485938492631c8fdeb560e31b845260048401528a60248401525af1801561098b5761096d575b806108e0565b61097a9094939294612b2b565b6109875790918538610967565b8580fd5b6040513d84823e3d90fd5b8280fd5b508015156108db565b80949293943b15610996576044839260405194859384926313ef88d160e31b845260048401528b60248401525af180156109fb576109e6575b90818993926108cb565b6109f39098919298612b2b565b9690386109dc565b6040513d8b823e3d90fd5b6040513d87823e3d90fd5b506108fc6108a0565b94505050506108a7565b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b8152600481018590526011602482015270139bc8111053c81d9bdd195cc818d85cdd607a1b6044820152606490fd5b60405162461bcd60e51b815260048101859052601b60248201527f44414f20766f74696e6720706572696f64206e6f7420656e64656400000000006044820152606490fd5b60405162461bcd60e51b8152600481018590526016602482015275111053c81d9bdd1a5b99c81b9bdd081cdd185c9d195960521b6044820152606490fd5b5060c95482111561076d565b5080fd5b5034610484578060031936011261048457602060d954604051908152f35b506060366003190112610484576004356001600160401b038111610b0057610b4e903690600401612d3b565b6024356001600160401b03811161099657610b6d903690600401612d3b565b9060d55434106111cb5780511561118e57815115611149574260443511156111045760d1546001600160a01b03169182611056575b6024906020600160c95401948560c9556040519384809263656d0c3960e01b82523360048301525afa918215610a0657859261101e575b5060405191610be783612b0f565b8483523360208401526040830152826060830152608082015260443560a08201523460c08201528360e08201528361010082015283610120820152836101408201528361016082015283610180820152836101a0820152426101c0820152836101e082015282845260ca6020526040842090805182556001820160018060a01b036020830151166001600160601b0360a01b8254161790556040810151600283015560608101518051906001600160401b038211610f45578190610cae6003860154612a89565b601f8111610fce575b50602090601f8311600114610f64578892610f59575b50508160011b916000199060031b1c19161760038301555b60808101518051906001600160401b038211610f4557610d086004850154612a89565b601f8111610f01575b50918693918693602098508890601f8311600114610e865786938360409694600d946101e094610e0c9b92610e7b575b50508160011b916000199060031b1c19161760048501555b60a0810151600585015560c0810151600685015560e0810151600785015561010081015160088501556101208101516009850155610140810151600a850155600b8401610db96101608301511515829060ff801983541691151516179055565b610180820151815461ff00191690151560081b61ff00161781556101a0820151815462ff0000191690151560101b62ff0000161790556101c0810151600c850155015191015533815260cf875220613049565b610e1760db54613085565b60db55610e2560dc54613085565b60dc55817f37f3edf7ed237f91fd6999d49411c7e10b3602f2e561a5adf21934775659c61a610e5f60405193606085526060850190612c05565b92604435868201523460408201528033940390a3604051908152f35b015190503880610d41565b9060048501875289872091875b601f1985168110610ee7575093600184600d946101e094610e0c9b9860409a98601f19811610610ece575b505050811b016004850155610d59565b015160001960f88460031b161c19169055388080610ebe565b8183015184558a9750600190930192918b01918b01610e93565b60048501885260208820601f840160051c810160208510610f3e575b601f830160051c82018110610f33575050610d11565b898155600101610f1d565b5080610f1d565b634e487b7160e01b87526041600452602487fd5b015190503880610ccd565b600386018952602089209250601f198416895b818110610fb65750908460019594939210610f9d575b505050811b016003830155610ce5565b015160001960f88460031b161c19169055388080610f8d565b92936020600181928786015181550195019301610f77565b90915060038501885260208820601f840160051c810160208510611017575b90849392915b601f830160051c82018110611009575050610cb7565b8a8155859450600101610ff3565b5080610fed565b9091506020813d60201161104e575b8161103a60209383612b3e565b8101031261104a57519038610bd9565b8480fd5b3d915061102d565b604051631853e99560e11b8152336004820152602081602481875afa908115610a065785916110ca575b50610ba25760405162461bcd60e51b815260206004820152601760248201527f417374726f6c6f676572206e6f742076657269666965640000000000000000006044820152606490fd5b90506020813d82116110fc575b816110e460209383612b3e565b8101031261104a5751801515810361104a5738611080565b3d91506110d7565b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420617374726f6c6f676572207374616b650000006044820152606490fd5b503461048457604036600319011261048457604060809161122f612c5b565b600435825260cb6020528282209060018060a01b031682526020522080549060ff60026001830154920154169060ff604051938181161515855260081c1615156020840152604083015215156060820152f35b50346104845760203660031901126104845761129c612c45565b6112a4612d59565b60018060a01b03166001600160601b0360a01b60d254161760d25580f35b5034610484578060031936011261048457602060da54604051908152f35b5034610484576060366003190112610484576112fa612d59565b60043560d55560243560d65560443560d75580f35b503461048457602080600319360112610b00576001600160a01b03611332612c45565b16825260cf815260408220916040518092808554928381520194835280832092905b82821061137b576113778561136b81890382612b3e565b60405191829182612d00565b0390f35b835486529485019460019384019390910190611354565b50346104845760403660031901126104845760406080916113b1612c5b565b81606084516113bf81612af4565b82815282602082015282868201520152600435825260cb6020528282209060018060a01b03168252602052206040516113f781612af4565b81549160ff831615159283835260ff602084019160081c1615158152606060ff6002600185015494604087019586520154169301921515835260405193845251151560208401525160408301525115156060820152f35b5034610484578060031936011261048457608060db5460dc5460dd5460de5491604051938452602084015260408301526060820152f35b503461048457806003193601126104845760d2546040516001600160a01b039091168152602090f35b503461048457602080600319360112610b005760043580151580611656575b6114d6906130aa565b80835260ca825260ff600b60408520015416156116115780835260cb82526040832033845282526040832060ff815416156115dc5760020191825460ff811661159e57849061152533856131a3565b948515918215611533578380f35b60ff1916600117905581908590611594575b8280929181923390f115611589577f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7906040519384523393a3388080838180808380f35b6040513d85823e3d90fd5b6108fc9150611545565b60405162461bcd60e51b815260048101839052601660248201527514995dd85c9908185b1c9958591e4818db185a5b595960521b6044820152606490fd5b60405162461bcd60e51b815260048101849052600d60248201526c139bc81d9bdd1948199bdd5b99609a1b6044820152606490fd5b60405162461bcd60e51b815260048101839052601760248201527f50726564696374696f6e206e6f74207265736f6c7665640000000000000000006044820152606490fd5b5060c9548111156114cd565b503461048457806003193601126104845760d3546040516001600160a01b039091168152602090f35b503461048457806003193601126104845760dc546116a8816133f3565b906116b66040519283612b3e565b8082526116c5601f19916133f3565b0191602092368484013760c95490928360015b838111156116ee57604051806113778782612d00565b80825260ca835260ff600b6040842001541615611714575b61170f90613085565b6116d8565b94845181101561173c5761173481878561170f9460051b89010152613085565b959050611706565b634e487b7160e01b82526032600452602482fd5b503461048457602036600319011261048457604090600435815260cd60205281808220549160ce602052205482519182526020820152f35b503461048457602080600319360112610b00576001600160a01b036117ab612c45565b16825260d0815260408220916040518092808554928381520194835280832092905b8282106117e4576113778561136b81890382612b3e565b8354865294850194600193840193909101906117cd565b50346104845780600319360112610484576033546040516001600160a01b039091168152602090f35b50346104845760403660031901126104845761183e612c45565b6001600160a01b0316815260d0602052604081208054602435929083101561048457602061186c8484612c71565b90546040519160031b1c8152f35b503461048457602036600319011261048457600435801515806119a8575b6118a1906130aa565b80825260ca60205260408220600b81019060058254916118c460ff8416156130ee565b015442106119635760ff8160101c1661191e57620100009062ff000019161790557fc83104e48f44c8c7b89a4dec1259a93bffcef18013dc1ac5891a260de98a50e5602061191460d85442613176565b604051908152a280f35b60405162461bcd60e51b815260206004820152601960248201527f44414f20766f74696e6720616c726561647920616374697665000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f50726564696374696f6e20646561646c696e65206e6f742072656163686564006044820152606490fd5b5060c954811115611898565b5034610484576060366003190112610484576004356119d1612cf1565b9060443581151580611ba0575b6119e7906130aa565b818452602060ca815260ff600b604087200154611a06828216156130ee565b60101c1615611b645782855260cc8152604085203386528152611a3060ff6040872054161561313a565b611a3a8233613355565b15611b2d577ff34f077f143d412407a903c03d8d2132b5dd9c006763fdf1fc57f5133610e64f91611b0b91604051611a7181612ac3565b6001815260018282018815158152611ace6040840191868352898c5260cc865260408c20338d528652611ab760408d2095511515869060ff801983541691151516179055565b51845461ff00191690151560081b61ff0016178455565b519101558515611b115760cd908588525260408620611aed8154613085565b90555b60408051951515865260208601919091523394918291820190565b0390a380f35b60ce908588525260408620611b268154613085565b9055611af0565b6064906040519062461bcd60e51b82526004820152601060248201526f2737ba1030902220a79036b2b6b132b960811b6044820152fd5b6064906040519062461bcd60e51b82526004820152601560248201527444414f20766f74696e67206e6f742061637469766560581b6044820152fd5b5060c9548211156119de565b5034610484576040366003190112610484576040606091611bcb612c5b565b600435825260cc6020528282209060018060a01b03168252602052206001815491015460ff604051928181161515845260081c16151560208301526040820152f35b503461048457806003193601126104845760d4546040516001600160a01b039091168152602090f35b5034610484578060031936011261048457602060d854604051908152f35b5034610484578060031936011261048457611c6d612d59565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50604036600319011261048457600435611cc9612cf1565b9080151580611fe5575b611cdc906130aa565b60d6543410611fa05760d7543411611f6357808352602060ca815260408420611d0c60ff600b83015416156130ee565b6005810154421015611f285782855260cb8252604085203386528252611d3960ff6040872054161561313a565b611d42336132cc565b15611ee35760068101543410611e8e579060d091611de5604051611d6581612af4565b600181526002888583018915158152611dc96040850191348352611db2604060608801958087528d815260cb8c528181203382528c522096511515879060ff801983541691151516179055565b51855461ff00191690151560081b61ff0016178555565b51600184015551151591019060ff801983541691151516179055565b60078101611df4348254613176565b9055600a8101611e048154613085565b90558415611e7957600801611e1a348254613176565b90555b33855252611e2e8160408520613049565b611e3a3460de54613176565b60de5560408051921515835234602084015233927fcbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e9181908101611b0b565b600901611e87348254613176565b9055611e1d565b60405162461bcd60e51b815260048101839052602760248201527f566f746572207374616b65206d757374206265203e3d20617374726f6c6f676560448201526672207374616b6560c81b6064820152608490fd5b60405162461bcd60e51b815260048101839052601f60248201527f4d757374206f776e20417374726f4368617274204e465420746f20766f7465006044820152606490fd5b60405162461bcd60e51b8152600481018390526013602482015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152740a6e8c2d6ca40c2dadeeadce840e8dede40d0d2ced605b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e7420766f746572207374616b6500000000000000006044820152606490fd5b5060c954811115611cd3565b503461048457806003193601126104845760d1546040516001600160a01b039091168152602090f35b50346104845760403660031901126104845760243560043561203a612d59565b6103e86120478383613176565b116120555760d95560da5580f35b60405162461bcd60e51b815260206004820152602360248201527f546f74616c2070657263656e74616765732063616e6e6f74206578636565642060448201526231302560e81b6064820152608490fd5b5034610484576020366003190112610484576120c0612c45565b6120c8612d59565b60018060a01b03166001600160601b0360a01b60d354161760d35580f35b5034610484578060031936011261048457602060d554604051908152f35b503461048457604036600319011261048457602061212b612123612c5b565b6004356131a3565b604051908152f35b5034610484576020366003190112610484576040602091600435815260cd83522054604051908152f35b50346104845780600319360112610484577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036121b657602060405160008051602061340b8339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b50604036600319011261048457612236612c45565b6024356001600160401b038111610996573660238201121561099657612266903690602481600401359101612cba565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291906122a030851415612dfa565b6122bd60008051602061340b833981519152948286541614612e5b565b6122c5612d59565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156122fb5750506104df9150612ebc565b8216604051936352d1902d60e01b85526020948581600481865afa8791816124bd575b5061237f5760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b94929394036124665761239184612ebc565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a281511580159061245e575b6123cb575b50505080f35b61244c928480604051946123de86612ac3565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d15612455573d61243081612c9f565b9061243e6040519283612b3e565b81528681943d92013e612f4c565b503880806123c5565b60609250612f4c565b5060016123c0565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d83116124e9575b6124d58183612b3e565b810103126124e55751903861231e565b8780fd5b503d6124cb565b50346104845760203660031901126104845761250a612c45565b612512612d59565b60018060a01b03166001600160601b0360a01b60d154161760d15580f35b503461048457604036600319011261048457604060609161254f612c5b565b8183805161255c81612ac3565b8281528260208201520152600435825260cc6020528282209060018060a01b031682526020522060405161258f81612ac3565b81546040600160ff831615159485855260ff602086019460081c1615158452015492019182526040519283525115156020830152516040820152f35b50346104845780600319360112610484576125e4612d59565b8080808060018060a01b03603354164790828215612612575bf1156126065780f35b604051903d90823e3d90fd5b506108fc6125fd565b503461048457604036600319011261048457612635612c45565b6001600160a01b0316815260cf602052604081208054602435929083101561048457602061186c8484612c71565b503461048457602080600319360112610b005761267e612c45565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166126b530821415612dfa565b6126d260008051602061340b833981519152918383541614612e5b565b6126da612d59565b60405190848201928284106001600160401b03851117610f45578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143541660001461273557505050506104df9150612ebc565b8492939416906040516352d1902d60e01b81528681600481865afa8891816128d2575b506127b95760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959394950361287b576127cb82612ebc565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a284835115801590612874575b612808575b505050505080f35b80612869956040519561281a87612ac3565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15612455573d61243081612c9f565b503880808084612800565b50806127fb565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d83116128fe575b6128ea8183612b3e565b810103126128fa57519038612758565b8880fd5b503d6128e0565b50346104845760203660031901126104845761291f612d59565b60043560d85580f35b5034610484576020366003190112610484576040602091600435815260ce83522054604051908152f35b5034610484578060031936011261048457602060d754604051908152f35b503461048457602036600319011261048457600435815260ca602052604090208054600182015460028301546001600160a01b0390911692906129b560038301612b5f565b916129c260048201612b5f565b9260058201549360068301546007840154600885015490600986015492600a87015494600b88015496600c89015498600d0154996040519d8e809e81526020015260408d01528b6102006060819201528c01612a1d91612c05565b8b810360808d0152612a2e91612c05565b9860a08b015260c08a015260e089015261010088015261012087015261014086015260ff811615156101608601528060081c60ff16151561018086015260101c60ff1615156101a08501526101c08401526101e08301520390f35b90600182811c92168015612ab9575b6020831014612aa357565b634e487b7160e01b600052602260045260246000fd5b91607f1691612a98565b606081019081106001600160401b03821117612ade57604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b03821117612ade57604052565b61020081019081106001600160401b03821117612ade57604052565b6001600160401b038111612ade57604052565b90601f801991011681019081106001600160401b03821117612ade57604052565b9060405191826000825492612b7384612a89565b908184526001948581169081600014612be25750600114612b9f575b5050612b9d92500383612b3e565b565b9093915060005260209081600020936000915b818310612bca575050612b9d93508201013880612b8f565b85548884018501529485019487945091830191612bb2565b915050612b9d94506020925060ff191682840152151560051b8201013880612b8f565b919082519283825260005b848110612c31575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612c10565b600435906001600160a01b038216820361074857565b602435906001600160a01b038216820361074857565b8054821015612c895760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b038111612ade57601f01601f191660200190565b929192612cc682612c9f565b91612cd46040519384612b3e565b829481845281830111610748578281602093846000960137010152565b60243590811515820361074857565b6020908160408183019282815285518094520193019160005b828110612d27575050505090565b835185529381019392810192600101612d19565b9080601f8301121561074857816020612d5693359101612cba565b90565b6033546001600160a01b03163303612d6d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15612e0157565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15612e6257565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15612ef15760008051602061340b83398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015612fae5750815115612f60575090565b3b15612f695790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015612fc15750805190602001fd5b60405162461bcd60e51b815260206004820152908190612fe5906024830190612c05565b0390fd5b15612ff057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b805468010000000000000000811015612ade5761306b91600182018155612c71565b819291549060031b600019811b9283911b16911916179055565b60001981146130945760010190565b634e487b7160e01b600052601160045260246000fd5b156130b157565b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1c99591a58dd1a5bdb881251605a1b6044820152606490fd5b156130f557565b60405162461bcd60e51b815260206004820152601b60248201527f50726564696374696f6e20616c7265616479207265736f6c76656400000000006044820152606490fd5b1561314157565b60405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b9190820180921161309457565b8181029291811591840414171561309457565b9190820391821161309457565b600090815260ca602052604081209160cb602052604082209060018060a01b031682526020526040812091600b8101549060ff82161580156132c0575b80156132b2575b6132ab5760ff84549260081c169160ff8315159160081c161515036132ab5761323f8261321d6007840154600685015490613176565b613231612710918261086460da5483613183565b908692613294575b50613196565b911561328a5760080154905b811590811561325c57505050905090565b600161326c929493950154613183565b9161327657500490565b634e487b7160e01b81526012600452602490fd5b600901549061324b565b9091506132a360d95483613183565b049038613239565b5050905090565b5060ff6002850154166131e7565b5060ff845416156131e0565b60d2546001600160a01b039081169190821561334d57602460209260405194859384926370a0823160e01b84521660048301525afa6000918161331a575b506133155750600090565b151590565b90916020823d8211613345575b8161333460209383612b3e565b81010312610484575051903861330a565b3d9150613327565b505050600190565b60d3546001600160a01b039081169290919083156133e6576020906024604051809681936331a9108f60e11b835260048301525afa600093816133a8575b506133a057505050600090565b811691161490565b6020949194813d82116133de575b816133c360209383612b3e565b81010312610b00575190838216820361048457509238613393565b3d91506133b6565b5050905060335416331490565b6001600160401b038111612ade5760051b6020019056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220da5c5e1ebacc515780692b8f5da59453c4cc2cd576a25928e384a47de2c5c4a864736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xE1 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH3 0x8F JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH3 0x53 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3460 SWAP1 DUP2 PUSH3 0xE7 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2170 ADD MSTORE DUP2 DUP2 PUSH2 0x2270 ADD MSTORE PUSH2 0x2688 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH3 0x2C JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x4FBBB0 EQ PUSH2 0x2970 JUMPI DUP1 PUSH4 0xE8C47F2 EQ PUSH2 0x2952 JUMPI DUP1 PUSH4 0x256C52D3 EQ PUSH2 0x2928 JUMPI DUP1 PUSH4 0x34954999 EQ PUSH2 0x2905 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2663 JUMPI DUP1 PUSH4 0x37562B29 EQ PUSH2 0x261B JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x25CB JUMPI DUP1 PUSH4 0x444A50C2 EQ PUSH2 0x2530 JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x24F0 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2221 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x215D JUMPI DUP1 PUSH4 0x533A12A5 EQ PUSH2 0x2133 JUMPI DUP1 PUSH4 0x5AA76BE0 EQ PUSH2 0x2104 JUMPI DUP1 PUSH4 0x63AB68EF EQ PUSH2 0x20E6 JUMPI DUP1 PUSH4 0x65AF67BD EQ PUSH2 0x20A6 JUMPI DUP1 PUSH4 0x6F502056 EQ PUSH2 0x201A JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x1FF1 JUMPI DUP1 PUSH4 0x700C8367 EQ PUSH2 0x1CB1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C54 JUMPI DUP1 PUSH4 0x72F022C2 EQ PUSH2 0x1C36 JUMPI DUP1 PUSH4 0x73C84D21 EQ PUSH2 0x1C0D JUMPI DUP1 PUSH4 0x78640668 EQ PUSH2 0x1BAC JUMPI DUP1 PUSH4 0x84EBAAE1 EQ PUSH2 0x19B4 JUMPI DUP1 PUSH4 0x886DBDF9 EQ PUSH2 0x187A JUMPI DUP1 PUSH4 0x8B3511F7 EQ PUSH2 0x1824 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17FB JUMPI DUP1 PUSH4 0x950C7822 EQ PUSH2 0x1788 JUMPI DUP1 PUSH4 0x9DCF0B7A EQ PUSH2 0x1750 JUMPI DUP1 PUSH4 0xA9D6921B EQ PUSH2 0x168B JUMPI DUP1 PUSH4 0xAB76C9ED EQ PUSH2 0x1662 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x14AE JUMPI DUP1 PUSH4 0xB488202D EQ PUSH2 0x1485 JUMPI DUP1 PUSH4 0xB6BB1754 EQ PUSH2 0x144E JUMPI DUP1 PUSH4 0xBC3F931F EQ PUSH2 0x1392 JUMPI DUP1 PUSH4 0xBC858185 EQ PUSH2 0x130F JUMPI DUP1 PUSH4 0xC8AB686A EQ PUSH2 0x12E0 JUMPI DUP1 PUSH4 0xCDD78CFC EQ PUSH2 0x12C2 JUMPI DUP1 PUSH4 0xCE083D73 EQ PUSH2 0x1282 JUMPI DUP1 PUSH4 0xD23254B4 EQ PUSH2 0x1210 JUMPI DUP1 PUSH4 0xD472A570 EQ PUSH2 0xB22 JUMPI DUP1 PUSH4 0xD75EBCE5 EQ PUSH2 0xB04 JUMPI DUP1 PUSH4 0xE69FE3DC EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xE77FC7A4 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0xE9725C21 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0xF7333E33 EQ PUSH2 0x487 JUMPI PUSH4 0xFE83BECE EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI DUP1 PUSH1 0x40 SWAP2 PUSH2 0x1E0 DUP4 MLOAD PUSH2 0x244 DUP2 PUSH2 0x2B0F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP3 PUSH2 0x1C0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x478 JUMPI JUMPDEST PUSH2 0x2B9 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2D0 DUP4 PUSH2 0x2B0F JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2FD PUSH1 0x3 DUP3 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x30E PUSH1 0x4 DUP3 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0xB DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH2 0x160 DUP7 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x180 DUP7 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x1C0 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1E0 PUSH2 0x3F4 PUSH2 0x3DE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x200 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x220 DUP7 ADD SWAP1 PUSH2 0x2C05 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x2C05 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x1C0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x200 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x2B0 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x4BF PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x4C7 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4E2 JUMPI PUSH2 0x4DF SWAP1 PUSH2 0x2DB1 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x550 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x558 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD4 SLOAD AND OR PUSH1 0xD4 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x590 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x598 PUSH2 0x2C5B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x748 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 DUP4 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x748 JUMPI DUP6 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0x73B JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x724 JUMPI JUMPDEST ISZERO PUSH2 0x6C8 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP9 SSTORE DUP6 PUSH2 0x6B7 JUMPI JUMPDEST POP PUSH2 0x609 PUSH1 0xFF DUP9 SLOAD PUSH1 0x8 SHR AND PUSH2 0x604 DUP2 PUSH2 0x2FE9 JUMP JUMPDEST PUSH2 0x2FE9 JUMP JUMPDEST PUSH2 0x612 CALLER PUSH2 0x2DB1 JUMP JUMPDEST DUP7 SLOAD SWAP6 PUSH2 0x624 PUSH1 0xFF DUP9 PUSH1 0x8 SHR AND PUSH2 0x2FE9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP5 AND DUP5 PUSH1 0xD1 SLOAD AND OR PUSH1 0xD1 SSTORE AND DUP3 PUSH1 0xD2 SLOAD AND OR PUSH1 0xD2 SSTORE DUP2 PUSH1 0xD3 SLOAD AND OR PUSH1 0xD3 SSTORE PUSH1 0xD4 SLOAD AND OR PUSH1 0xD4 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD5 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xD6 SSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xD7 SSTORE PUSH3 0x93A80 PUSH1 0xD8 SSTORE PUSH2 0x1F4 PUSH1 0xD9 SSTORE PUSH1 0xC8 PUSH1 0xDA SSTORE PUSH2 0x682 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP8 SSTORE CODESIZE PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x5DA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xAF4 JUMPI JUMPDEST PUSH2 0x776 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0xCA DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xB DUP2 ADD DUP1 SLOAD SWAP1 PUSH2 0x795 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x30EE JUMP JUMPDEST PUSH1 0xFF DUP3 PUSH1 0x10 SHR AND ISZERO PUSH2 0xAB6 JUMPI PUSH2 0x7B2 PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xD8 SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xA71 JUMPI DUP5 DUP7 MSTORE PUSH1 0xCD DUP5 MSTORE PUSH2 0x7D6 PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH1 0xCE DUP7 MSTORE PUSH1 0x40 DUP9 KECCAK256 SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST ISZERO PUSH2 0xA38 JUMPI DUP5 DUP7 MSTORE PUSH1 0xCD DUP5 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SLOAD PUSH1 0xCE DUP7 MSTORE SWAP1 DUP8 KECCAK256 SLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 LT PUSH1 0x8 DUP2 SWAP1 SHL PUSH2 0xFF00 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 OR SWAP1 SSTORE SWAP1 TIMESTAMP PUSH1 0xD DUP3 ADD SSTORE PUSH1 0xDC SLOAD DUP1 ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 NOT ADD PUSH1 0xDC SSTORE PUSH2 0x82D PUSH1 0xDD SLOAD PUSH2 0x3085 JUMP JUMPDEST PUSH1 0xDD SSTORE DUP4 DUP6 MSTORE PUSH1 0xCA DUP4 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 DUP6 PUSH2 0x850 PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST PUSH2 0x86B PUSH2 0x2710 SWAP2 DUP3 PUSH2 0x864 PUSH1 0xDA SLOAD DUP4 PUSH2 0x3183 JUMP JUMPDEST DIV SWAP1 PUSH2 0x3196 JUMP JUMPDEST DUP3 DUP7 ISZERO PUSH2 0xA1A JUMPI POP DUP3 DUP1 SWAP3 PUSH2 0x884 DUP3 SWAP4 PUSH1 0xD9 SLOAD SWAP1 PUSH2 0x3183 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP8 ADD SLOAD SWAP7 DIV SWAP6 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0xA11 JUMPI JUMPDEST CALL ISZERO PUSH2 0xA06 JUMPI JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xD4 SLOAD DUP9 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND SWAP1 DUP3 AND DUP1 PUSH2 0x9A3 JUMPI JUMPDEST POP POP PUSH1 0xD1 SLOAD AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x99A JUMPI JUMPDEST PUSH2 0x930 JUMPI JUMPDEST POP POP POP SWAP1 PUSH32 0x1EE447DE28C6FF53BC0403BDBC8F4114866F73B12FC451B0605FC923B02B65BF SWAP4 PUSH2 0x91D DUP4 PUSH1 0x6 PUSH1 0x7 PUSH1 0x60 SWAP8 SWAP7 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x996 JUMPI DUP3 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x1C8FDEB5 PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP11 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x98B JUMPI PUSH2 0x96D JUMPI JUMPDEST DUP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x97A SWAP1 SWAP5 SWAP4 SWAP3 SWAP5 PUSH2 0x2B2B JUMP JUMPDEST PUSH2 0x987 JUMPI SWAP1 SWAP2 DUP6 CODESIZE PUSH2 0x967 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x8DB JUMP JUMPDEST DUP1 SWAP5 SWAP3 SWAP4 SWAP5 EXTCODESIZE ISZERO PUSH2 0x996 JUMPI PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x13EF88D1 PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP12 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x9FB JUMPI PUSH2 0x9E6 JUMPI JUMPDEST SWAP1 DUP2 DUP10 SWAP4 SWAP3 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x9F3 SWAP1 SWAP9 SWAP2 SWAP3 SWAP9 PUSH2 0x2B2B JUMP JUMPDEST SWAP7 SWAP1 CODESIZE PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x8A0 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x8A7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC8111053C81D9BDD195CC818D85CDD PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F20766F74696E6720706572696F64206E6F7420656E6465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x111053C81D9BDD1A5B99C81B9BDD081CDD185C9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP3 GT ISZERO PUSH2 0x76D JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB00 JUMPI PUSH2 0xB4E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2D3B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x996 JUMPI PUSH2 0xB6D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2D3B JUMP JUMPDEST SWAP1 PUSH1 0xD5 SLOAD CALLVALUE LT PUSH2 0x11CB JUMPI DUP1 MLOAD ISZERO PUSH2 0x118E JUMPI DUP2 MLOAD ISZERO PUSH2 0x1149 JUMPI TIMESTAMP PUSH1 0x44 CALLDATALOAD GT ISZERO PUSH2 0x1104 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH2 0x1056 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0xC9 SLOAD ADD SWAP5 DUP6 PUSH1 0xC9 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA06 JUMPI DUP6 SWAP3 PUSH2 0x101E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0xBE7 DUP4 PUSH2 0x2B0F JUMP JUMPDEST DUP5 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE DUP3 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE CALLVALUE PUSH1 0xC0 DUP3 ADD MSTORE DUP4 PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH2 0x100 DUP3 ADD MSTORE DUP4 PUSH2 0x120 DUP3 ADD MSTORE DUP4 PUSH2 0x140 DUP3 ADD MSTORE DUP4 PUSH2 0x160 DUP3 ADD MSTORE DUP4 PUSH2 0x180 DUP3 ADD MSTORE DUP4 PUSH2 0x1A0 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x1C0 DUP3 ADD MSTORE DUP4 PUSH2 0x1E0 DUP3 ADD MSTORE DUP3 DUP5 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF45 JUMPI DUP2 SWAP1 PUSH2 0xCAE PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x2A89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFCE JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF64 JUMPI DUP9 SWAP3 PUSH2 0xF59 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF45 JUMPI PUSH2 0xD08 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x2A89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF01 JUMPI JUMPDEST POP SWAP2 DUP7 SWAP4 SWAP2 DUP7 SWAP4 PUSH1 0x20 SWAP9 POP DUP9 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE86 JUMPI DUP7 SWAP4 DUP4 PUSH1 0x40 SWAP7 SWAP5 PUSH1 0xD SWAP5 PUSH2 0x1E0 SWAP5 PUSH2 0xE0C SWAP12 SWAP3 PUSH2 0xE7B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE PUSH1 0xB DUP5 ADD PUSH2 0xDB9 PUSH2 0x160 DUP4 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x180 DUP3 ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR DUP2 SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x10 SHL PUSH3 0xFF0000 AND OR SWAP1 SSTORE PUSH2 0x1C0 DUP2 ADD MLOAD PUSH1 0xC DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER DUP2 MSTORE PUSH1 0xCF DUP8 MSTORE KECCAK256 PUSH2 0x3049 JUMP JUMPDEST PUSH2 0xE17 PUSH1 0xDB SLOAD PUSH2 0x3085 JUMP JUMPDEST PUSH1 0xDB SSTORE PUSH2 0xE25 PUSH1 0xDC SLOAD PUSH2 0x3085 JUMP JUMPDEST PUSH1 0xDC SSTORE DUP2 PUSH32 0x37F3EDF7ED237F91FD6999D49411C7E10B3602F2E561A5ADF21934775659C61A PUSH2 0xE5F PUSH1 0x40 MLOAD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x2C05 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD DUP7 DUP3 ADD MSTORE CALLVALUE PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xD41 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP6 ADD DUP8 MSTORE DUP10 DUP8 KECCAK256 SWAP2 DUP8 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xEE7 JUMPI POP SWAP4 PUSH1 0x1 DUP5 PUSH1 0xD SWAP5 PUSH2 0x1E0 SWAP5 PUSH2 0xE0C SWAP12 SWAP9 PUSH1 0x40 SWAP11 SWAP9 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xECE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0xD59 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xEBE JUMP JUMPDEST DUP2 DUP4 ADD MLOAD DUP5 SSTORE DUP11 SWAP8 POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP12 ADD SWAP2 DUP12 ADD PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xF3E JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xF33 JUMPI POP POP PUSH2 0xD11 JUMP JUMPDEST DUP10 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF1D JUMP JUMPDEST POP DUP1 PUSH2 0xF1D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x3 DUP7 ADD DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0xFB6 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xF9D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0xCE5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xF8D JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xF77 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1017 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1009 JUMPI POP POP PUSH2 0xCB7 JUMP JUMPDEST DUP11 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xFF3 JUMP JUMPDEST POP DUP1 PUSH2 0xFED JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x104E JUMPI JUMPDEST DUP2 PUSH2 0x103A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x104A JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xBD9 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1853E995 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA06 JUMPI DUP6 SWAP2 PUSH2 0x10CA JUMPI JUMPDEST POP PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417374726F6C6F676572206E6F74207665726966696564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x10FC JUMPI JUMPDEST DUP2 PUSH2 0x10E4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x104A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x104A JUMPI CODESIZE PUSH2 0x1080 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446561646C696E65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5469746C652063616E6E6F7420626520656D707479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420617374726F6C6F676572207374616B65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH2 0x122F PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP1 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP4 DUP2 DUP2 AND ISZERO ISZERO DUP6 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x129C PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x12A4 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD2 SLOAD AND OR PUSH1 0xD2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xDA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x12FA PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD5 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xD6 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xD7 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1332 PUSH2 0x2C45 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0xCF DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP1 DUP6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 DUP4 MSTORE DUP1 DUP4 KECCAK256 SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x137B JUMPI PUSH2 0x1377 DUP6 PUSH2 0x136B DUP2 DUP10 SUB DUP3 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D00 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1354 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH2 0x13B1 PUSH2 0x2C5B JUMP JUMPDEST DUP2 PUSH1 0x60 DUP5 MLOAD PUSH2 0x13BF DUP2 PUSH2 0x2AF4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x13F7 DUP2 PUSH2 0x2AF4 JUMP JUMPDEST DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO ISZERO SWAP3 DUP4 DUP4 MSTORE PUSH1 0xFF PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x8 SHR AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x60 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP6 ADD SLOAD SWAP5 PUSH1 0x40 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD AND SWAP4 ADD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE MLOAD ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE MLOAD PUSH1 0x40 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x80 PUSH1 0xDB SLOAD PUSH1 0xDC SLOAD PUSH1 0xDD SLOAD PUSH1 0xDE SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xD2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1656 JUMPI JUMPDEST PUSH2 0x14D6 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0xFF PUSH1 0xB PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1611 JUMPI DUP1 DUP4 MSTORE PUSH1 0xCB DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND ISZERO PUSH2 0x15DC JUMPI PUSH1 0x2 ADD SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x159E JUMPI DUP5 SWAP1 PUSH2 0x1525 CALLER DUP6 PUSH2 0x31A3 JUMP JUMPDEST SWAP5 DUP6 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x1533 JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SWAP1 DUP6 SWAP1 PUSH2 0x1594 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 CALLER SWAP1 CALL ISZERO PUSH2 0x1589 JUMPI PUSH32 0x24B5EFA61DD1CFC659205A97FB8ED868F3CB8C81922BAB2B96423E5DE1DE2CB7 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995DD85C9908185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BC81D9BDD1948199BDD5B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726564696374696F6E206E6F74207265736F6C766564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x14CD JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xD3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xDC SLOAD PUSH2 0x16A8 DUP2 PUSH2 0x33F3 JUMP JUMPDEST SWAP1 PUSH2 0x16B6 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH2 0x16C5 PUSH1 0x1F NOT SWAP2 PUSH2 0x33F3 JUMP JUMPDEST ADD SWAP2 PUSH1 0x20 SWAP3 CALLDATASIZE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0xC9 SLOAD SWAP1 SWAP3 DUP4 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x1377 DUP8 DUP3 PUSH2 0x2D00 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xCA DUP4 MSTORE PUSH1 0xFF PUSH1 0xB PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1714 JUMPI JUMPDEST PUSH2 0x170F SWAP1 PUSH2 0x3085 JUMP JUMPDEST PUSH2 0x16D8 JUMP JUMPDEST SWAP5 DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x173C JUMPI PUSH2 0x1734 DUP2 DUP8 DUP6 PUSH2 0x170F SWAP5 PUSH1 0x5 SHL DUP10 ADD ADD MSTORE PUSH2 0x3085 JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0x1706 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE DUP2 DUP1 DUP3 KECCAK256 SLOAD SWAP2 PUSH1 0xCE PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x17AB PUSH2 0x2C45 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0xD0 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP1 DUP6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 DUP4 MSTORE DUP1 DUP4 KECCAK256 SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x17E4 JUMPI PUSH2 0x1377 DUP6 PUSH2 0x136B DUP2 DUP10 SUB DUP3 PUSH2 0x2B3E JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x17CD JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x183E PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xD0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x20 PUSH2 0x186C DUP5 DUP5 PUSH2 0x2C71 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x19A8 JUMPI JUMPDEST PUSH2 0x18A1 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xB DUP2 ADD SWAP1 PUSH1 0x5 DUP3 SLOAD SWAP2 PUSH2 0x18C4 PUSH1 0xFF DUP5 AND ISZERO PUSH2 0x30EE JUMP JUMPDEST ADD SLOAD TIMESTAMP LT PUSH2 0x1963 JUMPI PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND PUSH2 0x191E JUMPI PUSH3 0x10000 SWAP1 PUSH3 0xFF0000 NOT AND OR SWAP1 SSTORE PUSH32 0xC83104E48F44C8C7B89A4DEC1259A93BFFCEF18013DC1AC5891A260DE98A50E5 PUSH1 0x20 PUSH2 0x1914 PUSH1 0xD8 SLOAD TIMESTAMP PUSH2 0x3176 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F20766F74696E6720616C72656164792061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726564696374696F6E20646561646C696E65206E6F74207265616368656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x1898 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19D1 PUSH2 0x2CF1 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP2 ISZERO ISZERO DUP1 PUSH2 0x1BA0 JUMPI JUMPDEST PUSH2 0x19E7 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 PUSH1 0xCA DUP2 MSTORE PUSH1 0xFF PUSH1 0xB PUSH1 0x40 DUP8 KECCAK256 ADD SLOAD PUSH2 0x1A06 DUP3 DUP3 AND ISZERO PUSH2 0x30EE JUMP JUMPDEST PUSH1 0x10 SHR AND ISZERO PUSH2 0x1B64 JUMPI DUP3 DUP6 MSTORE PUSH1 0xCC DUP2 MSTORE PUSH1 0x40 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP2 MSTORE PUSH2 0x1A30 PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x313A JUMP JUMPDEST PUSH2 0x1A3A DUP3 CALLER PUSH2 0x3355 JUMP JUMPDEST ISZERO PUSH2 0x1B2D JUMPI PUSH32 0xF34F077F143D412407A903C03D8D2132B5DD9C006763FDF1FC57F5133610E64F SWAP2 PUSH2 0x1B0B SWAP2 PUSH1 0x40 MLOAD PUSH2 0x1A71 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x1 DUP3 DUP3 ADD DUP9 ISZERO ISZERO DUP2 MSTORE PUSH2 0x1ACE PUSH1 0x40 DUP5 ADD SWAP2 DUP7 DUP4 MSTORE DUP10 DUP13 MSTORE PUSH1 0xCC DUP7 MSTORE PUSH1 0x40 DUP13 KECCAK256 CALLER DUP14 MSTORE DUP7 MSTORE PUSH2 0x1AB7 PUSH1 0x40 DUP14 KECCAK256 SWAP6 MLOAD ISZERO ISZERO DUP7 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP5 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR DUP5 SSTORE JUMP JUMPDEST MLOAD SWAP2 ADD SSTORE DUP6 ISZERO PUSH2 0x1B11 JUMPI PUSH1 0xCD SWAP1 DUP6 DUP9 MSTORE MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x1AED DUP2 SLOAD PUSH2 0x3085 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP5 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0xCE SWAP1 DUP6 DUP9 MSTORE MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x1B26 DUP2 SLOAD PUSH2 0x3085 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x44414F20766F74696E67206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP3 GT ISZERO PUSH2 0x19DE JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x60 SWAP2 PUSH2 0x1BCB PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x40 MLOAD SWAP3 DUP2 DUP2 AND ISZERO ISZERO DUP5 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH2 0x1C6D PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1CC9 PUSH2 0x2CF1 JUMP JUMPDEST SWAP1 DUP1 ISZERO ISZERO DUP1 PUSH2 0x1FE5 JUMPI JUMPDEST PUSH2 0x1CDC SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH1 0xD6 SLOAD CALLVALUE LT PUSH2 0x1FA0 JUMPI PUSH1 0xD7 SLOAD CALLVALUE GT PUSH2 0x1F63 JUMPI DUP1 DUP4 MSTORE PUSH1 0x20 PUSH1 0xCA DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH2 0x1D0C PUSH1 0xFF PUSH1 0xB DUP4 ADD SLOAD AND ISZERO PUSH2 0x30EE JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1F28 JUMPI DUP3 DUP6 MSTORE PUSH1 0xCB DUP3 MSTORE PUSH1 0x40 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH2 0x1D39 PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x313A JUMP JUMPDEST PUSH2 0x1D42 CALLER PUSH2 0x32CC JUMP JUMPDEST ISZERO PUSH2 0x1EE3 JUMPI PUSH1 0x6 DUP2 ADD SLOAD CALLVALUE LT PUSH2 0x1E8E JUMPI SWAP1 PUSH1 0xD0 SWAP2 PUSH2 0x1DE5 PUSH1 0x40 MLOAD PUSH2 0x1D65 DUP2 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x2 DUP9 DUP6 DUP4 ADD DUP10 ISZERO ISZERO DUP2 MSTORE PUSH2 0x1DC9 PUSH1 0x40 DUP6 ADD SWAP2 CALLVALUE DUP4 MSTORE PUSH2 0x1DB2 PUSH1 0x40 PUSH1 0x60 DUP9 ADD SWAP6 DUP1 DUP8 MSTORE DUP14 DUP2 MSTORE PUSH1 0xCB DUP13 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP13 MSTORE KECCAK256 SWAP7 MLOAD ISZERO ISZERO DUP8 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP6 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR DUP6 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 ADD PUSH2 0x1DF4 CALLVALUE DUP3 SLOAD PUSH2 0x3176 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xA DUP2 ADD PUSH2 0x1E04 DUP2 SLOAD PUSH2 0x3085 JUMP JUMPDEST SWAP1 SSTORE DUP5 ISZERO PUSH2 0x1E79 JUMPI PUSH1 0x8 ADD PUSH2 0x1E1A CALLVALUE DUP3 SLOAD PUSH2 0x3176 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST CALLER DUP6 MSTORE MSTORE PUSH2 0x1E2E DUP2 PUSH1 0x40 DUP6 KECCAK256 PUSH2 0x3049 JUMP JUMPDEST PUSH2 0x1E3A CALLVALUE PUSH1 0xDE SLOAD PUSH2 0x3176 JUMP JUMPDEST PUSH1 0xDE SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE CALLVALUE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 PUSH32 0xCBDF6214089CBA887ECBF35A0B6A734589959C9763342C756BB2A80CA2BC9F6E SWAP2 DUP2 SWAP1 DUP2 ADD PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x9 ADD PUSH2 0x1E87 CALLVALUE DUP3 SLOAD PUSH2 0x3176 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572207374616B65206D757374206265203E3D20617374726F6C6F6765 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x72207374616B65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206F776E20417374726F4368617274204E465420746F20766F746500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xA6E8C2D6CA40C2DADEEADCE840E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420766F746572207374616B650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x1CD3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x203A PUSH2 0x2D59 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2047 DUP4 DUP4 PUSH2 0x3176 JUMP JUMPDEST GT PUSH2 0x2055 JUMPI PUSH1 0xD9 SSTORE PUSH1 0xDA SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2070657263656E74616765732063616E6E6F742065786365656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x313025 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x20C0 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD3 SLOAD AND OR PUSH1 0xD3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH2 0x212B PUSH2 0x2123 PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x31A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCD DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x21B6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x340B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x2236 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x996 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x996 JUMPI PUSH2 0x2266 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x22A0 ADDRESS DUP6 EQ ISZERO PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x22BD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x340B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x2E5B JUMP JUMPDEST PUSH2 0x22C5 PUSH2 0x2D59 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x22FB JUMPI POP POP PUSH2 0x4DF SWAP2 POP PUSH2 0x2EBC JUMP JUMPDEST DUP3 AND PUSH1 0x40 MLOAD SWAP4 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP8 SWAP2 DUP2 PUSH2 0x24BD JUMPI JUMPDEST POP PUSH2 0x237F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP3 SWAP4 SWAP5 SUB PUSH2 0x2466 JUMPI PUSH2 0x2391 DUP5 PUSH2 0x2EBC JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP6 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x245E JUMPI JUMPDEST PUSH2 0x23CB JUMPI JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH2 0x244C SWAP3 DUP5 DUP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x23DE DUP7 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP6 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP5 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x2455 JUMPI RETURNDATASIZE PUSH2 0x2430 DUP2 PUSH2 0x2C9F JUMP JUMPDEST SWAP1 PUSH2 0x243E PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2F4C JUMP JUMPDEST POP CODESIZE DUP1 DUP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2F4C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x24E9 JUMPI JUMPDEST PUSH2 0x24D5 DUP2 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x24E5 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x231E JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x24CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x250A PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x2512 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD1 SLOAD AND OR PUSH1 0xD1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x60 SWAP2 PUSH2 0x254F PUSH2 0x2C5B JUMP JUMPDEST DUP2 DUP4 DUP1 MLOAD PUSH2 0x255C DUP2 PUSH2 0x2AC3 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x258F DUP2 PUSH2 0x2AC3 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 PUSH1 0x1 PUSH1 0xFF DUP4 AND ISZERO ISZERO SWAP5 DUP6 DUP6 MSTORE PUSH1 0xFF PUSH1 0x20 DUP7 ADD SWAP5 PUSH1 0x8 SHR AND ISZERO ISZERO DUP5 MSTORE ADD SLOAD SWAP3 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE MLOAD ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH2 0x25E4 PUSH2 0x2D59 JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x2612 JUMPI JUMPDEST CALL ISZERO PUSH2 0x2606 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x25FD JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x2635 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x20 PUSH2 0x186C DUP5 DUP5 PUSH2 0x2C71 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH2 0x267E PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x26B5 ADDRESS DUP3 EQ ISZERO PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x26D2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x340B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x2E5B JUMP JUMPDEST PUSH2 0x26DA PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0xF45 JUMPI DUP4 PUSH1 0x40 MSTORE DUP7 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x2735 JUMPI POP POP POP POP PUSH2 0x4DF SWAP2 POP PUSH2 0x2EBC JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x28D2 JUMPI JUMPDEST POP PUSH2 0x27B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x287B JUMPI PUSH2 0x27CB DUP3 PUSH2 0x2EBC JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2874 JUMPI JUMPDEST PUSH2 0x2808 JUMPI JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x2869 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x281A DUP8 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x2455 JUMPI RETURNDATASIZE PUSH2 0x2430 DUP2 PUSH2 0x2C9F JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP5 PUSH2 0x2800 JUMP JUMPDEST POP DUP1 PUSH2 0x27FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x28FE JUMPI JUMPDEST PUSH2 0x28EA DUP2 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28FA JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x2758 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x28E0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x291F PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD8 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 PUSH2 0x29B5 PUSH1 0x3 DUP4 ADD PUSH2 0x2B5F JUMP JUMPDEST SWAP2 PUSH2 0x29C2 PUSH1 0x4 DUP3 ADD PUSH2 0x2B5F JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP3 ADD SLOAD SWAP4 PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD SWAP1 PUSH1 0x9 DUP7 ADD SLOAD SWAP3 PUSH1 0xA DUP8 ADD SLOAD SWAP5 PUSH1 0xB DUP9 ADD SLOAD SWAP7 PUSH1 0xC DUP10 ADD SLOAD SWAP9 PUSH1 0xD ADD SLOAD SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 DUP1 SWAP15 DUP2 MSTORE PUSH1 0x20 ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE DUP12 PUSH2 0x200 PUSH1 0x60 DUP2 SWAP3 ADD MSTORE DUP13 ADD PUSH2 0x2A1D SWAP2 PUSH2 0x2C05 JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x80 DUP14 ADD MSTORE PUSH2 0x2A2E SWAP2 PUSH2 0x2C05 JUMP JUMPDEST SWAP9 PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x160 DUP7 ADD MSTORE DUP1 PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x180 DUP7 ADD MSTORE PUSH1 0x10 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x1E0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2AB9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2AA3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x200 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2B73 DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2BE2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2B9F JUMPI JUMPDEST POP POP PUSH2 0x2B9D SWAP3 POP SUB DUP4 PUSH2 0x2B3E JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2BCA JUMPI POP POP PUSH2 0x2B9D SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2B8F JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2BB2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B9D SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2B8F JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2C31 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x748 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x748 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2C89 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2ADE JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2CC6 DUP3 PUSH2 0x2C9F JUMP JUMPDEST SWAP2 PUSH2 0x2CD4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2B3E JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x748 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x748 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2D27 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2D19 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x748 JUMPI DUP2 PUSH1 0x20 PUSH2 0x2D56 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x2CBA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D6D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x2E01 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2E62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2EF1 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x340B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2FAE JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2F60 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2F69 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2FC1 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x2FE5 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x2C05 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FF0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x2ADE JUMPI PUSH2 0x306B SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2C71 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3094 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x30B1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081C1C99591A58DD1A5BDB881251 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x30F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726564696374696F6E20616C7265616479207265736F6C7665640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3141 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3094 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x3094 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3094 JUMPI JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH1 0xB DUP2 ADD SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO DUP1 ISZERO PUSH2 0x32C0 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x32B2 JUMPI JUMPDEST PUSH2 0x32AB JUMPI PUSH1 0xFF DUP5 SLOAD SWAP3 PUSH1 0x8 SHR AND SWAP2 PUSH1 0xFF DUP4 ISZERO ISZERO SWAP2 PUSH1 0x8 SHR AND ISZERO ISZERO SUB PUSH2 0x32AB JUMPI PUSH2 0x323F DUP3 PUSH2 0x321D PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST PUSH2 0x3231 PUSH2 0x2710 SWAP2 DUP3 PUSH2 0x864 PUSH1 0xDA SLOAD DUP4 PUSH2 0x3183 JUMP JUMPDEST SWAP1 DUP7 SWAP3 PUSH2 0x3294 JUMPI JUMPDEST POP PUSH2 0x3196 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x328A JUMPI PUSH1 0x8 ADD SLOAD SWAP1 JUMPDEST DUP2 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x325C JUMPI POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x326C SWAP3 SWAP5 SWAP4 SWAP6 ADD SLOAD PUSH2 0x3183 JUMP JUMPDEST SWAP2 PUSH2 0x3276 JUMPI POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x9 ADD SLOAD SWAP1 PUSH2 0x324B JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x32A3 PUSH1 0xD9 SLOAD DUP4 PUSH2 0x3183 JUMP JUMPDEST DIV SWAP1 CODESIZE PUSH2 0x3239 JUMP JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x2 DUP6 ADD SLOAD AND PUSH2 0x31E7 JUMP JUMPDEST POP PUSH1 0xFF DUP5 SLOAD AND ISZERO PUSH2 0x31E0 JUMP JUMPDEST PUSH1 0xD2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x334D JUMPI PUSH1 0x24 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x331A JUMPI JUMPDEST POP PUSH2 0x3315 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3345 JUMPI JUMPDEST DUP2 PUSH2 0x3334 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x484 JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x330A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3327 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xD3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x33E6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL PUSH1 0x0 SWAP4 DUP2 PUSH2 0x33A8 JUMPI JUMPDEST POP PUSH2 0x33A0 JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP5 SWAP2 SWAP5 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x33DE JUMPI JUMPDEST DUP2 PUSH2 0x33C3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB00 JUMPI MLOAD SWAP1 DUP4 DUP3 AND DUP3 SUB PUSH2 0x484 JUMPI POP SWAP3 CODESIZE PUSH2 0x3393 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x33B6 JUMP JUMPDEST POP POP SWAP1 POP PUSH1 0x33 SLOAD AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2ADE JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA2646970667358221220DA 0x5C 0x5E 0x1E 0xBA 0xCC MLOAD JUMPI DUP1 PUSH10 0x2B8F5DA59453C4CC2CD5 PUSH23 0xA25928E384A47DE2C5C4A864736F6C6343000811003300 ","sourceMap":"455:18654:12:-:0;;;;;;;1332:4:6;1324:13;;6007::5;455:18654:12;;;;;;;;;;;;;;6078:31:5;6074:139;;-1:-1:-1;455:18654:12;;;;;;;;1324:13:6;455:18654:12;;;;;;;;;;;;;;;;6074:139:5;455:18654:12;;;;;;6007:13:5;455:18654:12;6174:28:5;455:18654:12;;;;;;6174:28:5;6074:139;;;455:18654:12;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":11355,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_38069":{"entryPoint":11333,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":11450,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":11505,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":11579,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":11520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":11269,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":13299,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":11423,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":12361,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_uint256":{"entryPoint":12662,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":12675,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12694,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":11103,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10889,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":11070,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_38075":{"entryPoint":10947,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_38083":{"entryPoint":10996,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_38096":{"entryPoint":11023,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_38099":{"entryPoint":11051,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateVoterReward":{"entryPoint":12707,"id":3717,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":11609,"id":68,"parameterSlots":0,"returnSlots":0},"fun_hasAstroChartNFT":{"entryPoint":13004,"id":3802,"parameterSlots":1,"returnSlots":1},"fun_isDAOMember":{"entryPoint":13141,"id":3846,"parameterSlots":2,"returnSlots":1},"fun_setImplementation":{"entryPoint":11964,"id":231,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":11697,"id":125,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":12108,"id":1086,"parameterSlots":4,"returnSlots":1},"increment_uint256":{"entryPoint":12421,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_36e1":{"entryPoint":11770,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_512f":{"entryPoint":12602,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":11867,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa20":{"entryPoint":12458,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":12265,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e5c7":{"entryPoint":12526,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":11377,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offset_0t_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"696":[{"length":32,"start":8560},{"length":32,"start":8816},{"length":32,"start":9864}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b6000803560e01c80624fbbb0146129705780630e8c47f214612952578063256c52d31461292857806334954999146129055780633659cfe61461266357806337562b291461261b5780633ccfd60b146125cb578063444a50c21461253057806344cda485146124f05780634f1ef2861461222157806352d1902d1461215d578063533a12a5146121335780635aa76be01461210457806363ab68ef146120e657806365af67bd146120a65780636f5020561461201a5780636fd31a4114611ff1578063700c836714611cb1578063715018a614611c5457806372f022c214611c3657806373c84d2114611c0d5780637864066814611bac57806384ebaae1146119b4578063886dbdf91461187a5780638b3511f7146118245780638da5cb5b146117fb578063950c7822146117885780639dcf0b7a14611750578063a9d6921b1461168b578063ab76c9ed14611662578063ae169a50146114ae578063b488202d14611485578063b6bb17541461144e578063bc3f931f14611392578063bc8581851461130f578063c8ab686a146112e0578063cdd78cfc146112c2578063ce083d7314611282578063d23254b414611210578063d472a57014610b22578063d75ebce514610b04578063e69fe3dc1461074d578063e77fc7a414610576578063e9725c2114610536578063f2fde38b146104a5578063f7333e33146104875763fe83bece1461022157600080fd5b3461048457602036600319011261048457806040916101e0835161024481612b0f565b8281528260208201528285820152606080820152606060808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c0820152015260043580151580610478575b6102b9906130aa565b815260ca60205220600d604051916102d083612b0f565b8054835260018101546001600160a01b03166020840152600281015460408401526102fd60038201612b5f565b606084015261030e60048201612b5f565b6080840152600581015460a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610120840152600a81015461014084015260ff600b8201548181161515610160860152818160081c16151561018086015260101c1615156101a0840152600c8101546101c084015201546101e08201526040518091602082528051602083015260018060a01b036020820151166040830152604081015160608301526101e06103f46103de60608401516102006080870152610220860190612c05565b6080840151858203601f190160a0870152612c05565b9160a081015160c085015260c081015160e085015260e0810151610100850152610100810151610120850152610120810151610140850152610140810151610160850152610160810151151561018085015261018081015115156101a08501526101a081015115156101c08501526101c08101518285015201516102008301520390f35b5060c9548111156102b0565b80fd5b5034610484578060031936011261048457602060d654604051908152f35b5034610484576020366003190112610484576104bf612c45565b6104c7612d59565b6001600160a01b038116156104e2576104df90612db1565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461048457602036600319011261048457610550612c45565b610558612d59565b60018060a01b03166001600160601b0360a01b60d454161760d45580f35b50346104845760e036600319011261048457610590612c45565b610598612c5b565b906001600160a01b0390604435828116919082900361074857606435918383168093036107485785549360ff8560081c16159485809661073b575b8015610724575b156106c85760ff1981166001178855856106b7575b5061060960ff885460081c1661060481612fe9565b612fe9565b61061233612db1565b86549561062460ff8860081c16612fe9565b816001600160601b0360a01b94168460d154161760d155168260d254161760d2558160d354161760d35560d454161760d45560843560d55560a43560d65560c43560d75562093a8060d8556101f460d95560c860da55610682575080f35b61ff00191681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff1916610101178755386105ef565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105da5750600160ff8216146105da565b50600160ff8216106105d3565b600080fd5b503461048457602080600319360112610b00576004359081151580610af4575b610776906130aa565b81835260ca815260408320600b810180549061079560ff8316156130ee565b60ff8260101c1615610ab6576107b2600584015460d85490613176565b4210610a715784865260cd84526107d6604087205460ce8652604088205490613176565b15610a385784865260cd845260408087205460ce86529087205461ffff199093169210600881901b61ff00169290921760011790559042600d82015560dc548015610a24576000190160dc5561082d60dd54613085565b60dd5583855260ca83526040852090856108506007840154600685015490613176565b61086b612710918261086460da5483613183565b0490613196565b828615610a1a5750828092610884829360d95490613183565b60019097015496049586906001600160a01b0316828215610a11575bf115610a06575b6001810154600282015460d45488926001600160a01b0391908216908216806109a3575b505060d15416908115158061099a575b610930575b505050907f1ee447de28c6ff53bc0403bdbc8f4114866f73b12fc451b0605fc923b02b65bf9361091d836006600760609796015491015490613176565b906040519384528301526040820152a280f35b813b15610996578291604483926040519485938492631c8fdeb560e31b845260048401528a60248401525af1801561098b5761096d575b806108e0565b61097a9094939294612b2b565b6109875790918538610967565b8580fd5b6040513d84823e3d90fd5b8280fd5b508015156108db565b80949293943b15610996576044839260405194859384926313ef88d160e31b845260048401528b60248401525af180156109fb576109e6575b90818993926108cb565b6109f39098919298612b2b565b9690386109dc565b6040513d8b823e3d90fd5b6040513d87823e3d90fd5b506108fc6108a0565b94505050506108a7565b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b8152600481018590526011602482015270139bc8111053c81d9bdd195cc818d85cdd607a1b6044820152606490fd5b60405162461bcd60e51b815260048101859052601b60248201527f44414f20766f74696e6720706572696f64206e6f7420656e64656400000000006044820152606490fd5b60405162461bcd60e51b8152600481018590526016602482015275111053c81d9bdd1a5b99c81b9bdd081cdd185c9d195960521b6044820152606490fd5b5060c95482111561076d565b5080fd5b5034610484578060031936011261048457602060d954604051908152f35b506060366003190112610484576004356001600160401b038111610b0057610b4e903690600401612d3b565b6024356001600160401b03811161099657610b6d903690600401612d3b565b9060d55434106111cb5780511561118e57815115611149574260443511156111045760d1546001600160a01b03169182611056575b6024906020600160c95401948560c9556040519384809263656d0c3960e01b82523360048301525afa918215610a0657859261101e575b5060405191610be783612b0f565b8483523360208401526040830152826060830152608082015260443560a08201523460c08201528360e08201528361010082015283610120820152836101408201528361016082015283610180820152836101a0820152426101c0820152836101e082015282845260ca6020526040842090805182556001820160018060a01b036020830151166001600160601b0360a01b8254161790556040810151600283015560608101518051906001600160401b038211610f45578190610cae6003860154612a89565b601f8111610fce575b50602090601f8311600114610f64578892610f59575b50508160011b916000199060031b1c19161760038301555b60808101518051906001600160401b038211610f4557610d086004850154612a89565b601f8111610f01575b50918693918693602098508890601f8311600114610e865786938360409694600d946101e094610e0c9b92610e7b575b50508160011b916000199060031b1c19161760048501555b60a0810151600585015560c0810151600685015560e0810151600785015561010081015160088501556101208101516009850155610140810151600a850155600b8401610db96101608301511515829060ff801983541691151516179055565b610180820151815461ff00191690151560081b61ff00161781556101a0820151815462ff0000191690151560101b62ff0000161790556101c0810151600c850155015191015533815260cf875220613049565b610e1760db54613085565b60db55610e2560dc54613085565b60dc55817f37f3edf7ed237f91fd6999d49411c7e10b3602f2e561a5adf21934775659c61a610e5f60405193606085526060850190612c05565b92604435868201523460408201528033940390a3604051908152f35b015190503880610d41565b9060048501875289872091875b601f1985168110610ee7575093600184600d946101e094610e0c9b9860409a98601f19811610610ece575b505050811b016004850155610d59565b015160001960f88460031b161c19169055388080610ebe565b8183015184558a9750600190930192918b01918b01610e93565b60048501885260208820601f840160051c810160208510610f3e575b601f830160051c82018110610f33575050610d11565b898155600101610f1d565b5080610f1d565b634e487b7160e01b87526041600452602487fd5b015190503880610ccd565b600386018952602089209250601f198416895b818110610fb65750908460019594939210610f9d575b505050811b016003830155610ce5565b015160001960f88460031b161c19169055388080610f8d565b92936020600181928786015181550195019301610f77565b90915060038501885260208820601f840160051c810160208510611017575b90849392915b601f830160051c82018110611009575050610cb7565b8a8155859450600101610ff3565b5080610fed565b9091506020813d60201161104e575b8161103a60209383612b3e565b8101031261104a57519038610bd9565b8480fd5b3d915061102d565b604051631853e99560e11b8152336004820152602081602481875afa908115610a065785916110ca575b50610ba25760405162461bcd60e51b815260206004820152601760248201527f417374726f6c6f676572206e6f742076657269666965640000000000000000006044820152606490fd5b90506020813d82116110fc575b816110e460209383612b3e565b8101031261104a5751801515810361104a5738611080565b3d91506110d7565b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d70747900000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420617374726f6c6f676572207374616b650000006044820152606490fd5b503461048457604036600319011261048457604060809161122f612c5b565b600435825260cb6020528282209060018060a01b031682526020522080549060ff60026001830154920154169060ff604051938181161515855260081c1615156020840152604083015215156060820152f35b50346104845760203660031901126104845761129c612c45565b6112a4612d59565b60018060a01b03166001600160601b0360a01b60d254161760d25580f35b5034610484578060031936011261048457602060da54604051908152f35b5034610484576060366003190112610484576112fa612d59565b60043560d55560243560d65560443560d75580f35b503461048457602080600319360112610b00576001600160a01b03611332612c45565b16825260cf815260408220916040518092808554928381520194835280832092905b82821061137b576113778561136b81890382612b3e565b60405191829182612d00565b0390f35b835486529485019460019384019390910190611354565b50346104845760403660031901126104845760406080916113b1612c5b565b81606084516113bf81612af4565b82815282602082015282868201520152600435825260cb6020528282209060018060a01b03168252602052206040516113f781612af4565b81549160ff831615159283835260ff602084019160081c1615158152606060ff6002600185015494604087019586520154169301921515835260405193845251151560208401525160408301525115156060820152f35b5034610484578060031936011261048457608060db5460dc5460dd5460de5491604051938452602084015260408301526060820152f35b503461048457806003193601126104845760d2546040516001600160a01b039091168152602090f35b503461048457602080600319360112610b005760043580151580611656575b6114d6906130aa565b80835260ca825260ff600b60408520015416156116115780835260cb82526040832033845282526040832060ff815416156115dc5760020191825460ff811661159e57849061152533856131a3565b948515918215611533578380f35b60ff1916600117905581908590611594575b8280929181923390f115611589577f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7906040519384523393a3388080838180808380f35b6040513d85823e3d90fd5b6108fc9150611545565b60405162461bcd60e51b815260048101839052601660248201527514995dd85c9908185b1c9958591e4818db185a5b595960521b6044820152606490fd5b60405162461bcd60e51b815260048101849052600d60248201526c139bc81d9bdd1948199bdd5b99609a1b6044820152606490fd5b60405162461bcd60e51b815260048101839052601760248201527f50726564696374696f6e206e6f74207265736f6c7665640000000000000000006044820152606490fd5b5060c9548111156114cd565b503461048457806003193601126104845760d3546040516001600160a01b039091168152602090f35b503461048457806003193601126104845760dc546116a8816133f3565b906116b66040519283612b3e565b8082526116c5601f19916133f3565b0191602092368484013760c95490928360015b838111156116ee57604051806113778782612d00565b80825260ca835260ff600b6040842001541615611714575b61170f90613085565b6116d8565b94845181101561173c5761173481878561170f9460051b89010152613085565b959050611706565b634e487b7160e01b82526032600452602482fd5b503461048457602036600319011261048457604090600435815260cd60205281808220549160ce602052205482519182526020820152f35b503461048457602080600319360112610b00576001600160a01b036117ab612c45565b16825260d0815260408220916040518092808554928381520194835280832092905b8282106117e4576113778561136b81890382612b3e565b8354865294850194600193840193909101906117cd565b50346104845780600319360112610484576033546040516001600160a01b039091168152602090f35b50346104845760403660031901126104845761183e612c45565b6001600160a01b0316815260d0602052604081208054602435929083101561048457602061186c8484612c71565b90546040519160031b1c8152f35b503461048457602036600319011261048457600435801515806119a8575b6118a1906130aa565b80825260ca60205260408220600b81019060058254916118c460ff8416156130ee565b015442106119635760ff8160101c1661191e57620100009062ff000019161790557fc83104e48f44c8c7b89a4dec1259a93bffcef18013dc1ac5891a260de98a50e5602061191460d85442613176565b604051908152a280f35b60405162461bcd60e51b815260206004820152601960248201527f44414f20766f74696e6720616c726561647920616374697665000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f50726564696374696f6e20646561646c696e65206e6f742072656163686564006044820152606490fd5b5060c954811115611898565b5034610484576060366003190112610484576004356119d1612cf1565b9060443581151580611ba0575b6119e7906130aa565b818452602060ca815260ff600b604087200154611a06828216156130ee565b60101c1615611b645782855260cc8152604085203386528152611a3060ff6040872054161561313a565b611a3a8233613355565b15611b2d577ff34f077f143d412407a903c03d8d2132b5dd9c006763fdf1fc57f5133610e64f91611b0b91604051611a7181612ac3565b6001815260018282018815158152611ace6040840191868352898c5260cc865260408c20338d528652611ab760408d2095511515869060ff801983541691151516179055565b51845461ff00191690151560081b61ff0016178455565b519101558515611b115760cd908588525260408620611aed8154613085565b90555b60408051951515865260208601919091523394918291820190565b0390a380f35b60ce908588525260408620611b268154613085565b9055611af0565b6064906040519062461bcd60e51b82526004820152601060248201526f2737ba1030902220a79036b2b6b132b960811b6044820152fd5b6064906040519062461bcd60e51b82526004820152601560248201527444414f20766f74696e67206e6f742061637469766560581b6044820152fd5b5060c9548211156119de565b5034610484576040366003190112610484576040606091611bcb612c5b565b600435825260cc6020528282209060018060a01b03168252602052206001815491015460ff604051928181161515845260081c16151560208301526040820152f35b503461048457806003193601126104845760d4546040516001600160a01b039091168152602090f35b5034610484578060031936011261048457602060d854604051908152f35b5034610484578060031936011261048457611c6d612d59565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50604036600319011261048457600435611cc9612cf1565b9080151580611fe5575b611cdc906130aa565b60d6543410611fa05760d7543411611f6357808352602060ca815260408420611d0c60ff600b83015416156130ee565b6005810154421015611f285782855260cb8252604085203386528252611d3960ff6040872054161561313a565b611d42336132cc565b15611ee35760068101543410611e8e579060d091611de5604051611d6581612af4565b600181526002888583018915158152611dc96040850191348352611db2604060608801958087528d815260cb8c528181203382528c522096511515879060ff801983541691151516179055565b51855461ff00191690151560081b61ff0016178555565b51600184015551151591019060ff801983541691151516179055565b60078101611df4348254613176565b9055600a8101611e048154613085565b90558415611e7957600801611e1a348254613176565b90555b33855252611e2e8160408520613049565b611e3a3460de54613176565b60de5560408051921515835234602084015233927fcbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e9181908101611b0b565b600901611e87348254613176565b9055611e1d565b60405162461bcd60e51b815260048101839052602760248201527f566f746572207374616b65206d757374206265203e3d20617374726f6c6f676560448201526672207374616b6560c81b6064820152608490fd5b60405162461bcd60e51b815260048101839052601f60248201527f4d757374206f776e20417374726f4368617274204e465420746f20766f7465006044820152606490fd5b60405162461bcd60e51b8152600481018390526013602482015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152740a6e8c2d6ca40c2dadeeadce840e8dede40d0d2ced605b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e7420766f746572207374616b6500000000000000006044820152606490fd5b5060c954811115611cd3565b503461048457806003193601126104845760d1546040516001600160a01b039091168152602090f35b50346104845760403660031901126104845760243560043561203a612d59565b6103e86120478383613176565b116120555760d95560da5580f35b60405162461bcd60e51b815260206004820152602360248201527f546f74616c2070657263656e74616765732063616e6e6f74206578636565642060448201526231302560e81b6064820152608490fd5b5034610484576020366003190112610484576120c0612c45565b6120c8612d59565b60018060a01b03166001600160601b0360a01b60d354161760d35580f35b5034610484578060031936011261048457602060d554604051908152f35b503461048457604036600319011261048457602061212b612123612c5b565b6004356131a3565b604051908152f35b5034610484576020366003190112610484576040602091600435815260cd83522054604051908152f35b50346104845780600319360112610484577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036121b657602060405160008051602061340b8339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b50604036600319011261048457612236612c45565b6024356001600160401b038111610996573660238201121561099657612266903690602481600401359101612cba565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291906122a030851415612dfa565b6122bd60008051602061340b833981519152948286541614612e5b565b6122c5612d59565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156122fb5750506104df9150612ebc565b8216604051936352d1902d60e01b85526020948581600481865afa8791816124bd575b5061237f5760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b94929394036124665761239184612ebc565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a281511580159061245e575b6123cb575b50505080f35b61244c928480604051946123de86612ac3565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d15612455573d61243081612c9f565b9061243e6040519283612b3e565b81528681943d92013e612f4c565b503880806123c5565b60609250612f4c565b5060016123c0565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d83116124e9575b6124d58183612b3e565b810103126124e55751903861231e565b8780fd5b503d6124cb565b50346104845760203660031901126104845761250a612c45565b612512612d59565b60018060a01b03166001600160601b0360a01b60d154161760d15580f35b503461048457604036600319011261048457604060609161254f612c5b565b8183805161255c81612ac3565b8281528260208201520152600435825260cc6020528282209060018060a01b031682526020522060405161258f81612ac3565b81546040600160ff831615159485855260ff602086019460081c1615158452015492019182526040519283525115156020830152516040820152f35b50346104845780600319360112610484576125e4612d59565b8080808060018060a01b03603354164790828215612612575bf1156126065780f35b604051903d90823e3d90fd5b506108fc6125fd565b503461048457604036600319011261048457612635612c45565b6001600160a01b0316815260cf602052604081208054602435929083101561048457602061186c8484612c71565b503461048457602080600319360112610b005761267e612c45565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166126b530821415612dfa565b6126d260008051602061340b833981519152918383541614612e5b565b6126da612d59565b60405190848201928284106001600160401b03851117610f45578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143541660001461273557505050506104df9150612ebc565b8492939416906040516352d1902d60e01b81528681600481865afa8891816128d2575b506127b95760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959394950361287b576127cb82612ebc565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a284835115801590612874575b612808575b505050505080f35b80612869956040519561281a87612ac3565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15612455573d61243081612c9f565b503880808084612800565b50806127fb565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d83116128fe575b6128ea8183612b3e565b810103126128fa57519038612758565b8880fd5b503d6128e0565b50346104845760203660031901126104845761291f612d59565b60043560d85580f35b5034610484576020366003190112610484576040602091600435815260ce83522054604051908152f35b5034610484578060031936011261048457602060d754604051908152f35b503461048457602036600319011261048457600435815260ca602052604090208054600182015460028301546001600160a01b0390911692906129b560038301612b5f565b916129c260048201612b5f565b9260058201549360068301546007840154600885015490600986015492600a87015494600b88015496600c89015498600d0154996040519d8e809e81526020015260408d01528b6102006060819201528c01612a1d91612c05565b8b810360808d0152612a2e91612c05565b9860a08b015260c08a015260e089015261010088015261012087015261014086015260ff811615156101608601528060081c60ff16151561018086015260101c60ff1615156101a08501526101c08401526101e08301520390f35b90600182811c92168015612ab9575b6020831014612aa357565b634e487b7160e01b600052602260045260246000fd5b91607f1691612a98565b606081019081106001600160401b03821117612ade57604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b03821117612ade57604052565b61020081019081106001600160401b03821117612ade57604052565b6001600160401b038111612ade57604052565b90601f801991011681019081106001600160401b03821117612ade57604052565b9060405191826000825492612b7384612a89565b908184526001948581169081600014612be25750600114612b9f575b5050612b9d92500383612b3e565b565b9093915060005260209081600020936000915b818310612bca575050612b9d93508201013880612b8f565b85548884018501529485019487945091830191612bb2565b915050612b9d94506020925060ff191682840152151560051b8201013880612b8f565b919082519283825260005b848110612c31575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612c10565b600435906001600160a01b038216820361074857565b602435906001600160a01b038216820361074857565b8054821015612c895760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160401b038111612ade57601f01601f191660200190565b929192612cc682612c9f565b91612cd46040519384612b3e565b829481845281830111610748578281602093846000960137010152565b60243590811515820361074857565b6020908160408183019282815285518094520193019160005b828110612d27575050505090565b835185529381019392810192600101612d19565b9080601f8301121561074857816020612d5693359101612cba565b90565b6033546001600160a01b03163303612d6d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15612e0157565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15612e6257565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15612ef15760008051602061340b83398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015612fae5750815115612f60575090565b3b15612f695790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015612fc15750805190602001fd5b60405162461bcd60e51b815260206004820152908190612fe5906024830190612c05565b0390fd5b15612ff057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b805468010000000000000000811015612ade5761306b91600182018155612c71565b819291549060031b600019811b9283911b16911916179055565b60001981146130945760010190565b634e487b7160e01b600052601160045260246000fd5b156130b157565b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c1c99591a58dd1a5bdb881251605a1b6044820152606490fd5b156130f557565b60405162461bcd60e51b815260206004820152601b60248201527f50726564696374696f6e20616c7265616479207265736f6c76656400000000006044820152606490fd5b1561314157565b60405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b9190820180921161309457565b8181029291811591840414171561309457565b9190820391821161309457565b600090815260ca602052604081209160cb602052604082209060018060a01b031682526020526040812091600b8101549060ff82161580156132c0575b80156132b2575b6132ab5760ff84549260081c169160ff8315159160081c161515036132ab5761323f8261321d6007840154600685015490613176565b613231612710918261086460da5483613183565b908692613294575b50613196565b911561328a5760080154905b811590811561325c57505050905090565b600161326c929493950154613183565b9161327657500490565b634e487b7160e01b81526012600452602490fd5b600901549061324b565b9091506132a360d95483613183565b049038613239565b5050905090565b5060ff6002850154166131e7565b5060ff845416156131e0565b60d2546001600160a01b039081169190821561334d57602460209260405194859384926370a0823160e01b84521660048301525afa6000918161331a575b506133155750600090565b151590565b90916020823d8211613345575b8161333460209383612b3e565b81010312610484575051903861330a565b3d9150613327565b505050600190565b60d3546001600160a01b039081169290919083156133e6576020906024604051809681936331a9108f60e11b835260048301525afa600093816133a8575b506133a057505050600090565b811691161490565b6020949194813d82116133de575b816133c360209383612b3e565b81010312610b00575190838216820361048457509238613393565b3d91506133b6565b5050905060335416331490565b6001600160401b038111612ade5760051b6020019056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220da5c5e1ebacc515780692b8f5da59453c4cc2cd576a25928e384a47de2c5c4a864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x4FBBB0 EQ PUSH2 0x2970 JUMPI DUP1 PUSH4 0xE8C47F2 EQ PUSH2 0x2952 JUMPI DUP1 PUSH4 0x256C52D3 EQ PUSH2 0x2928 JUMPI DUP1 PUSH4 0x34954999 EQ PUSH2 0x2905 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2663 JUMPI DUP1 PUSH4 0x37562B29 EQ PUSH2 0x261B JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x25CB JUMPI DUP1 PUSH4 0x444A50C2 EQ PUSH2 0x2530 JUMPI DUP1 PUSH4 0x44CDA485 EQ PUSH2 0x24F0 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2221 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x215D JUMPI DUP1 PUSH4 0x533A12A5 EQ PUSH2 0x2133 JUMPI DUP1 PUSH4 0x5AA76BE0 EQ PUSH2 0x2104 JUMPI DUP1 PUSH4 0x63AB68EF EQ PUSH2 0x20E6 JUMPI DUP1 PUSH4 0x65AF67BD EQ PUSH2 0x20A6 JUMPI DUP1 PUSH4 0x6F502056 EQ PUSH2 0x201A JUMPI DUP1 PUSH4 0x6FD31A41 EQ PUSH2 0x1FF1 JUMPI DUP1 PUSH4 0x700C8367 EQ PUSH2 0x1CB1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C54 JUMPI DUP1 PUSH4 0x72F022C2 EQ PUSH2 0x1C36 JUMPI DUP1 PUSH4 0x73C84D21 EQ PUSH2 0x1C0D JUMPI DUP1 PUSH4 0x78640668 EQ PUSH2 0x1BAC JUMPI DUP1 PUSH4 0x84EBAAE1 EQ PUSH2 0x19B4 JUMPI DUP1 PUSH4 0x886DBDF9 EQ PUSH2 0x187A JUMPI DUP1 PUSH4 0x8B3511F7 EQ PUSH2 0x1824 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17FB JUMPI DUP1 PUSH4 0x950C7822 EQ PUSH2 0x1788 JUMPI DUP1 PUSH4 0x9DCF0B7A EQ PUSH2 0x1750 JUMPI DUP1 PUSH4 0xA9D6921B EQ PUSH2 0x168B JUMPI DUP1 PUSH4 0xAB76C9ED EQ PUSH2 0x1662 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x14AE JUMPI DUP1 PUSH4 0xB488202D EQ PUSH2 0x1485 JUMPI DUP1 PUSH4 0xB6BB1754 EQ PUSH2 0x144E JUMPI DUP1 PUSH4 0xBC3F931F EQ PUSH2 0x1392 JUMPI DUP1 PUSH4 0xBC858185 EQ PUSH2 0x130F JUMPI DUP1 PUSH4 0xC8AB686A EQ PUSH2 0x12E0 JUMPI DUP1 PUSH4 0xCDD78CFC EQ PUSH2 0x12C2 JUMPI DUP1 PUSH4 0xCE083D73 EQ PUSH2 0x1282 JUMPI DUP1 PUSH4 0xD23254B4 EQ PUSH2 0x1210 JUMPI DUP1 PUSH4 0xD472A570 EQ PUSH2 0xB22 JUMPI DUP1 PUSH4 0xD75EBCE5 EQ PUSH2 0xB04 JUMPI DUP1 PUSH4 0xE69FE3DC EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0xE77FC7A4 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0xE9725C21 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0xF7333E33 EQ PUSH2 0x487 JUMPI PUSH4 0xFE83BECE EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI DUP1 PUSH1 0x40 SWAP2 PUSH2 0x1E0 DUP4 MLOAD PUSH2 0x244 DUP2 PUSH2 0x2B0F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP3 PUSH2 0x1C0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x478 JUMPI JUMPDEST PUSH2 0x2B9 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2D0 DUP4 PUSH2 0x2B0F JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2FD PUSH1 0x3 DUP3 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x30E PUSH1 0x4 DUP3 ADD PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0xB DUP3 ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH2 0x160 DUP7 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x180 DUP7 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x1C0 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1E0 PUSH2 0x3F4 PUSH2 0x3DE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x200 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x220 DUP7 ADD SWAP1 PUSH2 0x2C05 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x2C05 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x1C0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x200 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x2B0 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x4BF PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x4C7 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x4E2 JUMPI PUSH2 0x4DF SWAP1 PUSH2 0x2DB1 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x550 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x558 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD4 SLOAD AND OR PUSH1 0xD4 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x590 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x598 PUSH2 0x2C5B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x748 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 DUP4 DUP4 AND DUP1 SWAP4 SUB PUSH2 0x748 JUMPI DUP6 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0x73B JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x724 JUMPI JUMPDEST ISZERO PUSH2 0x6C8 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP9 SSTORE DUP6 PUSH2 0x6B7 JUMPI JUMPDEST POP PUSH2 0x609 PUSH1 0xFF DUP9 SLOAD PUSH1 0x8 SHR AND PUSH2 0x604 DUP2 PUSH2 0x2FE9 JUMP JUMPDEST PUSH2 0x2FE9 JUMP JUMPDEST PUSH2 0x612 CALLER PUSH2 0x2DB1 JUMP JUMPDEST DUP7 SLOAD SWAP6 PUSH2 0x624 PUSH1 0xFF DUP9 PUSH1 0x8 SHR AND PUSH2 0x2FE9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP5 AND DUP5 PUSH1 0xD1 SLOAD AND OR PUSH1 0xD1 SSTORE AND DUP3 PUSH1 0xD2 SLOAD AND OR PUSH1 0xD2 SSTORE DUP2 PUSH1 0xD3 SLOAD AND OR PUSH1 0xD3 SSTORE PUSH1 0xD4 SLOAD AND OR PUSH1 0xD4 SSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xD5 SSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xD6 SSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xD7 SSTORE PUSH3 0x93A80 PUSH1 0xD8 SSTORE PUSH2 0x1F4 PUSH1 0xD9 SSTORE PUSH1 0xC8 PUSH1 0xDA SSTORE PUSH2 0x682 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP2 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP8 SSTORE CODESIZE PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x5DA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xAF4 JUMPI JUMPDEST PUSH2 0x776 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0xCA DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xB DUP2 ADD DUP1 SLOAD SWAP1 PUSH2 0x795 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x30EE JUMP JUMPDEST PUSH1 0xFF DUP3 PUSH1 0x10 SHR AND ISZERO PUSH2 0xAB6 JUMPI PUSH2 0x7B2 PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xD8 SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xA71 JUMPI DUP5 DUP7 MSTORE PUSH1 0xCD DUP5 MSTORE PUSH2 0x7D6 PUSH1 0x40 DUP8 KECCAK256 SLOAD PUSH1 0xCE DUP7 MSTORE PUSH1 0x40 DUP9 KECCAK256 SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST ISZERO PUSH2 0xA38 JUMPI DUP5 DUP7 MSTORE PUSH1 0xCD DUP5 MSTORE PUSH1 0x40 DUP1 DUP8 KECCAK256 SLOAD PUSH1 0xCE DUP7 MSTORE SWAP1 DUP8 KECCAK256 SLOAD PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 LT PUSH1 0x8 DUP2 SWAP1 SHL PUSH2 0xFF00 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 OR SWAP1 SSTORE SWAP1 TIMESTAMP PUSH1 0xD DUP3 ADD SSTORE PUSH1 0xDC SLOAD DUP1 ISZERO PUSH2 0xA24 JUMPI PUSH1 0x0 NOT ADD PUSH1 0xDC SSTORE PUSH2 0x82D PUSH1 0xDD SLOAD PUSH2 0x3085 JUMP JUMPDEST PUSH1 0xDD SSTORE DUP4 DUP6 MSTORE PUSH1 0xCA DUP4 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP1 DUP6 PUSH2 0x850 PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST PUSH2 0x86B PUSH2 0x2710 SWAP2 DUP3 PUSH2 0x864 PUSH1 0xDA SLOAD DUP4 PUSH2 0x3183 JUMP JUMPDEST DIV SWAP1 PUSH2 0x3196 JUMP JUMPDEST DUP3 DUP7 ISZERO PUSH2 0xA1A JUMPI POP DUP3 DUP1 SWAP3 PUSH2 0x884 DUP3 SWAP4 PUSH1 0xD9 SLOAD SWAP1 PUSH2 0x3183 JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP8 ADD SLOAD SWAP7 DIV SWAP6 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0xA11 JUMPI JUMPDEST CALL ISZERO PUSH2 0xA06 JUMPI JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xD4 SLOAD DUP9 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND SWAP1 DUP3 AND DUP1 PUSH2 0x9A3 JUMPI JUMPDEST POP POP PUSH1 0xD1 SLOAD AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x99A JUMPI JUMPDEST PUSH2 0x930 JUMPI JUMPDEST POP POP POP SWAP1 PUSH32 0x1EE447DE28C6FF53BC0403BDBC8F4114866F73B12FC451B0605FC923B02B65BF SWAP4 PUSH2 0x91D DUP4 PUSH1 0x6 PUSH1 0x7 PUSH1 0x60 SWAP8 SWAP7 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG2 DUP1 RETURN JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x996 JUMPI DUP3 SWAP2 PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x1C8FDEB5 PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP11 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x98B JUMPI PUSH2 0x96D JUMPI JUMPDEST DUP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x97A SWAP1 SWAP5 SWAP4 SWAP3 SWAP5 PUSH2 0x2B2B JUMP JUMPDEST PUSH2 0x987 JUMPI SWAP1 SWAP2 DUP6 CODESIZE PUSH2 0x967 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x8DB JUMP JUMPDEST DUP1 SWAP5 SWAP3 SWAP4 SWAP5 EXTCODESIZE ISZERO PUSH2 0x996 JUMPI PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x13EF88D1 PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP12 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x9FB JUMPI PUSH2 0x9E6 JUMPI JUMPDEST SWAP1 DUP2 DUP10 SWAP4 SWAP3 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x9F3 SWAP1 SWAP9 SWAP2 SWAP3 SWAP9 PUSH2 0x2B2B JUMP JUMPDEST SWAP7 SWAP1 CODESIZE PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x8A0 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x8A7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC8111053C81D9BDD195CC818D85CDD PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F20766F74696E6720706572696F64206E6F7420656E6465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x111053C81D9BDD1A5B99C81B9BDD081CDD185C9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP3 GT ISZERO PUSH2 0x76D JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xB00 JUMPI PUSH2 0xB4E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2D3B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x996 JUMPI PUSH2 0xB6D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2D3B JUMP JUMPDEST SWAP1 PUSH1 0xD5 SLOAD CALLVALUE LT PUSH2 0x11CB JUMPI DUP1 MLOAD ISZERO PUSH2 0x118E JUMPI DUP2 MLOAD ISZERO PUSH2 0x1149 JUMPI TIMESTAMP PUSH1 0x44 CALLDATALOAD GT ISZERO PUSH2 0x1104 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH2 0x1056 JUMPI JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0xC9 SLOAD ADD SWAP5 DUP6 PUSH1 0xC9 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x656D0C39 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xA06 JUMPI DUP6 SWAP3 PUSH2 0x101E JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0xBE7 DUP4 PUSH2 0x2B0F JUMP JUMPDEST DUP5 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE DUP3 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE CALLVALUE PUSH1 0xC0 DUP3 ADD MSTORE DUP4 PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH2 0x100 DUP3 ADD MSTORE DUP4 PUSH2 0x120 DUP3 ADD MSTORE DUP4 PUSH2 0x140 DUP3 ADD MSTORE DUP4 PUSH2 0x160 DUP3 ADD MSTORE DUP4 PUSH2 0x180 DUP3 ADD MSTORE DUP4 PUSH2 0x1A0 DUP3 ADD MSTORE TIMESTAMP PUSH2 0x1C0 DUP3 ADD MSTORE DUP4 PUSH2 0x1E0 DUP3 ADD MSTORE DUP3 DUP5 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF45 JUMPI DUP2 SWAP1 PUSH2 0xCAE PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x2A89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFCE JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF64 JUMPI DUP9 SWAP3 PUSH2 0xF59 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF45 JUMPI PUSH2 0xD08 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x2A89 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF01 JUMPI JUMPDEST POP SWAP2 DUP7 SWAP4 SWAP2 DUP7 SWAP4 PUSH1 0x20 SWAP9 POP DUP9 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE86 JUMPI DUP7 SWAP4 DUP4 PUSH1 0x40 SWAP7 SWAP5 PUSH1 0xD SWAP5 PUSH2 0x1E0 SWAP5 PUSH2 0xE0C SWAP12 SWAP3 PUSH2 0xE7B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE PUSH1 0xB DUP5 ADD PUSH2 0xDB9 PUSH2 0x160 DUP4 ADD MLOAD ISZERO ISZERO DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x180 DUP3 ADD MLOAD DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR DUP2 SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x10 SHL PUSH3 0xFF0000 AND OR SWAP1 SSTORE PUSH2 0x1C0 DUP2 ADD MLOAD PUSH1 0xC DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER DUP2 MSTORE PUSH1 0xCF DUP8 MSTORE KECCAK256 PUSH2 0x3049 JUMP JUMPDEST PUSH2 0xE17 PUSH1 0xDB SLOAD PUSH2 0x3085 JUMP JUMPDEST PUSH1 0xDB SSTORE PUSH2 0xE25 PUSH1 0xDC SLOAD PUSH2 0x3085 JUMP JUMPDEST PUSH1 0xDC SSTORE DUP2 PUSH32 0x37F3EDF7ED237F91FD6999D49411C7E10B3602F2E561A5ADF21934775659C61A PUSH2 0xE5F PUSH1 0x40 MLOAD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x2C05 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD DUP7 DUP3 ADD MSTORE CALLVALUE PUSH1 0x40 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xD41 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP6 ADD DUP8 MSTORE DUP10 DUP8 KECCAK256 SWAP2 DUP8 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xEE7 JUMPI POP SWAP4 PUSH1 0x1 DUP5 PUSH1 0xD SWAP5 PUSH2 0x1E0 SWAP5 PUSH2 0xE0C SWAP12 SWAP9 PUSH1 0x40 SWAP11 SWAP9 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xECE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0xD59 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xEBE JUMP JUMPDEST DUP2 DUP4 ADD MLOAD DUP5 SSTORE DUP11 SWAP8 POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP12 ADD SWAP2 DUP12 ADD PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xF3E JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xF33 JUMPI POP POP PUSH2 0xD11 JUMP JUMPDEST DUP10 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF1D JUMP JUMPDEST POP DUP1 PUSH2 0xF1D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x3 DUP7 ADD DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0xFB6 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xF9D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0xCE5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xF8D JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0xF77 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1017 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1009 JUMPI POP POP PUSH2 0xCB7 JUMP JUMPDEST DUP11 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xFF3 JUMP JUMPDEST POP DUP1 PUSH2 0xFED JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x104E JUMPI JUMPDEST DUP2 PUSH2 0x103A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x104A JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xBD9 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1853E995 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA06 JUMPI DUP6 SWAP2 PUSH2 0x10CA JUMPI JUMPDEST POP PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417374726F6C6F676572206E6F74207665726966696564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x10FC JUMPI JUMPDEST DUP2 PUSH2 0x10E4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x104A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x104A JUMPI CODESIZE PUSH2 0x1080 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446561646C696E65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465736372697074696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5469746C652063616E6E6F7420626520656D707479 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420617374726F6C6F676572207374616B65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH2 0x122F PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP1 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP4 DUP2 DUP2 AND ISZERO ISZERO DUP6 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x129C PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x12A4 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD2 SLOAD AND OR PUSH1 0xD2 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xDA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x12FA PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD5 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0xD6 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xD7 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1332 PUSH2 0x2C45 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0xCF DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP1 DUP6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 DUP4 MSTORE DUP1 DUP4 KECCAK256 SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x137B JUMPI PUSH2 0x1377 DUP6 PUSH2 0x136B DUP2 DUP10 SUB DUP3 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2D00 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1354 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x80 SWAP2 PUSH2 0x13B1 PUSH2 0x2C5B JUMP JUMPDEST DUP2 PUSH1 0x60 DUP5 MLOAD PUSH2 0x13BF DUP2 PUSH2 0x2AF4 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x13F7 DUP2 PUSH2 0x2AF4 JUMP JUMPDEST DUP2 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO ISZERO SWAP3 DUP4 DUP4 MSTORE PUSH1 0xFF PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x8 SHR AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x60 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP6 ADD SLOAD SWAP5 PUSH1 0x40 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD AND SWAP4 ADD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE MLOAD ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE MLOAD PUSH1 0x40 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x80 PUSH1 0xDB SLOAD PUSH1 0xDC SLOAD PUSH1 0xDD SLOAD PUSH1 0xDE SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xD2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x1656 JUMPI JUMPDEST PUSH2 0x14D6 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0xCA DUP3 MSTORE PUSH1 0xFF PUSH1 0xB PUSH1 0x40 DUP6 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1611 JUMPI DUP1 DUP4 MSTORE PUSH1 0xCB DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND ISZERO PUSH2 0x15DC JUMPI PUSH1 0x2 ADD SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x159E JUMPI DUP5 SWAP1 PUSH2 0x1525 CALLER DUP6 PUSH2 0x31A3 JUMP JUMPDEST SWAP5 DUP6 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x1533 JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SWAP1 DUP6 SWAP1 PUSH2 0x1594 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 CALLER SWAP1 CALL ISZERO PUSH2 0x1589 JUMPI PUSH32 0x24B5EFA61DD1CFC659205A97FB8ED868F3CB8C81922BAB2B96423E5DE1DE2CB7 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995DD85C9908185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BC81D9BDD1948199BDD5B99 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726564696374696F6E206E6F74207265736F6C766564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x14CD JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xD3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xDC SLOAD PUSH2 0x16A8 DUP2 PUSH2 0x33F3 JUMP JUMPDEST SWAP1 PUSH2 0x16B6 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH2 0x16C5 PUSH1 0x1F NOT SWAP2 PUSH2 0x33F3 JUMP JUMPDEST ADD SWAP2 PUSH1 0x20 SWAP3 CALLDATASIZE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0xC9 SLOAD SWAP1 SWAP3 DUP4 PUSH1 0x1 JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x1377 DUP8 DUP3 PUSH2 0x2D00 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xCA DUP4 MSTORE PUSH1 0xFF PUSH1 0xB PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x1714 JUMPI JUMPDEST PUSH2 0x170F SWAP1 PUSH2 0x3085 JUMP JUMPDEST PUSH2 0x16D8 JUMP JUMPDEST SWAP5 DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x173C JUMPI PUSH2 0x1734 DUP2 DUP8 DUP6 PUSH2 0x170F SWAP5 PUSH1 0x5 SHL DUP10 ADD ADD MSTORE PUSH2 0x3085 JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0x1706 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCD PUSH1 0x20 MSTORE DUP2 DUP1 DUP3 KECCAK256 SLOAD SWAP2 PUSH1 0xCE PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x17AB PUSH2 0x2C45 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0xD0 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP1 DUP6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 DUP4 MSTORE DUP1 DUP4 KECCAK256 SWAP3 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x17E4 JUMPI PUSH2 0x1377 DUP6 PUSH2 0x136B DUP2 DUP10 SUB DUP3 PUSH2 0x2B3E JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x17CD JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x183E PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xD0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x20 PUSH2 0x186C DUP5 DUP5 PUSH2 0x2C71 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x19A8 JUMPI JUMPDEST PUSH2 0x18A1 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xB DUP2 ADD SWAP1 PUSH1 0x5 DUP3 SLOAD SWAP2 PUSH2 0x18C4 PUSH1 0xFF DUP5 AND ISZERO PUSH2 0x30EE JUMP JUMPDEST ADD SLOAD TIMESTAMP LT PUSH2 0x1963 JUMPI PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND PUSH2 0x191E JUMPI PUSH3 0x10000 SWAP1 PUSH3 0xFF0000 NOT AND OR SWAP1 SSTORE PUSH32 0xC83104E48F44C8C7B89A4DEC1259A93BFFCEF18013DC1AC5891A260DE98A50E5 PUSH1 0x20 PUSH2 0x1914 PUSH1 0xD8 SLOAD TIMESTAMP PUSH2 0x3176 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44414F20766F74696E6720616C72656164792061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726564696374696F6E20646561646C696E65206E6F74207265616368656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x1898 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x19D1 PUSH2 0x2CF1 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP2 ISZERO ISZERO DUP1 PUSH2 0x1BA0 JUMPI JUMPDEST PUSH2 0x19E7 SWAP1 PUSH2 0x30AA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 PUSH1 0xCA DUP2 MSTORE PUSH1 0xFF PUSH1 0xB PUSH1 0x40 DUP8 KECCAK256 ADD SLOAD PUSH2 0x1A06 DUP3 DUP3 AND ISZERO PUSH2 0x30EE JUMP JUMPDEST PUSH1 0x10 SHR AND ISZERO PUSH2 0x1B64 JUMPI DUP3 DUP6 MSTORE PUSH1 0xCC DUP2 MSTORE PUSH1 0x40 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP2 MSTORE PUSH2 0x1A30 PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x313A JUMP JUMPDEST PUSH2 0x1A3A DUP3 CALLER PUSH2 0x3355 JUMP JUMPDEST ISZERO PUSH2 0x1B2D JUMPI PUSH32 0xF34F077F143D412407A903C03D8D2132B5DD9C006763FDF1FC57F5133610E64F SWAP2 PUSH2 0x1B0B SWAP2 PUSH1 0x40 MLOAD PUSH2 0x1A71 DUP2 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x1 DUP3 DUP3 ADD DUP9 ISZERO ISZERO DUP2 MSTORE PUSH2 0x1ACE PUSH1 0x40 DUP5 ADD SWAP2 DUP7 DUP4 MSTORE DUP10 DUP13 MSTORE PUSH1 0xCC DUP7 MSTORE PUSH1 0x40 DUP13 KECCAK256 CALLER DUP14 MSTORE DUP7 MSTORE PUSH2 0x1AB7 PUSH1 0x40 DUP14 KECCAK256 SWAP6 MLOAD ISZERO ISZERO DUP7 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP5 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR DUP5 SSTORE JUMP JUMPDEST MLOAD SWAP2 ADD SSTORE DUP6 ISZERO PUSH2 0x1B11 JUMPI PUSH1 0xCD SWAP1 DUP6 DUP9 MSTORE MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x1AED DUP2 SLOAD PUSH2 0x3085 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP5 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0xCE SWAP1 DUP6 DUP9 MSTORE MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x1B26 DUP2 SLOAD PUSH2 0x3085 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1030902220A79036B2B6B132B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x44414F20766F74696E67206E6F7420616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP3 GT ISZERO PUSH2 0x19DE JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x60 SWAP2 PUSH2 0x1BCB PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x40 MLOAD SWAP3 DUP2 DUP2 AND ISZERO ISZERO DUP5 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xD4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH2 0x1C6D PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1CC9 PUSH2 0x2CF1 JUMP JUMPDEST SWAP1 DUP1 ISZERO ISZERO DUP1 PUSH2 0x1FE5 JUMPI JUMPDEST PUSH2 0x1CDC SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH1 0xD6 SLOAD CALLVALUE LT PUSH2 0x1FA0 JUMPI PUSH1 0xD7 SLOAD CALLVALUE GT PUSH2 0x1F63 JUMPI DUP1 DUP4 MSTORE PUSH1 0x20 PUSH1 0xCA DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH2 0x1D0C PUSH1 0xFF PUSH1 0xB DUP4 ADD SLOAD AND ISZERO PUSH2 0x30EE JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1F28 JUMPI DUP3 DUP6 MSTORE PUSH1 0xCB DUP3 MSTORE PUSH1 0x40 DUP6 KECCAK256 CALLER DUP7 MSTORE DUP3 MSTORE PUSH2 0x1D39 PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x313A JUMP JUMPDEST PUSH2 0x1D42 CALLER PUSH2 0x32CC JUMP JUMPDEST ISZERO PUSH2 0x1EE3 JUMPI PUSH1 0x6 DUP2 ADD SLOAD CALLVALUE LT PUSH2 0x1E8E JUMPI SWAP1 PUSH1 0xD0 SWAP2 PUSH2 0x1DE5 PUSH1 0x40 MLOAD PUSH2 0x1D65 DUP2 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x2 DUP9 DUP6 DUP4 ADD DUP10 ISZERO ISZERO DUP2 MSTORE PUSH2 0x1DC9 PUSH1 0x40 DUP6 ADD SWAP2 CALLVALUE DUP4 MSTORE PUSH2 0x1DB2 PUSH1 0x40 PUSH1 0x60 DUP9 ADD SWAP6 DUP1 DUP8 MSTORE DUP14 DUP2 MSTORE PUSH1 0xCB DUP13 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP13 MSTORE KECCAK256 SWAP7 MLOAD ISZERO ISZERO DUP8 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP6 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR DUP6 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 ADD PUSH2 0x1DF4 CALLVALUE DUP3 SLOAD PUSH2 0x3176 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0xA DUP2 ADD PUSH2 0x1E04 DUP2 SLOAD PUSH2 0x3085 JUMP JUMPDEST SWAP1 SSTORE DUP5 ISZERO PUSH2 0x1E79 JUMPI PUSH1 0x8 ADD PUSH2 0x1E1A CALLVALUE DUP3 SLOAD PUSH2 0x3176 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST CALLER DUP6 MSTORE MSTORE PUSH2 0x1E2E DUP2 PUSH1 0x40 DUP6 KECCAK256 PUSH2 0x3049 JUMP JUMPDEST PUSH2 0x1E3A CALLVALUE PUSH1 0xDE SLOAD PUSH2 0x3176 JUMP JUMPDEST PUSH1 0xDE SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE CALLVALUE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 PUSH32 0xCBDF6214089CBA887ECBF35A0B6A734589959C9763342C756BB2A80CA2BC9F6E SWAP2 DUP2 SWAP1 DUP2 ADD PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x9 ADD PUSH2 0x1E87 CALLVALUE DUP3 SLOAD PUSH2 0x3176 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572207374616B65206D757374206265203E3D20617374726F6C6F6765 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x72207374616B65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206F776E20417374726F4368617274204E465420746F20766F746500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xA6E8C2D6CA40C2DADEEADCE840E8DEDE40D0D2CED PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420766F746572207374616B650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD DUP2 GT ISZERO PUSH2 0x1CD3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0xD1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x203A PUSH2 0x2D59 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2047 DUP4 DUP4 PUSH2 0x3176 JUMP JUMPDEST GT PUSH2 0x2055 JUMPI PUSH1 0xD9 SSTORE PUSH1 0xDA SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C2070657263656E74616765732063616E6E6F742065786365656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x313025 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x20C0 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x20C8 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD3 SLOAD AND OR PUSH1 0xD3 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH2 0x212B PUSH2 0x2123 PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x31A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCD DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x21B6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x340B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x2236 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x996 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x996 JUMPI PUSH2 0x2266 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x2CBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x22A0 ADDRESS DUP6 EQ ISZERO PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x22BD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x340B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x2E5B JUMP JUMPDEST PUSH2 0x22C5 PUSH2 0x2D59 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x22FB JUMPI POP POP PUSH2 0x4DF SWAP2 POP PUSH2 0x2EBC JUMP JUMPDEST DUP3 AND PUSH1 0x40 MLOAD SWAP4 PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP8 SWAP2 DUP2 PUSH2 0x24BD JUMPI JUMPDEST POP PUSH2 0x237F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP3 SWAP4 SWAP5 SUB PUSH2 0x2466 JUMPI PUSH2 0x2391 DUP5 PUSH2 0x2EBC JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP6 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x245E JUMPI JUMPDEST PUSH2 0x23CB JUMPI JUMPDEST POP POP POP DUP1 RETURN JUMPDEST PUSH2 0x244C SWAP3 DUP5 DUP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x23DE DUP7 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x27 DUP7 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP6 DUP8 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP8 ADD MSTORE DUP5 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x2455 JUMPI RETURNDATASIZE PUSH2 0x2430 DUP2 PUSH2 0x2C9F JUMP JUMPDEST SWAP1 PUSH2 0x243E PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x2F4C JUMP JUMPDEST POP CODESIZE DUP1 DUP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x2F4C JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x24E9 JUMPI JUMPDEST PUSH2 0x24D5 DUP2 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x24E5 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x231E JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x24CB JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x250A PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x2512 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xD1 SLOAD AND OR PUSH1 0xD1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x60 SWAP2 PUSH2 0x254F PUSH2 0x2C5B JUMP JUMPDEST DUP2 DUP4 DUP1 MLOAD PUSH2 0x255C DUP2 PUSH2 0x2AC3 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x258F DUP2 PUSH2 0x2AC3 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 PUSH1 0x1 PUSH1 0xFF DUP4 AND ISZERO ISZERO SWAP5 DUP6 DUP6 MSTORE PUSH1 0xFF PUSH1 0x20 DUP7 ADD SWAP5 PUSH1 0x8 SHR AND ISZERO ISZERO DUP5 MSTORE ADD SLOAD SWAP3 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE MLOAD ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH2 0x25E4 PUSH2 0x2D59 JUMP JUMPDEST DUP1 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0x2612 JUMPI JUMPDEST CALL ISZERO PUSH2 0x2606 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x25FD JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x2635 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xCF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP1 DUP4 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x20 PUSH2 0x186C DUP5 DUP5 PUSH2 0x2C71 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB00 JUMPI PUSH2 0x267E PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x26B5 ADDRESS DUP3 EQ ISZERO PUSH2 0x2DFA JUMP JUMPDEST PUSH2 0x26D2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x340B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x2E5B JUMP JUMPDEST PUSH2 0x26DA PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0xF45 JUMPI DUP4 PUSH1 0x40 MSTORE DUP7 DUP4 MSTORE PUSH1 0xFF PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD AND PUSH1 0x0 EQ PUSH2 0x2735 JUMPI POP POP POP POP PUSH2 0x4DF SWAP2 POP PUSH2 0x2EBC JUMP JUMPDEST DUP5 SWAP3 SWAP4 SWAP5 AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP9 SWAP2 DUP2 PUSH2 0x28D2 JUMPI JUMPDEST POP PUSH2 0x27B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP6 SWAP4 SWAP5 SWAP6 SUB PUSH2 0x287B JUMPI PUSH2 0x27CB DUP3 PUSH2 0x2EBC JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP5 DUP4 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2874 JUMPI JUMPDEST PUSH2 0x2808 JUMPI JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x2869 SWAP6 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x281A DUP8 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL PUSH1 0x40 DUP9 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x2455 JUMPI RETURNDATASIZE PUSH2 0x2430 DUP2 PUSH2 0x2C9F JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP5 PUSH2 0x2800 JUMP JUMPDEST POP DUP1 PUSH2 0x27FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x28FE JUMPI JUMPDEST PUSH2 0x28EA DUP2 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x28FA JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x2758 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x28E0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH2 0x291F PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD8 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCE DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x484 JUMPI PUSH1 0x20 PUSH1 0xD7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x484 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x484 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 PUSH2 0x29B5 PUSH1 0x3 DUP4 ADD PUSH2 0x2B5F JUMP JUMPDEST SWAP2 PUSH2 0x29C2 PUSH1 0x4 DUP3 ADD PUSH2 0x2B5F JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP3 ADD SLOAD SWAP4 PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD SWAP1 PUSH1 0x9 DUP7 ADD SLOAD SWAP3 PUSH1 0xA DUP8 ADD SLOAD SWAP5 PUSH1 0xB DUP9 ADD SLOAD SWAP7 PUSH1 0xC DUP10 ADD SLOAD SWAP9 PUSH1 0xD ADD SLOAD SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 DUP1 SWAP15 DUP2 MSTORE PUSH1 0x20 ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE DUP12 PUSH2 0x200 PUSH1 0x60 DUP2 SWAP3 ADD MSTORE DUP13 ADD PUSH2 0x2A1D SWAP2 PUSH2 0x2C05 JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x80 DUP14 ADD MSTORE PUSH2 0x2A2E SWAP2 PUSH2 0x2C05 JUMP JUMPDEST SWAP9 PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x160 DUP7 ADD MSTORE DUP1 PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x180 DUP7 ADD MSTORE PUSH1 0x10 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x1E0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2AB9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2AA3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x200 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2ADE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2B73 DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2BE2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2B9F JUMPI JUMPDEST POP POP PUSH2 0x2B9D SWAP3 POP SUB DUP4 PUSH2 0x2B3E JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2BCA JUMPI POP POP PUSH2 0x2B9D SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2B8F JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2BB2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B9D SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2B8F JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2C31 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x748 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x748 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2C89 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2ADE JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x2CC6 DUP3 PUSH2 0x2C9F JUMP JUMPDEST SWAP2 PUSH2 0x2CD4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2B3E JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x748 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x748 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2D27 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2D19 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x748 JUMPI DUP2 PUSH1 0x20 PUSH2 0x2D56 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x2CBA JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D6D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x2E01 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2E62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2EF1 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x340B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2FAE JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2F60 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2F69 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2FC1 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x2FE5 SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x2C05 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FF0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x2ADE JUMPI PUSH2 0x306B SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2C71 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL PUSH1 0x0 NOT DUP2 SHL SWAP3 DUP4 SWAP2 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3094 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x30B1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081C1C99591A58DD1A5BDB881251 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x30F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726564696374696F6E20616C7265616479207265736F6C7665640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3141 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x3094 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x3094 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3094 JUMPI JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xCA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH1 0xB DUP2 ADD SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO DUP1 ISZERO PUSH2 0x32C0 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x32B2 JUMPI JUMPDEST PUSH2 0x32AB JUMPI PUSH1 0xFF DUP5 SLOAD SWAP3 PUSH1 0x8 SHR AND SWAP2 PUSH1 0xFF DUP4 ISZERO ISZERO SWAP2 PUSH1 0x8 SHR AND ISZERO ISZERO SUB PUSH2 0x32AB JUMPI PUSH2 0x323F DUP3 PUSH2 0x321D PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD SWAP1 PUSH2 0x3176 JUMP JUMPDEST PUSH2 0x3231 PUSH2 0x2710 SWAP2 DUP3 PUSH2 0x864 PUSH1 0xDA SLOAD DUP4 PUSH2 0x3183 JUMP JUMPDEST SWAP1 DUP7 SWAP3 PUSH2 0x3294 JUMPI JUMPDEST POP PUSH2 0x3196 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x328A JUMPI PUSH1 0x8 ADD SLOAD SWAP1 JUMPDEST DUP2 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x325C JUMPI POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x326C SWAP3 SWAP5 SWAP4 SWAP6 ADD SLOAD PUSH2 0x3183 JUMP JUMPDEST SWAP2 PUSH2 0x3276 JUMPI POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x9 ADD SLOAD SWAP1 PUSH2 0x324B JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x32A3 PUSH1 0xD9 SLOAD DUP4 PUSH2 0x3183 JUMP JUMPDEST DIV SWAP1 CODESIZE PUSH2 0x3239 JUMP JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x2 DUP6 ADD SLOAD AND PUSH2 0x31E7 JUMP JUMPDEST POP PUSH1 0xFF DUP5 SLOAD AND ISZERO PUSH2 0x31E0 JUMP JUMPDEST PUSH1 0xD2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x334D JUMPI PUSH1 0x24 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x331A JUMPI JUMPDEST POP PUSH2 0x3315 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x3345 JUMPI JUMPDEST DUP2 PUSH2 0x3334 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x484 JUMPI POP MLOAD SWAP1 CODESIZE PUSH2 0x330A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3327 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xD3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0x33E6 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL PUSH1 0x0 SWAP4 DUP2 PUSH2 0x33A8 JUMPI JUMPDEST POP PUSH2 0x33A0 JUMPI POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP5 SWAP2 SWAP5 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x33DE JUMPI JUMPDEST DUP2 PUSH2 0x33C3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B3E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB00 JUMPI MLOAD SWAP1 DUP4 DUP3 AND DUP3 SUB PUSH2 0x484 JUMPI POP SWAP3 CODESIZE PUSH2 0x3393 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x33B6 JUMP JUMPDEST POP POP SWAP1 POP PUSH1 0x33 SLOAD AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2ADE JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA2646970667358221220DA 0x5C 0x5E 0x1E 0xBA 0xCC MLOAD JUMPI DUP1 PUSH10 0x2B8F5DA59453C4CC2CD5 PUSH23 0xA25928E384A47DE2C5C4A864736F6C6343000811003300 ","sourceMap":"455:18654:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16264:17;;;:62;;;455:18654;16256:96;;;:::i;:::-;455:18654;;16369:11;455:18654;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16264:62;-1:-1:-1;16302:14:12;455:18654;16285:41;;;16264:62;;455:18654;;;;;;;;;;;;;;;;;2228:28;455:18654;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;-1:-1:-1;;;;;455:18654:12;;2402:22:0;455:18654:12;;2496:8:0;;;:::i;:::-;455:18654:12;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;455:18654:12;;;;;;-1:-1:-1;;;;;455:18654:12;;18110:36;455:18654;;;18110:36;455:18654;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:14:5;3347:34;;;;;;455:18654:12;3346:108:5;;;;455:18654:12;;;;-1:-1:-1;;455:18654:12;;;;;;;3562:65:5;;455:18654:12;;5366:69:5;455:18654:12;;;;;;5366:69:5;;;:::i;:::-;;:::i;:::-;1195:12:0;929:10:8;1195:12:0;:::i;:::-;455:18654:12;;;5366:69:5;455:18654:12;;;;;5366:69:5;:::i;:::-;455:18654:12;-1:-1:-1;;;;;455:18654:12;;;;;3841:38;455:18654;;;3841:38;455:18654;;;3889:30;455:18654;;;3889:30;455:18654;;3929:22;455:18654;;;3929:22;455:18654;3961:36;455:18654;;;3961:36;455:18654;;;4007:40;455:18654;;;4057:30;455:18654;;;4097:30;455:18654;4157:6;4137:26;455:18654;4202:3;4173:32;455:18654;4245:3;4221:27;455:18654;3647:99:5;;455:18654:12;;;3647:99:5;455:18654:12;;;;;3721:14:5;455:18654:12;;;;;;3721:14:5;455:18654:12;;3562:65:5;-1:-1:-1;;455:18654:12;;;;;3562:65:5;;;455:18654:12;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;3346:108:5;3426:4;;1713:19:7;:23;3387:66:5;;3346:108;3387:66;455:18654:12;;;;;3436:17:5;3346:108;;3347:34;455:18654:12;;;;;3365:16:5;3347:34;;455:18654:12;;;;;;;;;;;;;;;;;;;;10116:17;;;;:62;;;455:18654;10108:96;;;:::i;:::-;455:18654;;;10260:11;455:18654;;;;;10305:21;;;455:18654;;;10296:62;455:18654;;;10304:22;10296:62;:::i;:::-;455:18654;;;;;;;;10466:39;:19;;;455:18654;10488:17;455:18654;10466:39;;:::i;:::-;10447:15;:58;455:18654;;;;;10620:11;455:18654;;10620:54;455:18654;;;;10649:10;455:18654;;;;;;10620:54;;:::i;:::-;10692:17;455:18654;;;;;10620:11;455:18654;;;;;;;10649:10;455:18654;;;;;;-1:-1:-1;;455:18654:12;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;;;;-1:-1:-1;10447:15:12;10914:21;;;455:18654;10972:33;455:18654;;;;;;;;10972:33;455:18654;11017:37;:35;455:18654;11017:37;:::i;:::-;:35;455:18654;;;;10260:11;455:18654;;;;;12645:26;;:55;:26;;;455:18654;12674:26;;;455:18654;12645:55;;:::i;:::-;12811:22;12769:5;455:18654;;12733:32;12744:21;455:18654;12733:32;;:::i;:::-;455:18654;12811:22;;:::i;:::-;12852:28;12899:414;;;;455:18654;;;;13007:45;455:18654;;13026:26;455:18654;13007:45;;:::i;:::-;455:18654;13083:21;;;455:18654;;;;;;-1:-1:-1;;;;;455:18654:12;13075:57;;;;;12899:414;13075:57;;;;12899:414;455:18654;11252:21;;455:18654;11017:35;11275:23;;455:18654;14853:16;455:18654;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;14849:158;;12899:414;455:18654;;15029:17;455:18654;;15029:31;;;;:52;;;12899:414;15025:171;;12899:414;11367:26;;;;11324:117;11367:26;:55;:26;12674;12645;455:18654;11367:26;;;455:18654;11396:26;;455:18654;11367:55;;:::i;:::-;455:18654;;;;;;;;;;;;;11324:117;455:18654;;15025:171;15097:88;;;;;455:18654;;;;;;;971:66:3;;;;;;;;15097:88:12;;455:18654;15097:88;;455:18654;;;;;;15097:88;;;;;;;;15025:171;;;;15097:88;;;;;;;;:::i;:::-;455:18654;;15097:88;;;;;;455:18654;;;;15097:88;455:18654;;971:66:3;455:18654:12;;971:66:3;;;;15097:88:12;455:18654;;;15029:52;15064:17;;;;15029:52;;14849:158;14899:97;;;;;;;;;455:18654;;;;;971:66:3;;;;;;;;14899:97:12;;455:18654;14899:97;;455:18654;;;;;;14899:97;;;;;;;;14849:158;;;;;;;;14899:97;;;;;;;;:::i;:::-;;;;;;;455:18654;;971:66:3;455:18654:12;;971:66:3;;;;13075:57:12;455:18654;;971:66:3;455:18654:12;;971:66:3;;;;13075:57:12;;;;;12899:414;;;;;;;;455:18654;-1:-1:-1;;;455:18654:12;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;10116:62;-1:-1:-1;10154:14:12;455:18654;10137:41;;;10116:62;;455:18654;;;;;;;;;;;;;;;;;;2334:41;455:18654;;;;;;;;-1:-1:-1;455:18654:12;;-1:-1:-1;;455:18654:12;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;:::i;:::-;;4688:18;455:18654;4675:9;:31;455:18654;;;;4758:24;455:18654;;;;4826:30;455:18654;;4918:15;455:18654;;4906:27;455:18654;;;5026:17;455:18654;-1:-1:-1;;;;;455:18654:12;;;5022:168;;455:18654;;;;;5200:14;455:18654;;;;5200:14;455:18654;;;971:66:3;;;;;;;5432:65:12;;5394:10;455:18654;5432:65;;455:18654;5432:65;;;;;;;;;;;455:18654;;;;;;;;:::i;:::-;;;;5394:10;455:18654;5322:606;;455:18654;;5322:606;;455:18654;5322:606;455:18654;5322:606;;455:18654;5322:606;;;455:18654;;;;5322:606;;455:18654;4675:9;5322:606;;;455:18654;5322:606;455:18654;5322:606;;455:18654;5322:606;;;;455:18654;5322:606;;;;455:18654;5322:606;;;;455:18654;5322:606;;;;455:18654;5322:606;;;;455:18654;5322:606;;;;455:18654;4918:15;5322:606;;;455:18654;5322:606;;;;455:18654;;;;5294:11;455:18654;;;;;;;;;;;;;;;;;;;5322:606;;455:18654;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;5322:606;;455:18654;;;;;;5322:606;;455:18654;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5322:606;;;455:18654;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5322:606;455:18654;5939:52;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;5322:606;;455:18654;;;;;5322:606;;;455:18654;;;;;;5322:606;;455:18654;;;;;5322:606;;;455:18654;;;;;5322:606;;;455:18654;;;;;5322:606;;;455:18654;;;;;;;;;5322:606;;;455:18654;;;;;;;;;;;;;;;;;;;;5322:606;;;455:18654;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;5322:606;;;455:18654;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;5322:606;;;455:18654;;;;;5322:606;455:18654;;;;5394:10;455:18654;;5939:21;455:18654;;;5939:52;:::i;:::-;6001:34;:15;455:18654;6001:34;:::i;:::-;:15;455:18654;6045:35;:33;455:18654;6045:35;:::i;:::-;:33;455:18654;;6096:73;455:18654;;;;;;;;;;;;:::i;:::-;;;;;;;;4675:9;455:18654;;;;5394:10;;6096:73;;;;455:18654;;;;;;;;;;-1:-1:-1;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;;5322:606;455:18654;5939:52;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:18654:12;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;-1:-1:-1;455:18654:12;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:18654:12;;;;;-1:-1:-1;455:18654:12;;;5432:65;;;;455:18654;5432:65;;455:18654;5432:65;;;;;;455:18654;5432:65;;;:::i;:::-;;;455:18654;;;;;5432:65;;;;455:18654;;;;5432:65;;;-1:-1:-1;5432:65:12;;5022:168;455:18654;;-1:-1:-1;;;5081:70:12;;5140:10;455:18654;5081:70;;455:18654;;;;;5081:70;;;;;;;;;;;;5022:168;455:18654;5022:168;455:18654;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;5081:70;;;455:18654;5081:70;;;;;;;;;455:18654;5081:70;;;:::i;:::-;;;455:18654;;;;;;;;;;;;5081:70;;;;;;-1:-1:-1;5081:70:12;;455:18654;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;:::i;:::-;;;;;1689:57;455:18654;;;;;;;;;;;;;;;;;;;1689:57;455:18654;1689:57;455:18654;1689:57;;455:18654;1689:57;;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;455:18654:12;;;;;;-1:-1:-1;;;;;455:18654:12;;17876:30;455:18654;;;17876:30;455:18654;;;;;;;;;;;;;;;;;2393:36;455:18654;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;1303:62:0;;:::i;:::-;455:18654:12;;18289:40;455:18654;;;18339:30;455:18654;;;18379:30;455:18654;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;:::i;:::-;;;;16830:21;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;16517:5;455:18654;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:38;455:18654;2452:38;455:18654;2452:38;455:18654;2452:38;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:28;455:18654;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;11640:17;;;:62;;;455:18654;11632:96;;;:::i;:::-;455:18654;;;11784:11;455:18654;;;11828:21;455:18654;;;11828:21;455:18654;;;;;;;;11916:5;455:18654;;;;;11937:10;455:18654;;;;;;;;;;;;;;12016:18;;455:18654;;;;;;;;11937:10;;12095:47;11937:10;12095:47;;:::i;:::-;12156:16;;;;;;12152:201;;455:18654;;;12152:201;-1:-1:-1;;455:18654:12;;;;;12227:42;;;;;;12152:201;11937:10;;;;;;;12227:42;;;;;12288:54;455:18654;;;;;;11937:10;12288:54;;12152:201;;;;;;;455:18654;;;12227:42;455:18654;;971:66:3;455:18654:12;;971:66:3;;;;12227:42:12;;;-1:-1:-1;12227:42:12;;455:18654;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;11640:62;-1:-1:-1;11678:14:12;455:18654;11661:41;;;11640:62;;455:18654;;;;;;;;;;;;;2117:24;455:18654;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;17127:33;455:18654;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;17232:14;455:18654;17171:17;;;17127:33;17227:29;;;;;;;455:18654;;;;;;;:::i;17258:3::-;455:18654;;;17282:11;455:18654;;;17282:25;455:18654;;;17282:25;455:18654;;17281:26;17277:110;;17258:3;;;;:::i;:::-;17212:13;;17277:110;455:18654;;;;;;;;17365:7;455:18654;;;17258:3;455:18654;;;;;;;17365:7;:::i;:::-;17277:110;;;;;455:18654;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;;17569:11;455:18654;;;;;;;;17597:10;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;:::i;:::-;;;;16972:9;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:6:0;455:18654:12;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;-1:-1:-1;;;;;455:18654:12;;;1988:46;455:18654;;;;;;;;;;;1988:46;;;;;455:18654;1988:46;;;;:::i;:::-;455:18654;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;8137:17;;;:62;;;455:18654;8129:96;;;:::i;:::-;455:18654;;;8281:11;455:18654;;;;;8326:21;;;455:18654;8416:19;455:18654;;;8317:62;455:18654;;;8325:22;8317:62;:::i;:::-;8416:19;455:18654;8397:15;:38;455:18654;;;;;;;;;;;;;;;;;8614:68;455:18654;8646:35;8664:17;455:18654;8397:15;8646:35;:::i;:::-;455:18654;;;;;8614:68;455:18654;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;8137:62;-1:-1:-1;8175:14:12;455:18654;8158:41;;;8137:62;;455:18654;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;:::i;:::-;;;;9040:17;;;:62;;;455:18654;9032:96;;;:::i;:::-;455:18654;;;;9184:11;455:18654;;;9229:21;455:18654;;;9229:21;455:18654;9220:62;455:18654;;;9228:22;9220:62;:::i;:::-;455:18654;;;;;;;;;9371:8;455:18654;;;;;9395:10;455:18654;;;;9362:71;455:18654;;;;;;9370:45;9362:71;:::i;:::-;9493:33;9395:10;;9493:33;:::i;:::-;455:18654;;;9853:58;455:18654;9853:58;455:18654;;;;;;:::i;:::-;;;;;9596:106;;;455:18654;;;;;;;9596:106;;455:18654;;;;;;;9371:8;455:18654;;;;;9395:10;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;;;;;;;9713:125;;;;9741:11;455:18654;;;;;;;;9741:28;455:18654;;9741:28;:::i;:::-;455:18654;;9713:125;455:18654;;;;;;;;;;;;;;;9395:10;;455:18654;;;;;;;9853:58;;;;455:18654;;9713:125;9800:10;455:18654;;;;;;;;9800:27;455:18654;;9800:27;:::i;:::-;455:18654;;9713:125;;455:18654;;;;;971:66:3;;;;455:18654:12;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;971:66:3;;;;455:18654:12;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;9040:62;-1:-1:-1;9078:14:12;455:18654;9061:41;;;9040:62;;455:18654;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;:::i;:::-;;;;;1752:63;455:18654;;;;;;;;;;;;;;;;;;;;1752:63;;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2147:31;455:18654;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;2296:32;455:18654;;;;;;;;;;;;;;;;;;;;1303:62:0;;:::i;:::-;2758:6;455:18654:12;;-1:-1:-1;;;;;;455:18654:12;;;;;;;-1:-1:-1;;;;;455:18654:12;2806:40:0;455:18654:12;;2806:40:0;455:18654:12;;;-1:-1:-1;455:18654:12;;-1:-1:-1;;455:18654:12;;;;;;;;:::i;:::-;6478:17;;;;:62;;;455:18654;6470:96;;;:::i;:::-;6597:13;455:18654;6584:9;:26;455:18654;;6670:13;455:18654;6584:9;6657:26;455:18654;;;;;;6765:11;455:18654;;;;;6801:62;455:18654;6810:21;;;455:18654;;6809:22;6801:62;:::i;:::-;6899:19;;;455:18654;6881:15;:37;455:18654;;;;;;6961:5;455:18654;;;;;6982:10;455:18654;;;;6952:68;455:18654;;;;;;6960:42;6952:68;:::i;:::-;7097:28;6982:10;7097:28;:::i;:::-;455:18654;;;7254:26;;;455:18654;6584:9;7241:39;455:18654;;;7770:9;455:18654;;;;;;;:::i;:::-;;;;;7370:139;;;;455:18654;;;;;;;7370:139;;6584:9;;455:18654;;;;7370:139;;;455:18654;;;;;;;6961:5;455:18654;;;;;6982:10;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7520:26;;;:39;6584:9;455:18654;;7520:39;:::i;:::-;455:18654;;7569:22;;;:24;455:18654;;7569:24;:::i;:::-;455:18654;;7612:140;;;;7637:24;;:37;6584:9;455:18654;;7637:37;:::i;:::-;455:18654;;7612:140;6982:10;455:18654;;;7770:41;455:18654;;;;7770:41;:::i;:::-;7821:40;6584:9;7821:27;455:18654;7821:40;:::i;:::-;:27;455:18654;;;;;;;;;6584:9;455:18654;;;;6982:10;;7877:53;;455:18654;;;;7877:53;455:18654;7612:140;7705:23;;:36;6584:9;455:18654;;7705:36;:::i;:::-;455:18654;;7612:140;;455:18654;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;6478:62;-1:-1:-1;6516:14:12;455:18654;6499:41;;;6478:62;;455:18654;;;;;;;;;;;;;2045:32;455:18654;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;1303:62:0;;:::i;:::-;18734:4:12;18678:52;;;;:::i;:::-;:60;455:18654;;18788:56;455:18654;18854:46;455:18654;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;455:18654:12;;;;;;-1:-1:-1;;;;;455:18654:12;;17990:22;455:18654;;;17990:22;455:18654;;;;;;;;;;;;;;;;;2189:33;455:18654;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;1821:46;455:18654;;;;;;;;;;;;;;;;;;;;;;;2333:6:6;-1:-1:-1;;;;;455:18654:12;2324:4:6;2316:23;455:18654:12;;;;;-1:-1:-1;;;;;;;;;;;455:18654:12;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:18654:12;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;455:18654:12;;;;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;455:18654:12;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;971:66:3;455:18654:12;;;;;;3330:17:3;;;;;;:::i;3232:526::-;455:18654:12;;;;971:66:3;;;;3383:63;;;;;;455:18654:12;3383:63:3;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;455:18654:12;;-1:-1:-1;;;3610:56:3;;455:18654:12;3610:56:3;;971:66;;;;455:18654:12;971:66:3;;455:18654:12;971:66:3;455:18654:12;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;;;;455:18654:12;;2523:15:3;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;455:18654:12;;2519:123:3;7318:69:7;455:18654:12;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;7276:25:7;;;;;;;;;455:18654:12;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;7318:69:7;:::i;:::-;;2519:123:3;;;;;455:18654:12;;;-1:-1:-1;7318:69:7;:::i;2523:28:3:-;;455:18654:12;2523:28:3;;971:66;455:18654:12;;-1:-1:-1;;;971:66:3;;455:18654:12;971:66:3;;;;;;455:18654:12;971:66:3;;455:18654:12;971:66:3;455:18654:12;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;455:18654:12;;;3383:63:3;;;;;455:18654:12;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;1303:62:0;;:::i;:::-;455:18654:12;;;;;;-1:-1:-1;;;;;455:18654:12;;17746:38;455:18654;;;17746:38;455:18654;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;16673:8;455:18654;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:62:0;;:::i;:::-;455:18654:12;;;;;;;;;1513:6:0;455:18654:12;;18988:21;18962:48;;;;;;455:18654;18962:48;;;;455:18654;;18962:48;455:18654;;971:66:3;;;;;;;;18962:48:12;;;;;455:18654;;;;;;;-1:-1:-1;;455:18654:12;;;;;;:::i;:::-;-1:-1:-1;;;;;455:18654:12;;;1924:58;455:18654;;;;;;;;;;;1924:58;;;;;455:18654;1924:58;;;;:::i;455:18654::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:6;455:18654:12;;1873:80:6;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;455:18654:12;;;;;1971:30:6;1963:87;:::i;:::-;1303:62:0;;:::i;:::-;455:18654:12;;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;;;;;;971:66:3;455:18654:12;;3232:526:3;455:18654:12;;;3330:17:3;;;;;;;;:::i;3232:526::-;455:18654:12;;;;;;;;971:66:3;;;3383:63;;;;455:18654:12;3383:63:3;;;;;;;;;3232:526;-1:-1:-1;3379:302:3;;455:18654:12;;-1:-1:-1;;;3610:56:3;;455:18654:12;3610:56:3;;971:66;;;;;;;455:18654:12;971:66:3;455:18654:12;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;3610:56;3379:302;3496:28;;;;;971:66;;2171:17;;;:::i;:::-;2204:27;;;;455:18654:12;;;2523:15:3;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;455:18654:12;;2519:123:3;455:18654:12;7318:69:7;455:18654:12;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;7276:25:7;;;;;;455:18654:12;;;;;;;;:::i;7318:69:7:-;;2519:123:3;;;;;;;2523:28;;;;;971:66;455:18654:12;;-1:-1:-1;;;971:66:3;;455:18654:12;971:66:3;;;;;;;;;455:18654:12;971:66:3;455:18654:12;;;971:66:3;-1:-1:-1;;;971:66:3;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;455:18654:12;;;3383:63:3;;;;;455:18654:12;;;;;;;-1:-1:-1;;455:18654:12;;;;1303:62:0;;:::i;:::-;455:18654:12;;18500:29;455:18654;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;;;;1873:45;455:18654;;;;;;;;;;;;;;;;;;;;;;;;2262:28;455:18654;;;;;;;;;;;;;;-1:-1:-1;;455:18654:12;;;;;;;;1629:54;455:18654;;;;;;;;1629:54;;455:18654;1629:54;;;455:18654;-1:-1:-1;;;;;455:18654:12;;;;;1629:54;455:18654;1629:54;;;:::i;:::-;;;455:18654;1629:54;;;:::i;:::-;;;;;455:18654;1629:54;;;;455:18654;1629:54;;;455:18654;1629:54;;;455:18654;1629:54;;;;455:18654;1629:54;;;;455:18654;1629:54;;;;455:18654;1629:54;;;;455:18654;1629:54;;;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1629:54;455:18654;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;:::o;:::-;-1:-1:-1;;;;;455:18654:12;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;;:::o;:::-;;;;;;-1:-1:-1;455:18654:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;455:18654:12;;;;-1:-1:-1;455:18654:12;;-1:-1:-1;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;455:18654:12;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;455:18654:12;;-1:-1:-1;455:18654:12;;;-1:-1:-1;455:18654:12;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;455:18654:12;;;;;;-1:-1:-1;;455:18654:12;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;455:18654:12;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;1599:130:0:-;1513:6;455:18654:12;-1:-1:-1;;;;;455:18654:12;929:10:8;1662:23:0;455:18654:12;;1599:130:0:o;455:18654:12:-;;;;971:66:3;;;455:18654:12;;;;;;;;;;;;;;;;;;2666:187:0;2758:6;455:18654:12;;-1:-1:-1;;;;;455:18654:12;;;-1:-1:-1;;;;;;455:18654:12;;;;;;;;;;2806:40:0;-1:-1:-1;;2806:40:0;2666:187::o;455:18654:12:-;;;;:::o;:::-;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;1699:281:3;1713:19:7;;:23;455:18654:12;;-1:-1:-1;;;;;;;;;;;455:18654:12;;-1:-1:-1;;;;;;455:18654:12;-1:-1:-1;;;;;455:18654:12;;;;;;;;;1699:281:3:o;455:18654:12:-;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;7682:628:7;;;;7886:418;;;455:18654:12;;;7917:22:7;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;455:18654:12;;8212:17:7;:::o;455:18654:12:-;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;7886:418:7;455:18654:12;;;;-1:-1:-1;8991:21:7;:17;;9163:142;;;;;;;8987:379;455:18654:12;;-1:-1:-1;;;9335:20:7;;455:18654:12;9335:20:7;;;455:18654:12;;;;;;;;;;;:::i;:::-;9335:20:7;;;455:18654:12;;;;:::o;:::-;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;455:18654:12;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;-1:-1:-1;;;455:18654:12;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;13428:1210::-;-1:-1:-1;455:18654:12;;;13574:11;455:18654;;;;;;13630:5;455:18654;;;;;;;;;;;;;;;;;;;13682:21;;;;455:18654;;;;;13681:22;455:18654;;13681:40;;13428:1210;13681:62;;;;13428:1210;13677:101;;455:18654;;;;;;;;;;;;;;;;;;13835:31;13831:70;;14342:35;13930:26;:55;:26;;;455:18654;13959:26;;;455:18654;13930:55;;:::i;:::-;14096:22;14054:5;455:18654;;14018:32;14029:21;455:18654;14018:32;;:::i;14096:22::-;14137:28;;14175:123;;;13428:1210;14342:35;;:::i;:::-;14410:71;;;;455:18654;14431:24;455:18654;14410:71;;14504:16;;;;;14500:105;;14623:8;;;;;13428:1210;:::o;14500:105::-;455:18654;14544:34;:16;;;;;455:18654;14544:34;:::i;:::-;455:18654;;;;;14536:58;:::o;455:18654::-;-1:-1:-1;;;455:18654:12;;;;;;;;14410:71;14458:23;;455:18654;14410:71;;;14175:123;455:18654;;;14233:45;14252:26;455:18654;14233:45;;:::i;:::-;455:18654;14175:123;;;;13831:70;13882:8;;;;;:::o;13681:62::-;13725:18;455:18654;13725:18;;;455:18654;;13681:62;;:40;455:18654;;;;;13707:14;13681:40;;15272:378;15356:13;455:18654;-1:-1:-1;;;;;455:18654:12;;;;;15356:27;;15352:44;;455:18654;15491:39;455:18654;;;971:66:3;;;;;;;;15491:39:12;;455:18654;15491:39;;;455:18654;15491:39;;-1:-1:-1;;15491:39:12;;;15272:378;-1:-1:-1;15487:157:12;;15621:12;-1:-1:-1;15621:12:12;:::o;15487:157::-;15578:11;;15571:18;:::o;15491:39::-;;;;;;;;;;;;;;;;;:::i;:::-;;;455:18654;;;;;;15491:39;;;;;;;-1:-1:-1;15491:39:12;;15352:44;15385:11;;;455:18654;15385:11;:::o;15715:410::-;15812:9;455:18654;-1:-1:-1;;;;;455:18654:12;;;;;;;15812:23;;15808:57;;15968:36;455:18654;;;;971:66:3;;;;;;;15968:36:12;;;;;455:18654;15968:36;;-1:-1:-1;;15968:36:12;;;15715:410;-1:-1:-1;15964:155:12;;16096:12;;;-1:-1:-1;16096:12:12;:::o;15964:155::-;455:18654;;;;16050:14;16043:21;:::o;15968:36::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;455:18654;;;;;;;;;;;;;15968:36;;;;;;;;-1:-1:-1;15968:36:12;;15808:57;455:18654;;;;1513:6:0;455:18654:12;;15844:10;:21;15837:28;:::o;455:18654::-;-1:-1:-1;;;;;455:18654:12;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2681600","executionCost":"infinite","totalCost":"infinite"},"external":{"astroChartNFT()":"2961","astrologerManager()":"2631","astrologerPredictions(address,uint256)":"6880","astrologerRewardPercentage()":"3135","calculateVoterReward(uint256,address)":"infinite","castDAOVote(uint256,bool,uint256)":"infinite","claimReward(uint256)":"infinite","createPrediction(string,string,uint256)":"infinite","daoNoVotes(uint256)":"2365","daoVotes(uint256,address)":"5112","daoVotingDuration()":"2673","daoYesVotes(uint256)":"2563","getActivePredictions()":"infinite","getAstrologerPredictions(address)":"infinite","getDAOVote(uint256,address)":"infinite","getDAOVoteCounts(uint256)":"5090","getPrediction(uint256)":"infinite","getUserVotes(address)":"infinite","getVote(uint256,address)":"infinite","initialize(address,address,address,address,uint256,uint256,uint256)":"infinite","maxVoterStake()":"2277","minAstrologerStake()":"2541","minVoterStake()":"3245","owner()":"2829","platformFeePercentage()":"3047","predictionStats()":"9316","predictions(uint256)":"infinite","proxiableUUID()":"infinite","renounceOwnership()":"28459","reputationScorer()":"2719","resolvePrediction(uint256)":"infinite","setAstroChartNFT(address)":"27432","setAstrologerManager(address)":"26794","setDAOVotingDuration(uint256)":"24469","setReputationScorer(address)":"27564","setRewardPercentages(uint256,uint256)":"46925","setStakeLimits(uint256,uint256,uint256)":"69391","setZodiacDAO(address)":"26926","startDAOVoting(uint256)":"32918","transferOwnership(address)":"29183","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite","userVotes(address,uint256)":"7298","voteOnPrediction(uint256,bool)":"infinite","votes(uint256,address)":"7628","withdraw()":"infinite","zodiacDAO()":"2917"},"internal":{"_authorizeUpgrade(address)":"infinite","distributeRewards(uint256,bool)":"infinite","hasAstroChartNFT(address)":"infinite","isDAOMember(address,uint256)":"infinite","updateAstrologerReputation(address,uint256,bool)":"infinite"}},"methodIdentifiers":{"astroChartNFT()":"b488202d","astrologerManager()":"6fd31a41","astrologerPredictions(address,uint256)":"37562b29","astrologerRewardPercentage()":"d75ebce5","calculateVoterReward(uint256,address)":"5aa76be0","castDAOVote(uint256,bool,uint256)":"84ebaae1","claimReward(uint256)":"ae169a50","createPrediction(string,string,uint256)":"d472a570","daoNoVotes(uint256)":"256c52d3","daoVotes(uint256,address)":"78640668","daoVotingDuration()":"72f022c2","daoYesVotes(uint256)":"533a12a5","getActivePredictions()":"a9d6921b","getAstrologerPredictions(address)":"bc858185","getDAOVote(uint256,address)":"444a50c2","getDAOVoteCounts(uint256)":"9dcf0b7a","getPrediction(uint256)":"fe83bece","getUserVotes(address)":"950c7822","getVote(uint256,address)":"bc3f931f","initialize(address,address,address,address,uint256,uint256,uint256)":"e77fc7a4","maxVoterStake()":"0e8c47f2","minAstrologerStake()":"63ab68ef","minVoterStake()":"f7333e33","owner()":"8da5cb5b","platformFeePercentage()":"cdd78cfc","predictionStats()":"b6bb1754","predictions(uint256)":"004fbbb0","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","reputationScorer()":"73c84d21","resolvePrediction(uint256)":"e69fe3dc","setAstroChartNFT(address)":"ce083d73","setAstrologerManager(address)":"44cda485","setDAOVotingDuration(uint256)":"34954999","setReputationScorer(address)":"e9725c21","setRewardPercentages(uint256,uint256)":"6f502056","setStakeLimits(uint256,uint256,uint256)":"c8ab686a","setZodiacDAO(address)":"65af67bd","startDAOVoting(uint256)":"886dbdf9","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","userVotes(address,uint256)":"8b3511f7","voteOnPrediction(uint256,bool)":"700c8367","votes(uint256,address)":"d23254b4","withdraw()":"3ccfd60b","zodiacDAO()":"ab76c9ed"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"predictionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"daoMember\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DAOVoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"predictionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"DAOVotingStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"predictionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"astrologerStake\",\"type\":\"uint256\"}],\"name\":\"PredictionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"predictionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"astrologerReward\",\"type\":\"uint256\"}],\"name\":\"PredictionResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"predictionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"predictionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"astroChartNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astrologerManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"astrologerPredictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"astrologerRewardPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"calculateVoterReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_outcome\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"castDAOVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createPrediction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daoNoVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"daoVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoVotingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"daoYesVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivePredictions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getAstrologerPredictions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getDAOVote\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct WorldPredictionMarket.DAOVote\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"}],\"name\":\"getDAOVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yesVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"noVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"}],\"name\":\"getPrediction\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"astrologerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVoterStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yesVoterStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"noVoterStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVoters\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isResolved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"daoVotingActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resolvedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct WorldPredictionMarket.WorldPrediction\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getVote\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"rewardClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct WorldPredictionMarket.Vote\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_astroChartNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zodiacDAO\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reputationScorer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAstrologerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVoterStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxVoterStake\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxVoterStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAstrologerStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minVoterStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predictionStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resolvedPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVolume\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"predictions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"astrologerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVoterStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yesVoterStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"noVoterStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVoters\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isResolved\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"outcome\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"daoVotingActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resolvedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationScorer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"}],\"name\":\"resolvePrediction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astroChartNFT\",\"type\":\"address\"}],\"name\":\"setAstroChartNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologerManager\",\"type\":\"address\"}],\"name\":\"setAstrologerManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setDAOVotingDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reputationScorer\",\"type\":\"address\"}],\"name\":\"setReputationScorer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_astrologerRewardPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setRewardPercentages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAstrologerStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVoterStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxVoterStake\",\"type\":\"uint256\"}],\"name\":\"setStakeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zodiacDAO\",\"type\":\"address\"}],\"name\":\"setZodiacDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"}],\"name\":\"startDAOVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_predictionId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_vote\",\"type\":\"bool\"}],\"name\":\"voteOnPrediction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"rewardClaimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zodiacDAO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"castDAOVote(uint256,bool,uint256)\":{\"params\":{\"_outcome\":\"True if prediction was correct, false if incorrect\",\"_predictionId\":\"The prediction ID\",\"_tokenId\":\"The DAO token ID for voting\"}},\"claimReward(uint256)\":{\"params\":{\"_predictionId\":\"The prediction ID\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createPrediction(string,string,uint256)\":{\"params\":{\"_deadline\":\"The deadline for the prediction\",\"_description\":\"The detailed description\",\"_title\":\"The title of the prediction\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolvePrediction(uint256)\":{\"params\":{\"_predictionId\":\"The prediction ID\"}},\"startDAOVoting(uint256)\":{\"params\":{\"_predictionId\":\"The prediction ID\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"voteOnPrediction(uint256,bool)\":{\"params\":{\"_predictionId\":\"The prediction ID\",\"_vote\":\"True for YES, false for NO\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateVoterReward(uint256,address)\":{\"notice\":\"Calculate voter reward amount\"},\"castDAOVote(uint256,bool,uint256)\":{\"notice\":\"DAO members vote on prediction outcome\"},\"claimReward(uint256)\":{\"notice\":\"Claim rewards for correct predictions\"},\"createPrediction(string,string,uint256)\":{\"notice\":\"Create a world prediction by staking FLOW\"},\"resolvePrediction(uint256)\":{\"notice\":\"Resolve prediction based on DAO votes\"},\"startDAOVoting(uint256)\":{\"notice\":\"Start DAO voting after prediction deadline\"},\"voteOnPrediction(uint256,bool)\":{\"notice\":\"Vote on a prediction (requires AstroChart NFT)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorldPredictionMarket.sol\":\"WorldPredictionMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary CountersUpgradeable {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/WorldPredictionMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\\\";\\nimport \\\"./interfaces/IAstrologerManager.sol\\\";\\nimport \\\"./interfaces/IReputationScorer.sol\\\";\\n\\ncontract WorldPredictionMarket is \\n    Initializable, \\n    OwnableUpgradeable, \\n    UUPSUpgradeable \\n{\\n    using CountersUpgradeable for CountersUpgradeable.Counter;\\n\\n    CountersUpgradeable.Counter private _predictionIds;\\n    \\n    struct WorldPrediction {\\n        uint256 id;\\n        address astrologer;\\n        uint256 astrologerId;\\n        string title;\\n        string description;\\n        uint256 deadline;\\n        uint256 astrologerStake;\\n        uint256 totalVoterStake;\\n        uint256 yesVoterStake;\\n        uint256 noVoterStake;\\n        uint256 totalVoters;\\n        bool isResolved;\\n        bool outcome;\\n        bool daoVotingActive;\\n        uint256 createdAt;\\n        uint256 resolvedAt;\\n    }\\n\\n    struct Vote {\\n        bool hasVoted;\\n        bool vote; // true = YES, false = NO\\n        uint256 stakeAmount;\\n        bool rewardClaimed;\\n    }\\n\\n    struct DAOVote {\\n        bool hasVoted;\\n        bool vote; // true = YES (correct), false = NO (incorrect)\\n        uint256 tokenId;\\n    }\\n\\n    struct PredictionStats {\\n        uint256 totalPredictions;\\n        uint256 activePredictions;\\n        uint256 resolvedPredictions;\\n        uint256 totalVolume;\\n    }\\n\\n    mapping(uint256 => WorldPrediction) public predictions;\\n    mapping(uint256 => mapping(address => Vote)) public votes;\\n    mapping(uint256 => mapping(address => DAOVote)) public daoVotes;\\n    mapping(uint256 => uint256) public daoYesVotes;\\n    mapping(uint256 => uint256) public daoNoVotes;\\n    mapping(address => uint256[]) public astrologerPredictions;\\n    mapping(address => uint256[]) public userVotes;\\n    \\n    address public astrologerManager;\\n    address public astroChartNFT;\\n    address public zodiacDAO;\\n    address public reputationScorer;\\n    \\n    uint256 public minAstrologerStake;\\n    uint256 public minVoterStake;\\n    uint256 public maxVoterStake;\\n    uint256 public daoVotingDuration;\\n    uint256 public astrologerRewardPercentage; // 500 = 5%\\n    uint256 public platformFeePercentage; // 200 = 2%\\n    \\n    PredictionStats public predictionStats;\\n    \\n    event PredictionCreated(\\n        uint256 indexed predictionId,\\n        address indexed astrologer,\\n        string title,\\n        uint256 deadline,\\n        uint256 astrologerStake\\n    );\\n\\n    event VoteCast(\\n        uint256 indexed predictionId,\\n        address indexed voter,\\n        bool vote,\\n        uint256 stakeAmount\\n    );\\n\\n    event DAOVoteCast(\\n        uint256 indexed predictionId,\\n        address indexed daoMember,\\n        bool vote,\\n        uint256 tokenId\\n    );\\n\\n    event PredictionResolved(\\n        uint256 indexed predictionId,\\n        bool outcome,\\n        uint256 totalStake,\\n        uint256 astrologerReward\\n    );\\n\\n    event RewardClaimed(\\n        uint256 indexed predictionId,\\n        address indexed claimer,\\n        uint256 rewardAmount\\n    );\\n\\n    event DAOVotingStarted(\\n        uint256 indexed predictionId,\\n        uint256 endTime\\n    );\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(\\n        address _astrologerManager,\\n        address _astroChartNFT,\\n        address _zodiacDAO,\\n        address _reputationScorer,\\n        uint256 _minAstrologerStake,\\n        uint256 _minVoterStake,\\n        uint256 _maxVoterStake\\n    ) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        \\n        astrologerManager = _astrologerManager;\\n        astroChartNFT = _astroChartNFT;\\n        zodiacDAO = _zodiacDAO;\\n        reputationScorer = _reputationScorer;\\n        minAstrologerStake = _minAstrologerStake;\\n        minVoterStake = _minVoterStake;\\n        maxVoterStake = _maxVoterStake;\\n        daoVotingDuration = 7 days;\\n        astrologerRewardPercentage = 500; // 5%\\n        platformFeePercentage = 200; // 2%\\n    }\\n\\n    /**\\n     * @notice Create a world prediction by staking FLOW\\n     * @param _title The title of the prediction\\n     * @param _description The detailed description\\n     * @param _deadline The deadline for the prediction\\n     */\\n    function createPrediction(\\n        string memory _title,\\n        string memory _description,\\n        uint256 _deadline\\n    ) external payable returns (uint256) {\\n        require(msg.value >= minAstrologerStake, \\\"Insufficient astrologer stake\\\");\\n        require(bytes(_title).length > 0, \\\"Title cannot be empty\\\");\\n        require(bytes(_description).length > 0, \\\"Description cannot be empty\\\");\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\n\\n        // Verify astrologer is registered\\n        if (astrologerManager != address(0)) {\\n            require(IAstrologerManager(astrologerManager).isAstrologerVerified(msg.sender), \\\"Astrologer not verified\\\");\\n        }\\n\\n        _predictionIds.increment();\\n        uint256 predictionId = _predictionIds.current();\\n\\n        predictions[predictionId] = WorldPrediction({\\n            id: predictionId,\\n            astrologer: msg.sender,\\n            astrologerId: IAstrologerManager(astrologerManager).getAstrologerId(msg.sender),\\n            title: _title,\\n            description: _description,\\n            deadline: _deadline,\\n            astrologerStake: msg.value,\\n            totalVoterStake: 0,\\n            yesVoterStake: 0,\\n            noVoterStake: 0,\\n            totalVoters: 0,\\n            isResolved: false,\\n            outcome: false,\\n            daoVotingActive: false,\\n            createdAt: block.timestamp,\\n            resolvedAt: 0\\n        });\\n\\n        astrologerPredictions[msg.sender].push(predictionId);\\n        predictionStats.totalPredictions++;\\n        predictionStats.activePredictions++;\\n\\n        emit PredictionCreated(predictionId, msg.sender, _title, _deadline, msg.value);\\n        return predictionId;\\n    }\\n\\n    /**\\n     * @notice Vote on a prediction (requires AstroChart NFT)\\n     * @param _predictionId The prediction ID\\n     * @param _vote True for YES, false for NO\\n     */\\n    function voteOnPrediction(uint256 _predictionId, bool _vote) external payable {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        require(msg.value >= minVoterStake, \\\"Insufficient voter stake\\\");\\n        require(msg.value <= maxVoterStake, \\\"Stake amount too high\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(block.timestamp < prediction.deadline, \\\"Voting period ended\\\");\\n        require(!votes[_predictionId][msg.sender].hasVoted, \\\"Already voted\\\");\\n        \\n        // Verify voter has minted AstroChart NFT\\n        require(hasAstroChartNFT(msg.sender), \\\"Must own AstroChart NFT to vote\\\");\\n        \\n        // Verify voter stake is >= astrologer stake\\n        require(msg.value >= prediction.astrologerStake, \\\"Voter stake must be >= astrologer stake\\\");\\n\\n        votes[_predictionId][msg.sender] = Vote({\\n            hasVoted: true,\\n            vote: _vote,\\n            stakeAmount: msg.value,\\n            rewardClaimed: false\\n        });\\n\\n        prediction.totalVoterStake += msg.value;\\n        prediction.totalVoters++;\\n        \\n        if (_vote) {\\n            prediction.yesVoterStake += msg.value;\\n        } else {\\n            prediction.noVoterStake += msg.value;\\n        }\\n        \\n        userVotes[msg.sender].push(_predictionId);\\n        predictionStats.totalVolume += msg.value;\\n\\n        emit VoteCast(_predictionId, msg.sender, _vote, msg.value);\\n    }\\n\\n    /**\\n     * @notice Start DAO voting after prediction deadline\\n     * @param _predictionId The prediction ID\\n     */\\n    function startDAOVoting(uint256 _predictionId) external {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(block.timestamp >= prediction.deadline, \\\"Prediction deadline not reached\\\");\\n        require(!prediction.daoVotingActive, \\\"DAO voting already active\\\");\\n\\n        prediction.daoVotingActive = true;\\n        \\n        emit DAOVotingStarted(_predictionId, block.timestamp + daoVotingDuration);\\n    }\\n\\n    /**\\n     * @notice DAO members vote on prediction outcome\\n     * @param _predictionId The prediction ID\\n     * @param _outcome True if prediction was correct, false if incorrect\\n     * @param _tokenId The DAO token ID for voting\\n     */\\n    function castDAOVote(uint256 _predictionId, bool _outcome, uint256 _tokenId) external {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(prediction.daoVotingActive, \\\"DAO voting not active\\\");\\n        require(!daoVotes[_predictionId][msg.sender].hasVoted, \\\"Already voted\\\");\\n        \\n        // Verify DAO membership\\n        require(isDAOMember(msg.sender, _tokenId), \\\"Not a DAO member\\\");\\n\\n        daoVotes[_predictionId][msg.sender] = DAOVote({\\n            hasVoted: true,\\n            vote: _outcome,\\n            tokenId: _tokenId\\n        });\\n\\n        if (_outcome) {\\n            daoYesVotes[_predictionId]++;\\n        } else {\\n            daoNoVotes[_predictionId]++;\\n        }\\n\\n        emit DAOVoteCast(_predictionId, msg.sender, _outcome, _tokenId);\\n    }\\n\\n    /**\\n     * @notice Resolve prediction based on DAO votes\\n     * @param _predictionId The prediction ID\\n     */\\n    function resolvePrediction(uint256 _predictionId) external {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(!prediction.isResolved, \\\"Prediction already resolved\\\");\\n        require(prediction.daoVotingActive, \\\"DAO voting not started\\\");\\n        require(block.timestamp >= prediction.deadline + daoVotingDuration, \\\"DAO voting period not ended\\\");\\n\\n        // Determine outcome based on DAO votes\\n        uint256 totalDAOVotes = daoYesVotes[_predictionId] + daoNoVotes[_predictionId];\\n        require(totalDAOVotes > 0, \\\"No DAO votes cast\\\");\\n        \\n        bool outcome = daoYesVotes[_predictionId] > daoNoVotes[_predictionId];\\n        \\n        prediction.isResolved = true;\\n        prediction.outcome = outcome;\\n        prediction.resolvedAt = block.timestamp;\\n        \\n        predictionStats.activePredictions--;\\n        predictionStats.resolvedPredictions++;\\n\\n        // Calculate and distribute rewards\\n        uint256 astrologerReward = distributeRewards(_predictionId, outcome);\\n        \\n        // Update reputation\\n        updateAstrologerReputation(prediction.astrologer, prediction.astrologerId, outcome);\\n\\n        emit PredictionResolved(_predictionId, outcome, prediction.totalVoterStake + prediction.astrologerStake, astrologerReward);\\n    }\\n\\n    /**\\n     * @notice Claim rewards for correct predictions\\n     * @param _predictionId The prediction ID\\n     */\\n    function claimReward(uint256 _predictionId) external {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        \\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        require(prediction.isResolved, \\\"Prediction not resolved\\\");\\n        \\n        Vote storage vote = votes[_predictionId][msg.sender];\\n        require(vote.hasVoted, \\\"No vote found\\\");\\n        require(!vote.rewardClaimed, \\\"Reward already claimed\\\");\\n\\n        uint256 rewardAmount = calculateVoterReward(_predictionId, msg.sender);\\n        if (rewardAmount > 0) {\\n            vote.rewardClaimed = true;\\n            payable(msg.sender).transfer(rewardAmount);\\n            emit RewardClaimed(_predictionId, msg.sender, rewardAmount);\\n        }\\n    }\\n\\n    /**\\n     * @notice Distribute rewards after prediction resolution\\n     */\\n    function distributeRewards(uint256 _predictionId, bool outcome) internal returns (uint256) {\\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        \\n        uint256 totalPot = prediction.totalVoterStake + prediction.astrologerStake;\\n        uint256 platformFee = (totalPot * platformFeePercentage) / 10000;\\n        uint256 distributablePot = totalPot - platformFee;\\n        \\n        uint256 astrologerReward = 0;\\n        \\n        if (outcome) {\\n            // Astrologer was correct - gets 5% of total pot\\n            astrologerReward = (distributablePot * astrologerRewardPercentage) / 10000;\\n            payable(prediction.astrologer).transfer(astrologerReward);\\n        } else {\\n            // Astrologer was wrong - stake is redistributed to winning voters\\n            // Reputation will be penalized by updateAstrologerReputation\\n        }\\n        \\n        return astrologerReward;\\n    }\\n\\n    /**\\n     * @notice Calculate voter reward amount\\n     */\\n    function calculateVoterReward(uint256 _predictionId, address _voter) public view returns (uint256) {\\n        WorldPrediction storage prediction = predictions[_predictionId];\\n        Vote storage vote = votes[_predictionId][_voter];\\n        \\n        if (!prediction.isResolved || !vote.hasVoted || vote.rewardClaimed) {\\n            return 0;\\n        }\\n\\n        // Only winning voters get rewards\\n        if (vote.vote != prediction.outcome) {\\n            return 0;\\n        }\\n\\n        uint256 totalPot = prediction.totalVoterStake + prediction.astrologerStake;\\n        uint256 platformFee = (totalPot * platformFeePercentage) / 10000;\\n        uint256 distributablePot = totalPot - platformFee;\\n        \\n        uint256 astrologerReward = 0;\\n        if (prediction.outcome) {\\n            astrologerReward = (distributablePot * astrologerRewardPercentage) / 10000;\\n        }\\n        \\n        uint256 voterRewardPool = distributablePot - astrologerReward;\\n        uint256 winningStake = prediction.outcome ? prediction.yesVoterStake : prediction.noVoterStake;\\n        \\n        if (winningStake > 0) {\\n            return (vote.stakeAmount * voterRewardPool) / winningStake;\\n        }\\n        \\n        return 0;\\n    }\\n\\n    /**\\n     * @notice Update astrologer reputation based on prediction outcome\\n     */\\n    function updateAstrologerReputation(address _astrologer, uint256 _astrologerId, bool _wasCorrect) internal {\\n        if (reputationScorer != address(0)) {\\n            IReputationScorer(reputationScorer).updateReputationFromWorldPrediction(_astrologer, _wasCorrect);\\n        }\\n        \\n        if (astrologerManager != address(0) && _astrologerId > 0) {\\n            IAstrologerManager(astrologerManager).recordPredictionResult(_astrologerId, _wasCorrect);\\n        }\\n    }\\n\\n    /**\\n     * @notice Check if user has AstroChart NFT\\n     */\\n    function hasAstroChartNFT(address _user) internal view returns (bool) {\\n        if (astroChartNFT == address(0)) return true; // For testing\\n        \\n        // Check if user has at least one AstroChart NFT\\n        try IERC721(astroChartNFT).balanceOf(_user) returns (uint256 balance) {\\n            return balance > 0;\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @notice Check if user is DAO member\\n     */\\n    function isDAOMember(address _user, uint256 _tokenId) internal view returns (bool) {\\n        if (zodiacDAO == address(0)) return msg.sender == owner(); // For testing, only owner can vote\\n        \\n        // Check if user owns the DAO token\\n        try IERC721(zodiacDAO).ownerOf(_tokenId) returns (address owner) {\\n            return owner == _user;\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    // View functions\\n    function getPrediction(uint256 _predictionId) external view returns (WorldPrediction memory) {\\n        require(_predictionId > 0 && _predictionId <= _predictionIds.current(), \\\"Invalid prediction ID\\\");\\n        return predictions[_predictionId];\\n    }\\n\\n    function getVote(uint256 _predictionId, address _voter) external view returns (Vote memory) {\\n        return votes[_predictionId][_voter];\\n    }\\n\\n    function getDAOVote(uint256 _predictionId, address _voter) external view returns (DAOVote memory) {\\n        return daoVotes[_predictionId][_voter];\\n    }\\n\\n    function getAstrologerPredictions(address _astrologer) external view returns (uint256[] memory) {\\n        return astrologerPredictions[_astrologer];\\n    }\\n\\n    function getUserVotes(address _user) external view returns (uint256[] memory) {\\n        return userVotes[_user];\\n    }\\n\\n    function getActivePredictions() external view returns (uint256[] memory) {\\n        uint256[] memory activeIds = new uint256[](predictionStats.activePredictions);\\n        uint256 count = 0;\\n        \\n        for (uint256 i = 1; i <= _predictionIds.current(); i++) {\\n            if (!predictions[i].isResolved) {\\n                activeIds[count] = i;\\n                count++;\\n            }\\n        }\\n        \\n        return activeIds;\\n    }\\n\\n    function getDAOVoteCounts(uint256 _predictionId) external view returns (uint256 yesVotes, uint256 noVotes) {\\n        return (daoYesVotes[_predictionId], daoNoVotes[_predictionId]);\\n    }\\n\\n    // Admin functions\\n    function setAstrologerManager(address _astrologerManager) external onlyOwner {\\n        astrologerManager = _astrologerManager;\\n    }\\n\\n    function setAstroChartNFT(address _astroChartNFT) external onlyOwner {\\n        astroChartNFT = _astroChartNFT;\\n    }\\n\\n    function setZodiacDAO(address _zodiacDAO) external onlyOwner {\\n        zodiacDAO = _zodiacDAO;\\n    }\\n\\n    function setReputationScorer(address _reputationScorer) external onlyOwner {\\n        reputationScorer = _reputationScorer;\\n    }\\n\\n    function setStakeLimits(uint256 _minAstrologerStake, uint256 _minVoterStake, uint256 _maxVoterStake) external onlyOwner {\\n        minAstrologerStake = _minAstrologerStake;\\n        minVoterStake = _minVoterStake;\\n        maxVoterStake = _maxVoterStake;\\n    }\\n\\n    function setDAOVotingDuration(uint256 _duration) external onlyOwner {\\n        daoVotingDuration = _duration;\\n    }\\n\\n    function setRewardPercentages(uint256 _astrologerRewardPercentage, uint256 _platformFeePercentage) external onlyOwner {\\n        require(_astrologerRewardPercentage + _platformFeePercentage <= 1000, \\\"Total percentages cannot exceed 10%\\\");\\n        astrologerRewardPercentage = _astrologerRewardPercentage;\\n        platformFeePercentage = _platformFeePercentage;\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n}\\n\\n// Interface for ERC721 (for NFT checks)\\ninterface IERC721 {\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n} \",\"keccak256\":\"0xcc2c31c1c9fc2f6f066ef42f0f2e94ae4ce7c5d5e2506af40a11f34e96c7afa1\",\"license\":\"MIT\"},\"contracts/interfaces/IAstrologerManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstrologerManager {\\n    struct Astrologer {\\n        uint256 id;\\n        address wallet;\\n        string name;\\n        string description;\\n        string specialty;\\n        uint256 experience;\\n        uint256 reputation;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 tokenContract;\\n        bool isVerified;\\n        bool isActive;\\n        uint256 registeredAt;\\n        uint256 lastActive;\\n    }\\n\\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\\n    function isAstrologerVerified(address wallet) external view returns (bool);\\n    function getAstrologerId(address wallet) external view returns (uint256);\\n} \",\"keccak256\":\"0x11ca9cb820c6a6cec9a66342e9d644365a1c256aff7fc4cca46964dbcdae6e64\",\"license\":\"MIT\"},\"contracts/interfaces/IReputationScorer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IReputationScorer {\\n    function updateReputationFromWorldPrediction(\\n        address _astrologer,\\n        bool _wasCorrect\\n    ) external;\\n\\n    function getReputationMultiplier(address _astrologer) external view returns (uint256);\\n    \\n    function getReputationScore(address _astrologer) external view returns (\\n        uint256 id,\\n        address astrologer,\\n        uint256 totalPredictions,\\n        uint256 accuratePredictions,\\n        uint256 accuracyPercentage,\\n        uint256 reputationMultiplier,\\n        uint256 marketPredictions,\\n        uint256 dailyPredictions,\\n        uint256 oneToOnePredictions,\\n        uint256 lastUpdated,\\n        bool isActive\\n    );\\n} \",\"keccak256\":\"0x703180fb5f26749d16b00844cc9f4ff63a31eeb43e1fa2303a2c8bd5a7bb2b82\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":506,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1172,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":10,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":130,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":485,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":800,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":2589,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"_predictionIds","offset":0,"slot":"201","type":"t_struct(Counter)1179_storage"},{"astId":2652,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"predictions","offset":0,"slot":"202","type":"t_mapping(t_uint256,t_struct(WorldPrediction)2622_storage)"},{"astId":2659,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"votes","offset":0,"slot":"203","type":"t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)2631_storage))"},{"astId":2666,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"daoVotes","offset":0,"slot":"204","type":"t_mapping(t_uint256,t_mapping(t_address,t_struct(DAOVote)2638_storage))"},{"astId":2670,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"daoYesVotes","offset":0,"slot":"205","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2674,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"daoNoVotes","offset":0,"slot":"206","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2679,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"astrologerPredictions","offset":0,"slot":"207","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":2684,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"userVotes","offset":0,"slot":"208","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":2686,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"astrologerManager","offset":0,"slot":"209","type":"t_address"},{"astId":2688,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"astroChartNFT","offset":0,"slot":"210","type":"t_address"},{"astId":2690,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"zodiacDAO","offset":0,"slot":"211","type":"t_address"},{"astId":2692,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"reputationScorer","offset":0,"slot":"212","type":"t_address"},{"astId":2694,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"minAstrologerStake","offset":0,"slot":"213","type":"t_uint256"},{"astId":2696,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"minVoterStake","offset":0,"slot":"214","type":"t_uint256"},{"astId":2698,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"maxVoterStake","offset":0,"slot":"215","type":"t_uint256"},{"astId":2700,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"daoVotingDuration","offset":0,"slot":"216","type":"t_uint256"},{"astId":2702,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"astrologerRewardPercentage","offset":0,"slot":"217","type":"t_uint256"},{"astId":2704,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"platformFeePercentage","offset":0,"slot":"218","type":"t_uint256"},{"astId":2707,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"predictionStats","offset":0,"slot":"219","type":"t_struct(PredictionStats)2647_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_struct(DAOVote)2638_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct WorldPredictionMarket.DAOVote)","numberOfBytes":"32","value":"t_struct(DAOVote)2638_storage"},"t_mapping(t_address,t_struct(Vote)2631_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct WorldPredictionMarket.Vote)","numberOfBytes":"32","value":"t_struct(Vote)2631_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(DAOVote)2638_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.DAOVote))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(DAOVote)2638_storage)"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)2631_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct WorldPredictionMarket.Vote))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(Vote)2631_storage)"},"t_mapping(t_uint256,t_struct(WorldPrediction)2622_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct WorldPredictionMarket.WorldPrediction)","numberOfBytes":"32","value":"t_struct(WorldPrediction)2622_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)1179_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":1178,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(DAOVote)2638_storage":{"encoding":"inplace","label":"struct WorldPredictionMarket.DAOVote","members":[{"astId":2633,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"hasVoted","offset":0,"slot":"0","type":"t_bool"},{"astId":2635,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"vote","offset":1,"slot":"0","type":"t_bool"},{"astId":2637,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"tokenId","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(PredictionStats)2647_storage":{"encoding":"inplace","label":"struct WorldPredictionMarket.PredictionStats","members":[{"astId":2640,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"totalPredictions","offset":0,"slot":"0","type":"t_uint256"},{"astId":2642,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"activePredictions","offset":0,"slot":"1","type":"t_uint256"},{"astId":2644,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"resolvedPredictions","offset":0,"slot":"2","type":"t_uint256"},{"astId":2646,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"totalVolume","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_struct(Vote)2631_storage":{"encoding":"inplace","label":"struct WorldPredictionMarket.Vote","members":[{"astId":2624,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"hasVoted","offset":0,"slot":"0","type":"t_bool"},{"astId":2626,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"vote","offset":1,"slot":"0","type":"t_bool"},{"astId":2628,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"stakeAmount","offset":0,"slot":"1","type":"t_uint256"},{"astId":2630,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"rewardClaimed","offset":0,"slot":"2","type":"t_bool"}],"numberOfBytes":"96"},"t_struct(WorldPrediction)2622_storage":{"encoding":"inplace","label":"struct WorldPredictionMarket.WorldPrediction","members":[{"astId":2591,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":2593,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"astrologer","offset":0,"slot":"1","type":"t_address"},{"astId":2595,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"astrologerId","offset":0,"slot":"2","type":"t_uint256"},{"astId":2597,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"title","offset":0,"slot":"3","type":"t_string_storage"},{"astId":2599,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"description","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2601,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"deadline","offset":0,"slot":"5","type":"t_uint256"},{"astId":2603,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"astrologerStake","offset":0,"slot":"6","type":"t_uint256"},{"astId":2605,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"totalVoterStake","offset":0,"slot":"7","type":"t_uint256"},{"astId":2607,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"yesVoterStake","offset":0,"slot":"8","type":"t_uint256"},{"astId":2609,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"noVoterStake","offset":0,"slot":"9","type":"t_uint256"},{"astId":2611,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"totalVoters","offset":0,"slot":"10","type":"t_uint256"},{"astId":2613,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"isResolved","offset":0,"slot":"11","type":"t_bool"},{"astId":2615,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"outcome","offset":1,"slot":"11","type":"t_bool"},{"astId":2617,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"daoVotingActive","offset":2,"slot":"11","type":"t_bool"},{"astId":2619,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"createdAt","offset":0,"slot":"12","type":"t_uint256"},{"astId":2621,"contract":"contracts/WorldPredictionMarket.sol:WorldPredictionMarket","label":"resolvedAt","offset":0,"slot":"13","type":"t_uint256"}],"numberOfBytes":"448"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"calculateVoterReward(uint256,address)":{"notice":"Calculate voter reward amount"},"castDAOVote(uint256,bool,uint256)":{"notice":"DAO members vote on prediction outcome"},"claimReward(uint256)":{"notice":"Claim rewards for correct predictions"},"createPrediction(string,string,uint256)":{"notice":"Create a world prediction by staking FLOW"},"resolvePrediction(uint256)":{"notice":"Resolve prediction based on DAO votes"},"startDAOVoting(uint256)":{"notice":"Start DAO voting after prediction deadline"},"voteOnPrediction(uint256,bool)":{"notice":"Vote on a prediction (requires AstroChart NFT)"}},"version":1}}},"contracts/interfaces/IAstroTokenLauncher.sol":{"IAstroTokenLauncher":{"abi":[{"inputs":[{"internalType":"address","name":"astrologer","type":"address"}],"name":"astrologerToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"astrologer","type":"address"}],"name":"getTokenByAstrologer","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct IAstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenContract","type":"address"}],"name":"getTokenByContract","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct IAstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTokenInfo","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"address","name":"buyContract","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"initialPrice","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct IAstroTokenLauncher.TokenInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenContract","type":"address"}],"name":"tokenContractToId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"astrologerToTokenId(address)":"21dd6760","getTokenByAstrologer(address)":"922edb34","getTokenByContract(address)":"8d84289e","getTokenInfo(uint256)":"8c7a63ae","tokenContractToId(address)":"36203131"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"}],\"name\":\"astrologerToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"}],\"name\":\"getTokenByAstrologer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"getTokenByContract\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyContract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstroTokenLauncher.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"tokenContractToId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAstroTokenLauncher.sol\":\"IAstroTokenLauncher\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAstroTokenLauncher.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstroTokenLauncher {\\n    struct TokenInfo {\\n        uint256 id;\\n        address astrologer;\\n        address tokenContract;\\n        address buyContract;\\n        string name;\\n        string symbol;\\n        uint256 totalSupply;\\n        uint256 initialPrice;\\n        bool isActive;\\n        uint256 createdAt;\\n    }\\n\\n    function getTokenByAstrologer(address astrologer) external view returns (TokenInfo memory);\\n    function getTokenByContract(address tokenContract) external view returns (TokenInfo memory);\\n    function getTokenInfo(uint256 tokenId) external view returns (TokenInfo memory);\\n    function astrologerToTokenId(address astrologer) external view returns (uint256);\\n    function tokenContractToId(address tokenContract) external view returns (uint256);\\n} \",\"keccak256\":\"0x751a36414a4235dd498afd5a3e9309f3586fc81b8340fb85f6db72555629ccb7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IAstrologerManager.sol":{"IAstrologerManager":{"abi":[{"inputs":[{"internalType":"uint256","name":"astrologerId","type":"uint256"}],"name":"getAstrologer","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"specialty","type":"string"},{"internalType":"uint256","name":"experience","type":"uint256"},{"internalType":"uint256","name":"reputation","type":"uint256"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"tokenContract","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"registeredAt","type":"uint256"},{"internalType":"uint256","name":"lastActive","type":"uint256"}],"internalType":"struct IAstrologerManager.Astrologer","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getAstrologerByWallet","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"specialty","type":"string"},{"internalType":"uint256","name":"experience","type":"uint256"},{"internalType":"uint256","name":"reputation","type":"uint256"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"tokenContract","type":"uint256"},{"internalType":"bool","name":"isVerified","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"registeredAt","type":"uint256"},{"internalType":"uint256","name":"lastActive","type":"uint256"}],"internalType":"struct IAstrologerManager.Astrologer","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getAstrologerId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"isAstrologerVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"bool","name":"wasAccurate","type":"bool"}],"name":"recordPredictionResult","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"uint256","name":"tokenContract","type":"uint256"}],"name":"setTokenContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"astrologerId","type":"uint256"},{"internalType":"uint256","name":"newReputation","type":"uint256"}],"name":"updateReputation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAstrologer(uint256)":"b56faf11","getAstrologerByWallet(address)":"61cb82ba","getAstrologerId(address)":"656d0c39","isAstrologerVerified(address)":"30a7d32a","recordPredictionResult(uint256,bool)":"e47ef5a8","setTokenContract(uint256,uint256)":"5273496a","updateReputation(uint256,uint256)":"0675f763"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"}],\"name\":\"getAstrologer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenContract\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registeredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastActive\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstrologerManager.Astrologer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getAstrologerByWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialty\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenContract\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registeredAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastActive\",\"type\":\"uint256\"}],\"internalType\":\"struct IAstrologerManager.Astrologer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getAstrologerId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"isAstrologerVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"wasAccurate\",\"type\":\"bool\"}],\"name\":\"recordPredictionResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenContract\",\"type\":\"uint256\"}],\"name\":\"setTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"astrologerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newReputation\",\"type\":\"uint256\"}],\"name\":\"updateReputation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAstrologerManager.sol\":\"IAstrologerManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAstrologerManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IAstrologerManager {\\n    struct Astrologer {\\n        uint256 id;\\n        address wallet;\\n        string name;\\n        string description;\\n        string specialty;\\n        uint256 experience;\\n        uint256 reputation;\\n        uint256 totalPredictions;\\n        uint256 accuratePredictions;\\n        uint256 tokenContract;\\n        bool isVerified;\\n        bool isActive;\\n        uint256 registeredAt;\\n        uint256 lastActive;\\n    }\\n\\n    function getAstrologerByWallet(address wallet) external view returns (Astrologer memory);\\n    function getAstrologer(uint256 astrologerId) external view returns (Astrologer memory);\\n    function updateReputation(uint256 astrologerId, uint256 newReputation) external;\\n    function recordPredictionResult(uint256 astrologerId, bool wasAccurate) external;\\n    function setTokenContract(uint256 astrologerId, uint256 tokenContract) external;\\n    function isAstrologerVerified(address wallet) external view returns (bool);\\n    function getAstrologerId(address wallet) external view returns (uint256);\\n} \",\"keccak256\":\"0x11ca9cb820c6a6cec9a66342e9d644365a1c256aff7fc4cca46964dbcdae6e64\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBuyTokenContract.sol":{"IBuyTokenContract":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"buyTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"uint256","name":"_basePrice","type":"uint256"}],"name":"registerToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_tokenAmount","type":"uint256"}],"name":"sellTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_credibilityMultiplier","type":"uint256"}],"name":"updateCredibility","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"buyTokens(address)":"ec8ac4d8","getCurrentPrice(address)":"84cc315b","registerToken(address,address,uint256,uint256)":"cea9f4b5","sellTokens(address,uint256)":"c464fe65","updateCredibility(address,uint256)":"f6322a5f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_basePrice\",\"type\":\"uint256\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_credibilityMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateCredibility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBuyTokenContract.sol\":\"IBuyTokenContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBuyTokenContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IBuyTokenContract {\\n    function registerToken(\\n        address _tokenContract,\\n        address _astrologer,\\n        uint256 _totalSupply,\\n        uint256 _basePrice\\n    ) external;\\n    \\n    function updateCredibility(address _tokenContract, uint256 _credibilityMultiplier) external;\\n    function getCurrentPrice(address _tokenContract) external view returns (uint256);\\n    function buyTokens(address _tokenContract) external payable;\\n    function sellTokens(address _tokenContract, uint256 _tokenAmount) external;\\n} \",\"keccak256\":\"0xce9205cb618a8e74f30eea7d43c134dfeed5b87ee80ff94138a2adf385018c68\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IReputationScorer.sol":{"IReputationScorer":{"abi":[{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"}],"name":"getReputationScore","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"astrologer","type":"address"},{"internalType":"uint256","name":"totalPredictions","type":"uint256"},{"internalType":"uint256","name":"accuratePredictions","type":"uint256"},{"internalType":"uint256","name":"accuracyPercentage","type":"uint256"},{"internalType":"uint256","name":"reputationMultiplier","type":"uint256"},{"internalType":"uint256","name":"marketPredictions","type":"uint256"},{"internalType":"uint256","name":"dailyPredictions","type":"uint256"},{"internalType":"uint256","name":"oneToOnePredictions","type":"uint256"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_astrologer","type":"address"},{"internalType":"bool","name":"_wasCorrect","type":"bool"}],"name":"updateReputationFromWorldPrediction","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getReputationMultiplier(address)":"b107e88c","getReputationScore(address)":"75a67d5c","updateReputationFromWorldPrediction(address,bool)":"9f7c4688"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"}],\"name\":\"getReputationScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"astrologer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuratePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marketPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyPredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oneToOnePredictions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_astrologer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_wasCorrect\",\"type\":\"bool\"}],\"name\":\"updateReputationFromWorldPrediction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IReputationScorer.sol\":\"IReputationScorer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IReputationScorer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IReputationScorer {\\n    function updateReputationFromWorldPrediction(\\n        address _astrologer,\\n        bool _wasCorrect\\n    ) external;\\n\\n    function getReputationMultiplier(address _astrologer) external view returns (uint256);\\n    \\n    function getReputationScore(address _astrologer) external view returns (\\n        uint256 id,\\n        address astrologer,\\n        uint256 totalPredictions,\\n        uint256 accuratePredictions,\\n        uint256 accuracyPercentage,\\n        uint256 reputationMultiplier,\\n        uint256 marketPredictions,\\n        uint256 dailyPredictions,\\n        uint256 oneToOnePredictions,\\n        uint256 lastUpdated,\\n        bool isActive\\n    );\\n} \",\"keccak256\":\"0x703180fb5f26749d16b00844cc9f4ff63a31eeb43e1fa2303a2c8bd5a7bb2b82\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}